{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///across-tabs.min.js","webpack:///webpack/bootstrap d966489925ac4c3bfd4f","webpack:///./src/index.js","webpack:///./src/parent.js","webpack:///./src/tab.js","webpack:///./src/utils/tab.js","webpack:///./src/enums/PostMessageEventNamesEnum.js","webpack:///./src/utils/array.js","webpack:///./src/enums/TabStatusEnum.js","webpack:///./src/enums/WarningTextEnum.js","webpack:///./src/vendor/uuid.js","webpack:///./src/utils/dom.js","webpack:///./src/event-listeners/postmessage.js","webpack:///./src/child.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_parent","_parent2","_child","_child2","AcrossTabs","Parent","Child","_classCallCheck","instance","Constructor","TypeError","_extends","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","_tab","_tab2","_tab3","_tab4","_dom","_dom2","_TabStatusEnum","_TabStatusEnum2","_WarningTextEnum","_WarningTextEnum2","_PostMessageEventNamesEnum","_PostMessageEventNamesEnum2","_postmessage","_postmessage2","heartBeat","tab","config","heartBeatInterval","shouldInitImmediately","tabs","Tab","init","getAll","openedTabs","getOpened","window","clearInterval","removeClosedTabs","watchStatus","ref","status","closed","CLOSE","OPEN","onPollingCallback","_this","setInterval","addInterval","newStatus","oldStatus","_remove","ev","onChildDisconnect","detail","enableElements","onHandshakeCallback","_this2","removeEventListener","onNewTab","addEventListener","customEventUnListener","onChildUnload","onbeforeunload","broadCastAll","PARENT_DISCONNECTED","enable","getClosed","closeAll","closeTab","msg","broadCastTo","Error","CONFIG_REQUIRED","url","URL_REQUIRED","create","startPollingTabs","addEventListeners","_uuid","_uuid2","name","generate","open","windowFeatures","disable","newlyTabOpened","addNew","_array","_array2","tabUtils","index","searchByKeyName","splice","_preProcessMessage","JSON","stringify","e","INVALID_JSON","indexOf","PARENT_COMMUNICATED","push","filter","close","isSiteInsideFrame","sendMessage","targetedTab","origin","postMessage","top","PostMessageEventNamesEnum","LOADED","CUSTOM","ON_BEFORE_UNLOAD","HANDSHAKE_WITH_PARENT","arrayUtils","returnPreferenceEnum","INDEX","OBJECT","BOTH","data","returnPreference","returnData","isNaN","parseInt","TabStatusEnum","WarningTextEnum","INVALID_DATA","UUID","rand","_getRandomInt","hex","_hexAligner","x","NaN","Math","random","_getIntAligner","radix","num","str","toString","z","hexString","domUtils","selector","ATOpenerElems","document","querySelectorAll","setAttribute","removeAttribute","PostMessageListener","_onLoad","dataToSend","tabInfo","split","parse","parentName","_onCustomMessage","event","CustomEvent","dispatchEvent","_onBeforeUnload","message","sessionStorageKey","handshakeExpiryLimit","tabName","tabId","tabParentName","sessionStorage","isSessionStorageSupported","getItem","dataReceived","setItem","storedData","_getData","_parseData","actualData","clearTimeout","timeout","onParentDisconnect","evt","onCommunication","_setData","sendMessageToParent","onInitialize","onParentCommunication","_this3","setTimeout","onHandShakeExpiry","opener","_isSessionStorage","addListeners","_restoreData","getTabInfo","setHandshakeExpiry","onReady"],"mappings":"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","file":"across-tabs.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"AcrossTabs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AcrossTabs\"] = factory();\n\telse\n\t\troot[\"AcrossTabs\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","/*!\n * \n * across-tabs \"1.0.1\"\n * https://github.com/wingify/across-tabs.js\n * MIT licensed\n * \n * Copyright (C) 2017-2018 Wingify - A project by Varun Malhotra(https://github.com/softvar)\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"AcrossTabs\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"AcrossTabs\"] = factory();\n\telse\n\t\troot[\"AcrossTabs\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _parent = __webpack_require__(1);\n\t\n\tvar _parent2 = _interopRequireDefault(_parent);\n\t\n\tvar _child = __webpack_require__(11);\n\t\n\tvar _child2 = _interopRequireDefault(_child);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * Expose Parent and Child modules on AcrossTabs Object\n\t * @type {Object}\n\t */\n\tvar AcrossTabs = {\n\t  Parent: _parent2.default,\n\t  Child: _child2.default\n\t};\n\t\n\texports.default = AcrossTabs;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _tab = __webpack_require__(2);\n\t\n\tvar _tab2 = _interopRequireDefault(_tab);\n\t\n\tvar _tab3 = __webpack_require__(3);\n\t\n\tvar _tab4 = _interopRequireDefault(_tab3);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar _dom2 = _interopRequireDefault(_dom);\n\t\n\tvar _TabStatusEnum = __webpack_require__(6);\n\t\n\tvar _TabStatusEnum2 = _interopRequireDefault(_TabStatusEnum);\n\t\n\tvar _WarningTextEnum = __webpack_require__(7);\n\t\n\tvar _WarningTextEnum2 = _interopRequireDefault(_WarningTextEnum);\n\t\n\tvar _PostMessageEventNamesEnum = __webpack_require__(4);\n\t\n\tvar _PostMessageEventNamesEnum2 = _interopRequireDefault(_PostMessageEventNamesEnum);\n\t\n\tvar _postmessage = __webpack_require__(10);\n\t\n\tvar _postmessage2 = _interopRequireDefault(_postmessage);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar heartBeat = void 0,\n\t    tab = void 0;\n\t\n\t// Named Class expression\n\t\n\tvar Parent = function () {\n\t  /**\n\t   * Involed when object is instantiated\n\t   * Set flags/variables and calls init method to attach event listeners\n\t   * @param  {Object} config - Refer API/docs for config keys\n\t   */\n\t  function Parent(config) {\n\t    _classCallCheck(this, Parent);\n\t\n\t    config = config || {};\n\t    if (typeof config.heartBeatInterval === 'undefined') {\n\t      config.heartBeatInterval = 500;\n\t    }\n\t    if (typeof config.shouldInitImmediately === 'undefined') {\n\t      config.shouldInitImmediately = true;\n\t    }\n\t\n\t    // reset tabs with every new Object\n\t    _tab4.default.tabs = [];\n\t\n\t    this.Tab = _tab2.default;\n\t    _extends(this, config);\n\t\n\t    _tab4.default.config = config;\n\t\n\t    if (this.shouldInitImmediately) {\n\t      this.init();\n\t    }\n\t  }\n\t\n\t  _createClass(Parent, [{\n\t    key: 'addInterval',\n\t    value: function addInterval() {\n\t      var i = void 0,\n\t          tabs = _tab4.default.getAll(),\n\t          openedTabs = _tab4.default.getOpened();\n\t\n\t      // don't poll if all tabs are in CLOSED states\n\t      if (!openedTabs || !openedTabs.length) {\n\t        window.clearInterval(heartBeat); // stop the interval\n\t        heartBeat = null;\n\t        return false;\n\t      }\n\t\n\t      for (i = 0; i < tabs.length; i++) {\n\t        if (this.removeClosedTabs) {\n\t          this.watchStatus(tabs[i]);\n\t        }\n\t        /**\n\t         * The check is required since tab would be removed when closed(in case of `removeClosedTabs` flag),\n\t         * irrespective of heatbeat controller\n\t        */\n\t        if (tabs[i] && tabs[i].ref) {\n\t          tabs[i].status = tabs[i].ref.closed ? _TabStatusEnum2.default.CLOSE : _TabStatusEnum2.default.OPEN;\n\t        }\n\t      }\n\t\n\t      // Call the user-defined callback after every polling operation is operted in a single run\n\t      if (this.onPollingCallback) {\n\t        this.onPollingCallback();\n\t      }\n\t    }\n\t  }, {\n\t    key: 'startPollingTabs',\n\t\n\t\n\t    /**\n\t     * Poll all tabs for their status - OPENED / CLOSED\n\t     * An interval is created which checks for last and current status.\n\t     * There's a property on window i.e. `closed` which returns true for the closed window.\n\t     * And one can see `true` only in another tab when the tab was opened by the same `another` tab.\n\t     */\n\t    value: function startPollingTabs() {\n\t      var _this = this;\n\t\n\t      heartBeat = window.setInterval(function () {\n\t        return _this.addInterval();\n\t      }, this.heartBeatInterval);\n\t    }\n\t  }, {\n\t    key: 'watchStatus',\n\t\n\t\n\t    /**\n\t     * Compare tab status - OPEN vs CLOSE\n\t     * @param  {Object} tab\n\t     */\n\t    value: function watchStatus(tab) {\n\t      if (!tab || !tab.ref) {\n\t        return false;\n\t      }\n\t      var newStatus = tab.ref.closed ? _TabStatusEnum2.default.CLOSE : _TabStatusEnum2.default.OPEN,\n\t          oldStatus = tab.status;\n\t\n\t      // If last and current status(inside a polling interval) are same, don't do anything\n\t      if (!newStatus || newStatus === oldStatus) {\n\t        return false;\n\t      }\n\t\n\t      // OPEN to CLOSE state\n\t      if (oldStatus === _TabStatusEnum2.default.OPEN && newStatus === _TabStatusEnum2.default.CLOSE) {\n\t        // remove tab from tabUtils\n\t        _tab4.default._remove(tab);\n\t      }\n\t      // Change from CLOSE to OPEN state is never gonna happen ;)\n\t    }\n\t  }, {\n\t    key: 'onChildUnload',\n\t\n\t\n\t    /**\n\t     * Called when a child is refreshed/closed\n\t     * @param  {Object} ev - Event\n\t     */\n\t    value: function onChildUnload(ev) {\n\t      if (this.onChildDisconnect) {\n\t        this.onChildDisconnect(ev.detail);\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Enable link/btn, which got disabled on clicking.\n\t     * Note: works only when `data-tab-opener=\"heatmap\"` is used on the respective element\n\t     * @param  {Object} ev - Event\n\t     */\n\t\n\t  }, {\n\t    key: 'customEventUnListener',\n\t    value: function customEventUnListener(ev) {\n\t      this.enableElements();\n\t      if (this.onHandshakeCallback) {\n\t        this.onHandshakeCallback(ev.detail);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addEventListeners',\n\t\n\t\n\t    /**\n\t     * Attach postmessage, native and custom listeners to the window\n\t     */\n\t    value: function addEventListeners() {\n\t      var _this2 = this;\n\t\n\t      window.removeEventListener('message', _postmessage2.default.onNewTab);\n\t      window.addEventListener('message', _postmessage2.default.onNewTab);\n\t\n\t      window.removeEventListener('toggleElementDisabledAttribute', this.customEventUnListener);\n\t      window.addEventListener('toggleElementDisabledAttribute', function (ev) {\n\t        return _this2.customEventUnListener(ev);\n\t      });\n\t\n\t      window.removeEventListener('onChildUnload', this.onChildUnload);\n\t      window.addEventListener('onChildUnload', function (ev) {\n\t        return _this2.onChildUnload(ev);\n\t      });\n\t\n\t      // Let children tabs know when Parent is closed / refereshed.\n\t      window.onbeforeunload = function () {\n\t        _tab4.default.broadCastAll(_PostMessageEventNamesEnum2.default.PARENT_DISCONNECTED);\n\t      };\n\t    }\n\t  }, {\n\t    key: 'enableElements',\n\t\n\t\n\t    /**\n\t     * API methods exposed for Public\n\t     *\n\t     * Re-enable the link/btn which got disabled on clicking\n\t     */\n\t    value: function enableElements() {\n\t      _dom2.default.enable('data-tab-opener');\n\t    }\n\t  }, {\n\t    key: 'getAllTabs',\n\t\n\t\n\t    /**\n\t     * Return list of all tabs\n\t     * @return {Array}\n\t     */\n\t    value: function getAllTabs() {\n\t      return _tab4.default.getAll();\n\t    }\n\t  }, {\n\t    key: 'getOpenedTabs',\n\t\n\t\n\t    /**\n\t     * Return list of all OPENED tabs\n\t     * @return {Array}\n\t     */\n\t    value: function getOpenedTabs() {\n\t      return _tab4.default.getOpened();\n\t    }\n\t  }, {\n\t    key: 'getClosedTabs',\n\t\n\t\n\t    /**\n\t     * Return list of all CLOSED tabs\n\t     * @return {Array}\n\t     */\n\t    value: function getClosedTabs() {\n\t      return _tab4.default.getClosed();\n\t    }\n\t\n\t    /**\n\t     * Close all tabs at once\n\t     * @return {Object}\n\t     */\n\t\n\t  }, {\n\t    key: 'closeAllTabs',\n\t    value: function closeAllTabs() {\n\t      return _tab4.default.closeAll();\n\t    }\n\t  }, {\n\t    key: 'closeTab',\n\t\n\t\n\t    /**\n\t     * Close a specific tab\n\t     * @return {Object}\n\t     */\n\t    value: function closeTab(id) {\n\t      return _tab4.default.closeTab(id);\n\t    }\n\t  }, {\n\t    key: 'broadCastAll',\n\t\n\t\n\t    /**\n\t     * Send a postmessage to all OPENED tabs\n\t     * @return {Object}\n\t     */\n\t    value: function broadCastAll(msg) {\n\t      return _tab4.default.broadCastAll(msg);\n\t    }\n\t\n\t    /**\n\t     * Send a postmessage to a specific tab\n\t     * @return {Object}\n\t     */\n\t\n\t  }, {\n\t    key: 'broadCastTo',\n\t    value: function broadCastTo(id, msg) {\n\t      return _tab4.default.broadCastTo(id, msg);\n\t    }\n\t\n\t    /**\n\t     * Open a new tab. Config has to be passed with some required keys\n\t     * @return {Object} tab\n\t     */\n\t\n\t  }, {\n\t    key: 'openNewTab',\n\t    value: function openNewTab(config) {\n\t      if (!config) {\n\t        throw new Error(_WarningTextEnum2.default.CONFIG_REQUIRED);\n\t      }\n\t\n\t      var url = config.url;\n\t\n\t      if (!url) {\n\t        throw new Error(_WarningTextEnum2.default.URL_REQUIRED);\n\t      }\n\t\n\t      tab = new this.Tab();\n\t      tab.create(config);\n\t\n\t      // If polling is already there, don't set it again\n\t      if (!heartBeat) {\n\t        this.startPollingTabs();\n\t      }\n\t\n\t      return tab;\n\t    }\n\t  }, {\n\t    key: 'init',\n\t\n\t\n\t    /**\n\t     * API methods exposed for Public ends here\n\t     **/\n\t\n\t    /**\n\t     * Invoked on object instantiation unless user pass a key to call it explicitly\n\t     */\n\t    value: function init() {\n\t      this.addEventListeners();\n\t    }\n\t  }]);\n\t\n\t  return Parent;\n\t}();\n\t\n\t;\n\t\n\texports.default = Parent;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _tab = __webpack_require__(3);\n\t\n\tvar _tab2 = _interopRequireDefault(_tab);\n\t\n\tvar _uuid = __webpack_require__(8);\n\t\n\tvar _uuid2 = _interopRequireDefault(_uuid);\n\t\n\tvar _dom = __webpack_require__(9);\n\t\n\tvar _dom2 = _interopRequireDefault(_dom);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Named Class expression\n\tvar Tab = function () {\n\t  /**\n\t   * Invoked when the object is instantiated\n\t   */\n\t  function Tab() {\n\t    _classCallCheck(this, Tab);\n\t\n\t    // Set name of Parent tab if not already defined\n\t    window.name = window.name || 'PARENT_TAB';\n\t  }\n\t\n\t  _createClass(Tab, [{\n\t    key: 'create',\n\t\n\t    /**\n\t     * Open a new tab\n\t     * @param  {Object} config - Refer API for config keys\n\t     * @return {Object} this\n\t     */\n\t    value: function create(config) {\n\t      config = config || {};\n\t      _extends(this, config);\n\t      this.id = _uuid2.default.generate() || _tab2.default.tabs.length + 1;\n\t      this.status = 'open';\n\t      // Refere https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features for WindowFeatures\n\t      this.ref = window.open(this.url, '_blank', config.windowFeatures);\n\t\n\t      _dom2.default.disable('data-tab-opener');\n\t\n\t      window.newlyTabOpened = {\n\t        id: this.id,\n\t        name: this.name,\n\t        ref: this.ref\n\t      };\n\t\n\t      // Push it to the list of tabs\n\t      _tab2.default.addNew(this);\n\t\n\t      // Return reference for chaining purpose\n\t      return this;\n\t    }\n\t  }]);\n\t\n\t  return Tab;\n\t}();\n\t\n\t;\n\t\n\texports.default = Tab;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _PostMessageEventNamesEnum = __webpack_require__(4);\n\t\n\tvar _PostMessageEventNamesEnum2 = _interopRequireDefault(_PostMessageEventNamesEnum);\n\t\n\tvar _array = __webpack_require__(5);\n\t\n\tvar _array2 = _interopRequireDefault(_array);\n\t\n\tvar _TabStatusEnum = __webpack_require__(6);\n\t\n\tvar _TabStatusEnum2 = _interopRequireDefault(_TabStatusEnum);\n\t\n\tvar _WarningTextEnum = __webpack_require__(7);\n\t\n\tvar _WarningTextEnum2 = _interopRequireDefault(_WarningTextEnum);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t/**\n\t * A Tab utility file to deal with tab operations\n\t */\n\t\n\tvar tabUtils = {\n\t  tabs: [],\n\t  config: {}\n\t};\n\t\n\t/**\n\t * Remove a tab from a list of all tabs.\n\t * This is required when users opts for removing the closed tabs from the list of tabs.\n\t * This can be done explictly by passing `removeClosedTabs` key while instantiating Parent.\n\t * @param  {Object} tab\n\t */\n\ttabUtils._remove = function (tab) {\n\t  var index = void 0;\n\t\n\t  index = _array2.default.searchByKeyName(tabUtils.tabs, 'id', tab.id, 'index');\n\t  tabUtils.tabs.splice(index, 1);\n\t};\n\t\n\t/**\n\t * As explained in `event-listeners/postmessage.js` file,\n\t * the data received from postmessage API is further processed based on our convention\n\t * @param  {String} msg\n\t * @return {String} modified msg\n\t */\n\ttabUtils._preProcessMessage = function (msg) {\n\t  // make msg always an object to support JSON support\n\t  try {\n\t    msg = JSON.stringify(msg);\n\t  } catch (e) {\n\t    throw new Error(_WarningTextEnum2.default.INVALID_JSON);\n\t  }\n\t\n\t  if (msg.indexOf(_PostMessageEventNamesEnum2.default.PARENT_COMMUNICATED) === -1) {\n\t    msg = _PostMessageEventNamesEnum2.default.PARENT_COMMUNICATED + msg;\n\t  }\n\t\n\t  return msg;\n\t};\n\t/**\n\t * Add a new tab to the Array of tabs\n\t * @param  {Object} tab\n\t * @return {Object} - this\n\t */\n\ttabUtils.addNew = function (tab) {\n\t  tabUtils.tabs.push(tab);\n\t  return undefined;\n\t};\n\t/**\n\t * Filter out all the opened tabs\n\t * @return {Array} - only the opened tabs\n\t */\n\ttabUtils.getOpened = function () {\n\t  return tabUtils.tabs.filter(function (tab) {\n\t    return tab.status === _TabStatusEnum2.default.OPEN;\n\t  });\n\t};\n\t/**\n\t * Filter out all the closed tabs\n\t * @return {Array} - only the closed tabs\n\t */\n\ttabUtils.getClosed = function () {\n\t  return tabUtils.tabs.filter(function (tab) {\n\t    return tab.status === _TabStatusEnum2.default.CLOSE;\n\t  });\n\t};\n\t/**\n\t * To get list of all tabs(closed/opened).\n\t * Note: Closed tabs will not be returned if `removeClosedTabs` key is paased while instantiaiting Parent.\n\t * @return {Array} - list of all tabs\n\t */\n\ttabUtils.getAll = function () {\n\t  return tabUtils.tabs;\n\t};\n\t\n\t/**\n\t * Close a specific tab\n\t * @param  {String} id\n\t * @return {Object} this\n\t */\n\ttabUtils.closeTab = function (id) {\n\t  var tab = _array2.default.searchByKeyName(tabUtils.tabs, 'id', id);\n\t\n\t  if (tab && tab.ref) {\n\t    tab.ref.close();\n\t    tab.status = _TabStatusEnum2.default.CLOSE;\n\t  }\n\t\n\t  return tabUtils;\n\t  // --tabUtils.tabs.length;\n\t};\n\t/**\n\t * Close all opened tabs using a native method `close` available on window.open reference.\n\t * @return {tabUtils} this\n\t */\n\ttabUtils.closeAll = function () {\n\t  var i = void 0;\n\t\n\t  for (i = 0; i < tabUtils.tabs.length; i++) {\n\t    if (tabUtils.tabs[i] && tabUtils.tabs[i].ref) {\n\t      tabUtils.tabs[i].ref.close();\n\t      tabUtils.tabs[i].status = _TabStatusEnum2.default.CLOSE;\n\t    }\n\t  }\n\t\n\t  return tabUtils;\n\t};\n\t/**\n\t * Send a postmessage to every opened Child tab(excluding itself i.e Parent Tab)\n\t * @param  {String} msg\n\t * @param  {Boolean} isSiteInsideFrame\n\t */\n\ttabUtils.broadCastAll = function (msg, isSiteInsideFrame) {\n\t  var i = void 0,\n\t      tabs = tabUtils.getOpened();\n\t\n\t  msg = tabUtils._preProcessMessage(msg);\n\t\n\t  for (i = 0; i < tabs.length; i++) {\n\t    tabUtils.sendMessage(tabs[i], msg, isSiteInsideFrame);\n\t  }\n\t\n\t  return tabUtils;\n\t};\n\t/**\n\t * Send a postmessage to a specific Child tab\n\t * @param  {String} id\n\t * @param  {String} msg\n\t * @param  {Boolean} isSiteInsideFrame\n\t */\n\ttabUtils.broadCastTo = function (id, msg, isSiteInsideFrame) {\n\t  var targetedTab = void 0,\n\t      tabs = tabUtils.getAll();\n\t\n\t  msg = tabUtils._preProcessMessage(msg);\n\t\n\t  targetedTab = _array2.default.searchByKeyName(tabs, 'id', id); // TODO: tab.id\n\t  tabUtils.sendMessage(targetedTab, msg, isSiteInsideFrame);\n\t\n\t  return tabUtils;\n\t};\n\t\n\t/**\n\t * Send a postMessage to the desired window/frame\n\t * @param  {Object}  target\n\t * @param  {String}  msg\n\t * @param  {Boolean} isSiteInsideFrame\n\t */\n\ttabUtils.sendMessage = function (target, msg, isSiteInsideFrame) {\n\t  var origin = tabUtils.config.origin || '*';\n\t\n\t  if (isSiteInsideFrame && target.ref[0]) {\n\t    target.ref[0].postMessage(msg, origin);\n\t  } else if (target.ref && target.ref.top) {\n\t    target.ref.top.postMessage(msg, origin);\n\t  }\n\t};\n\t\n\texports.default = tabUtils;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Enum for different event names used for tab-communication\n\t * @type {Object}\n\t */\n\tvar PostMessageEventNamesEnum = {\n\t  LOADED: '__TAB__LOADED_EVENT__',\n\t  CUSTOM: '__TAB__CUSTOM_EVENT__',\n\t  ON_BEFORE_UNLOAD: '__TAB__ON_BEFORE_UNLOAD__',\n\t  PARENT_DISCONNECTED: '__PARENT_DISCONNECTED__',\n\t  HANDSHAKE_WITH_PARENT: '__HANDSHAKE_WITH_PARENT__',\n\t  PARENT_COMMUNICATED: '__PARENT_COMMUNICATED__'\n\t};\n\t\n\texports.default = PostMessageEventNamesEnum;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\tvar arrayUtils = {};\n\t\n\t/**\n\t * Different type of data needed after searching an item(Object) within data(Array of Objects).\n\t * 1. `INDEX` returns just the index at which the item was present\n\t * 2. `OBJECT` returns the matched object\n\t * 3. `BOTH` returns an object { obj: matched_object, index: index_found }\n\t */\n\tvar returnPreferenceEnum = {\n\t  INDEX: 'index',\n\t  OBJECT: 'object',\n\t  BOTH: 'both'\n\t};\n\t\n\t/**\n\t * Search for an item(Object) within a data-set(Array Of Objects)\n\t * @param  {Array of Objects} data\n\t * @param  {String} key - Unique key to search on the basis of\n\t * @param  {String} value - The matching criteria\n\t * @param  {String} returnPreference - what kind of output is needed\n\t * @return {Object}\n\t */\n\tarrayUtils.searchByKeyName = function (data, key, value, returnPreference) {\n\t  if (!data || !key) {\n\t    return false;\n\t  }\n\t\n\t  returnPreference = returnPreference || returnPreferenceEnum[1]; // default to Object\n\t  var i = void 0,\n\t      obj = void 0,\n\t      returnData = void 0,\n\t      index = -1;\n\t\n\t  for (i = 0; i < data.length; i++) {\n\t    obj = data[i];\n\t    // Number matching support\n\t    if (!isNaN(value) && parseInt(obj[key], 10) === parseInt(value, 10)) {\n\t      index = i;\n\t      break;\n\t    } else if (isNaN(value) && obj[key] === value) {\n\t      // String exact matching support\n\t      index = i;\n\t      break;\n\t    }\n\t  }\n\t\n\t  if (index === -1) {\n\t    // item not found\n\t    data[index] = {}; // for consistency\n\t  }\n\t\n\t  switch (returnPreference) {\n\t    case returnPreferenceEnum.INDEX:\n\t      returnData = index;\n\t      break;\n\t    case returnPreferenceEnum.BOTH:\n\t      returnData = {\n\t        obj: data[index],\n\t        index: index\n\t      };\n\t      break;\n\t    case returnPreferenceEnum.OBJECT:\n\t    default:\n\t      returnData = data[index];\n\t      break;\n\t  }\n\t\n\t  return returnData;\n\t};\n\t\n\texports.default = arrayUtils;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Enum for Tab status(still opened / closed) used for tab-communication\n\t * @type {Object}\n\t */\n\tvar TabStatusEnum = {\n\t  OPEN: 'open',\n\t  CLOSE: 'close'\n\t};\n\t\n\texports.default = TabStatusEnum;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * Enum for showing various warnings to suser when things done wrong\n\t * @type {Object}\n\t */\n\tvar WarningTextEnum = {\n\t  INVALID_JSON: 'Invalid JSON Object!',\n\t  INVALID_DATA: 'Some wrong message is being sent by Parent.',\n\t  CONFIG_REQUIRED: 'Configuration options required. Please read docs.',\n\t  URL_REQUIRED: 'Url is needed for creating and opening a new window/tab. Please read docs.'\n\t};\n\t\n\texports.default = WarningTextEnum;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * UUID.js: The RFC-compliant UUID generator for JavaScript.\n\t * ES6 port of only `generate` method of UUID by Varun Malhotra under MIT License\n\t *\n\t * @author  LiosK\n\t * @version v3.3.0\n\t * @license The MIT License: Copyright (c) 2010-2016 LiosK.\n\t */\n\t\n\t/** @constructor */\n\tvar UUID = void 0;\n\t\n\tUUID = function () {\n\t  'use strict';\n\t\n\t  /** @lends UUID */\n\t\n\t  function UUID() {}\n\t\n\t  /**\n\t   * The simplest function to get an UUID string.\n\t   * @returns {string} A version 4 UUID string.\n\t   */\n\t  UUID.generate = function () {\n\t    var rand = UUID._getRandomInt,\n\t        hex = UUID._hexAligner;\n\t\n\t    // [\"timeLow\", \"timeMid\", \"timeHiAndVersion\", \"clockSeqHiAndReserved\", \"clockSeqLow\", \"node\"]\n\t    return hex(rand(32), 8) + // time_low\n\t    '-' + hex(rand(16), 4) + // time_mid\n\t    '-' + hex(0x4000 | rand(12), 4) + // time_hi_and_version\n\t    '-' + hex(0x8000 | rand(14), 4) + // clock_seq_hi_and_reserved clock_seq_low\n\t    '-' + hex(rand(48), 12); // node\n\t  };\n\t\n\t  /**\n\t   * Returns an unsigned x-bit random integer.\n\t   * @param {int} x A positive integer ranging from 0 to 53, inclusive.\n\t   * @returns {int} An unsigned x-bit random integer (0 <= f(x) < 2^x).\n\t   */\n\t  UUID._getRandomInt = function (x) {\n\t    if (x < 0) {\n\t      return NaN;\n\t    }\n\t    if (x <= 30) {\n\t      return 0 | Math.random() * (1 << x);\n\t    }\n\t    if (x <= 53) {\n\t      return (0 | Math.random() * (1 << 30)) + (0 | Math.random() * (1 << x - 30)) * (1 << 30);\n\t    }\n\t\n\t    return NaN;\n\t  };\n\t\n\t  /**\n\t   * Returns a function that converts an integer to a zero-filled string.\n\t   * @param {int} radix\n\t   * @returns {function(num&#44; length)}\n\t   */\n\t  UUID._getIntAligner = function (radix) {\n\t    return function (num, length) {\n\t      var str = num.toString(radix),\n\t          i = length - str.length,\n\t          z = '0';\n\t\n\t      for (; i > 0; i >>>= 1, z += z) {\n\t        if (i & 1) {\n\t          str = z + str;\n\t        }\n\t      }\n\t      return str;\n\t    };\n\t  };\n\t\n\t  UUID._hexAligner = UUID._getIntAligner(16);\n\t\n\t  /**\n\t   * Returns UUID string representation.\n\t   * @returns {string} {@link UUID#hexString}.\n\t   */\n\t  UUID.prototype.toString = function () {\n\t    return this.hexString;\n\t  };\n\t\n\t  return UUID;\n\t}(UUID);\n\t\n\texports.default = UUID;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t/**\n\t * This utility helps enabling/disabling the Link/Button on the Parent Tab.\n\t * As soon as, user clicks on link/btn to open a new tab, the link/btn gets disabled.\n\t * Once child communicates for the first time with the Parent, the link/btn is re-enabled to open up new tab.\n\t * This feature is toggleable and can be used explicitly putting a data attribute on the link/btn.\n\t *\n\t * <a href=\"/demo.html\" data-tab-opener=\"parent\" target=\"_blank\" on-click=\"parent.openNewTab(config)\">Open Tab</a>\n\t */\n\tvar domUtils = {\n\t  disable: function disable(selector) {\n\t    if (!selector) {\n\t      return false;\n\t    }\n\t\n\t    var i = void 0,\n\t        ATOpenerElems = document.querySelectorAll('[' + selector + ']');\n\t\n\t    for (i = 0; i < ATOpenerElems.length; i++) {\n\t      ATOpenerElems[i].setAttribute('disabled', 'disabled');\n\t    }\n\t  },\n\t  enable: function enable(selector) {\n\t    if (!selector) {\n\t      return false;\n\t    }\n\t\n\t    var i = void 0,\n\t        ATOpenerElems = document.querySelectorAll('[' + selector + ']');\n\t\n\t    for (i = 0; i < ATOpenerElems.length; i++) {\n\t      ATOpenerElems[i].removeAttribute('disabled');\n\t    }\n\t  }\n\t};\n\t\n\texports.default = domUtils;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _array = __webpack_require__(5);\n\t\n\tvar _array2 = _interopRequireDefault(_array);\n\t\n\tvar _tab = __webpack_require__(3);\n\t\n\tvar _tab2 = _interopRequireDefault(_tab);\n\t\n\tvar _WarningTextEnum = __webpack_require__(7);\n\t\n\tvar _WarningTextEnum2 = _interopRequireDefault(_WarningTextEnum);\n\t\n\tvar _PostMessageEventNamesEnum = __webpack_require__(4);\n\t\n\tvar _PostMessageEventNamesEnum2 = _interopRequireDefault(_PostMessageEventNamesEnum);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar PostMessageListener = {};\n\t\n\t/*\n\t * Custom PostMessage Convetions Followed - Sending and Receieving data gracefully\n\t * -------------------------------------------------------------------------------\n\t *\n\t * 1. First convetion\n\t      Since data can be sent or receieved via postmessge API in the form of strings,\n\t      the library stores data as stringified JSON object and while reading it, parses the JSON stringified earlier.\n\t      This is easy to maintain and deal with data.\n\t\n\t * 2. Second Convetions\n\t      With every data, there's an associated message identifier.\n\t      A message identifier helps in knowing the intention of what event actually is for.\n\t      For eg: To send data after proper establishment from Child tab,\n\t      Parent tab acknowledges the connection by returning the true identity of the Child tab.\n\t      This is done via prepending the Event name i.e. HANDSHAKE_WTIH_PARENT\n\t\n\t      So the postmessage's message would like: `HANDSHAKE_WTIH_PARENT{\"id\": 123, \"name\": \"Hello World!\"}`.\n\t      So, while reading the message, it has to be first checked up with the defined event names\n\t      and then after successful match, the message is split using the Event-name as a delimiter.\n\t      The first entry if the event name and the second one is the actual data.\n\t *\n\t */\n\t\n\t/**\n\t * OnLoad Event - it serves as an communication establishment source from Child tab\n\t */\n\tPostMessageListener._onLoad = function (data) {\n\t  var tabs = void 0,\n\t      dataToSend = void 0,\n\t      tabInfo = data.split(_PostMessageEventNamesEnum2.default.LOADED)[1];\n\t\n\t  // Child was opened but parent got refereshed, opened a tab i.e.\n\t  // last opened tab will get refreshed(browser behavior). WOW! Handle this now.\n\t  if (tabInfo) {\n\t    try {\n\t      tabInfo = JSON.parse(tabInfo);\n\t      // If Child knows its UUID, means Parent was refreshed and Child did not\n\t      if (tabInfo.id) {\n\t        tabs = _tab2.default.getAll();\n\t        if (tabs.length) {\n\t          window.newlyTabOpened = tabs[tabs.length - 1];\n\t          window.newlyTabOpened.id = tabInfo.id;\n\t          window.newlyTabOpened.name = tabInfo.name;\n\t        }\n\t      }\n\t    } catch (e) {\n\t      throw new Error(_WarningTextEnum2.default.INVALID_JSON);\n\t    }\n\t  }\n\t\n\t  if (window.newlyTabOpened) {\n\t    try {\n\t      dataToSend = _PostMessageEventNamesEnum2.default.HANDSHAKE_WITH_PARENT;\n\t      dataToSend += JSON.stringify({\n\t        id: window.newlyTabOpened.id,\n\t        name: window.newlyTabOpened.name,\n\t        parentName: window.name\n\t      });\n\t      _tab2.default.sendMessage(window.newlyTabOpened, dataToSend, tabInfo.isSiteInsideFrame);\n\t    } catch (e) {\n\t      throw new Error(_WarningTextEnum2.default.INVALID_JSON);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * onCustomMessage Event - Any sort of custom message by child is treated here\n\t * @param  {Object} data\n\t *\n\t * The method fires an event to notify Parent regarding Child's behavior\n\t */\n\tPostMessageListener._onCustomMessage = function (data) {\n\t  var tabInfo = data.split(_PostMessageEventNamesEnum2.default.CUSTOM)[1];\n\t\n\t  try {\n\t    tabInfo = JSON.parse(tabInfo);\n\t  } catch (e) {\n\t    throw new Error(_WarningTextEnum2.default.INVALID_JSON);\n\t  }\n\t\n\t  // CustomEvent is not supported in IE and so does this library\n\t  var event = new CustomEvent('toggleElementDisabledAttribute', { 'detail': tabInfo });\n\t\n\t  window.dispatchEvent(event);\n\t  window.newlyTabOpened = null;\n\t};\n\t\n\t/**\n\t * onBeforeUnload Event - Tells parent that either Child tab was closed or refreshed.\n\t * Child uses native `ON_BEFORE_UNLOAD` method to notify Parent.\n\t *\n\t * It sets the newlyTabOpened variable accordingly\n\t *\n\t * @param  {Object} data\n\t */\n\tPostMessageListener._onBeforeUnload = function (data) {\n\t  var tabs = void 0,\n\t      tabInfo = data.split(_PostMessageEventNamesEnum2.default.ON_BEFORE_UNLOAD)[1];\n\t\n\t  try {\n\t    tabInfo = JSON.parse(tabInfo);\n\t  } catch (e) {\n\t    throw new Error(_WarningTextEnum2.default.INVALID_JSON);\n\t  }\n\t\n\t  if (_tab2.default.tabs.length) {\n\t    tabs = _tab2.default.getAll();\n\t    window.newlyTabOpened = _array2.default.searchByKeyName(tabs, 'id', tabInfo.id) || window.newlyTabOpened;\n\t  }\n\t\n\t  // CustomEvent is not supported in IE and so does this library\n\t  var event = new CustomEvent('onChildUnload', { 'detail': tabInfo });\n\t\n\t  window.dispatchEvent(event);\n\t};\n\t\n\t/**\n\t * onNewTab - It's the entry point for data processing after receiving any postmessage form any Child Tab\n\t * @param  {Object} message\n\t */\n\tPostMessageListener.onNewTab = function (message) {\n\t  var data = message.data;\n\t\n\t  /**\n\t   * Safe check - This happens when CHild Tab gets closed just after sending a message.\n\t   * No need to go further from this point.\n\t   * Tab status is automatically fetched using our polling mechanism written in `Parent.js` file.\n\t   */\n\t  if (!data || typeof data !== 'string' || !_tab2.default.tabs.length) {\n\t    return false;\n\t  }\n\t\n\t  // `origin` check for secureity point of view\n\t  if (_tab2.default.config.origin && _tab2.default.config.origin !== message.origin) {\n\t    return false;\n\t  }\n\t\n\t  if (data.indexOf(_PostMessageEventNamesEnum2.default.LOADED) > -1) {\n\t    PostMessageListener._onLoad(data);\n\t  } else if (data.indexOf(_PostMessageEventNamesEnum2.default.CUSTOM) > -1) {\n\t    PostMessageListener._onCustomMessage(data);\n\t  } else if (data.indexOf(_PostMessageEventNamesEnum2.default.ON_BEFORE_UNLOAD) > -1) {\n\t    PostMessageListener._onBeforeUnload(data);\n\t  }\n\t};\n\t\n\texports.default = PostMessageListener;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _PostMessageEventNamesEnum = __webpack_require__(4);\n\t\n\tvar _PostMessageEventNamesEnum2 = _interopRequireDefault(_PostMessageEventNamesEnum);\n\t\n\tvar _WarningTextEnum = __webpack_require__(7);\n\t\n\tvar _WarningTextEnum2 = _interopRequireDefault(_WarningTextEnum);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\t// Named Class expression\n\tvar Child = function () {\n\t  /**\n\t   * Involed when object is instantiated\n\t   * Set flags/variables and calls init method to attach event listeners\n\t   * @param  {Object} config - Refer API/docs for config keys\n\t   */\n\t  function Child(config) {\n\t    _classCallCheck(this, Child);\n\t\n\t    this.sessionStorageKey = '__vwo_new_tab_info__';\n\t\n\t    if (!config) {\n\t      config = {};\n\t    }\n\t    if (typeof config.handshakeExpiryLimit === 'undefined') {\n\t      config.handshakeExpiryLimit = 5000;\n\t    }\n\t    if (typeof config.shouldInitImmediately === 'undefined') {\n\t      config.shouldInitImmediately = true;\n\t    }\n\t\n\t    this.tabName = window.name;\n\t    this.tabId = null;\n\t    this.tabParentName = null;\n\t\n\t    _extends(this, config);\n\t    this.config = config;\n\t\n\t    if (this.shouldInitImmediately) {\n\t      this.init();\n\t    }\n\t  }\n\t\n\t  _createClass(Child, [{\n\t    key: '_isSessionStorage',\n\t\n\t\n\t    /**\n\t     * Check is sessionStorage is present on window\n\t     * @return {Boolean} [description]\n\t     */\n\t    value: function _isSessionStorage() {\n\t      if ('sessionStorage' in window && window.sessionStorage) {\n\t        return true;\n\t      }\n\t      return false;\n\t    }\n\t  }, {\n\t    key: '_getData',\n\t\n\t\n\t    /**\n\t     * Get stored data from sessionStorage\n\t     * @return {Object} data\n\t     */\n\t    value: function _getData() {\n\t      if (!this.isSessionStorageSupported) {\n\t        return false;\n\t      }\n\t\n\t      return window.sessionStorage.getItem(this.sessionStorageKey);\n\t    }\n\t  }, {\n\t    key: '_setData',\n\t\n\t\n\t    /**\n\t     * Set stored data from sessionStorage\n\t     * @return {Object} data\n\t     */\n\t    value: function _setData(dataReceived) {\n\t      if (!this.isSessionStorageSupported) {\n\t        return false;\n\t      }\n\t\n\t      window.sessionStorage.setItem(this.sessionStorageKey, dataReceived);\n\t      return dataReceived;\n\t    }\n\t  }, {\n\t    key: '_restoreData',\n\t\n\t\n\t    /**\n\t     * Get stored data from sessionStorage and parse it\n\t     * @return {Object} data\n\t     */\n\t    value: function _restoreData() {\n\t      if (!this.isSessionStorageSupported) {\n\t        return false;\n\t      }\n\t\n\t      if (this.isSessionStorageSupported) {\n\t        var storedData = this._getData();\n\t\n\t        this._parseData(storedData);\n\t      }\n\t    }\n\t  }, {\n\t    key: '_parseData',\n\t\n\t\n\t    /**\n\t     * Parse data fetched from sessionStorage\n\t     * @param  {String} dataReceived\n\t     */\n\t    value: function _parseData(dataReceived) {\n\t      var actualData = void 0;\n\t\n\t      // Expecting JSON data\n\t      try {\n\t        actualData = JSON.parse(dataReceived);\n\t        this.tabId = actualData && actualData.id;\n\t        this.tabParentName = actualData && actualData.parentName;\n\t      } catch (e) {\n\t        throw new Error(_WarningTextEnum2.default.INVALID_DATA);\n\t      };\n\t    }\n\t  }, {\n\t    key: 'onCommunication',\n\t\n\t\n\t    /**\n\t     * The core of this file\n\t     * This method receives the postmessage from Parent\n\t     * after establishing a proper communication channel between Parent tab and Child tab.\n\t     * It removes the handshake timeout.\n\t     * Based on the type of postmessage event, it sets/parses or calls user defined callbacks\n\t     *\n\t     * @param  {String} message\n\t     */\n\t    value: function onCommunication(message) {\n\t      var _this = this;\n\t\n\t      var dataReceived = void 0,\n\t          data = message.data;\n\t\n\t      if (!data || typeof data !== 'string') {\n\t        return;\n\t      }\n\t\n\t      // `origin` check for secureity point of view\n\t      if (this.config.origin && this.config.origin !== message.origin) {\n\t        return;\n\t      }\n\t\n\t      // cancel timeout\n\t      window.clearTimeout(this.timeout);\n\t\n\t      // When Parent tab gets closed or refereshed\n\t      if (data.indexOf(_PostMessageEventNamesEnum2.default.PARENT_DISCONNECTED) > -1) {\n\t        // Call user-defined `onParentDisconnect` callback when Parent tab gets closed or refereshed.\n\t        if (this.config.onParentDisconnect) {\n\t          this.config.onParentDisconnect();\n\t        }\n\t\n\t        // remove postMessage listener since no Parent is there to communicate with\n\t        window.removeEventListener('message', function (evt) {\n\t          return _this.onCommunication(evt);\n\t        });\n\t      }\n\t\n\t      /**\n\t       * When Parent sends an Acknowledgement to the Child's request of setting up a communication channel\n\t       * along with the tab's identity i.e. id, name and it's parent(itself) to the child tab.\n\t      */\n\t      if (data.indexOf(_PostMessageEventNamesEnum2.default.HANDSHAKE_WITH_PARENT) > -1) {\n\t        var msg = void 0;\n\t\n\t        dataReceived = data.split(_PostMessageEventNamesEnum2.default.HANDSHAKE_WITH_PARENT)[1];\n\t\n\t        // Set data to sessionStorage so that when page reloads it can directly read the past info till the session lives\n\t        this._setData(dataReceived);\n\t        this._parseData(dataReceived);\n\t\n\t        msg = _PostMessageEventNamesEnum2.default.CUSTOM + JSON.stringify({\n\t          id: this.tabId,\n\t          isSiteInsideFrame: this.config.isSiteInsideFrame\n\t        });\n\t        this.sendMessageToParent(msg);\n\t\n\t        if (this.config.onInitialize) {\n\t          this.config.onInitialize();\n\t        }\n\t      }\n\t\n\t      // Whenever Parent tab communicates once the communication channel is established\n\t      if (data.indexOf(_PostMessageEventNamesEnum2.default.PARENT_COMMUNICATED) > -1) {\n\t        dataReceived = data.split(_PostMessageEventNamesEnum2.default.PARENT_COMMUNICATED)[1];\n\t\n\t        try {\n\t          dataReceived = JSON.parse(dataReceived);\n\t        } catch (e) {\n\t          throw new Error(_WarningTextEnum2.default.INVALID_JSON);\n\t        }\n\t        // Call user-defined `onParentCommunication` callback when Parent sends a message to Parent tab\n\t        if (this.config.onParentCommunication) {\n\t          this.config.onParentCommunication(dataReceived);\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'addListeners',\n\t\n\t\n\t    /**\n\t     * Attach postmessage and onbeforeunload event listeners\n\t     */\n\t    value: function addListeners() {\n\t      var _this2 = this;\n\t\n\t      window.onbeforeunload = function (evt) {\n\t        var msg = _PostMessageEventNamesEnum2.default.ON_BEFORE_UNLOAD + JSON.stringify({\n\t          id: _this2.tabId,\n\t          isSiteInsideFrame: _this2.config.isSiteInsideFrame\n\t        });\n\t\n\t        _this2.sendMessageToParent(msg);\n\t      };\n\t\n\t      window.removeEventListener('message', function (evt) {\n\t        return _this2.onCommunication(evt);\n\t      });\n\t      window.addEventListener('message', function (evt) {\n\t        return _this2.onCommunication(evt);\n\t      });\n\t    }\n\t  }, {\n\t    key: 'setHandshakeExpiry',\n\t\n\t\n\t    /**\n\t     * Call a user-defined method `onHandShakeExpiry`\n\t     * if the Parent doesn't recieve a first handshake message within the configurable `handshakeExpiryLimit`\n\t     * @return {Function}\n\t     */\n\t    value: function setHandshakeExpiry() {\n\t      var _this3 = this;\n\t\n\t      return window.setTimeout(function () {\n\t        if (_this3.config.onHandShakeExpiry) {\n\t          _this3.config.onHandShakeExpiry();\n\t        }\n\t      }, this.handshakeExpiryLimit);\n\t    }\n\t\n\t    /**\n\t     * API starts here ->\n\t     *\n\t     * Send a postmessage to the corresponding Parent tab\n\t     * @param  {String} msg\n\t    =   */\n\t\n\t  }, {\n\t    key: 'sendMessageToParent',\n\t    value: function sendMessageToParent(msg) {\n\t      var origin = void 0;\n\t\n\t      if (window.top.opener) {\n\t        origin = this.config.origin || '*';\n\t        window.top.opener.postMessage(msg, origin);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'getTabInfo',\n\t\n\t\n\t    /**\n\t     * Get current Tab info i.e. id, name and parentName\n\t     * @return {Object} tab-info\n\t     */\n\t    value: function getTabInfo() {\n\t      return {\n\t        id: this.tabId,\n\t        name: this.tabName,\n\t        parentName: this.tabParentName,\n\t        isSiteInsideFrame: this.config.isSiteInsideFrame\n\t      };\n\t    }\n\t  }, {\n\t    key: 'init',\n\t\n\t    /**\n\t     * API ends here ->\n\t     */\n\t\n\t    /**\n\t     * Invoked on object instantiation unless user pass a key to call it explicitly\n\t     */\n\t    value: function init() {\n\t      this.isSessionStorageSupported = this._isSessionStorage();\n\t      this.addListeners();\n\t      this._restoreData();\n\t      this.sendMessageToParent(_PostMessageEventNamesEnum2.default.LOADED + JSON.stringify(this.getTabInfo()));\n\t      this.timeout = this.setHandshakeExpiry();\n\t\n\t      if (this.config.onReady) {\n\t        this.config.onReady();\n\t      }\n\t    }\n\t  }]);\n\t\n\t  return Child;\n\t}();\n\t\n\t;\n\t\n\texports.default = Child;\n\tmodule.exports = exports['default'];\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** across-tabs.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d966489925ac4c3bfd4f\n **/","import Parent from './parent';\nimport Child from './child';\n\n/**\n * Expose Parent and Child modules on AcrossTabs Object\n * @type {Object}\n */\nconst AcrossTabs = {\n  Parent: Parent,\n  Child: Child\n};\n\nexport default AcrossTabs;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import Tab from './tab';\n\nimport tabUtils from './utils/tab';\nimport domUtils from './utils/dom';\n\nimport TabStatusEnum from './enums/TabStatusEnum';\nimport WarningTextEnum from './enums/WarningTextEnum';\nimport PostMessageEventNamesEnum from './enums/PostMessageEventNamesEnum';\n\nimport PostMessageListener from './event-listeners/postmessage';\n\nlet heartBeat, tab;\n\n// Named Class expression\nclass Parent {\n  /**\n   * Involed when object is instantiated\n   * Set flags/variables and calls init method to attach event listeners\n   * @param  {Object} config - Refer API/docs for config keys\n   */\n  constructor(config) {\n    config = config || {};\n    if (typeof config.heartBeatInterval === 'undefined') {\n      config.heartBeatInterval = 500;\n    }\n    if (typeof config.shouldInitImmediately === 'undefined') {\n      config.shouldInitImmediately = true;\n    }\n\n    // reset tabs with every new Object\n    tabUtils.tabs = [];\n\n    this.Tab = Tab;\n    Object.assign(this, config);\n\n    tabUtils.config = config;\n\n    if (this.shouldInitImmediately) {\n      this.init();\n    }\n  };\n\n  addInterval() {\n    let i,\n      tabs = tabUtils.getAll(),\n      openedTabs = tabUtils.getOpened();\n\n    // don't poll if all tabs are in CLOSED states\n    if (!openedTabs || !openedTabs.length) {\n      window.clearInterval(heartBeat); // stop the interval\n      heartBeat = null;\n      return false;\n    }\n\n    for (i = 0; i < tabs.length; i++) {\n      if (this.removeClosedTabs) {\n        this.watchStatus(tabs[i]);\n      }\n      /**\n       * The check is required since tab would be removed when closed(in case of `removeClosedTabs` flag),\n       * irrespective of heatbeat controller\n      */\n      if (tabs[i] && tabs[i].ref) {\n        tabs[i].status = tabs[i].ref.closed ? TabStatusEnum.CLOSE : TabStatusEnum.OPEN;\n      }\n    }\n\n    // Call the user-defined callback after every polling operation is operted in a single run\n    if (this.onPollingCallback) {\n      this.onPollingCallback();\n    }\n  };\n\n  /**\n   * Poll all tabs for their status - OPENED / CLOSED\n   * An interval is created which checks for last and current status.\n   * There's a property on window i.e. `closed` which returns true for the closed window.\n   * And one can see `true` only in another tab when the tab was opened by the same `another` tab.\n   */\n  startPollingTabs() {\n    heartBeat = window.setInterval(() => this.addInterval(), this.heartBeatInterval);\n  };\n\n  /**\n   * Compare tab status - OPEN vs CLOSE\n   * @param  {Object} tab\n   */\n  watchStatus(tab) {\n    if (!tab || !tab.ref) { return false; }\n    let newStatus = tab.ref.closed ? TabStatusEnum.CLOSE : TabStatusEnum.OPEN,\n      oldStatus = tab.status;\n\n    // If last and current status(inside a polling interval) are same, don't do anything\n    if (!newStatus || newStatus === oldStatus) { return false; }\n\n    // OPEN to CLOSE state\n    if (oldStatus === TabStatusEnum.OPEN && newStatus === TabStatusEnum.CLOSE) {\n      // remove tab from tabUtils\n      tabUtils._remove(tab);\n    }\n    // Change from CLOSE to OPEN state is never gonna happen ;)\n  };\n\n  /**\n   * Called when a child is refreshed/closed\n   * @param  {Object} ev - Event\n   */\n  onChildUnload(ev) {\n    if (this.onChildDisconnect) {\n      this.onChildDisconnect(ev.detail);\n    }\n  }\n\n  /**\n   * Enable link/btn, which got disabled on clicking.\n   * Note: works only when `data-tab-opener=\"heatmap\"` is used on the respective element\n   * @param  {Object} ev - Event\n   */\n  customEventUnListener(ev) {\n    this.enableElements();\n    if (this.onHandshakeCallback) {\n      this.onHandshakeCallback(ev.detail);\n    }\n  };\n\n  /**\n   * Attach postmessage, native and custom listeners to the window\n   */\n  addEventListeners() {\n    window.removeEventListener('message', PostMessageListener.onNewTab);\n    window.addEventListener('message', PostMessageListener.onNewTab);\n\n    window.removeEventListener('toggleElementDisabledAttribute', this.customEventUnListener);\n    window.addEventListener('toggleElementDisabledAttribute', ev => this.customEventUnListener(ev));\n\n    window.removeEventListener('onChildUnload', this.onChildUnload);\n    window.addEventListener('onChildUnload', ev => this.onChildUnload(ev));\n\n    // Let children tabs know when Parent is closed / refereshed.\n    window.onbeforeunload = () => {\n      tabUtils.broadCastAll(PostMessageEventNamesEnum.PARENT_DISCONNECTED);\n    };\n  };\n\n  /**\n   * API methods exposed for Public\n   *\n   * Re-enable the link/btn which got disabled on clicking\n   */\n  enableElements() {\n    domUtils.enable('data-tab-opener');\n  };\n\n  /**\n   * Return list of all tabs\n   * @return {Array}\n   */\n  getAllTabs() {\n    return tabUtils.getAll();\n  };\n\n  /**\n   * Return list of all OPENED tabs\n   * @return {Array}\n   */\n  getOpenedTabs() {\n    return tabUtils.getOpened();\n  };\n\n  /**\n   * Return list of all CLOSED tabs\n   * @return {Array}\n   */\n  getClosedTabs() {\n    return tabUtils.getClosed();\n  }\n\n  /**\n   * Close all tabs at once\n   * @return {Object}\n   */\n  closeAllTabs() {\n    return tabUtils.closeAll();\n  };\n\n  /**\n   * Close a specific tab\n   * @return {Object}\n   */\n  closeTab(id) {\n    return tabUtils.closeTab(id);\n  };\n\n  /**\n   * Send a postmessage to all OPENED tabs\n   * @return {Object}\n   */\n  broadCastAll(msg) {\n    return tabUtils.broadCastAll(msg);\n  }\n\n  /**\n   * Send a postmessage to a specific tab\n   * @return {Object}\n   */\n  broadCastTo(id, msg) {\n    return tabUtils.broadCastTo(id, msg);\n  }\n\n  /**\n   * Open a new tab. Config has to be passed with some required keys\n   * @return {Object} tab\n   */\n  openNewTab(config) {\n    if (!config) {\n      throw new Error(WarningTextEnum.CONFIG_REQUIRED);\n    }\n\n    let url = config.url;\n\n    if (!url) {\n      throw new Error(WarningTextEnum.URL_REQUIRED);\n    }\n\n    tab = new this.Tab();\n    tab.create(config);\n\n    // If polling is already there, don't set it again\n    if (!heartBeat) {\n      this.startPollingTabs();\n    }\n\n    return tab;\n\n  };\n\n  /**\n   * API methods exposed for Public ends here\n   **/\n\n  /**\n   * Invoked on object instantiation unless user pass a key to call it explicitly\n   */\n  init() {\n    this.addEventListeners();\n  };\n};\n\nexport default Parent;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/parent.js\n **/","import tabUtils from './utils/tab';\nimport UUID from './vendor/uuid';\nimport domUtils from './utils/dom';\n\n// Named Class expression\nclass Tab {\n  /**\n   * Invoked when the object is instantiated\n   */\n  constructor() {\n    // Set name of Parent tab if not already defined\n    window.name = window.name || 'PARENT_TAB';\n  };\n  /**\n   * Open a new tab\n   * @param  {Object} config - Refer API for config keys\n   * @return {Object} this\n   */\n  create(config) {\n    config = config || {};\n    Object.assign(this, config);\n    this.id = UUID.generate() || (tabUtils.tabs.length + 1);\n    this.status = 'open';\n    // Refere https://developer.mozilla.org/en-US/docs/Web/API/Window/open#Window_features for WindowFeatures\n    this.ref = window.open(\n      this.url,\n      '_blank',\n      config.windowFeatures);\n\n    domUtils.disable('data-tab-opener');\n\n    window.newlyTabOpened = {\n      id: this.id,\n      name: this.name,\n      ref: this.ref\n    };\n\n    // Push it to the list of tabs\n    tabUtils.addNew(this);\n\n     // Return reference for chaining purpose\n    return this;\n  };\n};\n\nexport default Tab;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/tab.js\n **/","/**\n * A Tab utility file to deal with tab operations\n */\n\nimport PostMessageEventNamesEnum from '../enums/PostMessageEventNamesEnum';\nimport arrayUtils from './array';\nimport TabStatusEnum from '../enums/TabStatusEnum';\nimport WarningTextEnum from '../enums/WarningTextEnum';\n\nlet tabUtils = {\n  tabs: [],\n  config: {}\n};\n\n/**\n * Remove a tab from a list of all tabs.\n * This is required when users opts for removing the closed tabs from the list of tabs.\n * This can be done explictly by passing `removeClosedTabs` key while instantiating Parent.\n * @param  {Object} tab\n */\ntabUtils._remove = (tab) => {\n  let index;\n\n  index = arrayUtils.searchByKeyName(tabUtils.tabs, 'id', tab.id, 'index');\n  tabUtils.tabs.splice(index, 1);\n};\n\n/**\n * As explained in `event-listeners/postmessage.js` file,\n * the data received from postmessage API is further processed based on our convention\n * @param  {String} msg\n * @return {String} modified msg\n */\ntabUtils._preProcessMessage = (msg) => {\n  // make msg always an object to support JSON support\n  try {\n    msg = JSON.stringify(msg);\n  } catch (e) {\n    throw new Error(WarningTextEnum.INVALID_JSON);\n  }\n\n  if (msg.indexOf(PostMessageEventNamesEnum.PARENT_COMMUNICATED) === -1) {\n    msg = PostMessageEventNamesEnum.PARENT_COMMUNICATED + msg;\n  }\n\n  return msg;\n};\n/**\n * Add a new tab to the Array of tabs\n * @param  {Object} tab\n * @return {Object} - this\n */\ntabUtils.addNew = (tab) => {\n  tabUtils.tabs.push(tab);\n  return this;\n};\n/**\n * Filter out all the opened tabs\n * @return {Array} - only the opened tabs\n */\ntabUtils.getOpened = () => {\n  return tabUtils.tabs.filter(tab => tab.status === TabStatusEnum.OPEN);\n};\n/**\n * Filter out all the closed tabs\n * @return {Array} - only the closed tabs\n */\ntabUtils.getClosed = () => {\n  return tabUtils.tabs.filter(tab => tab.status === TabStatusEnum.CLOSE);\n};\n/**\n * To get list of all tabs(closed/opened).\n * Note: Closed tabs will not be returned if `removeClosedTabs` key is paased while instantiaiting Parent.\n * @return {Array} - list of all tabs\n */\ntabUtils.getAll = () => {\n  return tabUtils.tabs;\n};\n\n/**\n * Close a specific tab\n * @param  {String} id\n * @return {Object} this\n */\ntabUtils.closeTab = (id) => {\n  let tab = arrayUtils.searchByKeyName(tabUtils.tabs, 'id', id);\n\n  if (tab && tab.ref) {\n    tab.ref.close();\n    tab.status = TabStatusEnum.CLOSE;\n  }\n\n  return tabUtils;\n  // --tabUtils.tabs.length;\n};\n/**\n * Close all opened tabs using a native method `close` available on window.open reference.\n * @return {tabUtils} this\n */\ntabUtils.closeAll = () => {\n  let i;\n\n  for (i = 0; i < tabUtils.tabs.length; i++) {\n    if (tabUtils.tabs[i] && tabUtils.tabs[i].ref) {\n      tabUtils.tabs[i].ref.close();\n      tabUtils.tabs[i].status = TabStatusEnum.CLOSE;\n    }\n  }\n\n  return tabUtils;\n};\n/**\n * Send a postmessage to every opened Child tab(excluding itself i.e Parent Tab)\n * @param  {String} msg\n * @param  {Boolean} isSiteInsideFrame\n */\ntabUtils.broadCastAll = (msg, isSiteInsideFrame) => {\n  let i, tabs = tabUtils.getOpened();\n\n  msg = tabUtils._preProcessMessage(msg);\n\n  for (i = 0; i < tabs.length; i++) {\n    tabUtils.sendMessage(tabs[i], msg, isSiteInsideFrame);\n  }\n\n  return tabUtils;\n};\n/**\n * Send a postmessage to a specific Child tab\n * @param  {String} id\n * @param  {String} msg\n * @param  {Boolean} isSiteInsideFrame\n */\ntabUtils.broadCastTo = (id, msg, isSiteInsideFrame) => {\n  let targetedTab,\n    tabs = tabUtils.getAll();\n\n  msg = tabUtils._preProcessMessage(msg);\n\n  targetedTab = arrayUtils.searchByKeyName(tabs, 'id', id); // TODO: tab.id\n  tabUtils.sendMessage(targetedTab, msg, isSiteInsideFrame);\n\n  return tabUtils;\n};\n\n/**\n * Send a postMessage to the desired window/frame\n * @param  {Object}  target\n * @param  {String}  msg\n * @param  {Boolean} isSiteInsideFrame\n */\ntabUtils.sendMessage = (target, msg, isSiteInsideFrame) => {\n  let origin = tabUtils.config.origin || '*';\n\n  if (isSiteInsideFrame && target.ref[0]) {\n    target.ref[0].postMessage(msg, origin);\n  } else if (target.ref && target.ref.top) {\n    target.ref.top.postMessage(msg, origin);\n  }\n\n};\n\nexport default tabUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/tab.js\n **/","/**\n * Enum for different event names used for tab-communication\n * @type {Object}\n */\nconst PostMessageEventNamesEnum = {\n  LOADED: '__TAB__LOADED_EVENT__',\n  CUSTOM: '__TAB__CUSTOM_EVENT__',\n  ON_BEFORE_UNLOAD: '__TAB__ON_BEFORE_UNLOAD__',\n  PARENT_DISCONNECTED: '__PARENT_DISCONNECTED__',\n  HANDSHAKE_WITH_PARENT: '__HANDSHAKE_WITH_PARENT__',\n  PARENT_COMMUNICATED: '__PARENT_COMMUNICATED__'\n};\n\nexport default PostMessageEventNamesEnum;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/PostMessageEventNamesEnum.js\n **/","let arrayUtils = {};\n\n/**\n * Different type of data needed after searching an item(Object) within data(Array of Objects).\n * 1. `INDEX` returns just the index at which the item was present\n * 2. `OBJECT` returns the matched object\n * 3. `BOTH` returns an object { obj: matched_object, index: index_found }\n */\nlet returnPreferenceEnum = {\n  INDEX: 'index',\n  OBJECT: 'object',\n  BOTH: 'both'\n};\n\n/**\n * Search for an item(Object) within a data-set(Array Of Objects)\n * @param  {Array of Objects} data\n * @param  {String} key - Unique key to search on the basis of\n * @param  {String} value - The matching criteria\n * @param  {String} returnPreference - what kind of output is needed\n * @return {Object}\n */\narrayUtils.searchByKeyName = (data, key, value, returnPreference) => {\n  if (!data || !key) { return false; }\n\n  returnPreference = returnPreference || returnPreferenceEnum[1]; // default to Object\n  let i, obj, returnData, index = -1;\n\n  for (i = 0; i < data.length; i++) {\n    obj = data[i];\n    // Number matching support\n    if (!isNaN(value) && parseInt(obj[key], 10) === parseInt(value, 10)) {\n      index = i;\n      break;\n    } else if (isNaN(value) && obj[key] === value) { // String exact matching support\n      index = i;\n      break;\n    }\n  }\n\n  if (index === -1) { // item not found\n    data[index] = {}; // for consistency\n  }\n\n  switch (returnPreference) {\n    case returnPreferenceEnum.INDEX:\n      returnData = index;\n      break;\n    case returnPreferenceEnum.BOTH:\n      returnData = {\n        obj: data[index],\n        index: index\n      };\n      break;\n    case returnPreferenceEnum.OBJECT:\n    default:\n      returnData = data[index];\n      break;\n  }\n\n  return returnData;\n\n};\n\nexport default arrayUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/array.js\n **/","/**\n * Enum for Tab status(still opened / closed) used for tab-communication\n * @type {Object}\n */\nconst TabStatusEnum = {\n  OPEN: 'open',\n  CLOSE: 'close'\n};\n\nexport default TabStatusEnum;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/TabStatusEnum.js\n **/","/**\n * Enum for showing various warnings to suser when things done wrong\n * @type {Object}\n */\nconst WarningTextEnum = {\n  INVALID_JSON: 'Invalid JSON Object!',\n  INVALID_DATA: 'Some wrong message is being sent by Parent.',\n  CONFIG_REQUIRED: 'Configuration options required. Please read docs.',\n  URL_REQUIRED: 'Url is needed for creating and opening a new window/tab. Please read docs.'\n};\n\nexport default WarningTextEnum;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/enums/WarningTextEnum.js\n **/","/**\n * UUID.js: The RFC-compliant UUID generator for JavaScript.\n * ES6 port of only `generate` method of UUID by Varun Malhotra under MIT License\n *\n * @author  LiosK\n * @version v3.3.0\n * @license The MIT License: Copyright (c) 2010-2016 LiosK.\n */\n\n/** @constructor */\nlet UUID;\n\nUUID = (function () {\n  'use strict';\n\n  /** @lends UUID */\n  function UUID() {}\n\n  /**\n   * The simplest function to get an UUID string.\n   * @returns {string} A version 4 UUID string.\n   */\n  UUID.generate = function () {\n    let rand = UUID._getRandomInt, hex = UUID._hexAligner;\n\n    // [\"timeLow\", \"timeMid\", \"timeHiAndVersion\", \"clockSeqHiAndReserved\", \"clockSeqLow\", \"node\"]\n    return hex(rand(32), 8) +           // time_low\n      '-' +\n      hex(rand(16), 4) +                // time_mid\n      '-' +\n      hex(0x4000 | rand(12), 4) +       // time_hi_and_version\n      '-' +\n      hex(0x8000 | rand(14), 4) +       // clock_seq_hi_and_reserved clock_seq_low\n      '-' +\n      hex(rand(48), 12);                // node\n  };\n\n  /**\n   * Returns an unsigned x-bit random integer.\n   * @param {int} x A positive integer ranging from 0 to 53, inclusive.\n   * @returns {int} An unsigned x-bit random integer (0 <= f(x) < 2^x).\n   */\n  UUID._getRandomInt = function (x) {\n    if (x < 0) {\n      return NaN;\n    }\n    if (x <= 30) {\n      return (0 | Math.random() * (1 << x));\n    }\n    if (x <= 53) {\n      return (0 | Math.random() * (1 << 30)) +\n        (0 | Math.random() * (1 << x - 30)) * (1 << 30);\n    }\n\n    return NaN;\n  };\n\n  /**\n   * Returns a function that converts an integer to a zero-filled string.\n   * @param {int} radix\n   * @returns {function(num&#44; length)}\n   */\n  UUID._getIntAligner = function (radix) {\n    return function (num, length) {\n      let str = num.toString(radix), i = length - str.length, z = '0';\n\n      for (; i > 0; i >>>= 1, z += z) {\n        if (i & 1) {\n          str = z + str;\n        }\n      }\n      return str;\n    };\n  };\n\n  UUID._hexAligner = UUID._getIntAligner(16);\n\n  /**\n   * Returns UUID string representation.\n   * @returns {string} {@link UUID#hexString}.\n   */\n  UUID.prototype.toString = function () {\n    return this.hexString;\n  };\n\n  return UUID;\n\n})(UUID);\n\nexport default UUID;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/vendor/uuid.js\n **/","/**\n * This utility helps enabling/disabling the Link/Button on the Parent Tab.\n * As soon as, user clicks on link/btn to open a new tab, the link/btn gets disabled.\n * Once child communicates for the first time with the Parent, the link/btn is re-enabled to open up new tab.\n * This feature is toggleable and can be used explicitly putting a data attribute on the link/btn.\n *\n * <a href=\"/demo.html\" data-tab-opener=\"parent\" target=\"_blank\" on-click=\"parent.openNewTab(config)\">Open Tab</a>\n */\nlet domUtils = {\n  disable: (selector) => {\n    if (!selector) { return false; }\n\n    let i, ATOpenerElems = document.querySelectorAll('[' + selector + ']');\n\n    for (i = 0; i < ATOpenerElems.length; i++) {\n      ATOpenerElems[i].setAttribute('disabled', 'disabled');\n    }\n  },\n  enable: (selector) => {\n    if (!selector) { return false; }\n\n    let i, ATOpenerElems = document.querySelectorAll('[' + selector + ']');\n\n    for (i = 0; i < ATOpenerElems.length; i++) {\n      ATOpenerElems[i].removeAttribute('disabled');\n    }\n  }\n};\n\nexport default domUtils;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/utils/dom.js\n **/","import arrayUtils from '../utils/array';\nimport tabUtils from '../utils/tab';\nimport WarningTextEnum from '../enums/WarningTextEnum';\nimport PostMessageEventNamesEnum from '../enums/PostMessageEventNamesEnum';\n\nlet PostMessageListener = {};\n\n/*\n * Custom PostMessage Convetions Followed - Sending and Receieving data gracefully\n * -------------------------------------------------------------------------------\n *\n * 1. First convetion\n      Since data can be sent or receieved via postmessge API in the form of strings,\n      the library stores data as stringified JSON object and while reading it, parses the JSON stringified earlier.\n      This is easy to maintain and deal with data.\n\n * 2. Second Convetions\n      With every data, there's an associated message identifier.\n      A message identifier helps in knowing the intention of what event actually is for.\n      For eg: To send data after proper establishment from Child tab,\n      Parent tab acknowledges the connection by returning the true identity of the Child tab.\n      This is done via prepending the Event name i.e. HANDSHAKE_WTIH_PARENT\n\n      So the postmessage's message would like: `HANDSHAKE_WTIH_PARENT{\"id\": 123, \"name\": \"Hello World!\"}`.\n      So, while reading the message, it has to be first checked up with the defined event names\n      and then after successful match, the message is split using the Event-name as a delimiter.\n      The first entry if the event name and the second one is the actual data.\n *\n */\n\n/**\n * OnLoad Event - it serves as an communication establishment source from Child tab\n */\nPostMessageListener._onLoad = (data) => {\n  let tabs,\n    dataToSend,\n    tabInfo = data.split(PostMessageEventNamesEnum.LOADED)[1];\n\n  // Child was opened but parent got refereshed, opened a tab i.e.\n  // last opened tab will get refreshed(browser behavior). WOW! Handle this now.\n  if (tabInfo) {\n    try {\n      tabInfo = JSON.parse(tabInfo);\n      // If Child knows its UUID, means Parent was refreshed and Child did not\n      if (tabInfo.id) {\n        tabs = tabUtils.getAll();\n        if (tabs.length) {\n          window.newlyTabOpened = tabs[tabs.length - 1];\n          window.newlyTabOpened.id = tabInfo.id;\n          window.newlyTabOpened.name = tabInfo.name;\n        }\n      }\n    } catch (e) {\n      throw new Error(WarningTextEnum.INVALID_JSON);\n    }\n  }\n\n  if (window.newlyTabOpened) {\n    try {\n      dataToSend = PostMessageEventNamesEnum.HANDSHAKE_WITH_PARENT;\n      dataToSend += JSON.stringify({\n        id: window.newlyTabOpened.id,\n        name: window.newlyTabOpened.name,\n        parentName: window.name\n      });\n      tabUtils.sendMessage(window.newlyTabOpened, dataToSend, tabInfo.isSiteInsideFrame);\n    } catch (e) {\n      throw new Error(WarningTextEnum.INVALID_JSON);\n    }\n  }\n};\n\n/**\n * onCustomMessage Event - Any sort of custom message by child is treated here\n * @param  {Object} data\n *\n * The method fires an event to notify Parent regarding Child's behavior\n */\nPostMessageListener._onCustomMessage = (data) => {\n  let tabInfo = data.split(PostMessageEventNamesEnum.CUSTOM)[1];\n\n  try {\n    tabInfo = JSON.parse(tabInfo);\n  } catch (e) {\n    throw new Error(WarningTextEnum.INVALID_JSON);\n  }\n\n  // CustomEvent is not supported in IE and so does this library\n  let event = new CustomEvent('toggleElementDisabledAttribute', {'detail': tabInfo});\n\n  window.dispatchEvent(event);\n  window.newlyTabOpened = null;\n};\n\n/**\n * onBeforeUnload Event - Tells parent that either Child tab was closed or refreshed.\n * Child uses native `ON_BEFORE_UNLOAD` method to notify Parent.\n *\n * It sets the newlyTabOpened variable accordingly\n *\n * @param  {Object} data\n */\nPostMessageListener._onBeforeUnload = (data) => {\n  let tabs, tabInfo = data.split(PostMessageEventNamesEnum.ON_BEFORE_UNLOAD)[1];\n\n  try {\n    tabInfo = JSON.parse(tabInfo);\n  } catch (e) {\n    throw new Error(WarningTextEnum.INVALID_JSON);\n  }\n\n  if (tabUtils.tabs.length) {\n    tabs = tabUtils.getAll();\n    window.newlyTabOpened = arrayUtils.searchByKeyName(tabs, 'id', tabInfo.id) || window.newlyTabOpened;\n  }\n\n  // CustomEvent is not supported in IE and so does this library\n  let event = new CustomEvent('onChildUnload', {'detail': tabInfo});\n\n  window.dispatchEvent(event);\n};\n\n/**\n * onNewTab - It's the entry point for data processing after receiving any postmessage form any Child Tab\n * @param  {Object} message\n */\nPostMessageListener.onNewTab = (message) => {\n  let data = message.data;\n\n  /**\n   * Safe check - This happens when CHild Tab gets closed just after sending a message.\n   * No need to go further from this point.\n   * Tab status is automatically fetched using our polling mechanism written in `Parent.js` file.\n   */\n  if (!data || typeof data !== 'string' || !tabUtils.tabs.length) {\n    return false;\n  }\n\n  // `origin` check for secureity point of view\n  if (tabUtils.config.origin && tabUtils.config.origin !== message.origin) {\n    return false;\n  }\n\n  if (data.indexOf(PostMessageEventNamesEnum.LOADED) > -1) {\n    PostMessageListener._onLoad(data);\n  } else if (data.indexOf(PostMessageEventNamesEnum.CUSTOM) > -1) {\n    PostMessageListener._onCustomMessage(data);\n  } else if (data.indexOf(PostMessageEventNamesEnum.ON_BEFORE_UNLOAD) > -1) {\n    PostMessageListener._onBeforeUnload(data);\n  }\n};\n\nexport default PostMessageListener;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/event-listeners/postmessage.js\n **/","import PostMessageEventNamesEnum from './enums/PostMessageEventNamesEnum';\nimport WarningTextEnum from './enums/WarningTextEnum';\n\n// Named Class expression\nclass Child {\n  /**\n   * Involed when object is instantiated\n   * Set flags/variables and calls init method to attach event listeners\n   * @param  {Object} config - Refer API/docs for config keys\n   */\n  constructor(config) {\n    this.sessionStorageKey = '__vwo_new_tab_info__';\n\n    if (!config) {\n      config = {};\n    }\n    if (typeof config.handshakeExpiryLimit === 'undefined') {\n      config.handshakeExpiryLimit = 5000;\n    }\n    if (typeof config.shouldInitImmediately === 'undefined') {\n      config.shouldInitImmediately = true;\n    }\n\n    this.tabName = window.name;\n    this.tabId = null;\n    this.tabParentName = null;\n\n    Object.assign(this, config);\n    this.config = config;\n\n    if (this.shouldInitImmediately) {\n      this.init();\n    }\n  };\n\n  /**\n   * Check is sessionStorage is present on window\n   * @return {Boolean} [description]\n   */\n  _isSessionStorage() {\n    if ('sessionStorage' in window && window.sessionStorage) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Get stored data from sessionStorage\n   * @return {Object} data\n   */\n  _getData() {\n    if (!this.isSessionStorageSupported) {\n      return false;\n    }\n\n    return window.sessionStorage.getItem(this.sessionStorageKey);\n  };\n\n  /**\n   * Set stored data from sessionStorage\n   * @return {Object} data\n   */\n  _setData(dataReceived) {\n    if (!this.isSessionStorageSupported) {\n      return false;\n    }\n\n    window.sessionStorage.setItem(this.sessionStorageKey, dataReceived);\n    return dataReceived;\n  };\n\n  /**\n   * Get stored data from sessionStorage and parse it\n   * @return {Object} data\n   */\n  _restoreData() {\n    if (!this.isSessionStorageSupported) {\n      return false;\n    }\n\n    if (this.isSessionStorageSupported) {\n      let storedData = this._getData();\n\n      this._parseData(storedData);\n    }\n  };\n\n  /**\n   * Parse data fetched from sessionStorage\n   * @param  {String} dataReceived\n   */\n  _parseData(dataReceived) {\n    let actualData;\n\n    // Expecting JSON data\n    try {\n      actualData = JSON.parse(dataReceived);\n      this.tabId = actualData && actualData.id;\n      this.tabParentName = actualData && actualData.parentName;\n    } catch (e) {\n      throw new Error(WarningTextEnum.INVALID_DATA);\n    };\n  };\n\n  /**\n   * The core of this file\n   * This method receives the postmessage from Parent\n   * after establishing a proper communication channel between Parent tab and Child tab.\n   * It removes the handshake timeout.\n   * Based on the type of postmessage event, it sets/parses or calls user defined callbacks\n   *\n   * @param  {String} message\n   */\n  onCommunication(message) {\n    let dataReceived,\n      data = message.data;\n\n    if (!data || typeof data !== 'string') {\n      return;\n    }\n\n    // `origin` check for secureity point of view\n    if (this.config.origin && this.config.origin !== message.origin) {\n      return;\n    }\n\n    // cancel timeout\n    window.clearTimeout(this.timeout);\n\n    // When Parent tab gets closed or refereshed\n    if (data.indexOf(PostMessageEventNamesEnum.PARENT_DISCONNECTED) > -1) {\n      // Call user-defined `onParentDisconnect` callback when Parent tab gets closed or refereshed.\n      if (this.config.onParentDisconnect) {\n        this.config.onParentDisconnect();\n      }\n\n      // remove postMessage listener since no Parent is there to communicate with\n      window.removeEventListener('message', evt => this.onCommunication(evt));\n    }\n\n    /**\n     * When Parent sends an Acknowledgement to the Child's request of setting up a communication channel\n     * along with the tab's identity i.e. id, name and it's parent(itself) to the child tab.\n    */\n    if (data.indexOf(PostMessageEventNamesEnum.HANDSHAKE_WITH_PARENT) > -1) {\n      let msg;\n\n      dataReceived = data.split(PostMessageEventNamesEnum.HANDSHAKE_WITH_PARENT)[1];\n\n      // Set data to sessionStorage so that when page reloads it can directly read the past info till the session lives\n      this._setData(dataReceived);\n      this._parseData(dataReceived);\n\n      msg = PostMessageEventNamesEnum.CUSTOM + JSON.stringify({\n        id: this.tabId,\n        isSiteInsideFrame: this.config.isSiteInsideFrame\n      });\n      this.sendMessageToParent(msg);\n\n      if (this.config.onInitialize) {\n        this.config.onInitialize();\n      }\n    }\n\n    // Whenever Parent tab communicates once the communication channel is established\n    if (data.indexOf(PostMessageEventNamesEnum.PARENT_COMMUNICATED) > -1) {\n      dataReceived = data.split(PostMessageEventNamesEnum.PARENT_COMMUNICATED)[1];\n\n      try {\n        dataReceived = JSON.parse(dataReceived);\n      } catch (e) {\n        throw new Error(WarningTextEnum.INVALID_JSON);\n      }\n      // Call user-defined `onParentCommunication` callback when Parent sends a message to Parent tab\n      if (this.config.onParentCommunication) {\n        this.config.onParentCommunication(dataReceived);\n      }\n    }\n  };\n\n  /**\n   * Attach postmessage and onbeforeunload event listeners\n   */\n  addListeners() {\n    window.onbeforeunload = (evt) => {\n      let msg = PostMessageEventNamesEnum.ON_BEFORE_UNLOAD + JSON.stringify({\n        id: this.tabId,\n        isSiteInsideFrame: this.config.isSiteInsideFrame\n      });\n\n      this.sendMessageToParent(msg);\n    };\n\n    window.removeEventListener('message', evt => this.onCommunication(evt));\n    window.addEventListener('message', evt => this.onCommunication(evt));\n  };\n\n  /**\n   * Call a user-defined method `onHandShakeExpiry`\n   * if the Parent doesn't recieve a first handshake message within the configurable `handshakeExpiryLimit`\n   * @return {Function}\n   */\n  setHandshakeExpiry() {\n    return window.setTimeout(() => {\n      if (this.config.onHandShakeExpiry) {\n        this.config.onHandShakeExpiry();\n      }\n    }, this.handshakeExpiryLimit);\n  }\n\n  /**\n   * API starts here ->\n   *\n   * Send a postmessage to the corresponding Parent tab\n   * @param  {String} msg\n=   */\n  sendMessageToParent(msg) {\n    let origin;\n\n    if (window.top.opener) {\n      origin = this.config.origin || '*';\n      window.top.opener.postMessage(msg, origin);\n    }\n  };\n\n  /**\n   * Get current Tab info i.e. id, name and parentName\n   * @return {Object} tab-info\n   */\n  getTabInfo() {\n    return {\n      id: this.tabId,\n      name: this.tabName,\n      parentName: this.tabParentName,\n      isSiteInsideFrame: this.config.isSiteInsideFrame\n    };\n  };\n  /**\n   * API ends here ->\n   */\n\n  /**\n   * Invoked on object instantiation unless user pass a key to call it explicitly\n   */\n  init() {\n    this.isSessionStorageSupported = this._isSessionStorage();\n    this.addListeners();\n    this._restoreData();\n    this.sendMessageToParent(PostMessageEventNamesEnum.LOADED + JSON.stringify(this.getTabInfo()));\n    this.timeout = this.setHandshakeExpiry();\n\n    if (this.config.onReady) {\n      this.config.onReady();\n    }\n  }\n};\n\nexport default Child;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/child.js\n **/"],"sourceRoot":""}