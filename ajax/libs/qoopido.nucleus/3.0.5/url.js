!function(t,e){"use strict";function n(t,n,i){function u(t,e){var n;if(n=a[t])return n.link[e]}function c(t,e,n){var i;(i=a[t])&&(i.link[e]=n)}function o(t){var e=this;s(e,{uuid:new n(t)}),o.update(e)}function r(i){var u=t.call(this),c=e.createElement("a");return c.href=i,a[u.uuid]={link:c,parameter:{}},s(u,{toString:new n(function(){return c.toString()}),valueOf:new n(function(){return c.valueOf()}),parameter:new n(new o(u.uuid))}),u}var s=Object.defineProperties,a={},d=/^\//,f=/[?&]?([^=]+)=([^&]*)/g,h=new RegExp("^"+function(){var t=e.createElement("a");return t.href="/",t.href.slice(0,-1)}(),"i"),b={"http:":/:80$/,"https:":/:443$/,"ftp:":/:21$/};return o.prototype={get:function(t){return a[this.uuid].parameter[t]},set:function(t,e){a[this.uuid].parameter[t]=e,o.serialize(this)},remove:function(t){delete a[this.uuid].parameter[t],o.serialize(this)}},o.update=function(t){var e,n=a[t.uuid],u=n.parameter,c=n.link.search.split("+").join(" ");for(i(u,function(t){delete u[t]});e=f.exec(c);)u[decodeURIComponent(e[1])]=decodeURIComponent(e[2])},o.serialize=function(t){var e=a[t.uuid],n=e.parameter,u="";i(n,function(t,e){u+=(u?"&":"?")+encodeURIComponent(t)+"="+encodeURIComponent(e)}),e.link.search=u.replace(/%20/g,"+").replace(/%5B/g,"[").replace(/%5D/g,"]")},r.prototype={get local(){var t;if(t=u(this.uuid,"href"))return h.test(t)},get href(){return u(this.uuid,"href")},set href(t){c(this.uuid,"href",t)},get origin(){var t=this;return u(t.uuid,"origin")||t.protocol+"//"+t.host},get protocol(){return u(this.uuid,"protocol")},set protocol(t){c(this.uuid,"protocol",t)},get username(){return u(this.uuid,"username")},set username(t){c(this.uuid,"username",t)},get password(){return u(this.uuid,"password")},set password(t){c(this.uuid,"password",t)},get host(){var t,e;if(t=u(this.uuid,"host"))return e=u(this.uuid,"protocol"),b[e]?t.replace(b[e],""):t},set host(t){c(this.uuid,"host",t)},get hostname(){return u(this.uuid,"hostname")},set hostname(t){c(this.uuid,"hostname",t)},get port(){return u(this.uuid,"port")},set port(t){c(this.uuid,"port",t)},get pathname(){var t;if(t=u(this.uuid,"pathname"))return d.test(t)?t:"/"+t},set pathname(t){c(this.uuid,"pathname",t)},get search(){return u(this.uuid,"search")},set search(t){c(this.uuid,"search",t),o.update.call(this)},get hash(){return u(this.uuid,"hash")},set hash(t){c(this.uuid,"hash",t)}},r.extends(t)}provide(["/demand/abstract/uuid","/demand/descriptor","/demand/function/iterate"],n)}(0,document);
//# sourceMappingURL=url.js.map
