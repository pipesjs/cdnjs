{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///pnp.min.js","webpack:///webpack/bootstrap b98ccbee4ca34fcaf622","webpack:///./lib/utils/util.js","webpack:///./lib/sharepoint/queryable.js","webpack:///./lib/sharepoint/odata.js","webpack:///./lib/utils/exceptions.js","webpack:///./lib/configuration/pnplibconfig.js","webpack:///./lib/utils/logging.js","webpack:///./lib/collections/collections.js","webpack:///./lib/sharepoint/webs.js","webpack:///./lib/sharepoint/files.js","webpack:///./lib/sharepoint/folders.js","webpack:///./lib/sharepoint/items.js","webpack:///./lib/sharepoint/lists.js","webpack:///./lib/sharepoint/queryableshareable.js","webpack:///./lib/sharepoint/types.js","webpack:///./lib/utils/storage.js","webpack:///./lib/net/httpclient.js","webpack:///./lib/sharepoint/contenttypes.js","webpack:///./lib/sharepoint/roles.js","webpack:///./lib/sharepoint/sitegroups.js","webpack:///./lib/sharepoint/usercustomactions.js","webpack:///./lib/configuration/providers/cachingConfigurationProvider.js","webpack:///./lib/net/fetchclient.js","webpack:///./lib/sharepoint/caching.js","webpack:///./lib/sharepoint/features.js","webpack:///./lib/sharepoint/fields.js","webpack:///./lib/sharepoint/navigation.js","webpack:///./lib/sharepoint/queryablesecurable.js","webpack:///./lib/sharepoint/search.js","webpack:///./lib/sharepoint/searchsuggest.js","webpack:///./lib/sharepoint/site.js","webpack:///./lib/sharepoint/siteusers.js","webpack:///./lib/utils/decorators.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/configuration/configuration.js","webpack:///./lib/sharepoint/rest.js","webpack:///./lib/types/index.js","webpack:///./lib/configuration/providers/index.js","webpack:///./lib/configuration/providers/spListConfigurationProvider.js","webpack:///./lib/net/digestcache.js","webpack:///./lib/net/nodefetchclientbrowser.js","webpack:///./lib/net/sprequestexecutorclient.js","webpack:///./lib/pnp.js","webpack:///./lib/sharepoint/attachmentfiles.js","webpack:///./lib/sharepoint/forms.js","webpack:///./lib/sharepoint/index.js","webpack:///./lib/sharepoint/queryablerequest.js","webpack:///./lib/sharepoint/relateditems.js","webpack:///./lib/sharepoint/subscriptions.js","webpack:///./lib/sharepoint/userprofiles.js","webpack:///./lib/sharepoint/views.js","webpack:///./lib/sharepoint/webparts.js","webpack:///./lib/utils/files.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","__decorate","decorators","target","key","desc","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","decorators_1","pnplibconfig_1","Util","getCtxCallback","context","method","params","_i","apply","urlParamExists","replace","RegExp","test","location","search","getUrlParamByName","regex","results","exec","decodeURIComponent","getUrlParamBoolByName","stringInsert","index","substring","dateAdd","date","interval","units","ret","Date","toLocaleString","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","loadStylesheet","path","avoidCache","encodeURIComponent","toString","head","document","getElementsByTagName","e","createElement","appendChild","setAttribute","combinePaths","paths","filter","map","join","getRandomString","chars","text","Array","possible","charAt","Math","floor","random","getGUID","isFunction","candidateFunction","isArray","array","constructor","stringIsNullOrEmpty","extend","source","noOverwrite","check","getOwnPropertyNames","v","reduce","t","isUrlAbsolute","url","makeUrlAbsolute","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","toAbsoluteUrl","candidateUrl","Promise","resolve","RuntimeConfig","baseUrl","indexOf","substr","deprecated","__extends","extendStatics","setPrototypeOf","__proto__","b","__","create","util_1","collections_1","odata_1","exceptions_1","queryablerequest_1","logging_1","Queryable","_query","Dictionary","_batch","urlStr","lastIndexOf","_parentUrl","_url","slice","q","add","concat","pathPart","append","addBatchDependency","hasBatch","addDependency","as","inBatch","batch","AlreadyInBatchException","usingCaching","options","globalCacheDisable","_useCaching","_cachingOptions","toUrl","toUrlAndQuery","aliasedParams","match","labelName","Logger","write","LogLevel","Verbose","merge","count","getKeys","getParent","parentUrl","parent","query","clone","additionalPath","includeBatch","parser","getOptions","ODataDefaultParser","toRequestContext","then","pipe","getAs","post","postOptions","postAs","patch","patchOptions","delete","deleteOptions","verb","_this","dependencyDispose","batchDependency","cachingOptions","isBatched","isCached","requestAbsoluteUrl","requestId","QueryableCollection","_super","select","selects","expand","expands","orderBy","ascending","keys","asc","push","skip","top","QueryableInstance","extractOdataId","candidate","__metadata","id","ODataIdException","getEntityUrl","entity","uri","Warning","ODataValue","ODataValueParserImpl","ODataEntity","ODataEntityParserImpl","ODataEntityArray","ODataEntityArrayParserImpl","httpclient_1","exceptions_2","ODataParserBase","parse","reject","handleError","headers","has","parseFloat","status","json","parseODataJSON","catch","ok","data","responseBody","responseHeaders","ProcessHttpClientResponseException","statusText","log","level","message","result","ODataRawParserImpl","ODataRaw","ODataBatch","_batchId","_requests","_dependencies","info","toUpperCase","resolver","promise","execute","all","executeImpl","Info","client","HttpClient","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","Accept","Content-Type","name_1","body","batchHeaders","batchOptions","_parseResponse","responses","BatchParseException","chain","response","request","_","statusRegExp","lines","split","state","line","trim","parts","parseInt","Response","TextFileParser","BlobFileParser","blob","JSONFileParser","BufferFileParser","arrayBuffer","buffer","defaultLog","error","Error","NoCacheAvailableException","msg","APIUrlException","AuthUrlException","NodeFetchClientUnsupportedException","SPRequestExecutorUndefinedException","MaxCommentLengthException","NotSupportedInBatchException","operation","FunctionExpectedException","UrlException","setRuntimeConfig","config","_runtimeConfig","set","fetchclient_1","RuntimeConfigImpl","_headers","_defaultCachingStore","_defaultCachingTimeoutSeconds","_globalCacheDisable","_fetchClientFactory","FetchClient","_baseUrl","_spfxContext","defaultCachingStore","defaultCachingTimeoutSeconds","fetchClientFactory","spfxContext","pageContext","web","absoluteUrl","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","writeJSON","JSON","stringify","entry","measure","f","subscribers","subscriber","console","profile","profileEnd","ConsoleListener","format","warn","FunctionListener","values","sourceAsDictionary_1","sourceAsHash","remove","val","splice","getValues","clear","queryable_1","lists_1","fields_1","navigation_1","sitegroups_1","contenttypes_1","folders_1","roles_1","files_1","lists_2","siteusers_1","usercustomactions_1","features_1","queryableshareable_1","relateditems_1","Webs","webPath","title","description","template","language","inheritPermissions","additionalSettings","props","Description","Language","Title","Url","UseSamePermissionsAsParentSite","WebTemplate","postBody","parameters","type","Web","fromUrl","ContentTypes","Lists","Fields","Features","Navigation","SiteUsers","SiteGroups","CurrentUser","Folders","UserCustomActions","RoleDefinitions","RelatedItemManagerImpl","FromUrl","createBatch","Folder","SiteGroup","getFolderByServerRelativeUrl","folderRelativeUrl","getFileByServerRelativeUrl","fileRelativeUrl","File","getList","listRelativeUrl","List","update","properties","X-HTTP-Method","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","doesUserHavePermissions","perms","ensureUser","loginName","logonName","user","SiteUser","availableWebTemplates","includeCrossLanugage","getCatalog","getChanges","getUserById","mapToIcon","filename","size","progId","QueryableShareableWeb","webparts_1","items_1","odata_2","Files","getByName","content","shouldOverWrite","file","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","CheckinType","Major","checkout","copyTo","eTag","IF-Match","deny","getLimitedWebPartManager","scope","WebPartsPersonalizationScope","Shared","LimitedWebPartManager","moveTo","moveOperations","MoveOperations","Overwrite","publish","recycle","undoCheckout","unpublish","getText","binaryStringResponseBody","getBlob","getBuffer","getJSON","setContent","getItem","listItemAllFields","Item","self","fileSize","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","fileOffset","ServerRelativeUrl","QueryableShareableFile","getById","versionId","Version","deleteAll","deleteById","deleteByLabel","label","restoreByLabel","TemplateFileType","folder","QueryableShareableFolder","attachmentfiles_1","Items","getPaged","PagedItemCollectionParser","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","Id","candidatelistItemEntityTypeFullName","getListItemEntityTypeFullName","AttachmentFiles","ContentType","ListItemEntityTypeFullName","ItemUpdatedParser","getWopiFrameUrl","action","GetWOPIFrameUrl","validateUpdateListItem","formValues","newDocumentUpdate","bNewDocumentUpdate","QueryableShareableItem","PagedItemCollection","nextUrl","getNext","hasNext","__next","odata.etag","views_1","forms_1","subscriptions_1","queryablesecurable_1","getByTitle","list","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","Views","Forms","Subscriptions","getView","viewId","View","retList","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListFormData","itemId","formId","mode","ListData","reserveListItemId","ReserveListItemId","QueryableSecurable","webs_1","types_1","QueryableShareable","getShareLink","kind","expiration","expString","toISOString","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","login","Key","roleFilter","SharingRole","Edit","RoleType","Contributor","Reader","roleDefinitions","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","group","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","associatedMemberGroup","g","Guest","associatedVisitorGroup","getShareObjectWeb","dependency","shareObjectRaw","SharingLinkKind","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","FileFolderShared","getShareable","shareable","shareEverything","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType","PageType","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","persistable","put","expire","setItem","createPersistable","removeItem","getOrPut","defaultTimeout","MemoryStorage","_store","PnPClientStorage","local","localStorage","session","sessionStorage","digestcache_1","_impl","_digestCache","DigestCache","fetch","opts","cache","credentials","Headers","mergeHeaders","webUrl","getDigest","digest","fetchRaw","rawHeaders","retry","ctx","delay","attempts","retryCount","setTimeout","retryContext","Request","forEach","ct","addAvailableContentType","contentTypeId","contentType","Group","StringValue","Name","FieldLinks","fl","FieldLink","RoleAssignments","principalId","roleDefId","ra","RoleAssignment","RoleDefinitionBindings","RoleDefinition","getByType","roleTypeKind","order","basePermissions","BasePermissions","Order","definition","retDef","groupName","sg","removeById","removeByLoginName","retGroup","uca","UserCustomAction","storage","CachingConfigurationProvider","wrappedProvider","cacheKey","cacheStore","selectPnPCache","getWrappedProvider","getConfiguration","cachedConfig","providerPromise","providedConfig","pnpCache","default","storage_1","CachingOptions","storeName","CachingParserWrapper","_parser","_cacheOptions","feature","Feature","force","featdefScope","featureId","deactivate","DefinitionId","Field","getByInternalNameOrTitle","createFieldAsXml","xml","SchemaXml","field","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","NavigationNodes","node","NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","getUserEffectivePermissions","getCurrentUserEffectivePermissions","currentUser","LoginName","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","Search","formattedBody","SelectProperties","RefinementFilters","SortList","HithighlightedProperties","ReorderingRules","Properties","SearchResults","rawResponse","postquery","PrimarySearchResults","formatSearchResults","PrimaryQueryResult","RelevantResults","Table","Rows","RawSearchResults","ElapsedTime","RowCount","TotalRows","TotalRowsIncludingDuplicates","rawResults","tempResults","tempResults_1","SearchResult","Cells","rawItem","item_1","Value","writable","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","SearchSuggest","mapQueryToQueryString","SearchSuggestResult","querytext","personalCount","preQuery","hitHighlighting","capitalize","culture","stemming","includePeople","queryRules","prefixMatch","PeopleNames","suggest","PersonalResults","Queries","Site","getContextInfo","GetContextWebInformation","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","getByEmail","email","getByLoginName","su","propertyKey","descriptor","args","Function","eval","window","Settings","_settings","addJSON","hash","load","provider","reason","search_1","searchsuggest_1","site_1","userprofiles_1","Rest","searchSuggest","finalQuery","Querytext","UserProfileQuery","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","__export","sprequestexecutorclient_1","SPRequestExecutorClient","nodefetchclient_1","NodeFetchClient","cachingConfigurationProvider_1","spListConfigurationProvider_1","SPListConfigurationProvider","sourceWeb","sourceListTitle","lists","listTitle","items","configuration","asCaching","CachedDigest","digests","_httpClient","_digests","cachedDigest","Content-type","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","convertToResponse","spResponse","h","statusCode","SP","RequestExecutor","iterator","temp","addinWebUrl","executor","entries","next","done","requestOptions","success","binaryStringRequestBody","executeAsync","configuration_1","rest_1","util","sp","setup","Def","AttachmentFile","addMultiple","files","Form","PipelineMethods","logStart","caching","send","logEnd","returnResult","requestPipelineMethod","alwaysRun","hasResult","caching_1","cacheOptions","setResult","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","subscriptionId","subscription","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","resource","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","maxCount","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","readBlobAsArrayBuffer","String","fromCharCode","Uint16Array","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","emailIDs","personalView","PersonalView","view","ViewFields","renderAsHtml","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","removeAll","WebPartDefinitions","export","webPartId","import","webPartXml","WebPartDefinition","WebPart","readBlobAsText","readBlobAs","reader","FileReader","onload","readAsText","readAsArrayBuffer"],"mappings":"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","file":"pnp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/**\n * sp-pnp-js v2.0.3 - A JavaScript library for SharePoint development.\n * MIT (https://github.com/SharePoint/PnP-JS-Core/blob/master/LICENSE)\n * Copyright (c) 2017 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/SharePoint/PnP-JS-Core\n * bugs: https://github.com/SharePoint/PnP-JS-Core/issues\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 41);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decorators_1 = __webpack_require__(31);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar Util = (function () {\n    function Util() {\n    }\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    Util.getCtxCallback = function (context, method) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function () {\n            method.apply(context, params);\n        };\n    };\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    Util.urlParamExists = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    };\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    Util.getUrlParamByName = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        var results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    Util.getUrlParamBoolByName = function (name) {\n        var p = this.getUrlParamByName(name);\n        var isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    };\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    Util.stringInsert = function (target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    };\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    Util.dateAdd = function (date, interval, units) {\n        var ret = new Date(date.toLocaleString()); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    };\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    Util.loadStylesheet = function (path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        var head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            var e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    };\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    Util.combinePaths = function () {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        return paths\n            .filter(function (path) { return typeof path !== \"undefined\" && path !== null; })\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    };\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    Util.getRandomString = function (chars) {\n        var text = new Array(chars);\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    };\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    Util.getGUID = function () {\n        var d = new Date().getTime();\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    Util.isFunction = function (candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    Util.isArray = function (array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    };\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    Util.stringIsNullOrEmpty = function (s) {\n        return typeof s === \"undefined\" || s === null || s === \"\";\n    };\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    Util.extend = function (target, source, noOverwrite) {\n        if (noOverwrite === void 0) { noOverwrite = false; }\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\n        return Object.getOwnPropertyNames(source)\n            .filter(function (v) { return check(target, v); })\n            .reduce(function (t, v) {\n            t[v] = source[v];\n            return t;\n        }, target);\n    };\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    Util.isUrlAbsolute = function (url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    };\n    /**\n     * Attempts to make the supplied relative url absolute based on the _spPageContextInfo object, if available\n     *\n     * @param url The relative url to make absolute\n     */\n    Util.makeUrlAbsolute = function (url) {\n        if (Util.isUrlAbsolute(url)) {\n            return url;\n        }\n        if (typeof global._spPageContextInfo !== \"undefined\") {\n            if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                return Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, url);\n            }\n            else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                return Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, url);\n            }\n        }\n        else {\n            return url;\n        }\n    };\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    Util.toAbsoluteUrl = function (candidateUrl) {\n        return new Promise(function (resolve) {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.baseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.baseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have _layouts in it?\n            if (typeof global.location !== \"undefined\") {\n                var index = global.location.toString().toLowerCase().indexOf(\"/_layouts/\");\n                if (index > 0) {\n                    // we are likely in the workbench in /_layouts/\n                    return resolve(Util.combinePaths(global.location.toString().substr(0, index), candidateUrl));\n                }\n            }\n            return resolve(candidateUrl);\n        });\n    };\n    return Util;\n}());\n__decorate([\n    decorators_1.deprecated(\"The Util.makeUrlAbsolute method is deprecated and will be removed from future releases. Use Util.toAbsoluteUrl instead\")\n], Util, \"makeUrlAbsolute\", null);\nexports.Util = Util;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(6);\nvar odata_1 = __webpack_require__(2);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar queryablerequest_1 = __webpack_require__(45);\nvar logging_1 = __webpack_require__(5);\n/**\n * Queryable Base Class\n *\n */\nvar Queryable = (function () {\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    function Queryable(baseUrl, path) {\n        this._query = new collections_1.Dictionary();\n        this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            var urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                this._parentUrl = urlStr;\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                var index = urlStr.lastIndexOf(\"/\");\n                this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                var index = urlStr.lastIndexOf(\"(\");\n                this._parentUrl = urlStr.slice(0, index);\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            var q = baseUrl;\n            this._parentUrl = q._url;\n            var target = q._query.get(\"@target\");\n            if (target !== null) {\n                this._query.add(\"@target\", target);\n            }\n            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n        }\n    }\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    Queryable.prototype.concat = function (pathPart) {\n        this._url += pathPart;\n    };\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    Queryable.prototype.append = function (pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    };\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    Queryable.prototype.addBatchDependency = function () {\n        if (this.hasBatch) {\n            return this._batch.addDependency();\n        }\n        return function () { return null; };\n    };\n    Object.defineProperty(Queryable.prototype, \"hasBatch\", {\n        /**\n         * Indicates if the current query has a batch associated\n         *\n         */\n        get: function () {\n            return this._batch !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"batch\", {\n        /**\n         * The batch currently associated with this query or null\n         *\n         */\n        get: function () {\n            return this.hasBatch ? this._batch : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\n        /**\n         * Gets the parent url used when creating this instance\n         *\n         */\n        get: function () {\n            return this._parentUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"query\", {\n        /**\n         * Provides access to the query builder for this url\n         *\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new queryable\n     */\n    Queryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    Queryable.prototype.inBatch = function (batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    };\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    Queryable.prototype.usingCaching = function (options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    };\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    Queryable.prototype.toUrl = function () {\n        return this._url;\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    Queryable.prototype.toUrlAndQuery = function () {\n        var aliasedParams = new collections_1.Dictionary();\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\n            logging_1.Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, logging_1.LogLevel.Verbose);\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\n            return labelName;\n        });\n        // inlude our explicitly set query string params\n        aliasedParams.merge(this._query);\n        if (aliasedParams.count() > 0) {\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\n        }\n        return url;\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    Queryable.prototype.getParent = function (factory, baseUrl, path, batch) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        var parent = new factory(baseUrl, path);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        if (typeof batch !== \"undefined\") {\n            parent = parent.inBatch(batch);\n        }\n        return parent;\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    Queryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = false; }\n        var clone = new factory(this, additionalPath);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    Queryable.prototype.get = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.getAs = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.post = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.postAs = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.patch = function (patchOptions, parser) {\n        if (patchOptions === void 0) { patchOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"PATCH\", patchOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.delete = function (deleteOptions, parser) {\n        if (deleteOptions === void 0) { deleteOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"DELETE\", deleteOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.toRequestContext = function (verb, options, parser) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\n            // build our request context\n            var context = {\n                batch: _this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: _this._cachingOptions,\n                isBatched: _this.hasBatch,\n                isCached: _this._useCaching,\n                options: options,\n                parser: parser,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    };\n    return Queryable;\n}());\nexports.Queryable = Queryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar QueryableCollection = (function (_super) {\n    __extends(QueryableCollection, _super);\n    function QueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    QueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    QueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    QueryableCollection.prototype.skip = function (skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    QueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    return QueryableCollection;\n}(Queryable));\nexports.QueryableCollection = QueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar QueryableInstance = (function (_super) {\n    __extends(QueryableInstance, _super);\n    function QueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return QueryableInstance;\n}(Queryable));\nexports.QueryableInstance = QueryableInstance;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar logging_1 = __webpack_require__(5);\nvar httpclient_1 = __webpack_require__(15);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar exceptions_2 = __webpack_require__(3);\nfunction extractOdataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.extractOdataId = extractOdataId;\nvar ODataParserBase = (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    r.json().then(function (json) { return resolve(_this.parseODataJSON(json)); }).catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\nvar ODataDefaultParser = (function (_super) {\n    __extends(ODataDefaultParser, _super);\n    function ODataDefaultParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ODataDefaultParser;\n}(ODataParserBase));\nexports.ODataDefaultParser = ODataDefaultParser;\nvar ODataRawParserImpl = (function () {\n    function ODataRawParserImpl() {\n    }\n    ODataRawParserImpl.prototype.parse = function (r) {\n        return r.json();\n    };\n    return ODataRawParserImpl;\n}());\nexports.ODataRawParserImpl = ODataRawParserImpl;\nvar ODataValueParserImpl = (function (_super) {\n    __extends(ODataValueParserImpl, _super);\n    function ODataValueParserImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ODataValueParserImpl.prototype.parse = function (r) {\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\n    };\n    return ODataValueParserImpl;\n}(ODataParserBase));\nvar ODataEntityParserImpl = (function (_super) {\n    __extends(ODataEntityParserImpl, _super);\n    function ODataEntityParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            var o = new _this.factory(getEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    };\n    return ODataEntityParserImpl;\n}(ODataParserBase));\nvar ODataEntityArrayParserImpl = (function (_super) {\n    __extends(ODataEntityArrayParserImpl, _super);\n    function ODataEntityArrayParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityArrayParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(getEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    };\n    return ODataEntityArrayParserImpl;\n}(ODataParserBase));\nfunction getEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(\"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.getEntityUrl = getEntityUrl;\nexports.ODataRaw = new ODataRawParserImpl();\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nfunction ODataEntity(factory) {\n    return new ODataEntityParserImpl(factory);\n}\nexports.ODataEntity = ODataEntity;\nfunction ODataEntityArray(factory) {\n    return new ODataEntityArrayParserImpl(factory);\n}\nexports.ODataEntityArray = ODataEntityArray;\n/**\n * Manages a batch of OData operations\n */\nvar ODataBatch = (function () {\n    function ODataBatch(baseUrl, _batchId) {\n        if (_batchId === void 0) { _batchId = util_1.Util.getGUID(); }\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._dependencies = [];\n    }\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    ODataBatch.prototype.add = function (url, method, options, parser) {\n        var info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        var p = new Promise(function (resolve, reject) {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    };\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    ODataBatch.prototype.addDependency = function () {\n        var resolver;\n        var promise = new Promise(function (resolve) {\n            resolver = resolve;\n        });\n        this._dependencies.push(promise);\n        return resolver;\n    };\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    ODataBatch.prototype.execute = function () {\n        var _this = this;\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added after the first set resolve\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\n    };\n    ODataBatch.prototype.executeImpl = function () {\n        var _this = this;\n        logging_1.Logger.write(\"Executing batch with \" + this._requests.length + \" requests.\", logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(\"Resolving empty batch.\", logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        var client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\n            // build all the requests, send them, pipe results in order to parsers\n            var batchBody = [];\n            var currentChangeSetId = \"\";\n            _this._requests.map(function (reqInfo) {\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n                    }\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n                }\n                // common batch part prefix\n                batchBody.push(\"Content-Type: application/http\\n\");\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n                var headers = {\n                    \"Accept\": \"application/json;\",\n                };\n                // this is the url of the individual request within the batch\n                var url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(\"Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    var method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\n                    headers = util_1.Util.extend(headers, { \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\" });\n                }\n                else {\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\n                }\n                if (typeof pnplibconfig_1.RuntimeConfig.headers !== \"undefined\") {\n                    headers = util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers);\n                }\n                if (reqInfo.options && reqInfo.options.headers) {\n                    headers = util_1.Util.extend(headers, reqInfo.options.headers);\n                }\n                for (var name_1 in headers) {\n                    if (headers.hasOwnProperty(name_1)) {\n                        batchBody.push(name_1 + \": \" + headers[name_1] + \"\\n\");\n                    }\n                }\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n                }\n            });\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(\"--batch_\" + _this._batchId + \"--\\n\");\n            var batchHeaders = {\n                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this._batchId,\n            };\n            var batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n            };\n            logging_1.Logger.write(\"Sending batch request.\", logging_1.LogLevel.Info);\n            return client.post(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(function (r) { return r.text(); })\n                .then(_this._parseResponse)\n                .then(function (responses) {\n                if (responses.length !== _this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce(function (chain, response, index) {\n                    var request = _this._requests[index];\n                    logging_1.Logger.write(\"Resolving request \" + request.method + \" \" + request.url + \".\", logging_1.LogLevel.Verbose);\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\n                }, Promise.resolve());\n            });\n        });\n    };\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    ODataBatch.prototype._parseResponse = function (body) {\n        return new Promise(function (resolve, reject) {\n            var responses = [];\n            var header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            var lines = body.split(\"\\n\");\n            var state = \"batch\";\n            var status;\n            var statusText;\n            for (var i = 0; i < lines.length; ++i) {\n                var line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        var parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    };\n    return ODataBatch;\n}());\nexports.ODataBatch = ODataBatch;\nvar TextFileParser = (function () {\n    function TextFileParser() {\n    }\n    TextFileParser.prototype.parse = function (r) {\n        return r.text();\n    };\n    return TextFileParser;\n}());\nexports.TextFileParser = TextFileParser;\nvar BlobFileParser = (function () {\n    function BlobFileParser() {\n    }\n    BlobFileParser.prototype.parse = function (r) {\n        return r.blob();\n    };\n    return BlobFileParser;\n}());\nexports.BlobFileParser = BlobFileParser;\nvar JSONFileParser = (function () {\n    function JSONFileParser() {\n    }\n    JSONFileParser.prototype.parse = function (r) {\n        return r.json();\n    };\n    return JSONFileParser;\n}());\nexports.JSONFileParser = JSONFileParser;\nvar BufferFileParser = (function () {\n    function BufferFileParser() {\n    }\n    BufferFileParser.prototype.parse = function (r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    };\n    return BufferFileParser;\n}());\nexports.BufferFileParser = BufferFileParser;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = __webpack_require__(5);\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nvar ProcessHttpClientResponseException = (function (_super) {\n    __extends(ProcessHttpClientResponseException, _super);\n    function ProcessHttpClientResponseException(status, statusText, data) {\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\n        _this.status = status;\n        _this.statusText = statusText;\n        _this.data = data;\n        _this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ProcessHttpClientResponseException;\n}(Error));\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nvar NoCacheAvailableException = (function (_super) {\n    __extends(NoCacheAvailableException, _super);\n    function NoCacheAvailableException(msg) {\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NoCacheAvailableException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NoCacheAvailableException;\n}(Error));\nexports.NoCacheAvailableException = NoCacheAvailableException;\nvar APIUrlException = (function (_super) {\n    __extends(APIUrlException, _super);\n    function APIUrlException(msg) {\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return APIUrlException;\n}(Error));\nexports.APIUrlException = APIUrlException;\nvar AuthUrlException = (function (_super) {\n    __extends(AuthUrlException, _super);\n    function AuthUrlException(data, msg) {\n        if (msg === void 0) { msg = \"Auth URL Endpoint could not be determined from data. Data logged.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return AuthUrlException;\n}(Error));\nexports.AuthUrlException = AuthUrlException;\nvar NodeFetchClientUnsupportedException = (function (_super) {\n    __extends(NodeFetchClientUnsupportedException, _super);\n    function NodeFetchClientUnsupportedException(msg) {\n        if (msg === void 0) { msg = \"Using NodeFetchClient in the browser is not supported.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NodeFetchClientUnsupportedException;\n}(Error));\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nvar SPRequestExecutorUndefinedException = (function (_super) {\n    __extends(SPRequestExecutorUndefinedException, _super);\n    function SPRequestExecutorUndefinedException() {\n        var _this = this;\n        var msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        _this = _super.call(this, msg) || this;\n        _this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return SPRequestExecutorUndefinedException;\n}(Error));\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nvar MaxCommentLengthException = (function (_super) {\n    __extends(MaxCommentLengthException, _super);\n    function MaxCommentLengthException(msg) {\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"MaxCommentLengthException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return MaxCommentLengthException;\n}(Error));\nexports.MaxCommentLengthException = MaxCommentLengthException;\nvar NotSupportedInBatchException = (function (_super) {\n    __extends(NotSupportedInBatchException, _super);\n    function NotSupportedInBatchException(operation) {\n        if (operation === void 0) { operation = \"This operation\"; }\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\n        _this.name = \"NotSupportedInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NotSupportedInBatchException;\n}(Error));\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nvar ODataIdException = (function (_super) {\n    __extends(ODataIdException, _super);\n    function ODataIdException(data, msg) {\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ODataIdException;\n}(Error));\nexports.ODataIdException = ODataIdException;\nvar BatchParseException = (function (_super) {\n    __extends(BatchParseException, _super);\n    function BatchParseException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"BatchParseException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return BatchParseException;\n}(Error));\nexports.BatchParseException = BatchParseException;\nvar AlreadyInBatchException = (function (_super) {\n    __extends(AlreadyInBatchException, _super);\n    function AlreadyInBatchException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"AlreadyInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return AlreadyInBatchException;\n}(Error));\nexports.AlreadyInBatchException = AlreadyInBatchException;\nvar FunctionExpectedException = (function (_super) {\n    __extends(FunctionExpectedException, _super);\n    function FunctionExpectedException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"FunctionExpectedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return FunctionExpectedException;\n}(Error));\nexports.FunctionExpectedException = FunctionExpectedException;\nvar UrlException = (function (_super) {\n    __extends(UrlException, _super);\n    function UrlException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"UrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return UrlException;\n}(Error));\nexports.UrlException = UrlException;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fetchclient_1 = __webpack_require__(21);\nvar RuntimeConfigImpl = (function () {\n    function RuntimeConfigImpl() {\n        // these are our default values for the library\n        this._headers = null;\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 60;\n        this._globalCacheDisable = false;\n        this._fetchClientFactory = function () { return new fetchclient_1.FetchClient(); };\n        this._baseUrl = null;\n        this._spfxContext = null;\n    }\n    RuntimeConfigImpl.prototype.set = function (config) {\n        if (config.hasOwnProperty(\"headers\")) {\n            this._headers = config.headers;\n        }\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"fetchClientFactory\")) {\n            this._fetchClientFactory = config.fetchClientFactory;\n        }\n        if (config.hasOwnProperty(\"baseUrl\")) {\n            this._baseUrl = config.baseUrl;\n        }\n        if (config.hasOwnProperty(\"spFXContext\")) {\n            this._spfxContext = config.spfxContext;\n        }\n    };\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"headers\", {\n        get: function () {\n            return this._headers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\n        get: function () {\n            return this._defaultCachingStore;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\n        get: function () {\n            return this._defaultCachingTimeoutSeconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\n        get: function () {\n            return this._globalCacheDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"fetchClientFactory\", {\n        get: function () {\n            return this._fetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"baseUrl\", {\n        get: function () {\n            if (this._baseUrl !== null) {\n                return this._baseUrl;\n            }\n            else if (this._spfxContext !== null) {\n                return this._spfxContext.pageContext.web.absoluteUrl;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RuntimeConfigImpl;\n}());\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nvar _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nvar Logger = (function () {\n    function Logger() {\n    }\n    Object.defineProperty(Logger, \"activeLogLevel\", {\n        get: function () {\n            return Logger.instance.activeLogLevel;\n        },\n        set: function (value) {\n            Logger.instance.activeLogLevel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger, \"instance\", {\n        get: function () {\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n                Logger._instance = new LoggerImpl();\n            }\n            return Logger._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    Logger.subscribe = function () {\n        var listeners = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            listeners[_i] = arguments[_i];\n        }\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\n    };\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    Logger.clearSubscribers = function () {\n        return Logger.instance.clearSubscribers();\n    };\n    Object.defineProperty(Logger, \"count\", {\n        /**\n         * Gets the current subscriber count\n         */\n        get: function () {\n            return Logger.instance.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: message });\n    };\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.writeJSON = function (json, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    };\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    Logger.log = function (entry) {\n        Logger.instance.log(entry);\n    };\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    Logger.measure = function (name, f) {\n        return Logger.instance.measure(name, f);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\nvar LoggerImpl = (function () {\n    function LoggerImpl(activeLogLevel, subscribers) {\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\n        if (subscribers === void 0) { subscribers = []; }\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    LoggerImpl.prototype.subscribe = function (listener) {\n        this.subscribers.push(listener);\n    };\n    LoggerImpl.prototype.clearSubscribers = function () {\n        var s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    };\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\n        get: function () {\n            return this.subscribers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        this.log({ level: level, message: message });\n    };\n    LoggerImpl.prototype.log = function (entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\n    };\n    LoggerImpl.prototype.measure = function (name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    };\n    return LoggerImpl;\n}());\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nvar ConsoleListener = (function () {\n    function ConsoleListener() {\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    ConsoleListener.prototype.log = function (entry) {\n        var msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    };\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    ConsoleListener.prototype.format = function (entry) {\n        return \"Message: \" + entry.message + \" Data: \" + JSON.stringify(entry.data);\n    };\n    return ConsoleListener;\n}());\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nvar FunctionListener = (function () {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    function FunctionListener(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    FunctionListener.prototype.log = function (entry) {\n        this.method(entry);\n    };\n    return FunctionListener;\n}());\nexports.FunctionListener = FunctionListener;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar lists_1 = __webpack_require__(11);\nvar fields_1 = __webpack_require__(24);\nvar navigation_1 = __webpack_require__(25);\nvar sitegroups_1 = __webpack_require__(18);\nvar contenttypes_1 = __webpack_require__(16);\nvar folders_1 = __webpack_require__(9);\nvar roles_1 = __webpack_require__(17);\nvar files_1 = __webpack_require__(8);\nvar util_1 = __webpack_require__(0);\nvar lists_2 = __webpack_require__(11);\nvar siteusers_1 = __webpack_require__(30);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar features_1 = __webpack_require__(23);\nvar decorators_1 = __webpack_require__(31);\nvar queryableshareable_1 = __webpack_require__(12);\nvar relateditems_1 = __webpack_require__(46);\nvar Webs = (function (_super) {\n    __extends(Webs, _super);\n    function Webs(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webs\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The web web's description\n     * @param template The web's template\n     * @param language The language code to use for this web\n     * @param inheritPermissions If true permissions will be inherited from the partent web\n     * @param additionalSettings Will be passed as part of the web creation body\n     */\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions, additionalSettings) {\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = \"STS\"; }\n        if (language === void 0) { language = 1033; }\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var props = util_1.Util.extend({\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        }, additionalSettings);\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        return this.clone(Webs, \"add\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    };\n    return Webs;\n}(queryable_1.QueryableCollection));\nexports.Webs = Webs;\n/**\n * Describes a web\n *\n */\nvar Web = (function (_super) {\n    __extends(Web, _super);\n    function Web(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Creates a new web instance from the given url by indexing the location of the /_api/\n     * segment. If this is not found the method creates a new web with the entire string as\n     * supplied.\n     *\n     * @param url\n     */\n    Web.fromUrl = function (url, path) {\n        if (url === null) {\n            return new Web(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new Web(url.substr(0, index), path);\n        }\n        return new Web(url, path);\n    };\n    Object.defineProperty(Web.prototype, \"webs\", {\n        get: function () {\n            return new Webs(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\n        /**\n         * Get the content types available in this web\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"lists\", {\n        /**\n         * Get the lists in this web\n         *\n         */\n        get: function () {\n            return new lists_1.Lists(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"fields\", {\n        /**\n         * Gets the fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"features\", {\n        /**\n         * Gets the active features for this web\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"availablefields\", {\n        /**\n         * Gets the available fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this, \"availablefields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"navigation\", {\n        /**\n         * Get the navigation options in this web\n         *\n         */\n        get: function () {\n            return new navigation_1.Navigation(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\n        /**\n         * Gets the site users\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\n        /**\n         * Gets the site groups\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"currentUser\", {\n        /**\n         * Gets the current user\n         */\n        get: function () {\n            return new siteusers_1.CurrentUser(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"folders\", {\n        /**\n         * Get the folders in this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\n        /**\n         * Gets the collection of RoleDefinition resources.\n         *\n         */\n        get: function () {\n            return new roles_1.RoleDefinitions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\n        /**\n         * Provides an interface to manage related items\n         *\n         */\n        get: function () {\n            return relateditems_1.RelatedItemManagerImpl.FromUrl(this.toUrl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch for requests within the context of context this web\n     *\n     */\n    Web.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the web\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedownergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedmembergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedvisitorgroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get a folder by server relative url\n     *\n     * @param folderRelativeUrl the server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Get a file by server relative url\n     *\n     * @param fileRelativeUrl the server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Get a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl the server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    Web.prototype.getList = function (listRelativeUrl) {\n        return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n    };\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    Web.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                web: _this,\n            };\n        });\n    };\n    /**\n     * Delete this web\n     *\n     */\n    Web.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site.\n     *\n     * @param colorPaletteUrl Server-relative URL of the color palette file.\n     * @param fontSchemeUrl Server-relative URL of the font scheme.\n     * @param backgroundImageUrl Server-relative URL of the background image.\n     * @param shareGenerated true to store the generated theme files in the root site, or false to store them in this site.\n     */\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        var postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        return this.clone(Web, \"applytheme\", true).post({ body: postBody });\n    };\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it.\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    Web.prototype.applyWebTemplate = function (template) {\n        var q = this.clone(Web, \"applywebtemplate\", true);\n        q.concat(\"(@t)\");\n        q.query.add(\"@t\", template);\n        return q.post();\n    };\n    /**\n     * Returns whether the current user has the given set of permissions.\n     *\n     * @param perms The high and low permission range.\n     */\n    Web.prototype.doesUserHavePermissions = function (perms) {\n        var q = this.clone(Web, \"doesuserhavepermissions\", true);\n        q.concat(\"(@p)\");\n        q.query.add(\"@p\", JSON.stringify(perms));\n        return q.get();\n    };\n    /**\n     * Checks whether the specified login name belongs to a valid user in the site. If the user doesn't exist, adds the user to the site.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    Web.prototype.ensureUser = function (loginName) {\n        var postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        return this.clone(Web, \"ensureuser\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                user: new siteusers_1.SiteUser(odata_1.extractOdataId(data)),\n            };\n        });\n    };\n    /**\n     * Returns a collection of site templates available for the site.\n     *\n     * @param language The LCID of the site templates to get.\n     * @param true to include language-neutral site templates; otherwise false\n     */\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\n        if (language === void 0) { language = 1033; }\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\n        return new queryable_1.QueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n    };\n    /**\n     * Returns the list gallery on the site.\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    Web.prototype.getCatalog = function (type) {\n        return this.clone(Web, \"getcatalog(\" + type + \")\", true).select(\"Id\").get().then(function (data) {\n            return new lists_2.List(odata_1.extractOdataId(data));\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    Web.prototype.getChanges = function (query) {\n        var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        return this.clone(Web, \"getchanges\", true).post({ body: postBody });\n    };\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\n        /**\n         * Gets the custom list templates for the site.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site.\n     *\n     * @param id The ID of the user.\n     */\n    Web.prototype.getUserById = function (id) {\n        return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n    };\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file.\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string.\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1.\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    Web.prototype.mapToIcon = function (filename, size, progId) {\n        if (size === void 0) { size = 0; }\n        if (progId === void 0) { progId = \"\"; }\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\", true).get();\n    };\n    return Web;\n}(queryableshareable_1.QueryableShareableWeb));\n__decorate([\n    decorators_1.deprecated(\"This method will be removed in future releases. Please use the methods found in queryable securable.\")\n], Web.prototype, \"doesUserHavePermissions\", null);\nexports.Web = Web;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar odata_1 = __webpack_require__(2);\nvar util_1 = __webpack_require__(0);\nvar exceptions_1 = __webpack_require__(3);\nvar webparts_1 = __webpack_require__(50);\nvar items_1 = __webpack_require__(10);\nvar queryableshareable_1 = __webpack_require__(12);\nvar odata_2 = __webpack_require__(2);\n/**\n * Describes a collection of File objects\n *\n */\nvar Files = (function (_super) {\n    __extends(Files, _super);\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Files(baseUrl, path) {\n        if (path === void 0) { path = \"files\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    Files.prototype.getByName = function (name) {\n        var f = new File(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.add = function (url, content, shouldOverWrite) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\n            .post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\");\n        return adder.post().then(function () { return _this.getByName(url); }).then(function (file) { return file.setContentChunked(content, progress, chunkSize); }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\n        var _this = this;\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\")\n            .post().then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(fileUrl),\n            };\n        });\n    };\n    return Files;\n}(queryable_1.QueryableCollection));\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\n        /**\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"versions\", {\n        /**\n         * Gets a collection of versions\n         *\n         */\n        get: function () {\n            return new Versions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    File.prototype.approve = function (comment) {\n        return this.clone(File, \"approve(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    File.prototype.cancelUpload = function (uploadId) {\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).post();\n    };\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    File.prototype.checkin = function (comment, checkinType) {\n        if (comment === void 0) { comment = \"\"; }\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\", true).post();\n    };\n    /**\n     * Checks out the file from a document library.\n     */\n    File.prototype.checkout = function () {\n        return this.clone(File, \"checkout\", true).post();\n    };\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    File.prototype.copyTo = function (url, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\", true).post();\n    };\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    File.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(File, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    File.prototype.deny = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"deny(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    File.prototype.getLimitedWebPartManager = function (scope) {\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\n        return new webparts_1.LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n    };\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    File.prototype.moveTo = function (url, moveOperations) {\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\", true).post();\n    };\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    File.prototype.publish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"publish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    File.prototype.recycle = function () {\n        return this.clone(File, \"recycle\", true).post();\n    };\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    File.prototype.undoCheckout = function () {\n        return this.clone(File, \"undoCheckout\", true).post();\n    };\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    File.prototype.unpublish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Gets the contents of the file as text. Not supported in batching.\n     *\n     */\n    File.prototype.getText = function () {\n        return this.clone(File, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\n     *\n     */\n    File.prototype.getBlob = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getBuffer = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getJSON = function () {\n        return this.clone(File, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\n     *\n     * @param content The file content\n     *\n     */\n    File.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(File, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new File(_this); });\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    File.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_2.getEntityUrl(d)), d);\n        });\n    };\n    /**\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        if (typeof progress === \"undefined\") {\n            progress = function () { return null; };\n        }\n        var self = this;\n        var fileSize = file.size;\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        var uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n        var _loop_1 = function (i) {\n            chain = chain.then(function (pointer) {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        };\n        // skip the first and last blocks\n        for (var i = 2; i < blockCount; i++) {\n            _loop_1(i);\n        }\n        return chain.then(function (pointer) {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\n        }).then(function (_) {\n            return self;\n        });\n    };\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.startUpload = function (uploadId, fragment) {\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\")\n            .postAs({ body: fragment }).then(function (response) {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    };\n    return File;\n}(queryableshareable_1.QueryableShareableFile));\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nvar Versions = (function (_super) {\n    __extends(Versions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Versions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    Versions.prototype.getById = function (versionId) {\n        var v = new Version(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    Versions.prototype.deleteAll = function () {\n        return new Versions(this, \"deleteAll\").post();\n    };\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.deleteById = function (versionId) {\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\", true).post();\n    };\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.deleteByLabel = function (label) {\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    Versions.prototype.restoreByLabel = function (label) {\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    return Versions;\n}(queryable_1.QueryableCollection));\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nvar Version = (function (_super) {\n    __extends(Version, _super);\n    function Version() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Version.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return Version;\n}(queryable_1.QueryableInstance));\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar queryableshareable_1 = __webpack_require__(12);\nvar files_1 = __webpack_require__(8);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar items_1 = __webpack_require__(10);\n/**\n * Describes a collection of Folder objects\n *\n */\nvar Folders = (function (_super) {\n    __extends(Folders, _super);\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Folders(baseUrl, path) {\n        if (path === void 0) { path = \"folders\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    Folders.prototype.getByName = function (name) {\n        var f = new Folder(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    Folders.prototype.add = function (url) {\n        var _this = this;\n        return this.clone(Folders, \"add('\" + url + \"')\", true).post().then(function (response) {\n            return {\n                data: response,\n                folder: _this.getByName(url),\n            };\n        });\n    };\n    return Folders;\n}(queryable_1.QueryableCollection));\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nvar Folder = (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\n        /**\n         * Specifies the sequence in which content types are displayed.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"files\", {\n        /**\n         * Gets this folder's files\n         *\n         */\n        get: function () {\n            return new files_1.Files(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"folders\", {\n        /**\n         * Gets this folder's sub folders\n         *\n         */\n        get: function () {\n            return new Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\n        /**\n         * Gets this folder's list item field values\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\n        /**\n         * Gets the parent folder, if available\n         *\n         */\n        get: function () {\n            return new Folder(this, \"parentFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"properties\", {\n        /**\n         * Gets this folder's properties\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"properties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\n        /**\n         * Gets this folder's server relative url\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\n        /**\n         * Gets a value that specifies the content type order.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Folder\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                folder: _this,\n            };\n        });\n    };\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Folder.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(Folder, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Folder.prototype.recycle = function () {\n        return this.clone(Folder, \"recycle\", true).post();\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    Folder.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.getEntityUrl(d)), d);\n        });\n    };\n    return Folder;\n}(queryableshareable_1.QueryableShareableFolder));\nexports.Folder = Folder;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar queryableshareable_1 = __webpack_require__(12);\nvar folders_1 = __webpack_require__(9);\nvar files_1 = __webpack_require__(8);\nvar contenttypes_1 = __webpack_require__(16);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar attachmentfiles_1 = __webpack_require__(42);\nvar lists_1 = __webpack_require__(11);\n/**\n * Describes a collection of Item objects\n *\n */\nvar Items = (function (_super) {\n    __extends(Items, _super);\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Items(baseUrl, path) {\n        if (path === void 0) { path = \"items\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    Items.prototype.getById = function (id) {\n        var i = new Item(this);\n        i.concat(\"(\" + id + \")\");\n        return i;\n    };\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     */\n    Items.prototype.skip = function (skip) {\n        this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\n        return this;\n    };\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    Items.prototype.getPaged = function () {\n        return this.getAs(new PagedItemCollectionParser());\n    };\n    //\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        var removeDependency = this.addBatchDependency();\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n            var postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            var promise = _this.clone(Items, null, true).postAs({ body: postBody }).then(function (data) {\n                return {\n                    data: data,\n                    item: _this.getById(data.Id),\n                };\n            });\n            removeDependency();\n            return promise;\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List).getListItemEntityTypeFullName();\n    };\n    return Items;\n}(queryable_1.QueryableCollection));\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nvar Item = (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\n        /**\n         * Gets the set of attachments for this item\n         *\n         */\n        get: function () {\n            return new attachmentfiles_1.AttachmentFiles(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"contentType\", {\n        /**\n         * Gets the content type for this item\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentType(this, \"ContentType\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions for the item\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\n        /**\n         * Gets the effective base permissions for the item in a UI context\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\n        /**\n         * Gets the field values for this list item in their HTML representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\n        /**\n         * Gets the field values for this list item in their text representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\n        /**\n         * Gets the field values for this list item for use in editing controls\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"folder\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"folder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"file\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new files_1.File(this, \"file\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        return new Promise(function (resolve, reject) {\n            var removeDependency = _this.addBatchDependency();\n            var parentList = _this.getParent(queryable_1.QueryableInstance, _this.parentUrl.substr(0, _this.parentUrl.lastIndexOf(\"/\")));\n            parentList.select(\"ListItemEntityTypeFullName\").getAs().then(function (d) {\n                var postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": d.ListItemEntityTypeFullName },\n                }, properties));\n                removeDependency();\n                return _this.post({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then(function (data) {\n                    resolve({\n                        data: data,\n                        item: _this,\n                    });\n                });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Item.prototype.recycle = function () {\n        return this.clone(Item, \"recycle\", true).post();\n    };\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    Item.prototype.getWopiFrameUrl = function (action) {\n        if (action === void 0) { action = 0; }\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\", true);\n        i._query.add(\"@action\", action);\n        return i.post().then(function (data) {\n            return data.GetWOPIFrameUrl;\n        });\n    };\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\n        return this.clone(Item, \"validateupdatelistitem\", true).post({\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\n        });\n    };\n    return Item;\n}(queryableshareable_1.QueryableShareableItem));\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nvar PagedItemCollection = (function () {\n    function PagedItemCollection(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\n        /**\n         * If true there are more results available in the set, otherwise there are not\n         */\n        get: function () {\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    PagedItemCollection.prototype.getNext = function () {\n        if (this.hasNext) {\n            var items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(function (r) { return r(null); });\n    };\n    return PagedItemCollection;\n}());\nexports.PagedItemCollection = PagedItemCollection;\nvar PagedItemCollectionParser = (function (_super) {\n    __extends(PagedItemCollectionParser, _super);\n    function PagedItemCollectionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PagedItemCollectionParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                r.json().then(function (json) {\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\n                });\n            }\n        });\n    };\n    return PagedItemCollectionParser;\n}(odata_1.ODataParserBase));\nvar ItemUpdatedParser = (function (_super) {\n    __extends(ItemUpdatedParser, _super);\n    function ItemUpdatedParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ItemUpdatedParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    };\n    return ItemUpdatedParser;\n}(odata_1.ODataParserBase));\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar items_1 = __webpack_require__(10);\nvar views_1 = __webpack_require__(49);\nvar contenttypes_1 = __webpack_require__(16);\nvar fields_1 = __webpack_require__(24);\nvar forms_1 = __webpack_require__(43);\nvar subscriptions_1 = __webpack_require__(47);\nvar queryable_1 = __webpack_require__(1);\nvar queryablesecurable_1 = __webpack_require__(26);\nvar util_1 = __webpack_require__(0);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar exceptions_1 = __webpack_require__(3);\nvar folders_1 = __webpack_require__(9);\n/**\n * Describes a collection of List objects\n *\n */\nvar Lists = (function (_super) {\n    __extends(Lists, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Lists(baseUrl, path) {\n        if (path === void 0) { path = \"lists\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    Lists.prototype.getByTitle = function (title) {\n        return new List(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    Lists.prototype.getById = function (id) {\n        var list = new List(this);\n        list.concat(\"('\" + id + \"')\");\n        return list;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var addSettings = util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings);\n        return this.post({ body: JSON.stringify(addSettings) }).then(function (data) {\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\n        });\n    };\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise(function (resolve, reject) {\n            var addOrUpdateSettings = util_1.Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\n            list.get().then(function (_) {\n                list.update(addOrUpdateSettings).then(function (d) {\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            }).catch(function (_) {\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            });\n        });\n    };\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\n        return this.clone(Lists, \"ensuresiteassetslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    Lists.prototype.ensureSitePagesLibrary = function () {\n        return this.clone(Lists, \"ensuresitepageslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    return Lists;\n}(queryable_1.QueryableCollection));\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nvar List = (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(List.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types in this list\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"items\", {\n        /**\n         * Gets the items in this list\n         *\n         */\n        get: function () {\n            return new items_1.Items(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"views\", {\n        /**\n         * Gets the views in this list\n         *\n         */\n        get: function () {\n            return new views_1.Views(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"fields\", {\n        /**\n         * Gets the fields in this list\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"forms\", {\n        /**\n         * Gets the forms in this list\n         *\n         */\n        get: function () {\n            return new forms_1.Forms(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"defaultView\", {\n        /**\n         * Gets the default view of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"DefaultView\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\n        /**\n         * Gets the event receivers attached to this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"relatedFields\", {\n        /**\n         * Gets the related fields of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"getRelatedFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\n        /**\n         * Gets the IRM settings for this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"subscriptions\", {\n        /**\n         * Gets the webhook subscriptions of this list\n         *\n         */\n        get: function () {\n            return new subscriptions_1.Subscriptions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the list\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    List.prototype.getView = function (viewId) {\n        return new views_1.View(this, \"getView('\" + viewId + \"')\");\n    };\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    List.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retList = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    List.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    List.prototype.getChanges = function (query) {\n        return this.clone(List, \"getchanges\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\n        });\n    };\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    List.prototype.getItemsByCAMLQuery = function (query) {\n        var expands = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            expands[_i - 1] = arguments[_i];\n        }\n        var q = this.clone(List, \"getitems\", true);\n        return q.expand.apply(q, expands).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\n        });\n    };\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    List.prototype.getListItemChangesSinceToken = function (query) {\n        return this.clone(List, \"getlistitemchangessincetoken\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\n        }, { parse: function (r) { return r.text(); } });\n    };\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    List.prototype.recycle = function () {\n        return this.clone(List, \"recycle\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Renders list data based on the view xml provided\n     */\n    List.prototype.renderListData = function (viewXml) {\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return data.RenderListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\", true).post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    List.prototype.reserveListItemId = function () {\n        return this.clone(List, \"reservelistitemid\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\n     *\n     */\n    List.prototype.getListItemEntityTypeFullName = function () {\n        return this.clone(List, null).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\n    };\n    return List;\n}(queryablesecurable_1.QueryableSecurable));\nexports.List = List;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar webs_1 = __webpack_require__(7);\nvar odata_1 = __webpack_require__(2);\nvar queryable_1 = __webpack_require__(1);\nvar queryablesecurable_1 = __webpack_require__(26);\nvar types_1 = __webpack_require__(13);\n/**\n * Internal helper class used to augment classes to include sharing functionality\n */\nvar QueryableShareable = (function (_super) {\n    __extends(QueryableShareable, _super);\n    function QueryableShareable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a sharing link for the supplied\n     *\n     * @param kind The kind of link to share\n     * @param expiration The optional expiration for this link\n     */\n    QueryableShareable.prototype.getShareLink = function (kind, expiration) {\n        if (expiration === void 0) { expiration = null; }\n        // date needs to be an ISO string or null\n        var expString = expiration !== null ? expiration.toISOString() : null;\n        // clone using the factory and send the request\n        return this.clone(QueryableShareable, \"shareLink\", true).postAs({\n            body: JSON.stringify({\n                request: {\n                    createLink: true,\n                    emailData: null,\n                    settings: {\n                        expiration: expString,\n                        linkKind: kind,\n                    },\n                },\n            }),\n        });\n    };\n    /**\n     * Shares this instance with the supplied users\n     *\n     * @param loginNames Resolved login names to share\n     * @param role The role\n     * @param requireSignin True to require the user is authenticated, otherwise false\n     * @param propagateAcl True to apply this share to all children\n     * @param emailData If supplied an email will be sent with the indicated properties\n     */\n    QueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\n        var _this = this;\n        if (requireSignin === void 0) { requireSignin = true; }\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        // handle the multiple input types\n        if (!Array.isArray(loginNames)) {\n            loginNames = [loginNames];\n        }\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\n        var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n        // start by looking up the role definition id we need to set the roleValue\n        return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\n            if (!Array.isArray(def) || def.length < 1) {\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\n            }\n            var postBody = {\n                includeAnonymousLinkInEmail: requireSignin,\n                peoplePickerInput: userStr,\n                propagateAcl: propagateAcl,\n                roleValue: \"role:\" + def[0].Id,\n                useSimplifiedRoles: true,\n            };\n            if (typeof emailData !== \"undefined\") {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: emailData.body,\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? \"\" : emailData.subject,\n                    sendEmail: true,\n                });\n            }\n            return _this.clone(QueryableShareable, \"shareObject\", true).postAs({\n                body: JSON.stringify(postBody),\n            });\n        });\n    };\n    /**\n     * Shares an object based on the supplied options\n     *\n     * @param options The set of options to send to the ShareObject method\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\n     */\n    QueryableShareable.prototype.shareObject = function (options, bypass) {\n        var _this = this;\n        if (bypass === void 0) { bypass = false; }\n        if (bypass) {\n            // if the bypass flag is set send the supplied parameters directly to the service\n            return this.sendShareObjectRequest(options);\n        }\n        // extend our options with some defaults\n        options = util_1.Util.extend(options, {\n            group: null,\n            includeAnonymousLinkInEmail: false,\n            propagateAcl: false,\n            useSimplifiedRoles: true,\n        }, true);\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\n            // handle the multiple input types\n            if (!Array.isArray(options.loginNames)) {\n                options.loginNames = [options.loginNames];\n            }\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\n            var postBody = {\n                peoplePickerInput: userStr,\n                roleValue: roleValue,\n                url: options.url,\n            };\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: options.emailData.body,\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? \"Shared for you.\" : options.emailData.subject,\n                    sendEmail: true,\n                });\n            }\n            return _this.sendShareObjectRequest(postBody);\n        });\n    };\n    /**\n     * Calls the web's UnshareObject method\n     *\n     * @param url The url of the object to unshare\n     */\n    QueryableShareable.prototype.unshareObjectWeb = function (url) {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs({\n            body: JSON.stringify({\n                url: url,\n            }),\n        });\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareable.prototype.checkPermissions = function (recipients) {\n        return this.clone(QueryableShareable, \"checkPermissions\", true).postAs({\n            body: JSON.stringify({\n                recipients: recipients,\n            }),\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareable.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, \"getSharingInformation\", true).postAs({\n            body: JSON.stringify({\n                request: request,\n            }),\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, \"getObjectSharingSettings\", true).postAs({\n            body: JSON.stringify({\n                useSimplifiedRoles: useSimplifiedRoles,\n            }),\n        });\n    };\n    /**\n     * Unshares this object\n     */\n    QueryableShareable.prototype.unshareObject = function () {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs();\n    };\n    /**\n     * Deletes a link by type\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareable.prototype.deleteLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, \"deleteLinkByKind\", true).post({\n            body: JSON.stringify({ linkKind: kind }),\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareable.prototype.unshareLink = function (kind, shareId) {\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\n        return this.clone(QueryableShareable, \"unshareLink\", true).post({\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\n        });\n    };\n    /**\n     * Calculates the roleValue string used in the sharing query\n     *\n     * @param role The Sharing Role\n     * @param group The Group type\n     */\n    QueryableShareable.prototype.getRoleValue = function (role, group) {\n        // we will give group precedence, because we had to make a choice\n        if (typeof group !== \"undefined\" && group !== null) {\n            switch (group) {\n                case types_1.RoleType.Contributor:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedMemberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                case types_1.RoleType.Reader:\n                case types_1.RoleType.Guest:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedVisitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                default:\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\n            }\n        }\n        else {\n            var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n            return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\n                if (def.length < 1) {\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\n                }\n                return \"role: \" + def[0].Id;\n            });\n        }\n    };\n    QueryableShareable.prototype.getShareObjectWeb = function (candidate) {\n        return Promise.resolve(webs_1.Web.fromUrl(candidate, \"/_api/SP.Web.ShareObject\"));\n    };\n    QueryableShareable.prototype.sendShareObjectRequest = function (options) {\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(QueryableShareable).post({\n                body: JSON.stringify(options),\n            });\n        });\n    };\n    return QueryableShareable;\n}(queryable_1.Queryable));\nexports.QueryableShareable = QueryableShareable;\nvar QueryableShareableWeb = (function (_super) {\n    __extends(QueryableShareableWeb, _super);\n    function QueryableShareableWeb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this web with the supplied users\n     * @param loginNames The resolved login names to share\n     * @param role The role to share this web\n     * @param emailData Optional email data\n     */\n    QueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\n        var _this = this;\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        var dependency = this.addBatchDependency();\n        return webs_1.Web.fromUrl(this.toUrl(), \"/_api/web/url\").get().then(function (url) {\n            dependency();\n            return _this.shareObject(util_1.Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\n        });\n    };\n    /**\n     * Provides direct access to the static web.ShareObject method\n     *\n     * @param url The url to share\n     * @param loginNames Resolved loginnames string[] of a single login name string\n     * @param roleValue Role value\n     * @param emailData Optional email data\n     * @param groupId Optional group id\n     * @param propagateAcl\n     * @param includeAnonymousLinkInEmail\n     * @param useSimplifiedRoles\n     */\n    QueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).shareObject({\n            emailData: emailData,\n            group: group,\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\n            loginNames: loginNames,\n            propagateAcl: propagateAcl,\n            role: role,\n            url: url,\n            useSimplifiedRoles: useSimplifiedRoles,\n        });\n    };\n    /**\n     * Supplies a method to pass any set of arguments to ShareObject\n     *\n     * @param options The set of options to send to ShareObject\n     */\n    QueryableShareableWeb.prototype.shareObjectRaw = function (options) {\n        return this.clone(QueryableShareable, null, true).shareObject(options, true);\n    };\n    /**\n     * Unshares the object\n     *\n     * @param url The url of the object to stop sharing\n     */\n    QueryableShareableWeb.prototype.unshareObject = function (url) {\n        return this.clone(QueryableShareable, null, true).unshareObjectWeb(url);\n    };\n    return QueryableShareableWeb;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableWeb = QueryableShareableWeb;\nvar QueryableShareableItem = (function (_super) {\n    __extends(QueryableShareableItem, _super);\n    function QueryableShareableItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing for this item\n     *\n     * @param kind The type of link to share\n     * @param expiration The optional expiration date\n     */\n    QueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        return this.clone(QueryableShareable, null, true).getShareLink(kind, expiration);\n    };\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        return this.clone(QueryableShareable, null, true).shareWith(loginNames, role, requireSignin, false, emailData);\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\n        return this.clone(QueryableShareable, null, true).checkPermissions(recipients);\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareableItem.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, null, true).getSharingInformation(request);\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).getObjectSharingSettings(useSimplifiedRoles);\n    };\n    /**\n     * Unshare this item\n     */\n    QueryableShareableItem.prototype.unshare = function () {\n        return this.clone(QueryableShareable, null, true).unshareObject();\n    };\n    /**\n     * Deletes a sharing link by kind\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, null, true).deleteLinkByKind(kind);\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\n        return this.clone(QueryableShareable, null, true).unshareLink(kind, shareId);\n    };\n    return QueryableShareableItem;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableItem = QueryableShareableItem;\nvar FileFolderShared = (function (_super) {\n    __extends(FileFolderShared, _super);\n    function FileFolderShared() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing\n     *\n     * @param kind The kind of link to get\n     * @param expiration Optional, an expiration for this link\n     */\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getShareLink(kind, expiration);\n        });\n    };\n    /**\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\n         *\n         * @param recipients The array of Entities for which Permissions need to be checked.\n         */\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.checkPermissions(recipients);\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    FileFolderShared.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getSharingInformation(request);\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\n        });\n    };\n    /**\n     * Unshare this item\n     */\n    FileFolderShared.prototype.unshare = function () {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareObject();\n        });\n    };\n    /**\n     * Deletes a sharing link by the kind of link\n     *\n     * @param kind The kind of link to be deleted.\n     */\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.deleteLinkByKind(kind);\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId The share id to delete\n     */\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareLink(kind, shareId);\n        });\n    };\n    /**\n     * For files and folders we need to use the associated item end point\n     */\n    FileFolderShared.prototype.getShareable = function () {\n        var _this = this;\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\n        return this.clone(QueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\n            var shareable = new QueryableShareable(odata_1.getEntityUrl(d));\n            // we need to handle batching\n            if (_this.hasBatch) {\n                shareable = shareable.inBatch(_this.batch);\n            }\n            return shareable;\n        });\n    };\n    return FileFolderShared;\n}(queryable_1.QueryableInstance));\nexports.FileFolderShared = FileFolderShared;\nvar QueryableShareableFile = (function (_super) {\n    __extends(QueryableShareableFile, _super);\n    function QueryableShareableFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\n        });\n    };\n    return QueryableShareableFile;\n}(FileFolderShared));\nexports.QueryableShareableFile = QueryableShareableFile;\nvar QueryableShareableFolder = (function (_super) {\n    __extends(QueryableShareableFolder, _super);\n    function QueryableShareableFolder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        if (shareEverything === void 0) { shareEverything = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\n        });\n    };\n    return QueryableShareableFolder;\n}(FileFolderShared));\nexports.QueryableShareableFolder = QueryableShareableFolder;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar PermissionKind;\n(function (PermissionKind) {\n    /**\n     * Has no permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\n    /**\n     * View items in lists, documents in document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\n    /**\n     * Add items to lists, documents to document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\n    /**\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\n     * in documents, and customize Web Part Pages in document libraries.\n     */\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\n    /**\n     * Delete items from a list, documents from a document library, and Web discussion\n     * comments in documents.\n     */\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\n    /**\n     * Approve a minor version of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\n    /**\n     * View the source of documents with server-side file handlers.\n     */\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\n    /**\n     * View past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\n    /**\n     * Delete past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\n    /**\n     * Discard or check in a document which is checked out to another user.\n     */\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\n    /**\n     * Create, change, and delete personal views of lists.\n     */\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\n    /**\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\n     */\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\n    /**\n     * View forms, views, and application pages, and enumerate lists.\n     */\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\n    /**\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\n     * The list permissions in the site do not change.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\n    /**\n     * Allow users to open a Site, list, or folder to access items inside that container.\n     */\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\n    /**\n     * View pages in a Site.\n     */\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\n    /**\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\n     * a Windows SharePoint Services compatible editor.\n     */\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\n    /**\n     * Apply a theme or borders to the entire Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\n    /**\n     * Apply a style sheet (.css file) to the Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\n    /**\n     * View reports on Site usage.\n     */\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\n    /**\n     * Create a Site using Self-Service Site Creation.\n     */\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\n    /**\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\n     */\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\n    /**\n     * Create a group of users that can be used anywhere within the site collection.\n     */\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\n    /**\n     * Create and change permission levels on the Site and assign permissions to users\n     * and groups.\n     */\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\n    /**\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\n     * and WebDAV interfaces.\n     */\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\n    /**\n     * View information about users of the Site.\n     */\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\n    /**\n     * Add or remove personal Web Parts on a Web Part Page.\n     */\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\n    /**\n     * Update Web Parts to display personalized information.\n     */\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\n    /**\n     * Grant the ability to perform all administration tasks for the Site as well as\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\n     * through the object model or through the user interface (UI). When granted on the\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\n     * site collection scoped Features through the object model. To browse to the Site\n     * Collection Features page and activate or deactivate Site Collection scoped Features\n     * through the UI, you must be a Site Collection administrator.\n     */\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\n    /**\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\n    /**\n     * Use features that launch client applications. Otherwise, users must work on documents\n     * locally and upload changes.\n     */\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\n    /**\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\n     */\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\n    /**\n     * Manage alerts for all users of the Site.\n     */\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\n    /**\n     * Create e-mail alerts.\n     */\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\n    /**\n     * Allows a user to change his or her user information, such as adding a picture.\n     */\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\n    /**\n     * Enumerate permissions on Site, list, folder, document, or list item.\n     */\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\n    /**\n     * Has all permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\n})(PermissionKind = exports.PermissionKind || (exports.PermissionKind = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar RoleType;\n(function (RoleType) {\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\n})(RoleType = exports.RoleType || (exports.RoleType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\nvar SharingLinkKind;\n(function (SharingLinkKind) {\n    /**\n     * Uninitialized link\n     */\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    /**\n     * Direct link to the object being shared\n     */\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\n    /**\n     * Organization-shareable link to the object being shared with view permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\n    /**\n     * Organization-shareable link to the object being shared with edit permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\n    /**\n     * View only anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\n    /**\n     * Read/Write anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\n    /**\n     * Flexible sharing Link where properties can change without affecting link URL\n     */\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\n})(SharingLinkKind = exports.SharingLinkKind || (exports.SharingLinkKind = {}));\n;\n/**\n * Indicates the role of the sharing link\n */\nvar SharingRole;\n(function (SharingRole) {\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\n})(SharingRole = exports.SharingRole || (exports.SharingRole = {}));\nvar SharingOperationStatusCode;\n(function (SharingOperationStatusCode) {\n    /**\n     * The share operation completed without errors.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\n    /**\n     * The share operation completed and generated requests for access.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\n    /**\n     * The share operation failed as there were no resolved users.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\n    /**\n     * The share operation failed due to insufficient permissions.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\n    /**\n     * The share operation failed when attempting a cross site share, which is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\n    /**\n     * The sharing operation failed due to an unknown error.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\n    /**\n     * The text you typed is too long. Please shorten it.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\n    /**\n     * The maximum number of unique scopes in the list has been exceeded.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\n    /**\n     * The share operation failed because a sharing capability is disabled in the site.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\n    /**\n     * The specified object for the share operation is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\n    /**\n     * A SharePoint group cannot contain another SharePoint group.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\n})(SharingOperationStatusCode = exports.SharingOperationStatusCode || (exports.SharingOperationStatusCode = {}));\nvar SPSharedObjectType;\n(function (SPSharedObjectType) {\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\n})(SPSharedObjectType = exports.SPSharedObjectType || (exports.SPSharedObjectType = {}));\nvar SharingDomainRestrictionMode;\n(function (SharingDomainRestrictionMode) {\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\n})(SharingDomainRestrictionMode = exports.SharingDomainRestrictionMode || (exports.SharingDomainRestrictionMode = {}));\n;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(6);\nvar pnplibconfig_1 = __webpack_require__(4);\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nvar PnPClientStorageWrapper = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? -1 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    PnPClientStorageWrapper.prototype.get = function (key) {\n        if (!this.enabled) {\n            return null;\n        }\n        var o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        var persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    };\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    };\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    PnPClientStorageWrapper.prototype.delete = function (key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    };\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\n        var _this = this;\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise(function (resolve) {\n            var o = _this.get(key);\n            if (o == null) {\n                getter().then(function (d) {\n                    _this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    };\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    PnPClientStorageWrapper.prototype.test = function () {\n        var str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Creates the persistable to store\n     */\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\n        if (typeof expire === \"undefined\") {\n            // ensure we are by default inline with the global library setting\n            var defaultTimeout = pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = util_1.Util.dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n        return JSON.stringify({ expiration: expire, value: o });\n    };\n    return PnPClientStorageWrapper;\n}());\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nvar MemoryStorage = (function () {\n    function MemoryStorage(_store) {\n        if (_store === void 0) { _store = new collections_1.Dictionary(); }\n        this._store = _store;\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () {\n            return this._store.count();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.clear = function () {\n        this._store.clear();\n    };\n    MemoryStorage.prototype.getItem = function (key) {\n        return this._store.get(key);\n    };\n    MemoryStorage.prototype.key = function (index) {\n        return this._store.getKeys()[index];\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        this._store.remove(key);\n    };\n    MemoryStorage.prototype.setItem = function (key, data) {\n        this._store.add(key, data);\n    };\n    return MemoryStorage;\n}());\n/**\n * A class that will establish wrappers for both local and session storage\n */\nvar PnPClientStorage = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    function PnPClientStorage() {\n        this.local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n        this.session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n    }\n    return PnPClientStorage;\n}());\nexports.PnPClientStorage = PnPClientStorage;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = __webpack_require__(38);\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar HttpClient = (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        this.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n        // second we add the local options so we can overwrite the globals\n        this.mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.3\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            if (!headers.has(\"X-RequestDigest\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        this.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // grab our current delay\n                var delay = ctx.delay;\n                // Check if request was throttled - http status code 429\n                // Check is request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.mergeHeaders = function (target, source) {\n        if (typeof source !== \"undefined\" && source !== null) {\n            var temp = new Request(\"\", { headers: source });\n            temp.headers.forEach(function (value, name) {\n                target.append(name, value);\n            });\n        }\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\n;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of content types\n *\n */\nvar ContentTypes = (function (_super) {\n    __extends(ContentTypes, _super);\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n     */\n    function ContentTypes(baseUrl, path) {\n        if (path === void 0) { path = \"contenttypes\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    ContentTypes.prototype.getById = function (id) {\n        var ct = new ContentType(this);\n        ct.concat(\"('\" + id + \"')\");\n        return ct;\n    };\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return this.clone(ContentTypes, \"addAvailableContentType\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                contentType: _this.getById(data.id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (group === void 0) { group = \"Custom Content Types\"; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.post({ body: postBody }).then(function (data) {\n            return { contentType: _this.getById(data.id), data: data };\n        });\n    };\n    return ContentTypes;\n}(queryable_1.QueryableCollection));\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nvar ContentType = (function (_super) {\n    __extends(ContentType, _super);\n    function ContentType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\n        /**\n         * Gets the column (also known as field) references in the content type.\n        */\n        get: function () {\n            return new FieldLinks(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"fields\", {\n        /**\n         * Gets a value that specifies the collection of fields for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"fields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"parent\", {\n        /**\n         * Gets the parent content type of the content type.\n         */\n        get: function () {\n            return new ContentType(this, \"parent\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\n        /**\n         * Gets a value that specifies the collection of workflow associations for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this content type\n     */\n    ContentType.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ContentType;\n}(queryable_1.QueryableInstance));\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nvar FieldLinks = (function (_super) {\n    __extends(FieldLinks, _super);\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    function FieldLinks(baseUrl, path) {\n        if (path === void 0) { path = \"fieldlinks\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    FieldLinks.prototype.getById = function (id) {\n        var fl = new FieldLink(this);\n        fl.concat(\"(guid'\" + id + \"')\");\n        return fl;\n    };\n    return FieldLinks;\n}(queryable_1.QueryableCollection));\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nvar FieldLink = (function (_super) {\n    __extends(FieldLink, _super);\n    function FieldLink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldLink;\n}(queryable_1.QueryableInstance));\nexports.FieldLink = FieldLink;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar sitegroups_1 = __webpack_require__(18);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nvar RoleAssignments = (function (_super) {\n    __extends(RoleAssignments, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function RoleAssignments(baseUrl, path) {\n        if (path === void 0) { path = \"roleassignments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection.\n     *\n     * @param principalId The ID of the user or group to assign permissions to\n     * @param roleDefId The ID of the role definition that defines the permissions to assign\n     *\n     */\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The ID of the user or group in the role assignment.\n     * @param roleDefId The ID of the role definition in the role assignment\n     *\n     */\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Gets the role assignment associated with the specified principal ID from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    RoleAssignments.prototype.getById = function (id) {\n        var ra = new RoleAssignment(this);\n        ra.concat(\"(\" + id + \")\");\n        return ra;\n    };\n    return RoleAssignments;\n}(queryable_1.QueryableCollection));\nexports.RoleAssignments = RoleAssignments;\nvar RoleAssignment = (function (_super) {\n    __extends(RoleAssignment, _super);\n    function RoleAssignment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\n        /**\n         * Get the role definition bindings for this role assignment\n         *\n         */\n        get: function () {\n            return new RoleDefinitionBindings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this role assignment\n     *\n     */\n    RoleAssignment.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleAssignment;\n}(queryable_1.QueryableInstance));\nexports.RoleAssignment = RoleAssignment;\nvar RoleDefinitions = (function (_super) {\n    __extends(RoleDefinitions, _super);\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path\n     *\n     */\n    function RoleDefinitions(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the role definition with the specified ID from the collection.\n     *\n     * @param id The ID of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getById = function (id) {\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets the role definition with the specified name.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getByName = function (name) {\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n    };\n    /**\n     * Gets the role definition with the specified type.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n    };\n    /**\n     * Create a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                definition: _this.getById(data.Id),\n            };\n        });\n    };\n    return RoleDefinitions;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitions = RoleDefinitions;\nvar RoleDefinition = (function (_super) {\n    __extends(RoleDefinition, _super);\n    function RoleDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    /* tslint:disable no-string-literal */\n    RoleDefinition.prototype.update = function (properties) {\n        var _this = this;\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retDef = _this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\n                retDef = parent_1.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this role definition\n     *\n     */\n    RoleDefinition.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleDefinition;\n}(queryable_1.QueryableInstance));\nexports.RoleDefinition = RoleDefinition;\nvar RoleDefinitionBindings = (function (_super) {\n    __extends(RoleDefinitionBindings, _super);\n    function RoleDefinitionBindings(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return RoleDefinitionBindings;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar siteusers_1 = __webpack_require__(30);\nvar util_1 = __webpack_require__(0);\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site users\n *\n */\nvar SiteGroups = (function (_super) {\n    __extends(SiteGroups, _super);\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteGroups(baseUrl, path) {\n        if (path === void 0) { path = \"sitegroups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The properties to be updated\n     */\n    SiteGroups.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                group: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param email The name of the group\n     */\n    SiteGroups.prototype.getByName = function (groupName) {\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n    };\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group\n     */\n    SiteGroups.prototype.getById = function (id) {\n        var sg = new SiteGroup(this);\n        sg.concat(\"(\" + id + \")\");\n        return sg;\n    };\n    /**\n     * Removes the group with the specified member ID from the collection.\n     *\n     * @param id The id of the group to remove\n     */\n    SiteGroups.prototype.removeById = function (id) {\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\", true).post();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\", true).post();\n    };\n    return SiteGroups;\n}(queryable_1.QueryableCollection));\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nvar SiteGroup = (function (_super) {\n    __extends(SiteGroup, _super);\n    function SiteGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\n        /**\n         * Get's the users for this group\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this, \"users\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the user\n    */\n    /* tslint:disable no-string-literal */\n    SiteGroup.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retGroup = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    };\n    return SiteGroup;\n}(queryable_1.QueryableInstance));\nexports.SiteGroup = SiteGroup;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar UserCustomActions = (function (_super) {\n    __extends(UserCustomActions, _super);\n    function UserCustomActions(baseUrl, path) {\n        if (path === void 0) { path = \"usercustomactions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns the custom action with the specified identifier.\n     *\n     * @param id The GUID ID of the user custom action to get.\n     */\n    UserCustomActions.prototype.getById = function (id) {\n        var uca = new UserCustomAction(this);\n        uca.concat(\"('\" + id + \"')\");\n        return uca;\n    };\n    /**\n     * Create a custom action\n     *\n     * @param creationInfo The information which defines the new custom action\n     *\n     */\n    UserCustomActions.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                action: _this.getById(data.Id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Deletes all custom actions in the collection.\n     *\n     */\n    UserCustomActions.prototype.clear = function () {\n        return this.clone(UserCustomActions, \"clear\", true).post();\n    };\n    return UserCustomActions;\n}(queryable_1.QueryableCollection));\nexports.UserCustomActions = UserCustomActions;\nvar UserCustomAction = (function (_super) {\n    __extends(UserCustomAction, _super);\n    function UserCustomAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UserCustomAction.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                action: _this,\n                data: data,\n            };\n        });\n    };\n    /**\n    * Remove a custom action\n    *\n    */\n    UserCustomAction.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return UserCustomAction;\n}(queryable_1.QueryableInstance));\nexports.UserCustomAction = UserCustomAction;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage = __webpack_require__(14);\nvar exceptions_1 = __webpack_require__(3);\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nvar CachingConfigurationProvider = (function () {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = \"_configcache_\" + cacheKey;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\n        return this.wrappedProvider;\n    };\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\n        var _this = this;\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        var cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise(function (resolve) {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        var providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then(function (providedConfig) {\n            _this.store.put(_this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    };\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\n        var pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    };\n    return CachingConfigurationProvider;\n}());\nexports.default = CachingConfigurationProvider;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Makes requests using the fetch API\n */\nvar FetchClient = (function () {\n    function FetchClient() {\n    }\n    FetchClient.prototype.fetch = function (url, options) {\n        return global.fetch(url, options);\n    };\n    return FetchClient;\n}());\nexports.FetchClient = FetchClient;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = __webpack_require__(14);\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar CachingOptions = (function () {\n    function CachingOptions(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\n        get: function () {\n            if (this.storeName === \"local\") {\n                return CachingOptions.storage.local;\n            }\n            else {\n                return CachingOptions.storage.session;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CachingOptions;\n}());\nCachingOptions.storage = new storage_1.PnPClientStorage();\nexports.CachingOptions = CachingOptions;\nvar CachingParserWrapper = (function () {\n    function CachingParserWrapper(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    CachingParserWrapper.prototype.parse = function (response) {\n        var _this = this;\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(function (data) {\n            if (_this._cacheOptions.store !== null) {\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    };\n    return CachingParserWrapper;\n}());\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of List objects\n *\n */\nvar Features = (function (_super) {\n    __extends(Features, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Features(baseUrl, path) {\n        if (path === void 0) { path = \"features\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    Features.prototype.getById = function (id) {\n        var feature = new Feature(this);\n        feature.concat(\"('\" + id + \"')\");\n        return feature;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    Features.prototype.add = function (id, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"add\", true).post({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(function (data) {\n            return {\n                data: data,\n                feature: _this.getById(id),\n            };\n        });\n    };\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    Features.prototype.remove = function (id, force) {\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"remove\", true).post({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    };\n    return Features;\n}(queryable_1.QueryableCollection));\nexports.Features = Features;\nvar Feature = (function (_super) {\n    __extends(Feature, _super);\n    function Feature() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    Feature.prototype.deactivate = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var removeDependency = this.addBatchDependency();\n        var idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(function (feature) {\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    };\n    return Feature;\n}(queryable_1.QueryableInstance));\nexports.Feature = Feature;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar types_1 = __webpack_require__(13);\n/**\n * Describes a collection of Field objects\n *\n */\nvar Fields = (function (_super) {\n    __extends(Fields, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Fields(baseUrl, path) {\n        if (path === void 0) { path = \"fields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    Fields.prototype.getByTitle = function (title) {\n        return new Field(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param title The Id of the list\n     */\n    Fields.prototype.getById = function (id) {\n        var f = new Field(this);\n        f.concat(\"('\" + id + \"')\");\n        return f;\n    };\n    /**\n     * Creates a field based on the specified schema\n     */\n    Fields.prototype.createFieldAsXml = function (xml) {\n        var _this = this;\n        var info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        return this.clone(Fields, \"createfieldasxml\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.add = function (title, fieldType, properties) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.clone(Fields, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addText = function (title, maxLength, properties) {\n        if (maxLength === void 0) { maxLength = 255; }\n        var props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\n        if (outputType === void 0) { outputType = types_1.FieldTypes.Text; }\n        var props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.DateTimeFieldFormatType.DateOnly; }\n        if (calendarType === void 0) { calendarType = types_1.CalendarType.Gregorian; }\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\n        var props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\n        var props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\n        var props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\n        if (numberOfLines === void 0) { numberOfLines = 6; }\n        if (richText === void 0) { richText = true; }\n        if (restrictedMode === void 0) { restrictedMode = false; }\n        if (appendOnly === void 0) { appendOnly = false; }\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\n        var props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.UrlFieldFormatType.Hyperlink; }\n        var props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    };\n    return Fields;\n}(queryable_1.QueryableCollection));\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nvar Field = (function (_super) {\n    __extends(Field, _super);\n    function Field() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    Field.prototype.update = function (properties, fieldType) {\n        var _this = this;\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                field: _this,\n            };\n        });\n    };\n    /**\n     * Delete this fields\n     *\n     */\n    Field.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    Field.prototype.setShowInDisplayForm = function (show) {\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    Field.prototype.setShowInEditForm = function (show) {\n        return this.clone(Field, \"setshowineditform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    Field.prototype.setShowInNewForm = function (show) {\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\", true).post();\n    };\n    return Field;\n}(queryable_1.QueryableInstance));\nexports.Field = Field;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar queryable_1 = __webpack_require__(1);\n/**\n * Represents a collection of navigation nodes\n *\n */\nvar NavigationNodes = (function (_super) {\n    __extends(NavigationNodes, _super);\n    function NavigationNodes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    NavigationNodes.prototype.getById = function (id) {\n        var node = new NavigationNode(this);\n        node.concat(\"(\" + id + \")\");\n        return node;\n    };\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    NavigationNodes.prototype.add = function (title, url, visible) {\n        var _this = this;\n        if (visible === void 0) { visible = true; }\n        var postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        return this.clone(NavigationNodes, null, true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                node: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\n        var postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        return this.clone(NavigationNodes, \"MoveAfter\", true).post({ body: postBody });\n    };\n    return NavigationNodes;\n}(queryable_1.QueryableCollection));\nexports.NavigationNodes = NavigationNodes;\nvar NavigationNode = (function (_super) {\n    __extends(NavigationNode, _super);\n    function NavigationNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\n        /**\n         * Represents the child nodes of this node\n         */\n        get: function () {\n            return new NavigationNodes(this, \"Children\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this node based on the supplied properties\n     *\n     * @param properties The hash of key/value pairs to update\n     */\n    NavigationNode.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                node: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this node and any child nodes\n     */\n    NavigationNode.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return NavigationNode;\n}(queryable_1.QueryableInstance));\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nvar Navigation = (function (_super) {\n    __extends(Navigation, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Navigation(baseUrl, path) {\n        if (path === void 0) { path = \"navigation\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\n        /**\n         * Gets the quicklaunch navigation for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"quicklaunch\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\n        /**\n         * Gets the top bar navigation navigation for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"topnavigationbar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Navigation;\n}(queryable_1.Queryable));\nexports.Navigation = Navigation;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webs_1 = __webpack_require__(7);\nvar roles_1 = __webpack_require__(17);\nvar types_1 = __webpack_require__(13);\nvar queryable_1 = __webpack_require__(1);\nvar QueryableSecurable = (function (_super) {\n    __extends(QueryableSecurable, _super);\n    function QueryableSecurable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(QueryableSecurable.prototype, \"roleAssignments\", {\n        /**\n         * Gets the set of role assignments for this item\n         *\n         */\n        get: function () {\n            return new roles_1.RoleAssignments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\n        /**\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    QueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\n        var q = this.clone(queryable_1.Queryable, \"getUserEffectivePermissions(@user)\", true);\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.getAs();\n    };\n    /**\n     * Gets the effective permissions for the current user\n     */\n    QueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\n        var _this = this;\n        var w = webs_1.Web.fromUrl(this.toUrl());\n        return w.currentUser.select(\"LoginName\").getAs().then(function (user) {\n            return _this.getUserEffectivePermissions(user.LoginName);\n        });\n    };\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    QueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\n        return this.clone(QueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\", true).post();\n    };\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    QueryableSecurable.prototype.resetRoleInheritance = function () {\n        return this.clone(QueryableSecurable, \"resetroleinheritance\", true).post();\n    };\n    /**\n     * Determines if a given user has the appropriate permissions\n     *\n     * @param loginName The user to check\n     * @param permission The permission being checked\n     */\n    QueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\n        var _this = this;\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Determines if the current user has the requested permissions\n     *\n     * @param permission The permission we wish to check\n     */\n    QueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\n        var _this = this;\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Taken from sp.js, checks the supplied permissions against the mask\n     *\n     * @param value The security principal's permissions on the given object\n     * @param perm The permission checked against the value\n     */\n    /* tslint:disable:no-bitwise */\n    QueryableSecurable.prototype.hasPermissions = function (value, perm) {\n        if (!perm) {\n            return true;\n        }\n        if (perm === types_1.PermissionKind.FullMask) {\n            return (value.High & 32767) === 32767 && value.Low === 65535;\n        }\n        perm = perm - 1;\n        var num = 1;\n        if (perm >= 0 && perm < 32) {\n            num = num << perm;\n            return 0 !== (value.Low & num);\n        }\n        else if (perm >= 32 && perm < 64) {\n            num = num << perm - 32;\n            return 0 !== (value.High & num);\n        }\n        return false;\n    };\n    return QueryableSecurable;\n}(queryable_1.QueryableInstance));\nexports.QueryableSecurable = QueryableSecurable;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes the search API\n *\n */\nvar Search = (function (_super) {\n    __extends(Search, _super);\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    function Search(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/postquery\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    Search.prototype.execute = function (query) {\n        var formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = { results: query.SelectProperties };\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = { results: query.RefinementFilters };\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = { results: query.SortList };\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = { results: query.HithighlightedProperties };\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = { results: query.ReorderingRules };\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = { results: query.Properties };\n        }\n        var postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.post({ body: postBody }).then(function (data) { return new SearchResults(data); });\n    };\n    return Search;\n}(queryable_1.QueryableInstance));\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nvar SearchResults = (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResults(rawResponse) {\n        var response = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n        this.PrimarySearchResults = this.formatSearchResults(response.PrimaryQueryResult.RelevantResults.Table.Rows);\n        this.RawSearchResults = response;\n        this.ElapsedTime = response.ElapsedTime;\n        this.RowCount = response.PrimaryQueryResult.RelevantResults.RowCount;\n        this.TotalRows = response.PrimaryQueryResult.RelevantResults.TotalRows;\n        this.TotalRowsIncludingDuplicates = response.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n    }\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\n        var results = new Array(), tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\n            var i = tempResults_1[_i];\n            results.push(new SearchResult(i.Cells));\n        }\n        return results;\n    };\n    return SearchResults;\n}());\nexports.SearchResults = SearchResults;\n/**\n * Describes the SearchResult class\n */\nvar SearchResult = (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResult(rawItem) {\n        var item = rawItem.results ? rawItem.results : rawItem;\n        for (var _i = 0, item_1 = item; _i < item_1.length; _i++) {\n            var i = item_1[_i];\n            Object.defineProperty(this, i.Key, {\n                configurable: false,\n                enumerable: false,\n                value: i.Value,\n                writable: false,\n            });\n        }\n    }\n    return SearchResult;\n}());\nexports.SearchResult = SearchResult;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar SearchSuggest = (function (_super) {\n    __extends(SearchSuggest, _super);\n    function SearchSuggest(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/suggest\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    SearchSuggest.prototype.execute = function (query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\n    };\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    };\n    return SearchSuggest;\n}(queryable_1.QueryableInstance));\nexports.SearchSuggest = SearchSuggest;\nvar SearchSuggestResult = (function () {\n    function SearchSuggestResult(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n    return SearchSuggestResult;\n}());\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar webs_1 = __webpack_require__(7);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar features_1 = __webpack_require__(23);\n/**\n * Describes a site collection\n *\n */\nvar Site = (function (_super) {\n    __extends(Site, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Site(baseUrl, path) {\n        if (path === void 0) { path = \"_api/site\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\n        /**\n         * Gets the root web of the site collection\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this, \"rootweb\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"features\", {\n        /**\n         * Gets the active features for this site\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the context information for the site.\n     */\n    Site.prototype.getContextInfo = function () {\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.post().then(function (data) {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                var info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the site URL from a page URL.\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Creates a new batch for requests within the context of context this site\n     *\n     */\n    Site.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    return Site;\n}(queryable_1.QueryableInstance));\nexports.Site = Site;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar sitegroups_1 = __webpack_require__(18);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a collection of all site collection users\n *\n */\nvar SiteUsers = (function (_super) {\n    __extends(SiteUsers, _super);\n    /**\n     * Creates a new instance of the Users class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteUsers(baseUrl, path) {\n        if (path === void 0) { path = \"siteusers\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email of the user\n     */\n    SiteUsers.prototype.getByEmail = function (email) {\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n    };\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    SiteUsers.prototype.getById = function (id) {\n        return new SiteUser(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The email address of the user\n     */\n    SiteUsers.prototype.getByLoginName = function (loginName) {\n        var su = new SiteUser(this);\n        su.concat(\"(@v)\");\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return su;\n    };\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    SiteUsers.prototype.removeById = function (id) {\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\", true).post();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\", true);\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return o.post();\n    };\n    /**\n     * Add a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    SiteUsers.prototype.add = function (loginName) {\n        var _this = this;\n        return this.clone(SiteUsers, null, true).post({\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\n        }).then(function () { return _this.getByLoginName(loginName); });\n    };\n    return SiteUsers;\n}(queryable_1.QueryableCollection));\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nvar SiteUser = (function (_super) {\n    __extends(SiteUser, _super);\n    function SiteUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\n        /**\n         * Get's the groups for this user.\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    SiteUser.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                user: _this,\n            };\n        });\n    };\n    /**\n     * Delete this user\n     *\n     */\n    SiteUser.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return SiteUser;\n}(queryable_1.QueryableInstance));\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nvar CurrentUser = (function (_super) {\n    __extends(CurrentUser, _super);\n    function CurrentUser(baseUrl, path) {\n        if (path === void 0) { path = \"currentuser\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return CurrentUser;\n}(queryable_1.QueryableInstance));\nexports.CurrentUser = CurrentUser;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = __webpack_require__(5);\nfunction deprecated(message) {\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            logging_1.Logger.log({\n                data: {\n                    descriptor: descriptor,\n                    propertyKey: propertyKey,\n                    target: target,\n                },\n                level: logging_1.LogLevel.Warning,\n                message: message,\n            });\n            return method.apply(this, args);\n        };\n    };\n}\nexports.deprecated = deprecated;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = __webpack_require__(6);\n/**\n * Class used to manage the current application settings\n *\n */\nvar Settings = (function () {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    function Settings() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    Settings.prototype.add = function (key, value) {\n        this._settings.add(key, value);\n    };\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    Settings.prototype.addJSON = function (key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    };\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    Settings.prototype.apply = function (hash) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                _this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    Settings.prototype.load = function (provider) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            provider.getConfiguration().then(function (value) {\n                _this._settings.merge(value);\n                resolve();\n            }).catch(function (reason) {\n                reject(reason);\n            });\n        });\n    };\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    Settings.prototype.get = function (key) {\n        return this._settings.get(key);\n    };\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    Settings.prototype.getJSON = function (key) {\n        var o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    };\n    return Settings;\n}());\nexports.Settings = Settings;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search_1 = __webpack_require__(27);\nvar searchsuggest_1 = __webpack_require__(28);\nvar site_1 = __webpack_require__(29);\nvar webs_1 = __webpack_require__(7);\nvar util_1 = __webpack_require__(0);\nvar userprofiles_1 = __webpack_require__(48);\nvar exceptions_1 = __webpack_require__(3);\n/**\n * Root of the SharePoint REST module\n */\nvar Rest = (function () {\n    function Rest() {\n    }\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    Rest.prototype.searchSuggest = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(\"\").execute(finalQuery);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    Rest.prototype.search = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(\"\").execute(finalQuery);\n    };\n    Object.defineProperty(Rest.prototype, \"site\", {\n        /**\n         * Begins a site collection scoped REST request\n         *\n         */\n        get: function () {\n            return new site_1.Site(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rest.prototype, \"web\", {\n        /**\n         * Begins a web scoped REST request\n         *\n         */\n        get: function () {\n            return new webs_1.Web(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rest.prototype, \"profiles\", {\n        /**\n         * Access to user profile methods\n         *\n         */\n        get: function () {\n            return new userprofiles_1.UserProfileQuery(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch object for use with the Queryable.addToBatch method\n     *\n     */\n    Rest.prototype.createBatch = function () {\n        return this.web.createBatch();\n    };\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    Rest.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    };\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    Rest.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    };\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    Rest.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        var instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance;\n    };\n    return Rest;\n}());\nexports.Rest = Rest;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(44));\nvar httpclient_1 = __webpack_require__(15);\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = __webpack_require__(40);\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = __webpack_require__(39);\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = __webpack_require__(21);\nexports.FetchClient = fetchclient_1.FetchClient;\n__export(__webpack_require__(36));\nvar collections_1 = __webpack_require__(6);\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = __webpack_require__(0);\nexports.Util = util_1.Util;\n__export(__webpack_require__(5));\n__export(__webpack_require__(3));\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = __webpack_require__(20);\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = __webpack_require__(37);\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = __webpack_require__(20);\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nvar SPListConfigurationProvider = (function () {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle) {\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\n        /**\n         * Gets the url of the SharePoint site, where the configuration list is located\n         *\n         * @return {string} Url address of the site\n         */\n        get: function () {\n            return this.sourceWeb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\n        /**\n         * Gets the title of the SharePoint list, which contains the configuration settings\n         *\n         * @return {string} List title\n         */\n        get: function () {\n            return this.sourceListTitle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then(function (data) {\n            return data.reduce(function (configuration, item) {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    };\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    SPListConfigurationProvider.prototype.asCaching = function () {\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    };\n    return SPListConfigurationProvider;\n}());\nexports.default = SPListConfigurationProvider;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = __webpack_require__(6);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar CachedDigest = (function () {\n    function CachedDigest() {\n    }\n    return CachedDigest;\n}());\nexports.CachedDigest = CachedDigest;\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\nvar digests = new collections_1.Dictionary();\nvar DigestCache = (function () {\n    function DigestCache(_httpClient, _digests) {\n        if (_digests === void 0) { _digests = digests; }\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    DigestCache.prototype.getDigest = function (webUrl) {\n        var _this = this;\n        var cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            var now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Accept\": \"application/json;odata=verbose\",\n                \"Content-type\": \"application/json;odata=verbose;charset=utf-8\",\n            },\n            method: \"POST\",\n        }).then(function (response) {\n            var parser = new odata_1.ODataDefaultParser();\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\n        }).then(function (data) {\n            var newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            var seconds = data.FormDigestTimeoutSeconds;\n            var expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            _this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    };\n    DigestCache.prototype.clear = function () {\n        this._digests.clear();\n    };\n    return DigestCache;\n}());\nexports.DigestCache = DigestCache;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = __webpack_require__(3);\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nvar NodeFetchClient = (function () {\n    function NodeFetchClient() {\n    }\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    NodeFetchClient.prototype.fetch = function () {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    };\n    return NodeFetchClient;\n}());\nexports.NodeFetchClient = NodeFetchClient;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar exceptions_1 = __webpack_require__(3);\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nvar SPRequestExecutorClient = (function () {\n    function SPRequestExecutorClient() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = function (spResponse) {\n            var responseHeaders = new Headers();\n            for (var h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\n        var headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        return new Promise(function (resolve, reject) {\n            var requestOptions = {\n                error: function (error) {\n                    reject(_this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: function (response) {\n                    resolve(_this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n            }\n            else {\n                requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n            }\n            executor.executeAsync(requestOptions);\n        });\n    };\n    return SPRequestExecutorClient;\n}());\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar storage_1 = __webpack_require__(14);\nvar configuration_1 = __webpack_require__(33);\nvar logging_1 = __webpack_require__(5);\nvar rest_1 = __webpack_require__(34);\nvar pnplibconfig_1 = __webpack_require__(4);\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the REST interface\n */\nexports.sp = new rest_1.Rest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Expose a subset of classes from the library for public consumption\n */\n__export(__webpack_require__(35));\n// creating this class instead of directly assigning to default fixes issue #116\nvar Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar odata_1 = __webpack_require__(2);\n/**\n * Describes a collection of Item objects\n *\n */\nvar AttachmentFiles = (function (_super) {\n    __extends(AttachmentFiles, _super);\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n     */\n    function AttachmentFiles(baseUrl, path) {\n        if (path === void 0) { path = \"AttachmentFiles\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    AttachmentFiles.prototype.getByName = function (name) {\n        var f = new AttachmentFile(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new attachment to the collection. Not supported for batching.\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    AttachmentFiles.prototype.add = function (name, content) {\n        var _this = this;\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\").post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(name),\n            };\n        });\n    };\n    /**\n     * Adds mjultiple new attachment to the collection. Not supported for batching.\n     *\n     * @files name The collection of files to add\n     */\n    AttachmentFiles.prototype.addMultiple = function (files) {\n        var _this = this;\n        // add the files in series so we don't get update conflicts\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\").post({\n            body: file.content,\n        }); }); }, Promise.resolve());\n    };\n    return AttachmentFiles;\n}(queryable_1.QueryableCollection));\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nvar AttachmentFile = (function (_super) {\n    __extends(AttachmentFile, _super);\n    function AttachmentFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    AttachmentFile.prototype.getText = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.TextFileParser());\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    AttachmentFile.prototype.getBlob = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BlobFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getBuffer = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BufferFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getJSON = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.JSONFileParser());\n    };\n    /**\n     * Sets the content of a file. Not supported for batching\n     *\n     * @param content The value to set for the file contents\n     */\n    AttachmentFile.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(AttachmentFile, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new AttachmentFile(_this); });\n    };\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return AttachmentFile;\n}(queryable_1.QueryableInstance));\nexports.AttachmentFile = AttachmentFile;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of Field objects\n *\n */\nvar Forms = (function (_super) {\n    __extends(Forms, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Forms(baseUrl, path) {\n        if (path === void 0) { path = \"forms\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    Forms.prototype.getById = function (id) {\n        var i = new Form(this);\n        i.concat(\"('\" + id + \"')\");\n        return i;\n    };\n    return Forms;\n}(queryable_1.QueryableCollection));\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nvar Form = (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Form;\n}(queryable_1.QueryableInstance));\nexports.Form = Form;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(22));\nvar files_1 = __webpack_require__(8);\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nvar folders_1 = __webpack_require__(9);\nexports.Folder = folders_1.Folder;\nexports.Folders = folders_1.Folders;\nvar items_1 = __webpack_require__(10);\nexports.Item = items_1.Item;\nexports.Items = items_1.Items;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = __webpack_require__(25);\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = __webpack_require__(11);\nexports.List = lists_1.List;\nexports.Lists = lists_1.Lists;\nvar odata_1 = __webpack_require__(2);\nexports.extractOdataId = odata_1.extractOdataId;\nexports.ODataParserBase = odata_1.ODataParserBase;\nexports.ODataDefaultParser = odata_1.ODataDefaultParser;\nexports.ODataRaw = odata_1.ODataRaw;\nexports.ODataValue = odata_1.ODataValue;\nexports.ODataEntity = odata_1.ODataEntity;\nexports.ODataEntityArray = odata_1.ODataEntityArray;\nexports.TextFileParser = odata_1.TextFileParser;\nexports.BlobFileParser = odata_1.BlobFileParser;\nexports.BufferFileParser = odata_1.BufferFileParser;\nexports.JSONFileParser = odata_1.JSONFileParser;\nvar queryable_1 = __webpack_require__(1);\nexports.Queryable = queryable_1.Queryable;\nexports.QueryableInstance = queryable_1.QueryableInstance;\nexports.QueryableCollection = queryable_1.QueryableCollection;\nvar roles_1 = __webpack_require__(17);\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = __webpack_require__(27);\nexports.Search = search_1.Search;\nexports.SearchResult = search_1.SearchResult;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nvar searchsuggest_1 = __webpack_require__(28);\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = __webpack_require__(29);\nexports.Site = site_1.Site;\n__export(__webpack_require__(13));\nvar webs_1 = __webpack_require__(7);\nexports.Web = webs_1.Web;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = __webpack_require__(22);\nvar httpclient_1 = __webpack_require__(15);\nvar logging_1 = __webpack_require__(5);\nvar util_1 = __webpack_require__(0);\n/**\n * Processes a given context through the request pipeline\n *\n * @param context The request context we are processing\n */\nfunction pipe(context) {\n    // this is the beginning of the extensible pipeline in future versions\n    var pipeline = [\n        PipelineMethods.logStart,\n        PipelineMethods.caching,\n        PipelineMethods.send,\n        PipelineMethods.logEnd,\n    ];\n    return pipeline.reduce(function (chain, next) { return chain.then(function (c) { return next(c); }); }, Promise.resolve(context))\n        .then(function (ctx) { return PipelineMethods.returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            return method.apply(target, args);\n        };\n    };\n}\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request to \" + context.requestAbsoluteUrl,\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store, i.e. on node\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        return PipelineMethods.setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request.\", logging_1.LogLevel.Info);\n                resolve(p.then(function (result) { return PipelineMethods.setResult(context, result); }));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = new httpclient_1.HttpClient();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return PipelineMethods.setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request to \" + context.requestAbsoluteUrl,\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * At the end of the pipeline resolves the request's result\n     */\n    PipelineMethods.returnResult = function (context) {\n        logging_1.Logger.log({\n            data: context.result,\n            level: logging_1.LogLevel.Verbose,\n            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning, see data property for value.\",\n        });\n        return Promise.resolve(context.result);\n    };\n    /**\n     * Sets the result on the context\n     */\n    PipelineMethods.setResult = function (context, value) {\n        return new Promise(function (resolve) {\n            context.result = value;\n            context.hasResult = true;\n            resolve(context);\n        });\n    };\n    return PipelineMethods;\n}());\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logStart\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"caching\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"send\", null);\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logEnd\", null);\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"returnResult\", null);\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar RelatedItemManagerImpl = (function (_super) {\n    __extends(RelatedItemManagerImpl, _super);\n    function RelatedItemManagerImpl(baseUrl, path) {\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    RelatedItemManagerImpl.FromUrl = function (url) {\n        if (url === null) {\n            return new RelatedItemManagerImpl(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new RelatedItemManagerImpl(url.substr(0, index));\n        }\n        return new RelatedItemManagerImpl(url);\n    };\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetPageOneRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemID,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\n     *\n     * @param sourceListName The source list name or list id\n     * @param sourceItemId The source item id\n     * @param targetItemUrl The target item url\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkToUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                TargetItemUrl: targetItemUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\n     *\n     * @param sourceItemUrl The source item url\n     * @param targetListName The target list name or list id\n     * @param targetItemId The target item id\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkFromUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemUrl: sourceItemUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".DeleteSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryDeleteReverseLink: tryDeleteReverseLink,\n            }),\n        });\n    };\n    return RelatedItemManagerImpl;\n}(queryable_1.Queryable));\nexports.RelatedItemManagerImpl = RelatedItemManagerImpl;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nvar Subscriptions = (function (_super) {\n    __extends(Subscriptions, _super);\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n     */\n    function Subscriptions(baseUrl, path) {\n        if (path === void 0) { path = \"subscriptions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     */\n    Subscriptions.prototype.getById = function (subscriptionId) {\n        var subscription = new Subscription(this);\n        subscription.concat(\"('\" + subscriptionId + \"')\");\n        return subscription;\n    };\n    /**\n     * Create a new webhook subscription\n     *\n     */\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.post({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n            return { data: result, subscription: _this.getById(result.id) };\n        });\n    };\n    return Subscriptions;\n}(queryable_1.QueryableCollection));\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Update a webhook subscription\n     *\n     */\n    Subscription.prototype.update = function (expirationDate) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patch({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n            return { data: data, subscription: _this };\n        });\n    };\n    /**\n     * Remove a webhook subscription\n     *\n     */\n    Subscription.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return Subscription;\n}(queryable_1.QueryableInstance));\nexports.Subscription = Subscription;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar files_1 = __webpack_require__(51);\nvar odata_1 = __webpack_require__(2);\nvar UserProfileQuery = (function (_super) {\n    __extends(UserProfileQuery, _super);\n    function UserProfileQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\n        var _this = _super.call(this, baseUrl, path) || this;\n        _this.profileLoader = new ProfileLoader(baseUrl);\n        return _this;\n    }\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\n        /**\n         * The URL of the edit profile page for the current user.\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\n        /**\n         * A Boolean value that indicates whether the current user's People I'm Following list is public.\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * A Boolean value that indicates whether the current user's People I'm Following list is public.\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Checks whether the current user is following the specified user.\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets tags that the user is following.\n     *\n     * @param maxCount The maximum number of tags to get.\n     */\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\n        if (maxCount === void 0) { maxCount = 20; }\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\", true).get();\n    };\n    /**\n     * Gets the people who are following the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\n        /**\n         * Gets the people who are following the current user.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\n        /**\n         * Gets user properties for the current user.\n         *\n         */\n        get: function () {\n            return new UserProfileQuery(this, \"getmyproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the people who the specified user is following.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\n        /**\n         * Gets the most popular tags.\n         *\n         */\n        get: function () {\n            var q = this.clone(UserProfileQuery, null, true);\n            q.concat(\".gettrendingtags\");\n            return q.get();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the specified user profile property for the specified user.\n     *\n     * @param loginName The account name of the user.\n     * @param propertyName The case-sensitive name of the property to get.\n     */\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Removes the specified user from the user's list of suggested people to follow.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.post();\n    };\n    /**\n     * Checks whether the first user is following the second user.\n     *\n     * @param follower The account name of the user who might be following followee.\n     * @param followee The account name of the user who might be followed.\n     */\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\n        var q = this.clone(UserProfileQuery, null, true);\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    };\n    /**\n     * Uploads and sets the user profile picture. Not supported for batching.\n     *\n     * @param profilePicSource Blob data representing the user's picture\n     */\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            files_1.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\n                request.post({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(function (_) { return resolve(); });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\n        var emails = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            emails[_i] = arguments[_i];\n        }\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            return this.profileLoader.ownerUserProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile that corresponds to the current user.\n         */\n        get: function () {\n            return this.profileLoader.userProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    };\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\n        return this.profileLoader.shareAllSocialData(share);\n    };\n    return UserProfileQuery;\n}(queryable_1.QueryableInstance));\nexports.UserProfileQuery = UserProfileQuery;\nvar ProfileLoader = (function (_super) {\n    __extends(ProfileLoader, _super);\n    function ProfileLoader(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\").post({\n            body: JSON.stringify({ \"emailIDs\": emails }),\n        });\n    };\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n            if (this.hasBatch) {\n                q = q.inBatch(this.batch);\n            }\n            return q.postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile that corresponds to the current user.\n         *\n         */\n        get: function () {\n            return this.clone(ProfileLoader, \"getuserprofile\", true).postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\", true).post();\n    };\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\", true).post();\n    };\n    return ProfileLoader;\n}(queryable_1.Queryable));\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes the views available in the current context\n *\n */\nvar Views = (function (_super) {\n    __extends(Views, _super);\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Views(baseUrl, path) {\n        if (path === void 0) { path = \"views\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    Views.prototype.getById = function (id) {\n        var v = new View(this);\n        v.concat(\"('\" + id + \"')\");\n        return v;\n    };\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    Views.prototype.getByTitle = function (title) {\n        return new View(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    /*tslint:disable max-line-length */\n    Views.prototype.add = function (title, personalView, additionalSettings) {\n        var _this = this;\n        if (personalView === void 0) { personalView = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.clone(Views, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                view: _this.getById(data.Id),\n            };\n        });\n    };\n    return Views;\n}(queryable_1.QueryableCollection));\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(View.prototype, \"fields\", {\n        get: function () {\n            return new ViewFields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    View.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                view: _this,\n            };\n        });\n    };\n    /**\n     * Delete this view\n     *\n     */\n    View.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    View.prototype.renderAsHtml = function () {\n        return this.clone(queryable_1.Queryable, \"renderashtml\", true).get();\n    };\n    return View;\n}(queryable_1.QueryableInstance));\nexports.View = View;\nvar ViewFields = (function (_super) {\n    __extends(ViewFields, _super);\n    function ViewFields(baseUrl, path) {\n        if (path === void 0) { path = \"viewfields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    ViewFields.prototype.getSchemaXml = function () {\n        return this.clone(queryable_1.Queryable, \"schemaxml\", true).get();\n    };\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\", true).post();\n    };\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    ViewFields.prototype.move = function (fieldInternalName, index) {\n        return this.clone(ViewFields, \"moveviewfieldto\", true).post({\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\n        });\n    };\n    /**\n     * Removes all the fields from the collection.\n     */\n    ViewFields.prototype.removeAll = function () {\n        return this.clone(ViewFields, \"removeallviewfields\", true).post();\n    };\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    ViewFields.prototype.remove = function (fieldInternalName) {\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\", true).post();\n    };\n    return ViewFields;\n}(queryable_1.QueryableCollection));\nexports.ViewFields = ViewFields;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar LimitedWebPartManager = (function (_super) {\n    __extends(LimitedWebPartManager, _super);\n    function LimitedWebPartManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\n        /**\n         * Gets the set of web part definitions contained by this web part manager\n         *\n         */\n        get: function () {\n            return new WebPartDefinitions(this, \"webparts\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    LimitedWebPartManager.prototype.export = function (id) {\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\", true).post({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    };\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    LimitedWebPartManager.prototype.import = function (xml) {\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\", true).post({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    };\n    return LimitedWebPartManager;\n}(queryable_1.Queryable));\nexports.LimitedWebPartManager = LimitedWebPartManager;\nvar WebPartDefinitions = (function (_super) {\n    __extends(WebPartDefinitions, _super);\n    function WebPartDefinitions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id GUID id of the web part definition to get\n     */\n    WebPartDefinitions.prototype.getById = function (id) {\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\n    };\n    return WebPartDefinitions;\n}(queryable_1.QueryableCollection));\nexports.WebPartDefinitions = WebPartDefinitions;\nvar WebPartDefinition = (function (_super) {\n    __extends(WebPartDefinition, _super);\n    function WebPartDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\n        /**\n         * Gets the webpart information associated with this definition\n         */\n        get: function () {\n            return new WebPart(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    WebPartDefinition.prototype.delete = function () {\n        return this.clone(WebPartDefinition, \"DeleteWebPart\", true).post();\n    };\n    return WebPartDefinition;\n}(queryable_1.QueryableInstance));\nexports.WebPartDefinition = WebPartDefinition;\nvar WebPart = (function (_super) {\n    __extends(WebPart, _super);\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    function WebPart(baseUrl, path) {\n        if (path === void 0) { path = \"webpart\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return WebPart;\n}(queryable_1.QueryableInstance));\nexports.WebPart = WebPart;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// pnp.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b98ccbee4ca34fcaf622","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar decorators_1 = require(\"./decorators\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar Util = (function () {\n    function Util() {\n    }\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    Util.getCtxCallback = function (context, method) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function () {\n            method.apply(context, params);\n        };\n    };\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    Util.urlParamExists = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    };\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    Util.getUrlParamByName = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        var results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    Util.getUrlParamBoolByName = function (name) {\n        var p = this.getUrlParamByName(name);\n        var isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    };\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    Util.stringInsert = function (target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    };\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    Util.dateAdd = function (date, interval, units) {\n        var ret = new Date(date.toLocaleString()); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    };\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    Util.loadStylesheet = function (path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        var head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            var e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    };\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    Util.combinePaths = function () {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        return paths\n            .filter(function (path) { return typeof path !== \"undefined\" && path !== null; })\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    };\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    Util.getRandomString = function (chars) {\n        var text = new Array(chars);\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    };\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    Util.getGUID = function () {\n        var d = new Date().getTime();\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    Util.isFunction = function (candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    Util.isArray = function (array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    };\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    Util.stringIsNullOrEmpty = function (s) {\n        return typeof s === \"undefined\" || s === null || s === \"\";\n    };\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    Util.extend = function (target, source, noOverwrite) {\n        if (noOverwrite === void 0) { noOverwrite = false; }\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\n        return Object.getOwnPropertyNames(source)\n            .filter(function (v) { return check(target, v); })\n            .reduce(function (t, v) {\n            t[v] = source[v];\n            return t;\n        }, target);\n    };\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    Util.isUrlAbsolute = function (url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    };\n    /**\n     * Attempts to make the supplied relative url absolute based on the _spPageContextInfo object, if available\n     *\n     * @param url The relative url to make absolute\n     */\n    Util.makeUrlAbsolute = function (url) {\n        if (Util.isUrlAbsolute(url)) {\n            return url;\n        }\n        if (typeof global._spPageContextInfo !== \"undefined\") {\n            if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                return Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, url);\n            }\n            else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                return Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, url);\n            }\n        }\n        else {\n            return url;\n        }\n    };\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    Util.toAbsoluteUrl = function (candidateUrl) {\n        return new Promise(function (resolve) {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.baseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.baseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have _layouts in it?\n            if (typeof global.location !== \"undefined\") {\n                var index = global.location.toString().toLowerCase().indexOf(\"/_layouts/\");\n                if (index > 0) {\n                    // we are likely in the workbench in /_layouts/\n                    return resolve(Util.combinePaths(global.location.toString().substr(0, index), candidateUrl));\n                }\n            }\n            return resolve(candidateUrl);\n        });\n    };\n    return Util;\n}());\n__decorate([\n    decorators_1.deprecated(\"The Util.makeUrlAbsolute method is deprecated and will be removed from future releases. Use Util.toAbsoluteUrl instead\")\n], Util, \"makeUrlAbsolute\", null);\nexports.Util = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar collections_1 = require(\"../collections/collections\");\nvar odata_1 = require(\"./odata\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar queryablerequest_1 = require(\"./queryablerequest\");\nvar logging_1 = require(\"../utils/logging\");\n/**\n * Queryable Base Class\n *\n */\nvar Queryable = (function () {\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    function Queryable(baseUrl, path) {\n        this._query = new collections_1.Dictionary();\n        this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            var urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                this._parentUrl = urlStr;\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                var index = urlStr.lastIndexOf(\"/\");\n                this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                var index = urlStr.lastIndexOf(\"(\");\n                this._parentUrl = urlStr.slice(0, index);\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            var q = baseUrl;\n            this._parentUrl = q._url;\n            var target = q._query.get(\"@target\");\n            if (target !== null) {\n                this._query.add(\"@target\", target);\n            }\n            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n        }\n    }\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    Queryable.prototype.concat = function (pathPart) {\n        this._url += pathPart;\n    };\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    Queryable.prototype.append = function (pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    };\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    Queryable.prototype.addBatchDependency = function () {\n        if (this.hasBatch) {\n            return this._batch.addDependency();\n        }\n        return function () { return null; };\n    };\n    Object.defineProperty(Queryable.prototype, \"hasBatch\", {\n        /**\n         * Indicates if the current query has a batch associated\n         *\n         */\n        get: function () {\n            return this._batch !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"batch\", {\n        /**\n         * The batch currently associated with this query or null\n         *\n         */\n        get: function () {\n            return this.hasBatch ? this._batch : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\n        /**\n         * Gets the parent url used when creating this instance\n         *\n         */\n        get: function () {\n            return this._parentUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"query\", {\n        /**\n         * Provides access to the query builder for this url\n         *\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new queryable\n     */\n    Queryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    Queryable.prototype.inBatch = function (batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    };\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    Queryable.prototype.usingCaching = function (options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    };\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    Queryable.prototype.toUrl = function () {\n        return this._url;\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    Queryable.prototype.toUrlAndQuery = function () {\n        var aliasedParams = new collections_1.Dictionary();\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\n            logging_1.Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, logging_1.LogLevel.Verbose);\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\n            return labelName;\n        });\n        // inlude our explicitly set query string params\n        aliasedParams.merge(this._query);\n        if (aliasedParams.count() > 0) {\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\n        }\n        return url;\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    Queryable.prototype.getParent = function (factory, baseUrl, path, batch) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        var parent = new factory(baseUrl, path);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        if (typeof batch !== \"undefined\") {\n            parent = parent.inBatch(batch);\n        }\n        return parent;\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    Queryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = false; }\n        var clone = new factory(this, additionalPath);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    Queryable.prototype.get = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.getAs = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.post = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.postAs = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.patch = function (patchOptions, parser) {\n        if (patchOptions === void 0) { patchOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"PATCH\", patchOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.delete = function (deleteOptions, parser) {\n        if (deleteOptions === void 0) { deleteOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"DELETE\", deleteOptions, parser).then(function (context) { return queryablerequest_1.pipe(context); });\n    };\n    Queryable.prototype.toRequestContext = function (verb, options, parser) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\n            // build our request context\n            var context = {\n                batch: _this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: _this._cachingOptions,\n                isBatched: _this.hasBatch,\n                isCached: _this._useCaching,\n                options: options,\n                parser: parser,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    };\n    return Queryable;\n}());\nexports.Queryable = Queryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar QueryableCollection = (function (_super) {\n    __extends(QueryableCollection, _super);\n    function QueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    QueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    QueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    QueryableCollection.prototype.skip = function (skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    QueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    return QueryableCollection;\n}(Queryable));\nexports.QueryableCollection = QueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar QueryableInstance = (function (_super) {\n    __extends(QueryableInstance, _super);\n    function QueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return QueryableInstance;\n}(Queryable));\nexports.QueryableInstance = QueryableInstance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryable.js\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar logging_1 = require(\"../utils/logging\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar exceptions_2 = require(\"../utils/exceptions\");\nfunction extractOdataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.extractOdataId = extractOdataId;\nvar ODataParserBase = (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    r.json().then(function (json) { return resolve(_this.parseODataJSON(json)); }).catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\nvar ODataDefaultParser = (function (_super) {\n    __extends(ODataDefaultParser, _super);\n    function ODataDefaultParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ODataDefaultParser;\n}(ODataParserBase));\nexports.ODataDefaultParser = ODataDefaultParser;\nvar ODataRawParserImpl = (function () {\n    function ODataRawParserImpl() {\n    }\n    ODataRawParserImpl.prototype.parse = function (r) {\n        return r.json();\n    };\n    return ODataRawParserImpl;\n}());\nexports.ODataRawParserImpl = ODataRawParserImpl;\nvar ODataValueParserImpl = (function (_super) {\n    __extends(ODataValueParserImpl, _super);\n    function ODataValueParserImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ODataValueParserImpl.prototype.parse = function (r) {\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\n    };\n    return ODataValueParserImpl;\n}(ODataParserBase));\nvar ODataEntityParserImpl = (function (_super) {\n    __extends(ODataEntityParserImpl, _super);\n    function ODataEntityParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            var o = new _this.factory(getEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    };\n    return ODataEntityParserImpl;\n}(ODataParserBase));\nvar ODataEntityArrayParserImpl = (function (_super) {\n    __extends(ODataEntityArrayParserImpl, _super);\n    function ODataEntityArrayParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityArrayParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(getEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    };\n    return ODataEntityArrayParserImpl;\n}(ODataParserBase));\nfunction getEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(\"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.getEntityUrl = getEntityUrl;\nexports.ODataRaw = new ODataRawParserImpl();\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nfunction ODataEntity(factory) {\n    return new ODataEntityParserImpl(factory);\n}\nexports.ODataEntity = ODataEntity;\nfunction ODataEntityArray(factory) {\n    return new ODataEntityArrayParserImpl(factory);\n}\nexports.ODataEntityArray = ODataEntityArray;\n/**\n * Manages a batch of OData operations\n */\nvar ODataBatch = (function () {\n    function ODataBatch(baseUrl, _batchId) {\n        if (_batchId === void 0) { _batchId = util_1.Util.getGUID(); }\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._dependencies = [];\n    }\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    ODataBatch.prototype.add = function (url, method, options, parser) {\n        var info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        var p = new Promise(function (resolve, reject) {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    };\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    ODataBatch.prototype.addDependency = function () {\n        var resolver;\n        var promise = new Promise(function (resolve) {\n            resolver = resolve;\n        });\n        this._dependencies.push(promise);\n        return resolver;\n    };\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    ODataBatch.prototype.execute = function () {\n        var _this = this;\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added after the first set resolve\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\n    };\n    ODataBatch.prototype.executeImpl = function () {\n        var _this = this;\n        logging_1.Logger.write(\"Executing batch with \" + this._requests.length + \" requests.\", logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(\"Resolving empty batch.\", logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        var client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\n            // build all the requests, send them, pipe results in order to parsers\n            var batchBody = [];\n            var currentChangeSetId = \"\";\n            _this._requests.map(function (reqInfo) {\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n                    }\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n                }\n                // common batch part prefix\n                batchBody.push(\"Content-Type: application/http\\n\");\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n                var headers = {\n                    \"Accept\": \"application/json;\",\n                };\n                // this is the url of the individual request within the batch\n                var url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(\"Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    var method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\n                    headers = util_1.Util.extend(headers, { \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\" });\n                }\n                else {\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\n                }\n                if (typeof pnplibconfig_1.RuntimeConfig.headers !== \"undefined\") {\n                    headers = util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers);\n                }\n                if (reqInfo.options && reqInfo.options.headers) {\n                    headers = util_1.Util.extend(headers, reqInfo.options.headers);\n                }\n                for (var name_1 in headers) {\n                    if (headers.hasOwnProperty(name_1)) {\n                        batchBody.push(name_1 + \": \" + headers[name_1] + \"\\n\");\n                    }\n                }\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n                }\n            });\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(\"--batch_\" + _this._batchId + \"--\\n\");\n            var batchHeaders = {\n                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this._batchId,\n            };\n            var batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n            };\n            logging_1.Logger.write(\"Sending batch request.\", logging_1.LogLevel.Info);\n            return client.post(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(function (r) { return r.text(); })\n                .then(_this._parseResponse)\n                .then(function (responses) {\n                if (responses.length !== _this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce(function (chain, response, index) {\n                    var request = _this._requests[index];\n                    logging_1.Logger.write(\"Resolving request \" + request.method + \" \" + request.url + \".\", logging_1.LogLevel.Verbose);\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\n                }, Promise.resolve());\n            });\n        });\n    };\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    ODataBatch.prototype._parseResponse = function (body) {\n        return new Promise(function (resolve, reject) {\n            var responses = [];\n            var header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            var lines = body.split(\"\\n\");\n            var state = \"batch\";\n            var status;\n            var statusText;\n            for (var i = 0; i < lines.length; ++i) {\n                var line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        var parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    };\n    return ODataBatch;\n}());\nexports.ODataBatch = ODataBatch;\nvar TextFileParser = (function () {\n    function TextFileParser() {\n    }\n    TextFileParser.prototype.parse = function (r) {\n        return r.text();\n    };\n    return TextFileParser;\n}());\nexports.TextFileParser = TextFileParser;\nvar BlobFileParser = (function () {\n    function BlobFileParser() {\n    }\n    BlobFileParser.prototype.parse = function (r) {\n        return r.blob();\n    };\n    return BlobFileParser;\n}());\nexports.BlobFileParser = BlobFileParser;\nvar JSONFileParser = (function () {\n    function JSONFileParser() {\n    }\n    JSONFileParser.prototype.parse = function (r) {\n        return r.json();\n    };\n    return JSONFileParser;\n}());\nexports.JSONFileParser = JSONFileParser;\nvar BufferFileParser = (function () {\n    function BufferFileParser() {\n    }\n    BufferFileParser.prototype.parse = function (r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    };\n    return BufferFileParser;\n}());\nexports.BufferFileParser = BufferFileParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/odata.js\n// module id = 2\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = require(\"../utils/logging\");\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nvar ProcessHttpClientResponseException = (function (_super) {\n    __extends(ProcessHttpClientResponseException, _super);\n    function ProcessHttpClientResponseException(status, statusText, data) {\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\n        _this.status = status;\n        _this.statusText = statusText;\n        _this.data = data;\n        _this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ProcessHttpClientResponseException;\n}(Error));\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nvar NoCacheAvailableException = (function (_super) {\n    __extends(NoCacheAvailableException, _super);\n    function NoCacheAvailableException(msg) {\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NoCacheAvailableException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NoCacheAvailableException;\n}(Error));\nexports.NoCacheAvailableException = NoCacheAvailableException;\nvar APIUrlException = (function (_super) {\n    __extends(APIUrlException, _super);\n    function APIUrlException(msg) {\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return APIUrlException;\n}(Error));\nexports.APIUrlException = APIUrlException;\nvar AuthUrlException = (function (_super) {\n    __extends(AuthUrlException, _super);\n    function AuthUrlException(data, msg) {\n        if (msg === void 0) { msg = \"Auth URL Endpoint could not be determined from data. Data logged.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return AuthUrlException;\n}(Error));\nexports.AuthUrlException = AuthUrlException;\nvar NodeFetchClientUnsupportedException = (function (_super) {\n    __extends(NodeFetchClientUnsupportedException, _super);\n    function NodeFetchClientUnsupportedException(msg) {\n        if (msg === void 0) { msg = \"Using NodeFetchClient in the browser is not supported.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NodeFetchClientUnsupportedException;\n}(Error));\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nvar SPRequestExecutorUndefinedException = (function (_super) {\n    __extends(SPRequestExecutorUndefinedException, _super);\n    function SPRequestExecutorUndefinedException() {\n        var _this = this;\n        var msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        _this = _super.call(this, msg) || this;\n        _this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return SPRequestExecutorUndefinedException;\n}(Error));\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nvar MaxCommentLengthException = (function (_super) {\n    __extends(MaxCommentLengthException, _super);\n    function MaxCommentLengthException(msg) {\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"MaxCommentLengthException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return MaxCommentLengthException;\n}(Error));\nexports.MaxCommentLengthException = MaxCommentLengthException;\nvar NotSupportedInBatchException = (function (_super) {\n    __extends(NotSupportedInBatchException, _super);\n    function NotSupportedInBatchException(operation) {\n        if (operation === void 0) { operation = \"This operation\"; }\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\n        _this.name = \"NotSupportedInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NotSupportedInBatchException;\n}(Error));\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nvar ODataIdException = (function (_super) {\n    __extends(ODataIdException, _super);\n    function ODataIdException(data, msg) {\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ODataIdException;\n}(Error));\nexports.ODataIdException = ODataIdException;\nvar BatchParseException = (function (_super) {\n    __extends(BatchParseException, _super);\n    function BatchParseException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"BatchParseException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return BatchParseException;\n}(Error));\nexports.BatchParseException = BatchParseException;\nvar AlreadyInBatchException = (function (_super) {\n    __extends(AlreadyInBatchException, _super);\n    function AlreadyInBatchException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"AlreadyInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return AlreadyInBatchException;\n}(Error));\nexports.AlreadyInBatchException = AlreadyInBatchException;\nvar FunctionExpectedException = (function (_super) {\n    __extends(FunctionExpectedException, _super);\n    function FunctionExpectedException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"FunctionExpectedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return FunctionExpectedException;\n}(Error));\nexports.FunctionExpectedException = FunctionExpectedException;\nvar UrlException = (function (_super) {\n    __extends(UrlException, _super);\n    function UrlException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"UrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return UrlException;\n}(Error));\nexports.UrlException = UrlException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/exceptions.js\n// module id = 3\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fetchclient_1 = require(\"../net/fetchclient\");\nvar RuntimeConfigImpl = (function () {\n    function RuntimeConfigImpl() {\n        // these are our default values for the library\n        this._headers = null;\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 60;\n        this._globalCacheDisable = false;\n        this._fetchClientFactory = function () { return new fetchclient_1.FetchClient(); };\n        this._baseUrl = null;\n        this._spfxContext = null;\n    }\n    RuntimeConfigImpl.prototype.set = function (config) {\n        if (config.hasOwnProperty(\"headers\")) {\n            this._headers = config.headers;\n        }\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"fetchClientFactory\")) {\n            this._fetchClientFactory = config.fetchClientFactory;\n        }\n        if (config.hasOwnProperty(\"baseUrl\")) {\n            this._baseUrl = config.baseUrl;\n        }\n        if (config.hasOwnProperty(\"spFXContext\")) {\n            this._spfxContext = config.spfxContext;\n        }\n    };\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"headers\", {\n        get: function () {\n            return this._headers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\n        get: function () {\n            return this._defaultCachingStore;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\n        get: function () {\n            return this._defaultCachingTimeoutSeconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\n        get: function () {\n            return this._globalCacheDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"fetchClientFactory\", {\n        get: function () {\n            return this._fetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"baseUrl\", {\n        get: function () {\n            if (this._baseUrl !== null) {\n                return this._baseUrl;\n            }\n            else if (this._spfxContext !== null) {\n                return this._spfxContext.pageContext.web.absoluteUrl;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RuntimeConfigImpl;\n}());\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nvar _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/pnplibconfig.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nvar Logger = (function () {\n    function Logger() {\n    }\n    Object.defineProperty(Logger, \"activeLogLevel\", {\n        get: function () {\n            return Logger.instance.activeLogLevel;\n        },\n        set: function (value) {\n            Logger.instance.activeLogLevel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger, \"instance\", {\n        get: function () {\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n                Logger._instance = new LoggerImpl();\n            }\n            return Logger._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    Logger.subscribe = function () {\n        var listeners = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            listeners[_i] = arguments[_i];\n        }\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\n    };\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    Logger.clearSubscribers = function () {\n        return Logger.instance.clearSubscribers();\n    };\n    Object.defineProperty(Logger, \"count\", {\n        /**\n         * Gets the current subscriber count\n         */\n        get: function () {\n            return Logger.instance.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: message });\n    };\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.writeJSON = function (json, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    };\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    Logger.log = function (entry) {\n        Logger.instance.log(entry);\n    };\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    Logger.measure = function (name, f) {\n        return Logger.instance.measure(name, f);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\nvar LoggerImpl = (function () {\n    function LoggerImpl(activeLogLevel, subscribers) {\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\n        if (subscribers === void 0) { subscribers = []; }\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    LoggerImpl.prototype.subscribe = function (listener) {\n        this.subscribers.push(listener);\n    };\n    LoggerImpl.prototype.clearSubscribers = function () {\n        var s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    };\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\n        get: function () {\n            return this.subscribers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        this.log({ level: level, message: message });\n    };\n    LoggerImpl.prototype.log = function (entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\n    };\n    LoggerImpl.prototype.measure = function (name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    };\n    return LoggerImpl;\n}());\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nvar ConsoleListener = (function () {\n    function ConsoleListener() {\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    ConsoleListener.prototype.log = function (entry) {\n        var msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    };\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    ConsoleListener.prototype.format = function (entry) {\n        return \"Message: \" + entry.message + \" Data: \" + JSON.stringify(entry.data);\n    };\n    return ConsoleListener;\n}());\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nvar FunctionListener = (function () {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    function FunctionListener(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    FunctionListener.prototype.log = function (entry) {\n        this.method(entry);\n    };\n    return FunctionListener;\n}());\nexports.FunctionListener = FunctionListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/logging.js\n// module id = 5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/collections/collections.js\n// module id = 6\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar lists_1 = require(\"./lists\");\nvar fields_1 = require(\"./fields\");\nvar navigation_1 = require(\"./navigation\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar folders_1 = require(\"./folders\");\nvar roles_1 = require(\"./roles\");\nvar files_1 = require(\"./files\");\nvar util_1 = require(\"../utils/util\");\nvar lists_2 = require(\"./lists\");\nvar siteusers_1 = require(\"./siteusers\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar features_1 = require(\"./features\");\nvar decorators_1 = require(\"../utils/decorators\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar relateditems_1 = require(\"./relateditems\");\nvar Webs = (function (_super) {\n    __extends(Webs, _super);\n    function Webs(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webs\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The web web's description\n     * @param template The web's template\n     * @param language The language code to use for this web\n     * @param inheritPermissions If true permissions will be inherited from the partent web\n     * @param additionalSettings Will be passed as part of the web creation body\n     */\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions, additionalSettings) {\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = \"STS\"; }\n        if (language === void 0) { language = 1033; }\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var props = util_1.Util.extend({\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        }, additionalSettings);\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        return this.clone(Webs, \"add\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    };\n    return Webs;\n}(queryable_1.QueryableCollection));\nexports.Webs = Webs;\n/**\n * Describes a web\n *\n */\nvar Web = (function (_super) {\n    __extends(Web, _super);\n    function Web(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Creates a new web instance from the given url by indexing the location of the /_api/\n     * segment. If this is not found the method creates a new web with the entire string as\n     * supplied.\n     *\n     * @param url\n     */\n    Web.fromUrl = function (url, path) {\n        if (url === null) {\n            return new Web(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new Web(url.substr(0, index), path);\n        }\n        return new Web(url, path);\n    };\n    Object.defineProperty(Web.prototype, \"webs\", {\n        get: function () {\n            return new Webs(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\n        /**\n         * Get the content types available in this web\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"lists\", {\n        /**\n         * Get the lists in this web\n         *\n         */\n        get: function () {\n            return new lists_1.Lists(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"fields\", {\n        /**\n         * Gets the fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"features\", {\n        /**\n         * Gets the active features for this web\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"availablefields\", {\n        /**\n         * Gets the available fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this, \"availablefields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"navigation\", {\n        /**\n         * Get the navigation options in this web\n         *\n         */\n        get: function () {\n            return new navigation_1.Navigation(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\n        /**\n         * Gets the site users\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\n        /**\n         * Gets the site groups\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"currentUser\", {\n        /**\n         * Gets the current user\n         */\n        get: function () {\n            return new siteusers_1.CurrentUser(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"folders\", {\n        /**\n         * Get the folders in this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\n        /**\n         * Gets the collection of RoleDefinition resources.\n         *\n         */\n        get: function () {\n            return new roles_1.RoleDefinitions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\n        /**\n         * Provides an interface to manage related items\n         *\n         */\n        get: function () {\n            return relateditems_1.RelatedItemManagerImpl.FromUrl(this.toUrl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch for requests within the context of context this web\n     *\n     */\n    Web.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the web\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedownergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedmembergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedvisitorgroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get a folder by server relative url\n     *\n     * @param folderRelativeUrl the server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Get a file by server relative url\n     *\n     * @param fileRelativeUrl the server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Get a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl the server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    Web.prototype.getList = function (listRelativeUrl) {\n        return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n    };\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    Web.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                web: _this,\n            };\n        });\n    };\n    /**\n     * Delete this web\n     *\n     */\n    Web.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site.\n     *\n     * @param colorPaletteUrl Server-relative URL of the color palette file.\n     * @param fontSchemeUrl Server-relative URL of the font scheme.\n     * @param backgroundImageUrl Server-relative URL of the background image.\n     * @param shareGenerated true to store the generated theme files in the root site, or false to store them in this site.\n     */\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        var postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        return this.clone(Web, \"applytheme\", true).post({ body: postBody });\n    };\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it.\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    Web.prototype.applyWebTemplate = function (template) {\n        var q = this.clone(Web, \"applywebtemplate\", true);\n        q.concat(\"(@t)\");\n        q.query.add(\"@t\", template);\n        return q.post();\n    };\n    /**\n     * Returns whether the current user has the given set of permissions.\n     *\n     * @param perms The high and low permission range.\n     */\n    Web.prototype.doesUserHavePermissions = function (perms) {\n        var q = this.clone(Web, \"doesuserhavepermissions\", true);\n        q.concat(\"(@p)\");\n        q.query.add(\"@p\", JSON.stringify(perms));\n        return q.get();\n    };\n    /**\n     * Checks whether the specified login name belongs to a valid user in the site. If the user doesn't exist, adds the user to the site.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    Web.prototype.ensureUser = function (loginName) {\n        var postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        return this.clone(Web, \"ensureuser\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                user: new siteusers_1.SiteUser(odata_1.extractOdataId(data)),\n            };\n        });\n    };\n    /**\n     * Returns a collection of site templates available for the site.\n     *\n     * @param language The LCID of the site templates to get.\n     * @param true to include language-neutral site templates; otherwise false\n     */\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\n        if (language === void 0) { language = 1033; }\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\n        return new queryable_1.QueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n    };\n    /**\n     * Returns the list gallery on the site.\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    Web.prototype.getCatalog = function (type) {\n        return this.clone(Web, \"getcatalog(\" + type + \")\", true).select(\"Id\").get().then(function (data) {\n            return new lists_2.List(odata_1.extractOdataId(data));\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    Web.prototype.getChanges = function (query) {\n        var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        return this.clone(Web, \"getchanges\", true).post({ body: postBody });\n    };\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\n        /**\n         * Gets the custom list templates for the site.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site.\n     *\n     * @param id The ID of the user.\n     */\n    Web.prototype.getUserById = function (id) {\n        return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n    };\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file.\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string.\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1.\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    Web.prototype.mapToIcon = function (filename, size, progId) {\n        if (size === void 0) { size = 0; }\n        if (progId === void 0) { progId = \"\"; }\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\", true).get();\n    };\n    return Web;\n}(queryableshareable_1.QueryableShareableWeb));\n__decorate([\n    decorators_1.deprecated(\"This method will be removed in future releases. Please use the methods found in queryable securable.\")\n], Web.prototype, \"doesUserHavePermissions\", null);\nexports.Web = Web;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/webs.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar odata_1 = require(\"./odata\");\nvar util_1 = require(\"../utils/util\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar webparts_1 = require(\"./webparts\");\nvar items_1 = require(\"./items\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar odata_2 = require(\"./odata\");\n/**\n * Describes a collection of File objects\n *\n */\nvar Files = (function (_super) {\n    __extends(Files, _super);\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Files(baseUrl, path) {\n        if (path === void 0) { path = \"files\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    Files.prototype.getByName = function (name) {\n        var f = new File(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.add = function (url, content, shouldOverWrite) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\n            .post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\");\n        return adder.post().then(function () { return _this.getByName(url); }).then(function (file) { return file.setContentChunked(content, progress, chunkSize); }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\n        var _this = this;\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\")\n            .post().then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(fileUrl),\n            };\n        });\n    };\n    return Files;\n}(queryable_1.QueryableCollection));\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\n        /**\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"versions\", {\n        /**\n         * Gets a collection of versions\n         *\n         */\n        get: function () {\n            return new Versions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    File.prototype.approve = function (comment) {\n        return this.clone(File, \"approve(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    File.prototype.cancelUpload = function (uploadId) {\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).post();\n    };\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    File.prototype.checkin = function (comment, checkinType) {\n        if (comment === void 0) { comment = \"\"; }\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\", true).post();\n    };\n    /**\n     * Checks out the file from a document library.\n     */\n    File.prototype.checkout = function () {\n        return this.clone(File, \"checkout\", true).post();\n    };\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    File.prototype.copyTo = function (url, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\", true).post();\n    };\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    File.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(File, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    File.prototype.deny = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"deny(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    File.prototype.getLimitedWebPartManager = function (scope) {\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\n        return new webparts_1.LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n    };\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    File.prototype.moveTo = function (url, moveOperations) {\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\", true).post();\n    };\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    File.prototype.publish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"publish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    File.prototype.recycle = function () {\n        return this.clone(File, \"recycle\", true).post();\n    };\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    File.prototype.undoCheckout = function () {\n        return this.clone(File, \"undoCheckout\", true).post();\n    };\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    File.prototype.unpublish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Gets the contents of the file as text. Not supported in batching.\n     *\n     */\n    File.prototype.getText = function () {\n        return this.clone(File, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\n     *\n     */\n    File.prototype.getBlob = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getBuffer = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getJSON = function () {\n        return this.clone(File, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\n     *\n     * @param content The file content\n     *\n     */\n    File.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(File, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new File(_this); });\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    File.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_2.getEntityUrl(d)), d);\n        });\n    };\n    /**\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        if (typeof progress === \"undefined\") {\n            progress = function () { return null; };\n        }\n        var self = this;\n        var fileSize = file.size;\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        var uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n        var _loop_1 = function (i) {\n            chain = chain.then(function (pointer) {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        };\n        // skip the first and last blocks\n        for (var i = 2; i < blockCount; i++) {\n            _loop_1(i);\n        }\n        return chain.then(function (pointer) {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\n        }).then(function (_) {\n            return self;\n        });\n    };\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.startUpload = function (uploadId, fragment) {\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\")\n            .postAs({ body: fragment }).then(function (response) {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    };\n    return File;\n}(queryableshareable_1.QueryableShareableFile));\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nvar Versions = (function (_super) {\n    __extends(Versions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Versions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    Versions.prototype.getById = function (versionId) {\n        var v = new Version(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    Versions.prototype.deleteAll = function () {\n        return new Versions(this, \"deleteAll\").post();\n    };\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.deleteById = function (versionId) {\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\", true).post();\n    };\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.deleteByLabel = function (label) {\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    Versions.prototype.restoreByLabel = function (label) {\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    return Versions;\n}(queryable_1.QueryableCollection));\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nvar Version = (function (_super) {\n    __extends(Version, _super);\n    function Version() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Version.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return Version;\n}(queryable_1.QueryableInstance));\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/files.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar files_1 = require(\"./files\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"./odata\");\nvar items_1 = require(\"./items\");\n/**\n * Describes a collection of Folder objects\n *\n */\nvar Folders = (function (_super) {\n    __extends(Folders, _super);\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Folders(baseUrl, path) {\n        if (path === void 0) { path = \"folders\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    Folders.prototype.getByName = function (name) {\n        var f = new Folder(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    Folders.prototype.add = function (url) {\n        var _this = this;\n        return this.clone(Folders, \"add('\" + url + \"')\", true).post().then(function (response) {\n            return {\n                data: response,\n                folder: _this.getByName(url),\n            };\n        });\n    };\n    return Folders;\n}(queryable_1.QueryableCollection));\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nvar Folder = (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\n        /**\n         * Specifies the sequence in which content types are displayed.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"files\", {\n        /**\n         * Gets this folder's files\n         *\n         */\n        get: function () {\n            return new files_1.Files(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"folders\", {\n        /**\n         * Gets this folder's sub folders\n         *\n         */\n        get: function () {\n            return new Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\n        /**\n         * Gets this folder's list item field values\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\n        /**\n         * Gets the parent folder, if available\n         *\n         */\n        get: function () {\n            return new Folder(this, \"parentFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"properties\", {\n        /**\n         * Gets this folder's properties\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"properties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\n        /**\n         * Gets this folder's server relative url\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\n        /**\n         * Gets a value that specifies the content type order.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Folder\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                folder: _this,\n            };\n        });\n    };\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Folder.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(Folder, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Folder.prototype.recycle = function () {\n        return this.clone(Folder, \"recycle\", true).post();\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    Folder.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.getEntityUrl(d)), d);\n        });\n    };\n    return Folder;\n}(queryableshareable_1.QueryableShareableFolder));\nexports.Folder = Folder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/folders.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar folders_1 = require(\"./folders\");\nvar files_1 = require(\"./files\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"./odata\");\nvar attachmentfiles_1 = require(\"./attachmentfiles\");\nvar lists_1 = require(\"./lists\");\n/**\n * Describes a collection of Item objects\n *\n */\nvar Items = (function (_super) {\n    __extends(Items, _super);\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Items(baseUrl, path) {\n        if (path === void 0) { path = \"items\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    Items.prototype.getById = function (id) {\n        var i = new Item(this);\n        i.concat(\"(\" + id + \")\");\n        return i;\n    };\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     */\n    Items.prototype.skip = function (skip) {\n        this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\n        return this;\n    };\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    Items.prototype.getPaged = function () {\n        return this.getAs(new PagedItemCollectionParser());\n    };\n    //\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        var removeDependency = this.addBatchDependency();\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n            var postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            var promise = _this.clone(Items, null, true).postAs({ body: postBody }).then(function (data) {\n                return {\n                    data: data,\n                    item: _this.getById(data.Id),\n                };\n            });\n            removeDependency();\n            return promise;\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List).getListItemEntityTypeFullName();\n    };\n    return Items;\n}(queryable_1.QueryableCollection));\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nvar Item = (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\n        /**\n         * Gets the set of attachments for this item\n         *\n         */\n        get: function () {\n            return new attachmentfiles_1.AttachmentFiles(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"contentType\", {\n        /**\n         * Gets the content type for this item\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentType(this, \"ContentType\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions for the item\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\n        /**\n         * Gets the effective base permissions for the item in a UI context\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\n        /**\n         * Gets the field values for this list item in their HTML representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\n        /**\n         * Gets the field values for this list item in their text representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\n        /**\n         * Gets the field values for this list item for use in editing controls\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"folder\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"folder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"file\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new files_1.File(this, \"file\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        return new Promise(function (resolve, reject) {\n            var removeDependency = _this.addBatchDependency();\n            var parentList = _this.getParent(queryable_1.QueryableInstance, _this.parentUrl.substr(0, _this.parentUrl.lastIndexOf(\"/\")));\n            parentList.select(\"ListItemEntityTypeFullName\").getAs().then(function (d) {\n                var postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": d.ListItemEntityTypeFullName },\n                }, properties));\n                removeDependency();\n                return _this.post({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then(function (data) {\n                    resolve({\n                        data: data,\n                        item: _this,\n                    });\n                });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Item.prototype.recycle = function () {\n        return this.clone(Item, \"recycle\", true).post();\n    };\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    Item.prototype.getWopiFrameUrl = function (action) {\n        if (action === void 0) { action = 0; }\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\", true);\n        i._query.add(\"@action\", action);\n        return i.post().then(function (data) {\n            return data.GetWOPIFrameUrl;\n        });\n    };\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\n        return this.clone(Item, \"validateupdatelistitem\", true).post({\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\n        });\n    };\n    return Item;\n}(queryableshareable_1.QueryableShareableItem));\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nvar PagedItemCollection = (function () {\n    function PagedItemCollection(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\n        /**\n         * If true there are more results available in the set, otherwise there are not\n         */\n        get: function () {\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    PagedItemCollection.prototype.getNext = function () {\n        if (this.hasNext) {\n            var items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(function (r) { return r(null); });\n    };\n    return PagedItemCollection;\n}());\nexports.PagedItemCollection = PagedItemCollection;\nvar PagedItemCollectionParser = (function (_super) {\n    __extends(PagedItemCollectionParser, _super);\n    function PagedItemCollectionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PagedItemCollectionParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                r.json().then(function (json) {\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\n                });\n            }\n        });\n    };\n    return PagedItemCollectionParser;\n}(odata_1.ODataParserBase));\nvar ItemUpdatedParser = (function (_super) {\n    __extends(ItemUpdatedParser, _super);\n    function ItemUpdatedParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ItemUpdatedParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    };\n    return ItemUpdatedParser;\n}(odata_1.ODataParserBase));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/items.js\n// module id = 10\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar items_1 = require(\"./items\");\nvar views_1 = require(\"./views\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar fields_1 = require(\"./fields\");\nvar forms_1 = require(\"./forms\");\nvar subscriptions_1 = require(\"./subscriptions\");\nvar queryable_1 = require(\"./queryable\");\nvar queryablesecurable_1 = require(\"./queryablesecurable\");\nvar util_1 = require(\"../utils/util\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar folders_1 = require(\"./folders\");\n/**\n * Describes a collection of List objects\n *\n */\nvar Lists = (function (_super) {\n    __extends(Lists, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Lists(baseUrl, path) {\n        if (path === void 0) { path = \"lists\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    Lists.prototype.getByTitle = function (title) {\n        return new List(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    Lists.prototype.getById = function (id) {\n        var list = new List(this);\n        list.concat(\"('\" + id + \"')\");\n        return list;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var addSettings = util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings);\n        return this.post({ body: JSON.stringify(addSettings) }).then(function (data) {\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\n        });\n    };\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise(function (resolve, reject) {\n            var addOrUpdateSettings = util_1.Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\n            list.get().then(function (_) {\n                list.update(addOrUpdateSettings).then(function (d) {\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            }).catch(function (_) {\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            });\n        });\n    };\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\n        return this.clone(Lists, \"ensuresiteassetslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    Lists.prototype.ensureSitePagesLibrary = function () {\n        return this.clone(Lists, \"ensuresitepageslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    return Lists;\n}(queryable_1.QueryableCollection));\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nvar List = (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(List.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types in this list\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"items\", {\n        /**\n         * Gets the items in this list\n         *\n         */\n        get: function () {\n            return new items_1.Items(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"views\", {\n        /**\n         * Gets the views in this list\n         *\n         */\n        get: function () {\n            return new views_1.Views(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"fields\", {\n        /**\n         * Gets the fields in this list\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"forms\", {\n        /**\n         * Gets the forms in this list\n         *\n         */\n        get: function () {\n            return new forms_1.Forms(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"defaultView\", {\n        /**\n         * Gets the default view of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"DefaultView\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\n        /**\n         * Gets the event receivers attached to this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"relatedFields\", {\n        /**\n         * Gets the related fields of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"getRelatedFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\n        /**\n         * Gets the IRM settings for this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"subscriptions\", {\n        /**\n         * Gets the webhook subscriptions of this list\n         *\n         */\n        get: function () {\n            return new subscriptions_1.Subscriptions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the list\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    List.prototype.getView = function (viewId) {\n        return new views_1.View(this, \"getView('\" + viewId + \"')\");\n    };\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    List.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retList = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    List.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    List.prototype.getChanges = function (query) {\n        return this.clone(List, \"getchanges\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\n        });\n    };\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    List.prototype.getItemsByCAMLQuery = function (query) {\n        var expands = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            expands[_i - 1] = arguments[_i];\n        }\n        var q = this.clone(List, \"getitems\", true);\n        return q.expand.apply(q, expands).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\n        });\n    };\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    List.prototype.getListItemChangesSinceToken = function (query) {\n        return this.clone(List, \"getlistitemchangessincetoken\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\n        }, { parse: function (r) { return r.text(); } });\n    };\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    List.prototype.recycle = function () {\n        return this.clone(List, \"recycle\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Renders list data based on the view xml provided\n     */\n    List.prototype.renderListData = function (viewXml) {\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return data.RenderListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\", true).post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    List.prototype.reserveListItemId = function () {\n        return this.clone(List, \"reservelistitemid\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\n     *\n     */\n    List.prototype.getListItemEntityTypeFullName = function () {\n        return this.clone(List, null).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\n    };\n    return List;\n}(queryablesecurable_1.QueryableSecurable));\nexports.List = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/lists.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar webs_1 = require(\"./webs\");\nvar odata_1 = require(\"./odata\");\nvar queryable_1 = require(\"./queryable\");\nvar queryablesecurable_1 = require(\"./queryablesecurable\");\nvar types_1 = require(\"./types\");\n/**\n * Internal helper class used to augment classes to include sharing functionality\n */\nvar QueryableShareable = (function (_super) {\n    __extends(QueryableShareable, _super);\n    function QueryableShareable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a sharing link for the supplied\n     *\n     * @param kind The kind of link to share\n     * @param expiration The optional expiration for this link\n     */\n    QueryableShareable.prototype.getShareLink = function (kind, expiration) {\n        if (expiration === void 0) { expiration = null; }\n        // date needs to be an ISO string or null\n        var expString = expiration !== null ? expiration.toISOString() : null;\n        // clone using the factory and send the request\n        return this.clone(QueryableShareable, \"shareLink\", true).postAs({\n            body: JSON.stringify({\n                request: {\n                    createLink: true,\n                    emailData: null,\n                    settings: {\n                        expiration: expString,\n                        linkKind: kind,\n                    },\n                },\n            }),\n        });\n    };\n    /**\n     * Shares this instance with the supplied users\n     *\n     * @param loginNames Resolved login names to share\n     * @param role The role\n     * @param requireSignin True to require the user is authenticated, otherwise false\n     * @param propagateAcl True to apply this share to all children\n     * @param emailData If supplied an email will be sent with the indicated properties\n     */\n    QueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\n        var _this = this;\n        if (requireSignin === void 0) { requireSignin = true; }\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        // handle the multiple input types\n        if (!Array.isArray(loginNames)) {\n            loginNames = [loginNames];\n        }\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\n        var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n        // start by looking up the role definition id we need to set the roleValue\n        return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\n            if (!Array.isArray(def) || def.length < 1) {\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\n            }\n            var postBody = {\n                includeAnonymousLinkInEmail: requireSignin,\n                peoplePickerInput: userStr,\n                propagateAcl: propagateAcl,\n                roleValue: \"role:\" + def[0].Id,\n                useSimplifiedRoles: true,\n            };\n            if (typeof emailData !== \"undefined\") {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: emailData.body,\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? \"\" : emailData.subject,\n                    sendEmail: true,\n                });\n            }\n            return _this.clone(QueryableShareable, \"shareObject\", true).postAs({\n                body: JSON.stringify(postBody),\n            });\n        });\n    };\n    /**\n     * Shares an object based on the supplied options\n     *\n     * @param options The set of options to send to the ShareObject method\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\n     */\n    QueryableShareable.prototype.shareObject = function (options, bypass) {\n        var _this = this;\n        if (bypass === void 0) { bypass = false; }\n        if (bypass) {\n            // if the bypass flag is set send the supplied parameters directly to the service\n            return this.sendShareObjectRequest(options);\n        }\n        // extend our options with some defaults\n        options = util_1.Util.extend(options, {\n            group: null,\n            includeAnonymousLinkInEmail: false,\n            propagateAcl: false,\n            useSimplifiedRoles: true,\n        }, true);\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\n            // handle the multiple input types\n            if (!Array.isArray(options.loginNames)) {\n                options.loginNames = [options.loginNames];\n            }\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\n            var postBody = {\n                peoplePickerInput: userStr,\n                roleValue: roleValue,\n                url: options.url,\n            };\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: options.emailData.body,\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? \"Shared for you.\" : options.emailData.subject,\n                    sendEmail: true,\n                });\n            }\n            return _this.sendShareObjectRequest(postBody);\n        });\n    };\n    /**\n     * Calls the web's UnshareObject method\n     *\n     * @param url The url of the object to unshare\n     */\n    QueryableShareable.prototype.unshareObjectWeb = function (url) {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs({\n            body: JSON.stringify({\n                url: url,\n            }),\n        });\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareable.prototype.checkPermissions = function (recipients) {\n        return this.clone(QueryableShareable, \"checkPermissions\", true).postAs({\n            body: JSON.stringify({\n                recipients: recipients,\n            }),\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareable.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, \"getSharingInformation\", true).postAs({\n            body: JSON.stringify({\n                request: request,\n            }),\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, \"getObjectSharingSettings\", true).postAs({\n            body: JSON.stringify({\n                useSimplifiedRoles: useSimplifiedRoles,\n            }),\n        });\n    };\n    /**\n     * Unshares this object\n     */\n    QueryableShareable.prototype.unshareObject = function () {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs();\n    };\n    /**\n     * Deletes a link by type\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareable.prototype.deleteLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, \"deleteLinkByKind\", true).post({\n            body: JSON.stringify({ linkKind: kind }),\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareable.prototype.unshareLink = function (kind, shareId) {\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\n        return this.clone(QueryableShareable, \"unshareLink\", true).post({\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\n        });\n    };\n    /**\n     * Calculates the roleValue string used in the sharing query\n     *\n     * @param role The Sharing Role\n     * @param group The Group type\n     */\n    QueryableShareable.prototype.getRoleValue = function (role, group) {\n        // we will give group precedence, because we had to make a choice\n        if (typeof group !== \"undefined\" && group !== null) {\n            switch (group) {\n                case types_1.RoleType.Contributor:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedMemberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                case types_1.RoleType.Reader:\n                case types_1.RoleType.Guest:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedVisitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                default:\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\n            }\n        }\n        else {\n            var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n            return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\n                if (def.length < 1) {\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\n                }\n                return \"role: \" + def[0].Id;\n            });\n        }\n    };\n    QueryableShareable.prototype.getShareObjectWeb = function (candidate) {\n        return Promise.resolve(webs_1.Web.fromUrl(candidate, \"/_api/SP.Web.ShareObject\"));\n    };\n    QueryableShareable.prototype.sendShareObjectRequest = function (options) {\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(QueryableShareable).post({\n                body: JSON.stringify(options),\n            });\n        });\n    };\n    return QueryableShareable;\n}(queryable_1.Queryable));\nexports.QueryableShareable = QueryableShareable;\nvar QueryableShareableWeb = (function (_super) {\n    __extends(QueryableShareableWeb, _super);\n    function QueryableShareableWeb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this web with the supplied users\n     * @param loginNames The resolved login names to share\n     * @param role The role to share this web\n     * @param emailData Optional email data\n     */\n    QueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\n        var _this = this;\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        var dependency = this.addBatchDependency();\n        return webs_1.Web.fromUrl(this.toUrl(), \"/_api/web/url\").get().then(function (url) {\n            dependency();\n            return _this.shareObject(util_1.Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\n        });\n    };\n    /**\n     * Provides direct access to the static web.ShareObject method\n     *\n     * @param url The url to share\n     * @param loginNames Resolved loginnames string[] of a single login name string\n     * @param roleValue Role value\n     * @param emailData Optional email data\n     * @param groupId Optional group id\n     * @param propagateAcl\n     * @param includeAnonymousLinkInEmail\n     * @param useSimplifiedRoles\n     */\n    QueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).shareObject({\n            emailData: emailData,\n            group: group,\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\n            loginNames: loginNames,\n            propagateAcl: propagateAcl,\n            role: role,\n            url: url,\n            useSimplifiedRoles: useSimplifiedRoles,\n        });\n    };\n    /**\n     * Supplies a method to pass any set of arguments to ShareObject\n     *\n     * @param options The set of options to send to ShareObject\n     */\n    QueryableShareableWeb.prototype.shareObjectRaw = function (options) {\n        return this.clone(QueryableShareable, null, true).shareObject(options, true);\n    };\n    /**\n     * Unshares the object\n     *\n     * @param url The url of the object to stop sharing\n     */\n    QueryableShareableWeb.prototype.unshareObject = function (url) {\n        return this.clone(QueryableShareable, null, true).unshareObjectWeb(url);\n    };\n    return QueryableShareableWeb;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableWeb = QueryableShareableWeb;\nvar QueryableShareableItem = (function (_super) {\n    __extends(QueryableShareableItem, _super);\n    function QueryableShareableItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing for this item\n     *\n     * @param kind The type of link to share\n     * @param expiration The optional expiration date\n     */\n    QueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        return this.clone(QueryableShareable, null, true).getShareLink(kind, expiration);\n    };\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        return this.clone(QueryableShareable, null, true).shareWith(loginNames, role, requireSignin, false, emailData);\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\n        return this.clone(QueryableShareable, null, true).checkPermissions(recipients);\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareableItem.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, null, true).getSharingInformation(request);\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).getObjectSharingSettings(useSimplifiedRoles);\n    };\n    /**\n     * Unshare this item\n     */\n    QueryableShareableItem.prototype.unshare = function () {\n        return this.clone(QueryableShareable, null, true).unshareObject();\n    };\n    /**\n     * Deletes a sharing link by kind\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, null, true).deleteLinkByKind(kind);\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\n        return this.clone(QueryableShareable, null, true).unshareLink(kind, shareId);\n    };\n    return QueryableShareableItem;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableItem = QueryableShareableItem;\nvar FileFolderShared = (function (_super) {\n    __extends(FileFolderShared, _super);\n    function FileFolderShared() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing\n     *\n     * @param kind The kind of link to get\n     * @param expiration Optional, an expiration for this link\n     */\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getShareLink(kind, expiration);\n        });\n    };\n    /**\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\n         *\n         * @param recipients The array of Entities for which Permissions need to be checked.\n         */\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.checkPermissions(recipients);\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    FileFolderShared.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getSharingInformation(request);\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\n        });\n    };\n    /**\n     * Unshare this item\n     */\n    FileFolderShared.prototype.unshare = function () {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareObject();\n        });\n    };\n    /**\n     * Deletes a sharing link by the kind of link\n     *\n     * @param kind The kind of link to be deleted.\n     */\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.deleteLinkByKind(kind);\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId The share id to delete\n     */\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareLink(kind, shareId);\n        });\n    };\n    /**\n     * For files and folders we need to use the associated item end point\n     */\n    FileFolderShared.prototype.getShareable = function () {\n        var _this = this;\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\n        return this.clone(QueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\n            var shareable = new QueryableShareable(odata_1.getEntityUrl(d));\n            // we need to handle batching\n            if (_this.hasBatch) {\n                shareable = shareable.inBatch(_this.batch);\n            }\n            return shareable;\n        });\n    };\n    return FileFolderShared;\n}(queryable_1.QueryableInstance));\nexports.FileFolderShared = FileFolderShared;\nvar QueryableShareableFile = (function (_super) {\n    __extends(QueryableShareableFile, _super);\n    function QueryableShareableFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\n        });\n    };\n    return QueryableShareableFile;\n}(FileFolderShared));\nexports.QueryableShareableFile = QueryableShareableFile;\nvar QueryableShareableFolder = (function (_super) {\n    __extends(QueryableShareableFolder, _super);\n    function QueryableShareableFolder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        if (shareEverything === void 0) { shareEverything = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\n        });\n    };\n    return QueryableShareableFolder;\n}(FileFolderShared));\nexports.QueryableShareableFolder = QueryableShareableFolder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryableshareable.js\n// module id = 12\n// module chunks = 0","// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar PermissionKind;\n(function (PermissionKind) {\n    /**\n     * Has no permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\n    /**\n     * View items in lists, documents in document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\n    /**\n     * Add items to lists, documents to document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\n    /**\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\n     * in documents, and customize Web Part Pages in document libraries.\n     */\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\n    /**\n     * Delete items from a list, documents from a document library, and Web discussion\n     * comments in documents.\n     */\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\n    /**\n     * Approve a minor version of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\n    /**\n     * View the source of documents with server-side file handlers.\n     */\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\n    /**\n     * View past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\n    /**\n     * Delete past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\n    /**\n     * Discard or check in a document which is checked out to another user.\n     */\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\n    /**\n     * Create, change, and delete personal views of lists.\n     */\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\n    /**\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\n     */\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\n    /**\n     * View forms, views, and application pages, and enumerate lists.\n     */\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\n    /**\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\n     * The list permissions in the site do not change.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\n    /**\n     * Allow users to open a Site, list, or folder to access items inside that container.\n     */\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\n    /**\n     * View pages in a Site.\n     */\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\n    /**\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\n     * a Windows SharePoint Services compatible editor.\n     */\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\n    /**\n     * Apply a theme or borders to the entire Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\n    /**\n     * Apply a style sheet (.css file) to the Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\n    /**\n     * View reports on Site usage.\n     */\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\n    /**\n     * Create a Site using Self-Service Site Creation.\n     */\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\n    /**\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\n     */\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\n    /**\n     * Create a group of users that can be used anywhere within the site collection.\n     */\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\n    /**\n     * Create and change permission levels on the Site and assign permissions to users\n     * and groups.\n     */\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\n    /**\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\n     * and WebDAV interfaces.\n     */\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\n    /**\n     * View information about users of the Site.\n     */\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\n    /**\n     * Add or remove personal Web Parts on a Web Part Page.\n     */\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\n    /**\n     * Update Web Parts to display personalized information.\n     */\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\n    /**\n     * Grant the ability to perform all administration tasks for the Site as well as\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\n     * through the object model or through the user interface (UI). When granted on the\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\n     * site collection scoped Features through the object model. To browse to the Site\n     * Collection Features page and activate or deactivate Site Collection scoped Features\n     * through the UI, you must be a Site Collection administrator.\n     */\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\n    /**\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\n    /**\n     * Use features that launch client applications. Otherwise, users must work on documents\n     * locally and upload changes.\n     */\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\n    /**\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\n     */\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\n    /**\n     * Manage alerts for all users of the Site.\n     */\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\n    /**\n     * Create e-mail alerts.\n     */\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\n    /**\n     * Allows a user to change his or her user information, such as adding a picture.\n     */\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\n    /**\n     * Enumerate permissions on Site, list, folder, document, or list item.\n     */\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\n    /**\n     * Has all permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\n})(PermissionKind = exports.PermissionKind || (exports.PermissionKind = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar RoleType;\n(function (RoleType) {\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\n})(RoleType = exports.RoleType || (exports.RoleType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\nvar SharingLinkKind;\n(function (SharingLinkKind) {\n    /**\n     * Uninitialized link\n     */\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    /**\n     * Direct link to the object being shared\n     */\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\n    /**\n     * Organization-shareable link to the object being shared with view permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\n    /**\n     * Organization-shareable link to the object being shared with edit permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\n    /**\n     * View only anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\n    /**\n     * Read/Write anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\n    /**\n     * Flexible sharing Link where properties can change without affecting link URL\n     */\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\n})(SharingLinkKind = exports.SharingLinkKind || (exports.SharingLinkKind = {}));\n;\n/**\n * Indicates the role of the sharing link\n */\nvar SharingRole;\n(function (SharingRole) {\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\n})(SharingRole = exports.SharingRole || (exports.SharingRole = {}));\nvar SharingOperationStatusCode;\n(function (SharingOperationStatusCode) {\n    /**\n     * The share operation completed without errors.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\n    /**\n     * The share operation completed and generated requests for access.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\n    /**\n     * The share operation failed as there were no resolved users.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\n    /**\n     * The share operation failed due to insufficient permissions.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\n    /**\n     * The share operation failed when attempting a cross site share, which is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\n    /**\n     * The sharing operation failed due to an unknown error.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\n    /**\n     * The text you typed is too long. Please shorten it.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\n    /**\n     * The maximum number of unique scopes in the list has been exceeded.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\n    /**\n     * The share operation failed because a sharing capability is disabled in the site.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\n    /**\n     * The specified object for the share operation is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\n    /**\n     * A SharePoint group cannot contain another SharePoint group.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\n})(SharingOperationStatusCode = exports.SharingOperationStatusCode || (exports.SharingOperationStatusCode = {}));\nvar SPSharedObjectType;\n(function (SPSharedObjectType) {\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\n})(SPSharedObjectType = exports.SPSharedObjectType || (exports.SPSharedObjectType = {}));\nvar SharingDomainRestrictionMode;\n(function (SharingDomainRestrictionMode) {\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\n})(SharingDomainRestrictionMode = exports.SharingDomainRestrictionMode || (exports.SharingDomainRestrictionMode = {}));\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/types.js\n// module id = 13\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar collections_1 = require(\"../collections/collections\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nvar PnPClientStorageWrapper = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? -1 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    PnPClientStorageWrapper.prototype.get = function (key) {\n        if (!this.enabled) {\n            return null;\n        }\n        var o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        var persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    };\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    };\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    PnPClientStorageWrapper.prototype.delete = function (key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    };\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\n        var _this = this;\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise(function (resolve) {\n            var o = _this.get(key);\n            if (o == null) {\n                getter().then(function (d) {\n                    _this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    };\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    PnPClientStorageWrapper.prototype.test = function () {\n        var str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Creates the persistable to store\n     */\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\n        if (typeof expire === \"undefined\") {\n            // ensure we are by default inline with the global library setting\n            var defaultTimeout = pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = util_1.Util.dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n        return JSON.stringify({ expiration: expire, value: o });\n    };\n    return PnPClientStorageWrapper;\n}());\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nvar MemoryStorage = (function () {\n    function MemoryStorage(_store) {\n        if (_store === void 0) { _store = new collections_1.Dictionary(); }\n        this._store = _store;\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () {\n            return this._store.count();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.clear = function () {\n        this._store.clear();\n    };\n    MemoryStorage.prototype.getItem = function (key) {\n        return this._store.get(key);\n    };\n    MemoryStorage.prototype.key = function (index) {\n        return this._store.getKeys()[index];\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        this._store.remove(key);\n    };\n    MemoryStorage.prototype.setItem = function (key, data) {\n        this._store.add(key, data);\n    };\n    return MemoryStorage;\n}());\n/**\n * A class that will establish wrappers for both local and session storage\n */\nvar PnPClientStorage = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    function PnPClientStorage() {\n        this.local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n        this.session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n    }\n    return PnPClientStorage;\n}());\nexports.PnPClientStorage = PnPClientStorage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/storage.js\n// module id = 14\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = require(\"./digestcache\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar HttpClient = (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        this.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n        // second we add the local options so we can overwrite the globals\n        this.mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.3\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            if (!headers.has(\"X-RequestDigest\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        this.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // grab our current delay\n                var delay = ctx.delay;\n                // Check if request was throttled - http status code 429\n                // Check is request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.mergeHeaders = function (target, source) {\n        if (typeof source !== \"undefined\" && source !== null) {\n            var temp = new Request(\"\", { headers: source });\n            temp.headers.forEach(function (value, name) {\n                target.append(name, value);\n            });\n        }\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/httpclient.js\n// module id = 15\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of content types\n *\n */\nvar ContentTypes = (function (_super) {\n    __extends(ContentTypes, _super);\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n     */\n    function ContentTypes(baseUrl, path) {\n        if (path === void 0) { path = \"contenttypes\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    ContentTypes.prototype.getById = function (id) {\n        var ct = new ContentType(this);\n        ct.concat(\"('\" + id + \"')\");\n        return ct;\n    };\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return this.clone(ContentTypes, \"addAvailableContentType\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                contentType: _this.getById(data.id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (group === void 0) { group = \"Custom Content Types\"; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.post({ body: postBody }).then(function (data) {\n            return { contentType: _this.getById(data.id), data: data };\n        });\n    };\n    return ContentTypes;\n}(queryable_1.QueryableCollection));\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nvar ContentType = (function (_super) {\n    __extends(ContentType, _super);\n    function ContentType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\n        /**\n         * Gets the column (also known as field) references in the content type.\n        */\n        get: function () {\n            return new FieldLinks(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"fields\", {\n        /**\n         * Gets a value that specifies the collection of fields for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"fields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"parent\", {\n        /**\n         * Gets the parent content type of the content type.\n         */\n        get: function () {\n            return new ContentType(this, \"parent\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\n        /**\n         * Gets a value that specifies the collection of workflow associations for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this content type\n     */\n    ContentType.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ContentType;\n}(queryable_1.QueryableInstance));\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nvar FieldLinks = (function (_super) {\n    __extends(FieldLinks, _super);\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    function FieldLinks(baseUrl, path) {\n        if (path === void 0) { path = \"fieldlinks\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    FieldLinks.prototype.getById = function (id) {\n        var fl = new FieldLink(this);\n        fl.concat(\"(guid'\" + id + \"')\");\n        return fl;\n    };\n    return FieldLinks;\n}(queryable_1.QueryableCollection));\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nvar FieldLink = (function (_super) {\n    __extends(FieldLink, _super);\n    function FieldLink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldLink;\n}(queryable_1.QueryableInstance));\nexports.FieldLink = FieldLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/contenttypes.js\n// module id = 16\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nvar RoleAssignments = (function (_super) {\n    __extends(RoleAssignments, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function RoleAssignments(baseUrl, path) {\n        if (path === void 0) { path = \"roleassignments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection.\n     *\n     * @param principalId The ID of the user or group to assign permissions to\n     * @param roleDefId The ID of the role definition that defines the permissions to assign\n     *\n     */\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The ID of the user or group in the role assignment.\n     * @param roleDefId The ID of the role definition in the role assignment\n     *\n     */\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Gets the role assignment associated with the specified principal ID from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    RoleAssignments.prototype.getById = function (id) {\n        var ra = new RoleAssignment(this);\n        ra.concat(\"(\" + id + \")\");\n        return ra;\n    };\n    return RoleAssignments;\n}(queryable_1.QueryableCollection));\nexports.RoleAssignments = RoleAssignments;\nvar RoleAssignment = (function (_super) {\n    __extends(RoleAssignment, _super);\n    function RoleAssignment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\n        /**\n         * Get the role definition bindings for this role assignment\n         *\n         */\n        get: function () {\n            return new RoleDefinitionBindings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this role assignment\n     *\n     */\n    RoleAssignment.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleAssignment;\n}(queryable_1.QueryableInstance));\nexports.RoleAssignment = RoleAssignment;\nvar RoleDefinitions = (function (_super) {\n    __extends(RoleDefinitions, _super);\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path\n     *\n     */\n    function RoleDefinitions(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the role definition with the specified ID from the collection.\n     *\n     * @param id The ID of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getById = function (id) {\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets the role definition with the specified name.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getByName = function (name) {\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n    };\n    /**\n     * Gets the role definition with the specified type.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n    };\n    /**\n     * Create a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                definition: _this.getById(data.Id),\n            };\n        });\n    };\n    return RoleDefinitions;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitions = RoleDefinitions;\nvar RoleDefinition = (function (_super) {\n    __extends(RoleDefinition, _super);\n    function RoleDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    /* tslint:disable no-string-literal */\n    RoleDefinition.prototype.update = function (properties) {\n        var _this = this;\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retDef = _this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\n                retDef = parent_1.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this role definition\n     *\n     */\n    RoleDefinition.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleDefinition;\n}(queryable_1.QueryableInstance));\nexports.RoleDefinition = RoleDefinition;\nvar RoleDefinitionBindings = (function (_super) {\n    __extends(RoleDefinitionBindings, _super);\n    function RoleDefinitionBindings(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return RoleDefinitionBindings;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/roles.js\n// module id = 17\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar siteusers_1 = require(\"./siteusers\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site users\n *\n */\nvar SiteGroups = (function (_super) {\n    __extends(SiteGroups, _super);\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteGroups(baseUrl, path) {\n        if (path === void 0) { path = \"sitegroups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The properties to be updated\n     */\n    SiteGroups.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                group: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param email The name of the group\n     */\n    SiteGroups.prototype.getByName = function (groupName) {\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n    };\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group\n     */\n    SiteGroups.prototype.getById = function (id) {\n        var sg = new SiteGroup(this);\n        sg.concat(\"(\" + id + \")\");\n        return sg;\n    };\n    /**\n     * Removes the group with the specified member ID from the collection.\n     *\n     * @param id The id of the group to remove\n     */\n    SiteGroups.prototype.removeById = function (id) {\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\", true).post();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\", true).post();\n    };\n    return SiteGroups;\n}(queryable_1.QueryableCollection));\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nvar SiteGroup = (function (_super) {\n    __extends(SiteGroup, _super);\n    function SiteGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\n        /**\n         * Get's the users for this group\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this, \"users\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the user\n    */\n    /* tslint:disable no-string-literal */\n    SiteGroup.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retGroup = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    };\n    return SiteGroup;\n}(queryable_1.QueryableInstance));\nexports.SiteGroup = SiteGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/sitegroups.js\n// module id = 18\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\nvar UserCustomActions = (function (_super) {\n    __extends(UserCustomActions, _super);\n    function UserCustomActions(baseUrl, path) {\n        if (path === void 0) { path = \"usercustomactions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns the custom action with the specified identifier.\n     *\n     * @param id The GUID ID of the user custom action to get.\n     */\n    UserCustomActions.prototype.getById = function (id) {\n        var uca = new UserCustomAction(this);\n        uca.concat(\"('\" + id + \"')\");\n        return uca;\n    };\n    /**\n     * Create a custom action\n     *\n     * @param creationInfo The information which defines the new custom action\n     *\n     */\n    UserCustomActions.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                action: _this.getById(data.Id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Deletes all custom actions in the collection.\n     *\n     */\n    UserCustomActions.prototype.clear = function () {\n        return this.clone(UserCustomActions, \"clear\", true).post();\n    };\n    return UserCustomActions;\n}(queryable_1.QueryableCollection));\nexports.UserCustomActions = UserCustomActions;\nvar UserCustomAction = (function (_super) {\n    __extends(UserCustomAction, _super);\n    function UserCustomAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UserCustomAction.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                action: _this,\n                data: data,\n            };\n        });\n    };\n    /**\n    * Remove a custom action\n    *\n    */\n    UserCustomAction.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return UserCustomAction;\n}(queryable_1.QueryableInstance));\nexports.UserCustomAction = UserCustomAction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/usercustomactions.js\n// module id = 19\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage = require(\"../../utils/storage\");\nvar exceptions_1 = require(\"../../utils/exceptions\");\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nvar CachingConfigurationProvider = (function () {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = \"_configcache_\" + cacheKey;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\n        return this.wrappedProvider;\n    };\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\n        var _this = this;\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        var cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise(function (resolve) {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        var providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then(function (providedConfig) {\n            _this.store.put(_this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    };\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\n        var pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    };\n    return CachingConfigurationProvider;\n}());\nexports.default = CachingConfigurationProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/cachingConfigurationProvider.js\n// module id = 20\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Makes requests using the fetch API\n */\nvar FetchClient = (function () {\n    function FetchClient() {\n    }\n    FetchClient.prototype.fetch = function (url, options) {\n        return global.fetch(url, options);\n    };\n    return FetchClient;\n}());\nexports.FetchClient = FetchClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/fetchclient.js\n// module id = 21\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = require(\"../utils/storage\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar CachingOptions = (function () {\n    function CachingOptions(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\n        get: function () {\n            if (this.storeName === \"local\") {\n                return CachingOptions.storage.local;\n            }\n            else {\n                return CachingOptions.storage.session;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CachingOptions;\n}());\nCachingOptions.storage = new storage_1.PnPClientStorage();\nexports.CachingOptions = CachingOptions;\nvar CachingParserWrapper = (function () {\n    function CachingParserWrapper(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    CachingParserWrapper.prototype.parse = function (response) {\n        var _this = this;\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(function (data) {\n            if (_this._cacheOptions.store !== null) {\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    };\n    return CachingParserWrapper;\n}());\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/caching.js\n// module id = 22\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of List objects\n *\n */\nvar Features = (function (_super) {\n    __extends(Features, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Features(baseUrl, path) {\n        if (path === void 0) { path = \"features\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    Features.prototype.getById = function (id) {\n        var feature = new Feature(this);\n        feature.concat(\"('\" + id + \"')\");\n        return feature;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    Features.prototype.add = function (id, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"add\", true).post({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(function (data) {\n            return {\n                data: data,\n                feature: _this.getById(id),\n            };\n        });\n    };\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    Features.prototype.remove = function (id, force) {\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"remove\", true).post({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    };\n    return Features;\n}(queryable_1.QueryableCollection));\nexports.Features = Features;\nvar Feature = (function (_super) {\n    __extends(Feature, _super);\n    function Feature() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    Feature.prototype.deactivate = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var removeDependency = this.addBatchDependency();\n        var idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(function (feature) {\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    };\n    return Feature;\n}(queryable_1.QueryableInstance));\nexports.Feature = Feature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/features.js\n// module id = 23\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\nvar types_1 = require(\"./types\");\n/**\n * Describes a collection of Field objects\n *\n */\nvar Fields = (function (_super) {\n    __extends(Fields, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Fields(baseUrl, path) {\n        if (path === void 0) { path = \"fields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    Fields.prototype.getByTitle = function (title) {\n        return new Field(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param title The Id of the list\n     */\n    Fields.prototype.getById = function (id) {\n        var f = new Field(this);\n        f.concat(\"('\" + id + \"')\");\n        return f;\n    };\n    /**\n     * Creates a field based on the specified schema\n     */\n    Fields.prototype.createFieldAsXml = function (xml) {\n        var _this = this;\n        var info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        return this.clone(Fields, \"createfieldasxml\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.add = function (title, fieldType, properties) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.clone(Fields, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addText = function (title, maxLength, properties) {\n        if (maxLength === void 0) { maxLength = 255; }\n        var props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\n        if (outputType === void 0) { outputType = types_1.FieldTypes.Text; }\n        var props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.DateTimeFieldFormatType.DateOnly; }\n        if (calendarType === void 0) { calendarType = types_1.CalendarType.Gregorian; }\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\n        var props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\n        var props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\n        var props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\n        if (numberOfLines === void 0) { numberOfLines = 6; }\n        if (richText === void 0) { richText = true; }\n        if (restrictedMode === void 0) { restrictedMode = false; }\n        if (appendOnly === void 0) { appendOnly = false; }\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\n        var props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.UrlFieldFormatType.Hyperlink; }\n        var props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    };\n    return Fields;\n}(queryable_1.QueryableCollection));\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nvar Field = (function (_super) {\n    __extends(Field, _super);\n    function Field() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    Field.prototype.update = function (properties, fieldType) {\n        var _this = this;\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                field: _this,\n            };\n        });\n    };\n    /**\n     * Delete this fields\n     *\n     */\n    Field.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    Field.prototype.setShowInDisplayForm = function (show) {\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    Field.prototype.setShowInEditForm = function (show) {\n        return this.clone(Field, \"setshowineditform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    Field.prototype.setShowInNewForm = function (show) {\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\", true).post();\n    };\n    return Field;\n}(queryable_1.QueryableInstance));\nexports.Field = Field;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/fields.js\n// module id = 24\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar queryable_1 = require(\"./queryable\");\n/**\n * Represents a collection of navigation nodes\n *\n */\nvar NavigationNodes = (function (_super) {\n    __extends(NavigationNodes, _super);\n    function NavigationNodes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    NavigationNodes.prototype.getById = function (id) {\n        var node = new NavigationNode(this);\n        node.concat(\"(\" + id + \")\");\n        return node;\n    };\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    NavigationNodes.prototype.add = function (title, url, visible) {\n        var _this = this;\n        if (visible === void 0) { visible = true; }\n        var postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        return this.clone(NavigationNodes, null, true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                node: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\n        var postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        return this.clone(NavigationNodes, \"MoveAfter\", true).post({ body: postBody });\n    };\n    return NavigationNodes;\n}(queryable_1.QueryableCollection));\nexports.NavigationNodes = NavigationNodes;\nvar NavigationNode = (function (_super) {\n    __extends(NavigationNode, _super);\n    function NavigationNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\n        /**\n         * Represents the child nodes of this node\n         */\n        get: function () {\n            return new NavigationNodes(this, \"Children\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this node based on the supplied properties\n     *\n     * @param properties The hash of key/value pairs to update\n     */\n    NavigationNode.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                node: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this node and any child nodes\n     */\n    NavigationNode.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return NavigationNode;\n}(queryable_1.QueryableInstance));\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nvar Navigation = (function (_super) {\n    __extends(Navigation, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Navigation(baseUrl, path) {\n        if (path === void 0) { path = \"navigation\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\n        /**\n         * Gets the quicklaunch navigation for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"quicklaunch\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\n        /**\n         * Gets the top bar navigation navigation for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"topnavigationbar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Navigation;\n}(queryable_1.Queryable));\nexports.Navigation = Navigation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/navigation.js\n// module id = 25\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webs_1 = require(\"./webs\");\nvar roles_1 = require(\"./roles\");\nvar types_1 = require(\"./types\");\nvar queryable_1 = require(\"./queryable\");\nvar QueryableSecurable = (function (_super) {\n    __extends(QueryableSecurable, _super);\n    function QueryableSecurable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(QueryableSecurable.prototype, \"roleAssignments\", {\n        /**\n         * Gets the set of role assignments for this item\n         *\n         */\n        get: function () {\n            return new roles_1.RoleAssignments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\n        /**\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    QueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\n        var q = this.clone(queryable_1.Queryable, \"getUserEffectivePermissions(@user)\", true);\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.getAs();\n    };\n    /**\n     * Gets the effective permissions for the current user\n     */\n    QueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\n        var _this = this;\n        var w = webs_1.Web.fromUrl(this.toUrl());\n        return w.currentUser.select(\"LoginName\").getAs().then(function (user) {\n            return _this.getUserEffectivePermissions(user.LoginName);\n        });\n    };\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    QueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\n        return this.clone(QueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\", true).post();\n    };\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    QueryableSecurable.prototype.resetRoleInheritance = function () {\n        return this.clone(QueryableSecurable, \"resetroleinheritance\", true).post();\n    };\n    /**\n     * Determines if a given user has the appropriate permissions\n     *\n     * @param loginName The user to check\n     * @param permission The permission being checked\n     */\n    QueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\n        var _this = this;\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Determines if the current user has the requested permissions\n     *\n     * @param permission The permission we wish to check\n     */\n    QueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\n        var _this = this;\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Taken from sp.js, checks the supplied permissions against the mask\n     *\n     * @param value The security principal's permissions on the given object\n     * @param perm The permission checked against the value\n     */\n    /* tslint:disable:no-bitwise */\n    QueryableSecurable.prototype.hasPermissions = function (value, perm) {\n        if (!perm) {\n            return true;\n        }\n        if (perm === types_1.PermissionKind.FullMask) {\n            return (value.High & 32767) === 32767 && value.Low === 65535;\n        }\n        perm = perm - 1;\n        var num = 1;\n        if (perm >= 0 && perm < 32) {\n            num = num << perm;\n            return 0 !== (value.Low & num);\n        }\n        else if (perm >= 32 && perm < 64) {\n            num = num << perm - 32;\n            return 0 !== (value.High & num);\n        }\n        return false;\n    };\n    return QueryableSecurable;\n}(queryable_1.QueryableInstance));\nexports.QueryableSecurable = QueryableSecurable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryablesecurable.js\n// module id = 26\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes the search API\n *\n */\nvar Search = (function (_super) {\n    __extends(Search, _super);\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    function Search(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/postquery\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    Search.prototype.execute = function (query) {\n        var formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = { results: query.SelectProperties };\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = { results: query.RefinementFilters };\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = { results: query.SortList };\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = { results: query.HithighlightedProperties };\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = { results: query.ReorderingRules };\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = { results: query.Properties };\n        }\n        var postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.post({ body: postBody }).then(function (data) { return new SearchResults(data); });\n    };\n    return Search;\n}(queryable_1.QueryableInstance));\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nvar SearchResults = (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResults(rawResponse) {\n        var response = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n        this.PrimarySearchResults = this.formatSearchResults(response.PrimaryQueryResult.RelevantResults.Table.Rows);\n        this.RawSearchResults = response;\n        this.ElapsedTime = response.ElapsedTime;\n        this.RowCount = response.PrimaryQueryResult.RelevantResults.RowCount;\n        this.TotalRows = response.PrimaryQueryResult.RelevantResults.TotalRows;\n        this.TotalRowsIncludingDuplicates = response.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n    }\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\n        var results = new Array(), tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\n            var i = tempResults_1[_i];\n            results.push(new SearchResult(i.Cells));\n        }\n        return results;\n    };\n    return SearchResults;\n}());\nexports.SearchResults = SearchResults;\n/**\n * Describes the SearchResult class\n */\nvar SearchResult = (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResult(rawItem) {\n        var item = rawItem.results ? rawItem.results : rawItem;\n        for (var _i = 0, item_1 = item; _i < item_1.length; _i++) {\n            var i = item_1[_i];\n            Object.defineProperty(this, i.Key, {\n                configurable: false,\n                enumerable: false,\n                value: i.Value,\n                writable: false,\n            });\n        }\n    }\n    return SearchResult;\n}());\nexports.SearchResult = SearchResult;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/search.js\n// module id = 27\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar SearchSuggest = (function (_super) {\n    __extends(SearchSuggest, _super);\n    function SearchSuggest(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/suggest\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    SearchSuggest.prototype.execute = function (query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\n    };\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    };\n    return SearchSuggest;\n}(queryable_1.QueryableInstance));\nexports.SearchSuggest = SearchSuggest;\nvar SearchSuggestResult = (function () {\n    function SearchSuggestResult(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n    return SearchSuggestResult;\n}());\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/searchsuggest.js\n// module id = 28\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar webs_1 = require(\"./webs\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar features_1 = require(\"./features\");\n/**\n * Describes a site collection\n *\n */\nvar Site = (function (_super) {\n    __extends(Site, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Site(baseUrl, path) {\n        if (path === void 0) { path = \"_api/site\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\n        /**\n         * Gets the root web of the site collection\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this, \"rootweb\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"features\", {\n        /**\n         * Gets the active features for this site\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the context information for the site.\n     */\n    Site.prototype.getContextInfo = function () {\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.post().then(function (data) {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                var info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the site URL from a page URL.\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Creates a new batch for requests within the context of context this site\n     *\n     */\n    Site.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    return Site;\n}(queryable_1.QueryableInstance));\nexports.Site = Site;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/site.js\n// module id = 29\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a collection of all site collection users\n *\n */\nvar SiteUsers = (function (_super) {\n    __extends(SiteUsers, _super);\n    /**\n     * Creates a new instance of the Users class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteUsers(baseUrl, path) {\n        if (path === void 0) { path = \"siteusers\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email of the user\n     */\n    SiteUsers.prototype.getByEmail = function (email) {\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n    };\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    SiteUsers.prototype.getById = function (id) {\n        return new SiteUser(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The email address of the user\n     */\n    SiteUsers.prototype.getByLoginName = function (loginName) {\n        var su = new SiteUser(this);\n        su.concat(\"(@v)\");\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return su;\n    };\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    SiteUsers.prototype.removeById = function (id) {\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\", true).post();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\", true);\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return o.post();\n    };\n    /**\n     * Add a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    SiteUsers.prototype.add = function (loginName) {\n        var _this = this;\n        return this.clone(SiteUsers, null, true).post({\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\n        }).then(function () { return _this.getByLoginName(loginName); });\n    };\n    return SiteUsers;\n}(queryable_1.QueryableCollection));\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nvar SiteUser = (function (_super) {\n    __extends(SiteUser, _super);\n    function SiteUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\n        /**\n         * Get's the groups for this user.\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    SiteUser.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                user: _this,\n            };\n        });\n    };\n    /**\n     * Delete this user\n     *\n     */\n    SiteUser.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return SiteUser;\n}(queryable_1.QueryableInstance));\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nvar CurrentUser = (function (_super) {\n    __extends(CurrentUser, _super);\n    function CurrentUser(baseUrl, path) {\n        if (path === void 0) { path = \"currentuser\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return CurrentUser;\n}(queryable_1.QueryableInstance));\nexports.CurrentUser = CurrentUser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/siteusers.js\n// module id = 30\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = require(\"./logging\");\nfunction deprecated(message) {\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            logging_1.Logger.log({\n                data: {\n                    descriptor: descriptor,\n                    propertyKey: propertyKey,\n                    target: target,\n                },\n                level: logging_1.LogLevel.Warning,\n                message: message,\n            });\n            return method.apply(this, args);\n        };\n    };\n}\nexports.deprecated = deprecated;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/decorators.js\n// module id = 31\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 32\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = require(\"../collections/collections\");\n/**\n * Class used to manage the current application settings\n *\n */\nvar Settings = (function () {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    function Settings() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    Settings.prototype.add = function (key, value) {\n        this._settings.add(key, value);\n    };\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    Settings.prototype.addJSON = function (key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    };\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    Settings.prototype.apply = function (hash) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                _this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    Settings.prototype.load = function (provider) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            provider.getConfiguration().then(function (value) {\n                _this._settings.merge(value);\n                resolve();\n            }).catch(function (reason) {\n                reject(reason);\n            });\n        });\n    };\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    Settings.prototype.get = function (key) {\n        return this._settings.get(key);\n    };\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    Settings.prototype.getJSON = function (key) {\n        var o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    };\n    return Settings;\n}());\nexports.Settings = Settings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/configuration.js\n// module id = 33\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search_1 = require(\"./search\");\nvar searchsuggest_1 = require(\"./searchsuggest\");\nvar site_1 = require(\"./site\");\nvar webs_1 = require(\"./webs\");\nvar util_1 = require(\"../utils/util\");\nvar userprofiles_1 = require(\"./userprofiles\");\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Root of the SharePoint REST module\n */\nvar Rest = (function () {\n    function Rest() {\n    }\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    Rest.prototype.searchSuggest = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(\"\").execute(finalQuery);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    Rest.prototype.search = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(\"\").execute(finalQuery);\n    };\n    Object.defineProperty(Rest.prototype, \"site\", {\n        /**\n         * Begins a site collection scoped REST request\n         *\n         */\n        get: function () {\n            return new site_1.Site(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rest.prototype, \"web\", {\n        /**\n         * Begins a web scoped REST request\n         *\n         */\n        get: function () {\n            return new webs_1.Web(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Rest.prototype, \"profiles\", {\n        /**\n         * Access to user profile methods\n         *\n         */\n        get: function () {\n            return new userprofiles_1.UserProfileQuery(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch object for use with the Queryable.addToBatch method\n     *\n     */\n    Rest.prototype.createBatch = function () {\n        return this.web.createBatch();\n    };\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    Rest.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    };\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    Rest.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    };\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    Rest.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        var instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance;\n    };\n    return Rest;\n}());\nexports.Rest = Rest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/rest.js\n// module id = 34\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"../sharepoint/index\"));\nvar httpclient_1 = require(\"../net/httpclient\");\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = require(\"../net/sprequestexecutorclient\");\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = require(\"../net/nodefetchclient\");\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = require(\"../net/fetchclient\");\nexports.FetchClient = fetchclient_1.FetchClient;\n__export(require(\"../configuration/providers/index\"));\nvar collections_1 = require(\"../collections/collections\");\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = require(\"../utils/util\");\nexports.Util = util_1.Util;\n__export(require(\"../utils/logging\"));\n__export(require(\"../utils/exceptions\"));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/types/index.js\n// module id = 35\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = require(\"./spListConfigurationProvider\");\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/index.js\n// module id = 36\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nvar SPListConfigurationProvider = (function () {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle) {\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\n        /**\n         * Gets the url of the SharePoint site, where the configuration list is located\n         *\n         * @return {string} Url address of the site\n         */\n        get: function () {\n            return this.sourceWeb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\n        /**\n         * Gets the title of the SharePoint list, which contains the configuration settings\n         *\n         * @return {string} List title\n         */\n        get: function () {\n            return this.sourceListTitle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then(function (data) {\n            return data.reduce(function (configuration, item) {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    };\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    SPListConfigurationProvider.prototype.asCaching = function () {\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    };\n    return SPListConfigurationProvider;\n}());\nexports.default = SPListConfigurationProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/spListConfigurationProvider.js\n// module id = 37\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = require(\"../collections/collections\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"../sharepoint/odata\");\nvar CachedDigest = (function () {\n    function CachedDigest() {\n    }\n    return CachedDigest;\n}());\nexports.CachedDigest = CachedDigest;\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\nvar digests = new collections_1.Dictionary();\nvar DigestCache = (function () {\n    function DigestCache(_httpClient, _digests) {\n        if (_digests === void 0) { _digests = digests; }\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    DigestCache.prototype.getDigest = function (webUrl) {\n        var _this = this;\n        var cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            var now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Accept\": \"application/json;odata=verbose\",\n                \"Content-type\": \"application/json;odata=verbose;charset=utf-8\",\n            },\n            method: \"POST\",\n        }).then(function (response) {\n            var parser = new odata_1.ODataDefaultParser();\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\n        }).then(function (data) {\n            var newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            var seconds = data.FormDigestTimeoutSeconds;\n            var expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            _this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    };\n    DigestCache.prototype.clear = function () {\n        this._digests.clear();\n    };\n    return DigestCache;\n}());\nexports.DigestCache = DigestCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/digestcache.js\n// module id = 38\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nvar NodeFetchClient = (function () {\n    function NodeFetchClient() {\n    }\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    NodeFetchClient.prototype.fetch = function () {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    };\n    return NodeFetchClient;\n}());\nexports.NodeFetchClient = NodeFetchClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/nodefetchclientbrowser.js\n// module id = 39\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nvar SPRequestExecutorClient = (function () {\n    function SPRequestExecutorClient() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = function (spResponse) {\n            var responseHeaders = new Headers();\n            for (var h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\n        var headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        return new Promise(function (resolve, reject) {\n            var requestOptions = {\n                error: function (error) {\n                    reject(_this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: function (response) {\n                    resolve(_this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n            }\n            else {\n                requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n            }\n            executor.executeAsync(requestOptions);\n        });\n    };\n    return SPRequestExecutorClient;\n}());\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/sprequestexecutorclient.js\n// module id = 40\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./utils/util\");\nvar storage_1 = require(\"./utils/storage\");\nvar configuration_1 = require(\"./configuration/configuration\");\nvar logging_1 = require(\"./utils/logging\");\nvar rest_1 = require(\"./sharepoint/rest\");\nvar pnplibconfig_1 = require(\"./configuration/pnplibconfig\");\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the REST interface\n */\nexports.sp = new rest_1.Rest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Expose a subset of classes from the library for public consumption\n */\n__export(require(\"./types/index\"));\n// creating this class instead of directly assigning to default fixes issue #116\nvar Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pnp.js\n// module id = 41\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar odata_1 = require(\"./odata\");\n/**\n * Describes a collection of Item objects\n *\n */\nvar AttachmentFiles = (function (_super) {\n    __extends(AttachmentFiles, _super);\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n     */\n    function AttachmentFiles(baseUrl, path) {\n        if (path === void 0) { path = \"AttachmentFiles\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    AttachmentFiles.prototype.getByName = function (name) {\n        var f = new AttachmentFile(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new attachment to the collection. Not supported for batching.\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    AttachmentFiles.prototype.add = function (name, content) {\n        var _this = this;\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\").post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(name),\n            };\n        });\n    };\n    /**\n     * Adds mjultiple new attachment to the collection. Not supported for batching.\n     *\n     * @files name The collection of files to add\n     */\n    AttachmentFiles.prototype.addMultiple = function (files) {\n        var _this = this;\n        // add the files in series so we don't get update conflicts\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\").post({\n            body: file.content,\n        }); }); }, Promise.resolve());\n    };\n    return AttachmentFiles;\n}(queryable_1.QueryableCollection));\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nvar AttachmentFile = (function (_super) {\n    __extends(AttachmentFile, _super);\n    function AttachmentFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    AttachmentFile.prototype.getText = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.TextFileParser());\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    AttachmentFile.prototype.getBlob = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BlobFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getBuffer = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BufferFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getJSON = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.JSONFileParser());\n    };\n    /**\n     * Sets the content of a file. Not supported for batching\n     *\n     * @param content The value to set for the file contents\n     */\n    AttachmentFile.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(AttachmentFile, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new AttachmentFile(_this); });\n    };\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return AttachmentFile;\n}(queryable_1.QueryableInstance));\nexports.AttachmentFile = AttachmentFile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/attachmentfiles.js\n// module id = 42\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of Field objects\n *\n */\nvar Forms = (function (_super) {\n    __extends(Forms, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Forms(baseUrl, path) {\n        if (path === void 0) { path = \"forms\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    Forms.prototype.getById = function (id) {\n        var i = new Form(this);\n        i.concat(\"('\" + id + \"')\");\n        return i;\n    };\n    return Forms;\n}(queryable_1.QueryableCollection));\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nvar Form = (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Form;\n}(queryable_1.QueryableInstance));\nexports.Form = Form;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/forms.js\n// module id = 43\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./caching\"));\nvar files_1 = require(\"./files\");\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nvar folders_1 = require(\"./folders\");\nexports.Folder = folders_1.Folder;\nexports.Folders = folders_1.Folders;\nvar items_1 = require(\"./items\");\nexports.Item = items_1.Item;\nexports.Items = items_1.Items;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = require(\"./navigation\");\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = require(\"./lists\");\nexports.List = lists_1.List;\nexports.Lists = lists_1.Lists;\nvar odata_1 = require(\"./odata\");\nexports.extractOdataId = odata_1.extractOdataId;\nexports.ODataParserBase = odata_1.ODataParserBase;\nexports.ODataDefaultParser = odata_1.ODataDefaultParser;\nexports.ODataRaw = odata_1.ODataRaw;\nexports.ODataValue = odata_1.ODataValue;\nexports.ODataEntity = odata_1.ODataEntity;\nexports.ODataEntityArray = odata_1.ODataEntityArray;\nexports.TextFileParser = odata_1.TextFileParser;\nexports.BlobFileParser = odata_1.BlobFileParser;\nexports.BufferFileParser = odata_1.BufferFileParser;\nexports.JSONFileParser = odata_1.JSONFileParser;\nvar queryable_1 = require(\"./queryable\");\nexports.Queryable = queryable_1.Queryable;\nexports.QueryableInstance = queryable_1.QueryableInstance;\nexports.QueryableCollection = queryable_1.QueryableCollection;\nvar roles_1 = require(\"./roles\");\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = require(\"./search\");\nexports.Search = search_1.Search;\nexports.SearchResult = search_1.SearchResult;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nvar searchsuggest_1 = require(\"./searchsuggest\");\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = require(\"./site\");\nexports.Site = site_1.Site;\n__export(require(\"./types\"));\nvar webs_1 = require(\"./webs\");\nexports.Web = webs_1.Web;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/index.js\n// module id = 44\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = require(\"./caching\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar logging_1 = require(\"../utils/logging\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Processes a given context through the request pipeline\n *\n * @param context The request context we are processing\n */\nfunction pipe(context) {\n    // this is the beginning of the extensible pipeline in future versions\n    var pipeline = [\n        PipelineMethods.logStart,\n        PipelineMethods.caching,\n        PipelineMethods.send,\n        PipelineMethods.logEnd,\n    ];\n    return pipeline.reduce(function (chain, next) { return chain.then(function (c) { return next(c); }); }, Promise.resolve(context))\n        .then(function (ctx) { return PipelineMethods.returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            return method.apply(target, args);\n        };\n    };\n}\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request to \" + context.requestAbsoluteUrl,\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store, i.e. on node\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        return PipelineMethods.setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request.\", logging_1.LogLevel.Info);\n                resolve(p.then(function (result) { return PipelineMethods.setResult(context, result); }));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = new httpclient_1.HttpClient();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return PipelineMethods.setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request to \" + context.requestAbsoluteUrl,\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * At the end of the pipeline resolves the request's result\n     */\n    PipelineMethods.returnResult = function (context) {\n        logging_1.Logger.log({\n            data: context.result,\n            level: logging_1.LogLevel.Verbose,\n            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning, see data property for value.\",\n        });\n        return Promise.resolve(context.result);\n    };\n    /**\n     * Sets the result on the context\n     */\n    PipelineMethods.setResult = function (context, value) {\n        return new Promise(function (resolve) {\n            context.result = value;\n            context.hasResult = true;\n            resolve(context);\n        });\n    };\n    return PipelineMethods;\n}());\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logStart\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"caching\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"send\", null);\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logEnd\", null);\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"returnResult\", null);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryablerequest.js\n// module id = 45\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar RelatedItemManagerImpl = (function (_super) {\n    __extends(RelatedItemManagerImpl, _super);\n    function RelatedItemManagerImpl(baseUrl, path) {\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    RelatedItemManagerImpl.FromUrl = function (url) {\n        if (url === null) {\n            return new RelatedItemManagerImpl(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new RelatedItemManagerImpl(url.substr(0, index));\n        }\n        return new RelatedItemManagerImpl(url);\n    };\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetPageOneRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemID,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\n     *\n     * @param sourceListName The source list name or list id\n     * @param sourceItemId The source item id\n     * @param targetItemUrl The target item url\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkToUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                TargetItemUrl: targetItemUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\n     *\n     * @param sourceItemUrl The source item url\n     * @param targetListName The target list name or list id\n     * @param targetItemId The target item id\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkFromUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemUrl: sourceItemUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".DeleteSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryDeleteReverseLink: tryDeleteReverseLink,\n            }),\n        });\n    };\n    return RelatedItemManagerImpl;\n}(queryable_1.Queryable));\nexports.RelatedItemManagerImpl = RelatedItemManagerImpl;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/relateditems.js\n// module id = 46\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nvar Subscriptions = (function (_super) {\n    __extends(Subscriptions, _super);\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n     */\n    function Subscriptions(baseUrl, path) {\n        if (path === void 0) { path = \"subscriptions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     */\n    Subscriptions.prototype.getById = function (subscriptionId) {\n        var subscription = new Subscription(this);\n        subscription.concat(\"('\" + subscriptionId + \"')\");\n        return subscription;\n    };\n    /**\n     * Create a new webhook subscription\n     *\n     */\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.post({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n            return { data: result, subscription: _this.getById(result.id) };\n        });\n    };\n    return Subscriptions;\n}(queryable_1.QueryableCollection));\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Update a webhook subscription\n     *\n     */\n    Subscription.prototype.update = function (expirationDate) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patch({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n            return { data: data, subscription: _this };\n        });\n    };\n    /**\n     * Remove a webhook subscription\n     *\n     */\n    Subscription.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return Subscription;\n}(queryable_1.QueryableInstance));\nexports.Subscription = Subscription;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/subscriptions.js\n// module id = 47\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar files_1 = require(\"../utils/files\");\nvar odata_1 = require(\"./odata\");\nvar UserProfileQuery = (function (_super) {\n    __extends(UserProfileQuery, _super);\n    function UserProfileQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\n        var _this = _super.call(this, baseUrl, path) || this;\n        _this.profileLoader = new ProfileLoader(baseUrl);\n        return _this;\n    }\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\n        /**\n         * The URL of the edit profile page for the current user.\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\n        /**\n         * A Boolean value that indicates whether the current user's People I'm Following list is public.\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * A Boolean value that indicates whether the current user's People I'm Following list is public.\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Checks whether the current user is following the specified user.\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets tags that the user is following.\n     *\n     * @param maxCount The maximum number of tags to get.\n     */\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\n        if (maxCount === void 0) { maxCount = 20; }\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\", true).get();\n    };\n    /**\n     * Gets the people who are following the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\n        /**\n         * Gets the people who are following the current user.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\n        /**\n         * Gets user properties for the current user.\n         *\n         */\n        get: function () {\n            return new UserProfileQuery(this, \"getmyproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the people who the specified user is following.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\n        /**\n         * Gets the most popular tags.\n         *\n         */\n        get: function () {\n            var q = this.clone(UserProfileQuery, null, true);\n            q.concat(\".gettrendingtags\");\n            return q.get();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the specified user profile property for the specified user.\n     *\n     * @param loginName The account name of the user.\n     * @param propertyName The case-sensitive name of the property to get.\n     */\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Removes the specified user from the user's list of suggested people to follow.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.post();\n    };\n    /**\n     * Checks whether the first user is following the second user.\n     *\n     * @param follower The account name of the user who might be following followee.\n     * @param followee The account name of the user who might be followed.\n     */\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\n        var q = this.clone(UserProfileQuery, null, true);\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    };\n    /**\n     * Uploads and sets the user profile picture. Not supported for batching.\n     *\n     * @param profilePicSource Blob data representing the user's picture\n     */\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            files_1.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\n                request.post({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(function (_) { return resolve(); });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\n        var emails = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            emails[_i] = arguments[_i];\n        }\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            return this.profileLoader.ownerUserProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile that corresponds to the current user.\n         */\n        get: function () {\n            return this.profileLoader.userProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    };\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\n        return this.profileLoader.shareAllSocialData(share);\n    };\n    return UserProfileQuery;\n}(queryable_1.QueryableInstance));\nexports.UserProfileQuery = UserProfileQuery;\nvar ProfileLoader = (function (_super) {\n    __extends(ProfileLoader, _super);\n    function ProfileLoader(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\").post({\n            body: JSON.stringify({ \"emailIDs\": emails }),\n        });\n    };\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n            if (this.hasBatch) {\n                q = q.inBatch(this.batch);\n            }\n            return q.postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile that corresponds to the current user.\n         *\n         */\n        get: function () {\n            return this.clone(ProfileLoader, \"getuserprofile\", true).postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\", true).post();\n    };\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\", true).post();\n    };\n    return ProfileLoader;\n}(queryable_1.Queryable));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/userprofiles.js\n// module id = 48\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes the views available in the current context\n *\n */\nvar Views = (function (_super) {\n    __extends(Views, _super);\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Views(baseUrl, path) {\n        if (path === void 0) { path = \"views\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    Views.prototype.getById = function (id) {\n        var v = new View(this);\n        v.concat(\"('\" + id + \"')\");\n        return v;\n    };\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    Views.prototype.getByTitle = function (title) {\n        return new View(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    /*tslint:disable max-line-length */\n    Views.prototype.add = function (title, personalView, additionalSettings) {\n        var _this = this;\n        if (personalView === void 0) { personalView = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.clone(Views, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                view: _this.getById(data.Id),\n            };\n        });\n    };\n    return Views;\n}(queryable_1.QueryableCollection));\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(View.prototype, \"fields\", {\n        get: function () {\n            return new ViewFields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    View.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                view: _this,\n            };\n        });\n    };\n    /**\n     * Delete this view\n     *\n     */\n    View.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    View.prototype.renderAsHtml = function () {\n        return this.clone(queryable_1.Queryable, \"renderashtml\", true).get();\n    };\n    return View;\n}(queryable_1.QueryableInstance));\nexports.View = View;\nvar ViewFields = (function (_super) {\n    __extends(ViewFields, _super);\n    function ViewFields(baseUrl, path) {\n        if (path === void 0) { path = \"viewfields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    ViewFields.prototype.getSchemaXml = function () {\n        return this.clone(queryable_1.Queryable, \"schemaxml\", true).get();\n    };\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\", true).post();\n    };\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    ViewFields.prototype.move = function (fieldInternalName, index) {\n        return this.clone(ViewFields, \"moveviewfieldto\", true).post({\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\n        });\n    };\n    /**\n     * Removes all the fields from the collection.\n     */\n    ViewFields.prototype.removeAll = function () {\n        return this.clone(ViewFields, \"removeallviewfields\", true).post();\n    };\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    ViewFields.prototype.remove = function (fieldInternalName) {\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\", true).post();\n    };\n    return ViewFields;\n}(queryable_1.QueryableCollection));\nexports.ViewFields = ViewFields;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/views.js\n// module id = 49\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar LimitedWebPartManager = (function (_super) {\n    __extends(LimitedWebPartManager, _super);\n    function LimitedWebPartManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\n        /**\n         * Gets the set of web part definitions contained by this web part manager\n         *\n         */\n        get: function () {\n            return new WebPartDefinitions(this, \"webparts\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    LimitedWebPartManager.prototype.export = function (id) {\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\", true).post({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    };\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    LimitedWebPartManager.prototype.import = function (xml) {\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\", true).post({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    };\n    return LimitedWebPartManager;\n}(queryable_1.Queryable));\nexports.LimitedWebPartManager = LimitedWebPartManager;\nvar WebPartDefinitions = (function (_super) {\n    __extends(WebPartDefinitions, _super);\n    function WebPartDefinitions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id GUID id of the web part definition to get\n     */\n    WebPartDefinitions.prototype.getById = function (id) {\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\n    };\n    return WebPartDefinitions;\n}(queryable_1.QueryableCollection));\nexports.WebPartDefinitions = WebPartDefinitions;\nvar WebPartDefinition = (function (_super) {\n    __extends(WebPartDefinition, _super);\n    function WebPartDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\n        /**\n         * Gets the webpart information associated with this definition\n         */\n        get: function () {\n            return new WebPart(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    WebPartDefinition.prototype.delete = function () {\n        return this.clone(WebPartDefinition, \"DeleteWebPart\", true).post();\n    };\n    return WebPartDefinition;\n}(queryable_1.QueryableInstance));\nexports.WebPartDefinition = WebPartDefinition;\nvar WebPart = (function (_super) {\n    __extends(WebPart, _super);\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    function WebPart(baseUrl, path) {\n        if (path === void 0) { path = \"webpart\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return WebPart;\n}(queryable_1.QueryableInstance));\nexports.WebPart = WebPart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/webparts.js\n// module id = 50\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/files.js\n// module id = 51\n// module chunks = 0"],"sourceRoot":""}