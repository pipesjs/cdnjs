{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///pnp.min.js","webpack:///webpack/bootstrap 69edaa4614fda3f207f5","webpack:///./lib/utils/util.js","webpack:///./lib/sharepoint/queryable.js","webpack:///./lib/sharepoint/odata.js","webpack:///./lib/utils/exceptions.js","webpack:///./lib/configuration/pnplibconfig.js","webpack:///./lib/utils/logging.js","webpack:///./lib/collections/collections.js","webpack:///./lib/sharepoint/files.js","webpack:///./lib/sharepoint/webs.js","webpack:///./lib/sharepoint/folders.js","webpack:///./lib/sharepoint/items.js","webpack:///./lib/sharepoint/lists.js","webpack:///./lib/sharepoint/queryableshareable.js","webpack:///./lib/sharepoint/types.js","webpack:///./lib/utils/storage.js","webpack:///./lib/net/httpclient.js","webpack:///./lib/sharepoint/contenttypes.js","webpack:///./lib/sharepoint/roles.js","webpack:///./lib/sharepoint/sitegroups.js","webpack:///./lib/sharepoint/usercustomactions.js","webpack:///./lib/configuration/providers/cachingConfigurationProvider.js","webpack:///./lib/net/fetchclient.js","webpack:///./lib/sharepoint/caching.js","webpack:///./lib/sharepoint/features.js","webpack:///./lib/sharepoint/fields.js","webpack:///./lib/sharepoint/navigation.js","webpack:///./lib/sharepoint/queryablesecurable.js","webpack:///./lib/sharepoint/search.js","webpack:///./lib/sharepoint/searchsuggest.js","webpack:///./lib/sharepoint/site.js","webpack:///./lib/sharepoint/siteusers.js","webpack:///./lib/sharepoint/utilities.js","webpack:///(webpack)/buildin/global.js","webpack:///./lib/configuration/configuration.js","webpack:///./lib/sharepoint/rest.js","webpack:///./lib/types/index.js","webpack:///./lib/configuration/providers/index.js","webpack:///./lib/configuration/providers/spListConfigurationProvider.js","webpack:///./lib/net/digestcache.js","webpack:///./lib/net/nodefetchclientbrowser.js","webpack:///./lib/net/sprequestexecutorclient.js","webpack:///./lib/pnp.js","webpack:///./lib/sharepoint/attachmentfiles.js","webpack:///./lib/sharepoint/forms.js","webpack:///./lib/sharepoint/index.js","webpack:///./lib/sharepoint/pipeline.js","webpack:///./lib/sharepoint/relateditems.js","webpack:///./lib/sharepoint/subscriptions.js","webpack:///./lib/sharepoint/userprofiles.js","webpack:///./lib/sharepoint/views.js","webpack:///./lib/sharepoint/webparts.js","webpack:///./lib/utils/decorators.js","webpack:///./lib/utils/files.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","pnplibconfig_1","Util","getCtxCallback","context","method","params","_i","arguments","length","apply","urlParamExists","replace","RegExp","test","location","search","getUrlParamByName","regex","results","exec","decodeURIComponent","getUrlParamBoolByName","stringInsert","target","index","substring","dateAdd","date","interval","units","ret","Date","toLocaleString","toLowerCase","setFullYear","getFullYear","setMonth","getMonth","setDate","getDate","setTime","getTime","undefined","loadStylesheet","path","avoidCache","encodeURIComponent","toString","head","document","getElementsByTagName","e","createElement","appendChild","setAttribute","combinePaths","paths","filter","stringIsNullOrEmpty","map","join","getRandomString","chars","text","Array","possible","charAt","Math","floor","random","getGUID","r","isFunction","candidateFunction","isArray","array","constructor","extend","source","noOverwrite","check","getOwnPropertyNames","v","reduce","t","isUrlAbsolute","url","toAbsoluteUrl","candidateUrl","Promise","resolve","RuntimeConfig","baseUrl","_spPageContextInfo","webAbsoluteUrl","webServerRelativeUrl","indexOf","substr","__extends","extendStatics","setPrototypeOf","__proto__","b","__","create","util_1","collections_1","odata_1","exceptions_1","logging_1","pipeline_1","Queryable","_query","Dictionary","_batch","urlStr","lastIndexOf","_parentUrl","_url","slice","q","add","concat","pathPart","append","addBatchDependency","hasBatch","addDependency","as","inBatch","batch","AlreadyInBatchException","usingCaching","options","globalCacheDisable","_useCaching","_cachingOptions","toUrl","toUrlAndQuery","aliasedParams","match","labelName","Logger","write","LogLevel","Verbose","merge","count","getKeys","key","getParent","parentUrl","parent","query","clone","additionalPath","includeBatch","parser","getOptions","ODataDefaultParser","toRequestContext","then","pipe","getAs","post","postOptions","postAs","patch","patchOptions","delete","deleteOptions","verb","pipeline","_this","PipelineMethods","default","dependencyDispose","batchDependency","cachingOptions","isBatched","isCached","requestAbsoluteUrl","requestId","QueryableCollection","_super","select","selects","expand","expands","orderBy","ascending","keys","asc","push","skip","top","QueryableInstance","extractOdataId","candidate","__metadata","id","ODataIdException","getEntityUrl","entity","uri","Warning","ODataValue","ODataValueParserImpl","ODataEntity","ODataEntityParserImpl","ODataEntityArray","ODataEntityArrayParserImpl","httpclient_1","exceptions_2","ODataParserBase","parse","reject","handleError","headers","has","parseFloat","status","json","parseODataJSON","catch","ok","data","responseBody","responseHeaders","ProcessHttpClientResponseException","statusText","log","level","message","result","ODataRawParserImpl","ODataRaw","ODataBatch","_batchId","_requests","_dependencies","info","toUpperCase","resolver","promise","execute","all","executeImpl","batchId","Info","client","HttpClient","absoluteRequestUrl","batchBody","currentChangeSetId","reqInfo","Accept","Content-Type","name_1","body","batchHeaders","batchOptions","_parseResponse","responses","BatchParseException","chain","response","request","_","statusRegExp","lines","split","state","line","trim","parts","parseInt","Response","TextFileParser","BlobFileParser","blob","JSONFileParser","BufferFileParser","arrayBuffer","buffer","defaultLog","error","Error","NoCacheAvailableException","msg","APIUrlException","AuthUrlException","NodeFetchClientUnsupportedException","SPRequestExecutorUndefinedException","MaxCommentLengthException","NotSupportedInBatchException","operation","FunctionExpectedException","UrlException","setRuntimeConfig","config","_runtimeConfig","set","fetchclient_1","RuntimeConfigImpl","_headers","_defaultCachingStore","_defaultCachingTimeoutSeconds","_globalCacheDisable","_fetchClientFactory","FetchClient","_baseUrl","_spfxContext","defaultCachingStore","defaultCachingTimeoutSeconds","fetchClientFactory","spfxContext","pageContext","web","absoluteUrl","instance","activeLogLevel","_instance","LoggerImpl","subscribe","listeners","listener","clearSubscribers","writeJSON","JSON","stringify","entry","measure","f","subscribers","subscriber","console","profile","profileEnd","ConsoleListener","format","warn","FunctionListener","values","sourceAsDictionary_1","sourceAsHash","remove","val","splice","getValues","clear","queryable_1","webparts_1","items_1","queryableshareable_1","odata_2","Files","getByName","File","content","shouldOverWrite","file","addChunked","progress","chunkSize","setContentChunked","addTemplateFile","fileUrl","templateFileType","Versions","approve","comment","cancelUpload","uploadId","checkin","checkinType","CheckinType","Major","checkout","copyTo","eTag","IF-Match","X-HTTP-Method","deny","getLimitedWebPartManager","scope","WebPartsPersonalizationScope","Shared","LimitedWebPartManager","moveTo","moveOperations","MoveOperations","Overwrite","publish","recycle","undoCheckout","unpublish","getText","binaryStringResponseBody","getBlob","getBuffer","getJSON","setContent","getItem","listItemAllFields","Item","self","fileSize","size","blockCount","blockNumber","currentPointer","stage","totalBlocks","startUpload","pointer","continueUpload","finishUpload","fragment","fileOffset","ServerRelativeUrl","QueryableShareableFile","getById","versionId","Version","deleteAll","deleteById","deleteByLabel","label","restoreByLabel","TemplateFileType","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","lists_1","fields_1","navigation_1","sitegroups_1","contenttypes_1","folders_1","roles_1","files_1","lists_2","siteusers_1","usercustomactions_1","features_1","decorators_1","relateditems_1","Webs","webPath","title","description","template","language","inheritPermissions","additionalSettings","props","Description","Language","Title","Url","UseSamePermissionsAsParentSite","WebTemplate","postBody","parameters","type","Web","WebInfos","fromUrl","ContentTypes","Lists","Fields","Features","Navigation","SiteUsers","SiteGroups","CurrentUser","Folders","UserCustomActions","RoleDefinitions","RelatedItemManagerImpl","FromUrl","createBatch","Folder","SiteGroup","getFolderByServerRelativeUrl","folderRelativeUrl","getFileByServerRelativeUrl","fileRelativeUrl","getList","listRelativeUrl","List","update","properties","applyTheme","colorPaletteUrl","fontSchemeUrl","backgroundImageUrl","shareGenerated","applyWebTemplate","doesUserHavePermissions","perms","ensureUser","loginName","logonName","user","SiteUser","availableWebTemplates","includeCrossLanugage","getCatalog","getChanges","getUserById","mapToIcon","filename","progId","QueryableShareableWeb","deprecated","folder","QueryableShareableFolder","attachmentfiles_1","Items","getPaged","PagedItemCollectionParser","listItemEntityTypeFullName","removeDependency","ensureListItemEntityTypeName","listItemEntityType","item","Id","candidatelistItemEntityTypeFullName","getListItemEntityTypeFullName","AttachmentFiles","ContentType","ListItemEntityTypeFullName","ItemUpdatedParser","getWopiFrameUrl","action","GetWOPIFrameUrl","validateUpdateListItem","formValues","newDocumentUpdate","bNewDocumentUpdate","QueryableShareableItem","PagedItemCollection","nextUrl","getNext","hasNext","__next","odata.etag","views_1","forms_1","subscriptions_1","queryablesecurable_1","getByTitle","list","enableContentTypes","addSettings","AllowContentTypes","BaseTemplate","ContentTypesEnabled","ensure","addOrUpdateSettings","created","ensureSiteAssetsLibrary","ensureSitePagesLibrary","Views","Forms","Subscriptions","getView","viewId","View","retList","getItemsByCAMLQuery","getListItemChangesSinceToken","Recycle","renderListData","viewXml","RenderListData","renderListFormData","itemId","formId","mode","ListData","reserveListItemId","ReserveListItemId","QueryableSecurable","webs_1","types_1","QueryableShareable","getShareLink","kind","expiration","expString","toISOString","createLink","emailData","settings","linkKind","shareWith","loginNames","role","requireSignin","propagateAcl","userStr","login","Key","roleFilter","SharingRole","Edit","RoleType","Contributor","Reader","roleDefinitions","def","includeAnonymousLinkInEmail","peoplePickerInput","roleValue","useSimplifiedRoles","emailBody","emailSubject","subject","sendEmail","shareObject","bypass","sendShareObjectRequest","group","getRoleValue","unshareObjectWeb","checkPermissions","recipients","getSharingInformation","getObjectSharingSettings","unshareObject","deleteLinkByKind","unshareLink","shareId","associatedMemberGroup","g","Guest","associatedVisitorGroup","getShareObjectWeb","dependency","shareObjectRaw","SharingLinkKind","OrganizationView","checkSharingPermissions","unshare","deleteSharingLinkByKind","FileFolderShared","getShareable","shareable","shareEverything","ControlMode","FieldTypes","DateTimeFieldFormatType","AddFieldOptions","CalendarType","UrlFieldFormatType","PermissionKind","PrincipalType","PrincipalSource","PageType","SharingOperationStatusCode","SPSharedObjectType","SharingDomainRestrictionMode","PnPClientStorageWrapper","store","defaultTimeoutMinutes","enabled","persistable","put","expire","setItem","createPersistable","removeItem","getOrPut","defaultTimeout","MemoryStorage","_store","PnPClientStorage","local","localStorage","session","sessionStorage","digestcache_1","_impl","_digestCache","DigestCache","fetch","opts","cache","credentials","Headers","mergeHeaders","webUrl","getDigest","digest","fetchRaw","rawHeaders","retry","ctx","delay","attempts","retryCount","setTimeout","retryContext","Request","forEach","ct","addAvailableContentType","contentTypeId","contentType","Group","StringValue","Name","FieldLinks","fl","FieldLink","RoleAssignments","principalId","roleDefId","ra","RoleAssignment","RoleDefinitionBindings","RoleDefinition","getByType","roleTypeKind","order","basePermissions","BasePermissions","Order","definition","retDef","groupName","sg","removeById","removeByLoginName","retGroup","uca","UserCustomAction","storage","CachingConfigurationProvider","wrappedProvider","cacheKey","cacheStore","selectPnPCache","getWrappedProvider","getConfiguration","cachedConfig","providerPromise","providedConfig","pnpCache","storage_1","CachingOptions","storeName","CachingParserWrapper","_parser","_cacheOptions","feature","Feature","force","featdefScope","featureId","deactivate","DefinitionId","Field","getByInternalNameOrTitle","createFieldAsXml","xml","SchemaXml","field","fieldType","addText","maxLength","FieldTypeKind","MaxLength","addCalculated","formula","dateFormat","outputType","Text","DateFormat","Formula","OutputType","addDateTime","displayFormat","calendarType","friendlyDisplayFormat","DateOnly","Gregorian","DateTimeCalendarType","DisplayFormat","FriendlyDisplayFormat","addNumber","minValue","maxValue","MinimumValue","MaximumValue","addCurrency","currencyLocalId","CurrencyLocaleId","addMultilineText","numberOfLines","richText","restrictedMode","appendOnly","allowHyperlink","AllowHyperlink","AppendOnly","NumberOfLines","RestrictedMode","RichText","addUrl","Hyperlink","setShowInDisplayForm","show","setShowInEditForm","setShowInNewForm","NavigationNodes","node","NavigationNode","visible","IsVisible","moveAfter","nodeId","previousNodeId","getUserEffectivePermissions","getCurrentUserEffectivePermissions","currentUser","LoginName","breakRoleInheritance","copyRoleAssignments","clearSubscopes","resetRoleInheritance","userHasPermissions","permission","hasPermissions","currentUserHasPermissions","perm","FullMask","High","Low","num","SearchQueryBuilder","queryText","extendQuery","Querytext","queryTemplate","QueryTemplate","sourceId","SourceId","EnableInterleaving","EnableStemming","TrimDuplicates","EnableNicknames","EnableFql","EnablePhonetic","BypassResultTypes","ProcessBestBets","EnableQueryRules","EnableSorting","GenerateBlockRankLog","rankingModelId","RankingModelId","startRow","StartRow","rowLimit","RowLimit","rowsPerPage","RowsPerPage","selectProperties","SelectProperties","culture","Culture","refinementFilters","filters","RefinementFilters","refiners","Refiners","hiddenConstraints","constraints","HiddenConstraints","sortList","sorts","SortList","timeout","milliseconds","Timeout","hithighlightedProperties","HithighlightedProperties","clientType","ClientType","personalizationData","PersonalizationData","resultsURL","ResultsURL","queryTag","tags","QueryTag","Properties","ProcessPersonalFavorites","queryTemplatePropertiesUrl","QueryTemplatePropertiesUrl","reorderingRules","rules","ReorderingRules","hitHighlightedMultivaluePropertyLimit","limit","HitHighlightedMultivaluePropertyLimit","EnableOrderingHitHighlightedProperty","collapseSpecification","spec","CollapseSpecification","uiLanguage","lang","UIlanguage","desiredSnippetLength","len","DesiredSnippetLength","maxSnippetLength","MaxSnippetLength","summaryLength","SummaryLength","toSearchQuery","part","Search","formattedBody","SearchResults","rawResponse","_raw","_primary","postquery","RawSearchResults","ElapsedTime","PrimaryQueryResult","RelevantResults","RowCount","TotalRows","TotalRowsIncludingDuplicates","formatSearchResults","Table","Rows","getPage","pageNumber","pageSize","rows","rawResults","tempResults","tempResults_1","tempResult","cells","Cells","res","cell","Value","writable","SortDirection","ReorderingRuleMatchType","QueryPropertyValueType","SearchBuiltInSourceId","Documents","ItemsMatchingContentType","ItemsMatchingTag","ItemsRelatedToCurrentUser","ItemsWithSameKeywordAsThisItem","LocalPeopleResults","LocalReportsAndDataResults","LocalSharePointResults","LocalVideoResults","Pages","Pictures","Popular","RecentlyChangedItems","RecommendedItems","Wiki","SearchSuggest","mapQueryToQueryString","SearchSuggestResult","querytext","personalCount","preQuery","hitHighlighting","capitalize","stemming","includePeople","queryRules","prefixMatch","PeopleNames","suggest","PersonalResults","Queries","Site","getContextInfo","GetContextWebInformation","SupportedSchemaVersions","getDocumentLibraries","absoluteWebUrl","GetDocumentLibraries","getWebUrlFromPageUrl","absolutePageUrl","GetWebUrlFromPageUrl","openWebById","webId","getByEmail","email","getByLoginName","su","UtilityMethod","methodName","getBaseUrl","excute","Body","From","Subject","To","CC","BCC","AdditionalHeaders","getCurrentUserEmailAddresses","resolvePrincipal","input","scopes","sources","inputIsEmailOnly","addToUserInfoList","matchUserInfoList","searchPrincipals","maxCount","createEmailBodyForInvitation","pageAddress","expandGroupsToPrincipals","inputs","createWikiPage","Function","eval","window","Settings","_settings","addJSON","hash","load","provider","reason","search_1","searchsuggest_1","site_1","userprofiles_1","utilities_1","SPRest","searchSuggest","finalQuery","UserProfileQuery","crossDomainSite","addInWebUrl","hostWebUrl","_cdImpl","crossDomainWeb","urlPart","__export","sprequestexecutorclient_1","SPRequestExecutorClient","nodefetchclient_1","NodeFetchClient","cachingConfigurationProvider_1","spListConfigurationProvider_1","SPListConfigurationProvider","sourceWeb","sourceListTitle","lists","listTitle","items","configuration","asCaching","CachedDigest","digests","_httpClient","_digests","cachedDigest","Content-type","newCachedDigest","FormDigestValue","seconds","FormDigestTimeoutSeconds","convertToResponse","spResponse","h","statusCode","SP","RequestExecutor","iterator","temp","addinWebUrl","executor","entries","next","done","requestOptions","success","binaryStringRequestBody","executeAsync","configuration_1","rest_1","util","sp","setup","Def","AttachmentFile","addMultiple","files","Form","returnResult","setResult","hasResult","shift","requestPipelineMethod","alwaysRun","propertyKey","descriptor","args","caching_1","logStart","caching","cacheOptions","send","logEnd","getRelatedItems","sourceListName","sourceItemId","SourceItemID","SourceListName","getPageOneRelatedItems","addSingleLink","sourceWebUrl","targetListName","targetItemID","targetWebUrl","tryAddReverseLink","SourceWebUrl","TargetItemID","TargetListName","TargetWebUrl","TryAddReverseLink","addSingleLinkToUrl","targetItemUrl","TargetItemUrl","addSingleLinkFromUrl","sourceItemUrl","targetItemId","SourceItemUrl","deleteSingleLink","tryDeleteReverseLink","TryDeleteReverseLink","subscriptionId","subscription","Subscription","notificationUrl","expirationDate","clientState","expirationDateTime","resource","profileLoader","ProfileLoader","amIFollowedBy","amIFollowing","getFollowedTags","getFollowersFor","getPeopleFollowedBy","getPropertiesFor","getUserProfilePropertyFor","propertyName","hideSuggestion","isFollowing","follower","followee","setMyProfilePic","profilePicSource","readBlobAsArrayBuffer","String","fromCharCode","Uint16Array","createPersonalSiteEnqueueBulk","emails","ownerUserProfile","userProfile","createPersonalSite","interactiveRequest","shareAllSocialData","share","emailIDs","personalView","PersonalView","view","ViewFields","renderAsHtml","getSchemaXml","fieldTitleOrInternalName","move","fieldInternalName","removeAll","WebPartDefinitions","export","webPartId","import","webPartXml","WebPartDefinition","WebPart","readBlobAsText","readBlobAs","reader","FileReader","onload","readAsText","readAsArrayBuffer"],"mappings":"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","file":"pnp.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/**\n * sp-pnp-js v2.0.5 - A JavaScript library for SharePoint development.\n * MIT (https://github.com/SharePoint/PnP-JS-Core/blob/master/LICENSE)\n * Copyright (c) 2017 Microsoft\n * docs: http://officedev.github.io/PnP-JS-Core\n * source: https://github.com/SharePoint/PnP-JS-Core\n * bugs: https://github.com/SharePoint/PnP-JS-Core/issues\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"$pnp\"] = factory();\n\telse\n\t\troot[\"$pnp\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 41);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pnplibconfig_1 = __webpack_require__(4);\nvar Util = (function () {\n    function Util() {\n    }\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    Util.getCtxCallback = function (context, method) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function () {\n            method.apply(context, params);\n        };\n    };\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    Util.urlParamExists = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    };\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    Util.getUrlParamByName = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        var results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    Util.getUrlParamBoolByName = function (name) {\n        var p = this.getUrlParamByName(name);\n        var isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    };\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    Util.stringInsert = function (target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    };\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    Util.dateAdd = function (date, interval, units) {\n        var ret = new Date(date.toLocaleString()); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    };\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    Util.loadStylesheet = function (path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        var head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            var e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    };\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    Util.combinePaths = function () {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        return paths\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    };\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    Util.getRandomString = function (chars) {\n        var text = new Array(chars);\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    };\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    Util.getGUID = function () {\n        var d = new Date().getTime();\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    Util.isFunction = function (candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    Util.isArray = function (array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    };\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    Util.stringIsNullOrEmpty = function (s) {\n        return typeof s === \"undefined\" || s === null || s.length < 1;\n    };\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    Util.extend = function (target, source, noOverwrite) {\n        if (noOverwrite === void 0) { noOverwrite = false; }\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\n        return Object.getOwnPropertyNames(source)\n            .filter(function (v) { return check(target, v); })\n            .reduce(function (t, v) {\n            t[v] = source[v];\n            return t;\n        }, target);\n    };\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    Util.isUrlAbsolute = function (url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    };\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    Util.toAbsoluteUrl = function (candidateUrl) {\n        return new Promise(function (resolve) {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.baseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.baseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have _layouts in it?\n            if (typeof global.location !== \"undefined\") {\n                var index = global.location.toString().toLowerCase().indexOf(\"/_layouts/\");\n                if (index > 0) {\n                    // we are likely in the workbench in /_layouts/\n                    return resolve(Util.combinePaths(global.location.toString().substr(0, index), candidateUrl));\n                }\n            }\n            return resolve(candidateUrl);\n        });\n    };\n    return Util;\n}());\nexports.Util = Util;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(6);\nvar odata_1 = __webpack_require__(2);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar logging_1 = __webpack_require__(5);\nvar pipeline_1 = __webpack_require__(45);\n/**\n * Queryable Base Class\n *\n */\nvar Queryable = (function () {\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    function Queryable(baseUrl, path) {\n        this._query = new collections_1.Dictionary();\n        this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            var urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                this._parentUrl = urlStr;\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                var index = urlStr.lastIndexOf(\"/\");\n                this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                var index = urlStr.lastIndexOf(\"(\");\n                this._parentUrl = urlStr.slice(0, index);\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            var q = baseUrl;\n            this._parentUrl = q._url;\n            var target = q._query.get(\"@target\");\n            if (target !== null) {\n                this._query.add(\"@target\", target);\n            }\n            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n        }\n    }\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    Queryable.prototype.concat = function (pathPart) {\n        this._url += pathPart;\n        return this;\n    };\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    Queryable.prototype.append = function (pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    };\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    Queryable.prototype.addBatchDependency = function () {\n        if (this.hasBatch) {\n            return this._batch.addDependency();\n        }\n        return function () { return null; };\n    };\n    Object.defineProperty(Queryable.prototype, \"hasBatch\", {\n        /**\n         * Indicates if the current query has a batch associated\n         *\n         */\n        get: function () {\n            return this._batch !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"batch\", {\n        /**\n         * The batch currently associated with this query or null\n         *\n         */\n        get: function () {\n            return this.hasBatch ? this._batch : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\n        /**\n         * Gets the parent url used when creating this instance\n         *\n         */\n        get: function () {\n            return this._parentUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"query\", {\n        /**\n         * Provides access to the query builder for this url\n         *\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new queryable\n     */\n    Queryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    Queryable.prototype.inBatch = function (batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    };\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    Queryable.prototype.usingCaching = function (options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    };\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    Queryable.prototype.toUrl = function () {\n        return this._url;\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    Queryable.prototype.toUrlAndQuery = function () {\n        var aliasedParams = new collections_1.Dictionary();\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\n            logging_1.Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, logging_1.LogLevel.Verbose);\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\n            return labelName;\n        });\n        // inlude our explicitly set query string params\n        aliasedParams.merge(this._query);\n        if (aliasedParams.count() > 0) {\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\n        }\n        return url;\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    Queryable.prototype.getParent = function (factory, baseUrl, path, batch) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        var parent = new factory(baseUrl, path);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        if (typeof batch !== \"undefined\") {\n            parent = parent.inBatch(batch);\n        }\n        return parent;\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    Queryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = false; }\n        var clone = new factory(this, additionalPath);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    Queryable.prototype.get = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.getAs = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.post = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.postAs = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.patch = function (patchOptions, parser) {\n        if (patchOptions === void 0) { patchOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"PATCH\", patchOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.delete = function (deleteOptions, parser) {\n        if (deleteOptions === void 0) { deleteOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"DELETE\", deleteOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    Queryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (pipeline === void 0) { pipeline = pipeline_1.PipelineMethods.default; }\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\n            // build our request context\n            var context = {\n                batch: _this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: _this._cachingOptions,\n                isBatched: _this.hasBatch,\n                isCached: _this._useCaching,\n                options: options,\n                parser: parser,\n                pipeline: pipeline,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    };\n    return Queryable;\n}());\nexports.Queryable = Queryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar QueryableCollection = (function (_super) {\n    __extends(QueryableCollection, _super);\n    function QueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    QueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    QueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    QueryableCollection.prototype.skip = function (skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    QueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    return QueryableCollection;\n}(Queryable));\nexports.QueryableCollection = QueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar QueryableInstance = (function (_super) {\n    __extends(QueryableInstance, _super);\n    function QueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return QueryableInstance;\n}(Queryable));\nexports.QueryableInstance = QueryableInstance;\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar logging_1 = __webpack_require__(5);\nvar httpclient_1 = __webpack_require__(15);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar exceptions_2 = __webpack_require__(3);\nfunction extractOdataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.extractOdataId = extractOdataId;\nvar ODataParserBase = (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    r.json().then(function (json) { return resolve(_this.parseODataJSON(json)); }).catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\nvar ODataDefaultParser = (function (_super) {\n    __extends(ODataDefaultParser, _super);\n    function ODataDefaultParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ODataDefaultParser;\n}(ODataParserBase));\nexports.ODataDefaultParser = ODataDefaultParser;\nvar ODataRawParserImpl = (function () {\n    function ODataRawParserImpl() {\n    }\n    ODataRawParserImpl.prototype.parse = function (r) {\n        return r.json();\n    };\n    return ODataRawParserImpl;\n}());\nexports.ODataRawParserImpl = ODataRawParserImpl;\nvar ODataValueParserImpl = (function (_super) {\n    __extends(ODataValueParserImpl, _super);\n    function ODataValueParserImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ODataValueParserImpl.prototype.parse = function (r) {\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\n    };\n    return ODataValueParserImpl;\n}(ODataParserBase));\nvar ODataEntityParserImpl = (function (_super) {\n    __extends(ODataEntityParserImpl, _super);\n    function ODataEntityParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            var o = new _this.factory(getEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    };\n    return ODataEntityParserImpl;\n}(ODataParserBase));\nvar ODataEntityArrayParserImpl = (function (_super) {\n    __extends(ODataEntityArrayParserImpl, _super);\n    function ODataEntityArrayParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityArrayParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(getEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    };\n    return ODataEntityArrayParserImpl;\n}(ODataParserBase));\nfunction getEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(\"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.getEntityUrl = getEntityUrl;\nexports.ODataRaw = new ODataRawParserImpl();\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nfunction ODataEntity(factory) {\n    return new ODataEntityParserImpl(factory);\n}\nexports.ODataEntity = ODataEntity;\nfunction ODataEntityArray(factory) {\n    return new ODataEntityArrayParserImpl(factory);\n}\nexports.ODataEntityArray = ODataEntityArray;\n/**\n * Manages a batch of OData operations\n */\nvar ODataBatch = (function () {\n    function ODataBatch(baseUrl, _batchId) {\n        if (_batchId === void 0) { _batchId = util_1.Util.getGUID(); }\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._dependencies = [];\n    }\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\n        get: function () {\n            return this._batchId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    ODataBatch.prototype.add = function (url, method, options, parser) {\n        var info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        var p = new Promise(function (resolve, reject) {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    };\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    ODataBatch.prototype.addDependency = function () {\n        var resolver;\n        var promise = new Promise(function (resolve) {\n            resolver = resolve;\n        });\n        this._dependencies.push(promise);\n        return resolver;\n    };\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    ODataBatch.prototype.execute = function () {\n        var _this = this;\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added after the first set resolve\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\n    };\n    ODataBatch.prototype.executeImpl = function () {\n        var _this = this;\n        logging_1.Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(\"Resolving empty batch.\", logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        var client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\n            // build all the requests, send them, pipe results in order to parsers\n            var batchBody = [];\n            var currentChangeSetId = \"\";\n            for (var i = 0; i < _this._requests.length; i++) {\n                var reqInfo = _this._requests[i];\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n                    }\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n                }\n                // common batch part prefix\n                batchBody.push(\"Content-Type: application/http\\n\");\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n                var headers = {\n                    \"Accept\": \"application/json;\",\n                };\n                // this is the url of the individual request within the batch\n                var url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    var method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\n                    headers = util_1.Util.extend(headers, { \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\" });\n                }\n                else {\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\n                }\n                if (typeof pnplibconfig_1.RuntimeConfig.headers !== \"undefined\") {\n                    headers = util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers);\n                }\n                if (reqInfo.options && reqInfo.options.headers) {\n                    headers = util_1.Util.extend(headers, reqInfo.options.headers);\n                }\n                for (var name_1 in headers) {\n                    if (headers.hasOwnProperty(name_1)) {\n                        batchBody.push(name_1 + \": \" + headers[name_1] + \"\\n\");\n                    }\n                }\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n                }\n            }\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(\"--batch_\" + _this._batchId + \"--\\n\");\n            var batchHeaders = {\n                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this._batchId,\n            };\n            var batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n            };\n            logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", logging_1.LogLevel.Info);\n            return client.post(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(function (r) { return r.text(); })\n                .then(_this._parseResponse)\n                .then(function (responses) {\n                if (responses.length !== _this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce(function (chain, response, index) {\n                    var request = _this._requests[index];\n                    logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", logging_1.LogLevel.Verbose);\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\n                }, Promise.resolve());\n            });\n        });\n    };\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    ODataBatch.prototype._parseResponse = function (body) {\n        return new Promise(function (resolve, reject) {\n            var responses = [];\n            var header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            var lines = body.split(\"\\n\");\n            var state = \"batch\";\n            var status;\n            var statusText;\n            for (var i = 0; i < lines.length; ++i) {\n                var line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        var parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    };\n    return ODataBatch;\n}());\nexports.ODataBatch = ODataBatch;\nvar TextFileParser = (function () {\n    function TextFileParser() {\n    }\n    TextFileParser.prototype.parse = function (r) {\n        return r.text();\n    };\n    return TextFileParser;\n}());\nexports.TextFileParser = TextFileParser;\nvar BlobFileParser = (function () {\n    function BlobFileParser() {\n    }\n    BlobFileParser.prototype.parse = function (r) {\n        return r.blob();\n    };\n    return BlobFileParser;\n}());\nexports.BlobFileParser = BlobFileParser;\nvar JSONFileParser = (function () {\n    function JSONFileParser() {\n    }\n    JSONFileParser.prototype.parse = function (r) {\n        return r.json();\n    };\n    return JSONFileParser;\n}());\nexports.JSONFileParser = JSONFileParser;\nvar BufferFileParser = (function () {\n    function BufferFileParser() {\n    }\n    BufferFileParser.prototype.parse = function (r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    };\n    return BufferFileParser;\n}());\nexports.BufferFileParser = BufferFileParser;\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = __webpack_require__(5);\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nvar ProcessHttpClientResponseException = (function (_super) {\n    __extends(ProcessHttpClientResponseException, _super);\n    function ProcessHttpClientResponseException(status, statusText, data) {\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\n        _this.status = status;\n        _this.statusText = statusText;\n        _this.data = data;\n        _this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ProcessHttpClientResponseException;\n}(Error));\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nvar NoCacheAvailableException = (function (_super) {\n    __extends(NoCacheAvailableException, _super);\n    function NoCacheAvailableException(msg) {\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NoCacheAvailableException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NoCacheAvailableException;\n}(Error));\nexports.NoCacheAvailableException = NoCacheAvailableException;\nvar APIUrlException = (function (_super) {\n    __extends(APIUrlException, _super);\n    function APIUrlException(msg) {\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return APIUrlException;\n}(Error));\nexports.APIUrlException = APIUrlException;\nvar AuthUrlException = (function (_super) {\n    __extends(AuthUrlException, _super);\n    function AuthUrlException(data, msg) {\n        if (msg === void 0) { msg = \"Auth URL Endpoint could not be determined from data. Data logged.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return AuthUrlException;\n}(Error));\nexports.AuthUrlException = AuthUrlException;\nvar NodeFetchClientUnsupportedException = (function (_super) {\n    __extends(NodeFetchClientUnsupportedException, _super);\n    function NodeFetchClientUnsupportedException(msg) {\n        if (msg === void 0) { msg = \"Using NodeFetchClient in the browser is not supported.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NodeFetchClientUnsupportedException;\n}(Error));\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nvar SPRequestExecutorUndefinedException = (function (_super) {\n    __extends(SPRequestExecutorUndefinedException, _super);\n    function SPRequestExecutorUndefinedException() {\n        var _this = this;\n        var msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        _this = _super.call(this, msg) || this;\n        _this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return SPRequestExecutorUndefinedException;\n}(Error));\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nvar MaxCommentLengthException = (function (_super) {\n    __extends(MaxCommentLengthException, _super);\n    function MaxCommentLengthException(msg) {\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"MaxCommentLengthException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return MaxCommentLengthException;\n}(Error));\nexports.MaxCommentLengthException = MaxCommentLengthException;\nvar NotSupportedInBatchException = (function (_super) {\n    __extends(NotSupportedInBatchException, _super);\n    function NotSupportedInBatchException(operation) {\n        if (operation === void 0) { operation = \"This operation\"; }\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\n        _this.name = \"NotSupportedInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NotSupportedInBatchException;\n}(Error));\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nvar ODataIdException = (function (_super) {\n    __extends(ODataIdException, _super);\n    function ODataIdException(data, msg) {\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ODataIdException;\n}(Error));\nexports.ODataIdException = ODataIdException;\nvar BatchParseException = (function (_super) {\n    __extends(BatchParseException, _super);\n    function BatchParseException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"BatchParseException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return BatchParseException;\n}(Error));\nexports.BatchParseException = BatchParseException;\nvar AlreadyInBatchException = (function (_super) {\n    __extends(AlreadyInBatchException, _super);\n    function AlreadyInBatchException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"AlreadyInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return AlreadyInBatchException;\n}(Error));\nexports.AlreadyInBatchException = AlreadyInBatchException;\nvar FunctionExpectedException = (function (_super) {\n    __extends(FunctionExpectedException, _super);\n    function FunctionExpectedException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"FunctionExpectedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return FunctionExpectedException;\n}(Error));\nexports.FunctionExpectedException = FunctionExpectedException;\nvar UrlException = (function (_super) {\n    __extends(UrlException, _super);\n    function UrlException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"UrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return UrlException;\n}(Error));\nexports.UrlException = UrlException;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fetchclient_1 = __webpack_require__(21);\nvar RuntimeConfigImpl = (function () {\n    function RuntimeConfigImpl() {\n        // these are our default values for the library\n        this._headers = null;\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 60;\n        this._globalCacheDisable = false;\n        this._fetchClientFactory = function () { return new fetchclient_1.FetchClient(); };\n        this._baseUrl = null;\n        this._spfxContext = null;\n    }\n    RuntimeConfigImpl.prototype.set = function (config) {\n        if (config.hasOwnProperty(\"headers\")) {\n            this._headers = config.headers;\n        }\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"fetchClientFactory\")) {\n            this._fetchClientFactory = config.fetchClientFactory;\n        }\n        if (config.hasOwnProperty(\"baseUrl\")) {\n            this._baseUrl = config.baseUrl;\n        }\n        if (config.hasOwnProperty(\"spfxContext\")) {\n            this._spfxContext = config.spfxContext;\n        }\n    };\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"headers\", {\n        get: function () {\n            return this._headers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\n        get: function () {\n            return this._defaultCachingStore;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\n        get: function () {\n            return this._defaultCachingTimeoutSeconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\n        get: function () {\n            return this._globalCacheDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"fetchClientFactory\", {\n        get: function () {\n            return this._fetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"baseUrl\", {\n        get: function () {\n            if (this._baseUrl !== null) {\n                return this._baseUrl;\n            }\n            else if (this._spfxContext !== null) {\n                return this._spfxContext.pageContext.web.absoluteUrl;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RuntimeConfigImpl;\n}());\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nvar _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nvar Logger = (function () {\n    function Logger() {\n    }\n    Object.defineProperty(Logger, \"activeLogLevel\", {\n        get: function () {\n            return Logger.instance.activeLogLevel;\n        },\n        set: function (value) {\n            Logger.instance.activeLogLevel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger, \"instance\", {\n        get: function () {\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n                Logger._instance = new LoggerImpl();\n            }\n            return Logger._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    Logger.subscribe = function () {\n        var listeners = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            listeners[_i] = arguments[_i];\n        }\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\n    };\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    Logger.clearSubscribers = function () {\n        return Logger.instance.clearSubscribers();\n    };\n    Object.defineProperty(Logger, \"count\", {\n        /**\n         * Gets the current subscriber count\n         */\n        get: function () {\n            return Logger.instance.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: message });\n    };\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.writeJSON = function (json, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    };\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    Logger.log = function (entry) {\n        Logger.instance.log(entry);\n    };\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    Logger.measure = function (name, f) {\n        return Logger.instance.measure(name, f);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\nvar LoggerImpl = (function () {\n    function LoggerImpl(activeLogLevel, subscribers) {\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\n        if (subscribers === void 0) { subscribers = []; }\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    LoggerImpl.prototype.subscribe = function (listener) {\n        this.subscribers.push(listener);\n    };\n    LoggerImpl.prototype.clearSubscribers = function () {\n        var s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    };\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\n        get: function () {\n            return this.subscribers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        this.log({ level: level, message: message });\n    };\n    LoggerImpl.prototype.log = function (entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\n    };\n    LoggerImpl.prototype.measure = function (name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    };\n    return LoggerImpl;\n}());\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nvar ConsoleListener = (function () {\n    function ConsoleListener() {\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    ConsoleListener.prototype.log = function (entry) {\n        var msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    };\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    ConsoleListener.prototype.format = function (entry) {\n        return \"Message: \" + entry.message + \" Data: \" + JSON.stringify(entry.data);\n    };\n    return ConsoleListener;\n}());\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nvar FunctionListener = (function () {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    function FunctionListener(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    FunctionListener.prototype.log = function (entry) {\n        this.method(entry);\n    };\n    return FunctionListener;\n}());\nexports.FunctionListener = FunctionListener;\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar odata_1 = __webpack_require__(2);\nvar util_1 = __webpack_require__(0);\nvar exceptions_1 = __webpack_require__(3);\nvar webparts_1 = __webpack_require__(50);\nvar items_1 = __webpack_require__(10);\nvar queryableshareable_1 = __webpack_require__(12);\nvar odata_2 = __webpack_require__(2);\n/**\n * Describes a collection of File objects\n *\n */\nvar Files = (function (_super) {\n    __extends(Files, _super);\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Files(baseUrl, path) {\n        if (path === void 0) { path = \"files\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    Files.prototype.getByName = function (name) {\n        var f = new File(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.add = function (url, content, shouldOverWrite) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\n            .post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\");\n        return adder.post().then(function () { return _this.getByName(url); }).then(function (file) { return file.setContentChunked(content, progress, chunkSize); }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\n        var _this = this;\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\")\n            .post().then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(fileUrl),\n            };\n        });\n    };\n    return Files;\n}(queryable_1.QueryableCollection));\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\n        /**\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"versions\", {\n        /**\n         * Gets a collection of versions\n         *\n         */\n        get: function () {\n            return new Versions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    File.prototype.approve = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        return this.clone(File, \"approve(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    File.prototype.cancelUpload = function (uploadId) {\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).post();\n    };\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    File.prototype.checkin = function (comment, checkinType) {\n        if (comment === void 0) { comment = \"\"; }\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\", true).post();\n    };\n    /**\n     * Checks out the file from a document library.\n     */\n    File.prototype.checkout = function () {\n        return this.clone(File, \"checkout\", true).post();\n    };\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    File.prototype.copyTo = function (url, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\", true).post();\n    };\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    File.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(File, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    File.prototype.deny = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"deny(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    File.prototype.getLimitedWebPartManager = function (scope) {\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\n        return new webparts_1.LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n    };\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    File.prototype.moveTo = function (url, moveOperations) {\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\", true).post();\n    };\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    File.prototype.publish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"publish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    File.prototype.recycle = function () {\n        return this.clone(File, \"recycle\", true).post();\n    };\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    File.prototype.undoCheckout = function () {\n        return this.clone(File, \"undoCheckout\", true).post();\n    };\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    File.prototype.unpublish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Gets the contents of the file as text. Not supported in batching.\n     *\n     */\n    File.prototype.getText = function () {\n        return this.clone(File, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\n     *\n     */\n    File.prototype.getBlob = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getBuffer = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getJSON = function () {\n        return this.clone(File, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\n     *\n     * @param content The file content\n     *\n     */\n    File.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(File, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new File(_this); });\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    File.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_2.getEntityUrl(d)), d);\n        });\n    };\n    /**\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        if (typeof progress === \"undefined\") {\n            progress = function () { return null; };\n        }\n        var self = this;\n        var fileSize = file.size;\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        var uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n        var _loop_1 = function (i) {\n            chain = chain.then(function (pointer) {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        };\n        // skip the first and last blocks\n        for (var i = 2; i < blockCount; i++) {\n            _loop_1(i);\n        }\n        return chain.then(function (pointer) {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\n        }).then(function (_) {\n            return self;\n        });\n    };\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.startUpload = function (uploadId, fragment) {\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\")\n            .postAs({ body: fragment }).then(function (response) {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    };\n    return File;\n}(queryableshareable_1.QueryableShareableFile));\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nvar Versions = (function (_super) {\n    __extends(Versions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Versions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    Versions.prototype.getById = function (versionId) {\n        var v = new Version(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    Versions.prototype.deleteAll = function () {\n        return new Versions(this, \"deleteAll\").post();\n    };\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.deleteById = function (versionId) {\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\", true).post();\n    };\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.deleteByLabel = function (label) {\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    Versions.prototype.restoreByLabel = function (label) {\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    return Versions;\n}(queryable_1.QueryableCollection));\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nvar Version = (function (_super) {\n    __extends(Version, _super);\n    function Version() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Version.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return Version;\n}(queryable_1.QueryableInstance));\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar lists_1 = __webpack_require__(11);\nvar fields_1 = __webpack_require__(24);\nvar navigation_1 = __webpack_require__(25);\nvar sitegroups_1 = __webpack_require__(18);\nvar contenttypes_1 = __webpack_require__(16);\nvar folders_1 = __webpack_require__(9);\nvar roles_1 = __webpack_require__(17);\nvar files_1 = __webpack_require__(7);\nvar util_1 = __webpack_require__(0);\nvar lists_2 = __webpack_require__(11);\nvar siteusers_1 = __webpack_require__(30);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar features_1 = __webpack_require__(23);\nvar decorators_1 = __webpack_require__(51);\nvar queryableshareable_1 = __webpack_require__(12);\nvar relateditems_1 = __webpack_require__(46);\nvar Webs = (function (_super) {\n    __extends(Webs, _super);\n    function Webs(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webs\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The web web's description\n     * @param template The web's template\n     * @param language The language code to use for this web\n     * @param inheritPermissions If true permissions will be inherited from the partent web\n     * @param additionalSettings Will be passed as part of the web creation body\n     */\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions, additionalSettings) {\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = \"STS\"; }\n        if (language === void 0) { language = 1033; }\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var props = util_1.Util.extend({\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        }, additionalSettings);\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        return this.clone(Webs, \"add\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    };\n    return Webs;\n}(queryable_1.QueryableCollection));\nexports.Webs = Webs;\nvar WebInfos = (function (_super) {\n    __extends(WebInfos, _super);\n    function WebInfos(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webinfos\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    return WebInfos;\n}(queryable_1.QueryableCollection));\nexports.WebInfos = WebInfos;\n/**\n * Describes a web\n *\n */\nvar Web = (function (_super) {\n    __extends(Web, _super);\n    function Web(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Creates a new web instance from the given url by indexing the location of the /_api/\n     * segment. If this is not found the method creates a new web with the entire string as\n     * supplied.\n     *\n     * @param url\n     */\n    Web.fromUrl = function (url, path) {\n        if (url === null) {\n            return new Web(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new Web(url.substr(0, index), path);\n        }\n        return new Web(url, path);\n    };\n    Object.defineProperty(Web.prototype, \"webs\", {\n        get: function () {\n            return new Webs(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"webinfos\", {\n        get: function () {\n            return new WebInfos(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\n        /**\n         * Get the content types available in this web\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"lists\", {\n        /**\n         * Get the lists in this web\n         *\n         */\n        get: function () {\n            return new lists_1.Lists(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"fields\", {\n        /**\n         * Gets the fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"features\", {\n        /**\n         * Gets the active features for this web\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"availablefields\", {\n        /**\n         * Gets the available fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this, \"availablefields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"navigation\", {\n        /**\n         * Get the navigation options in this web\n         *\n         */\n        get: function () {\n            return new navigation_1.Navigation(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\n        /**\n         * Gets the site users\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\n        /**\n         * Gets the site groups\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"currentUser\", {\n        /**\n         * Gets the current user\n         */\n        get: function () {\n            return new siteusers_1.CurrentUser(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"folders\", {\n        /**\n         * Get the folders in this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\n        /**\n         * Gets the collection of RoleDefinition resources.\n         *\n         */\n        get: function () {\n            return new roles_1.RoleDefinitions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\n        /**\n         * Provides an interface to manage related items\n         *\n         */\n        get: function () {\n            return relateditems_1.RelatedItemManagerImpl.FromUrl(this.toUrl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch for requests within the context of context this web\n     *\n     */\n    Web.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the web\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedownergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedmembergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedvisitorgroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get a folder by server relative url\n     *\n     * @param folderRelativeUrl the server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Get a file by server relative url\n     *\n     * @param fileRelativeUrl the server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Get a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl the server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    Web.prototype.getList = function (listRelativeUrl) {\n        return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n    };\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    Web.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                web: _this,\n            };\n        });\n    };\n    /**\n     * Delete this web\n     *\n     */\n    Web.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site.\n     *\n     * @param colorPaletteUrl Server-relative URL of the color palette file.\n     * @param fontSchemeUrl Server-relative URL of the font scheme.\n     * @param backgroundImageUrl Server-relative URL of the background image.\n     * @param shareGenerated true to store the generated theme files in the root site, or false to store them in this site.\n     */\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        var postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        return this.clone(Web, \"applytheme\", true).post({ body: postBody });\n    };\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it.\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    Web.prototype.applyWebTemplate = function (template) {\n        var q = this.clone(Web, \"applywebtemplate\", true);\n        q.concat(\"(@t)\");\n        q.query.add(\"@t\", template);\n        return q.post();\n    };\n    /**\n     * Returns whether the current user has the given set of permissions.\n     *\n     * @param perms The high and low permission range.\n     */\n    Web.prototype.doesUserHavePermissions = function (perms) {\n        var q = this.clone(Web, \"doesuserhavepermissions\", true);\n        q.concat(\"(@p)\");\n        q.query.add(\"@p\", JSON.stringify(perms));\n        return q.get();\n    };\n    /**\n     * Checks whether the specified login name belongs to a valid user in the site. If the user doesn't exist, adds the user to the site.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    Web.prototype.ensureUser = function (loginName) {\n        var postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        return this.clone(Web, \"ensureuser\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                user: new siteusers_1.SiteUser(odata_1.extractOdataId(data)),\n            };\n        });\n    };\n    /**\n     * Returns a collection of site templates available for the site.\n     *\n     * @param language The LCID of the site templates to get.\n     * @param true to include language-neutral site templates; otherwise false\n     */\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\n        if (language === void 0) { language = 1033; }\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\n        return new queryable_1.QueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n    };\n    /**\n     * Returns the list gallery on the site.\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    Web.prototype.getCatalog = function (type) {\n        return this.clone(Web, \"getcatalog(\" + type + \")\", true).select(\"Id\").get().then(function (data) {\n            return new lists_2.List(odata_1.extractOdataId(data));\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    Web.prototype.getChanges = function (query) {\n        var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        return this.clone(Web, \"getchanges\", true).post({ body: postBody });\n    };\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\n        /**\n         * Gets the custom list templates for the site.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site.\n     *\n     * @param id The ID of the user.\n     */\n    Web.prototype.getUserById = function (id) {\n        return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n    };\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file.\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string.\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1.\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    Web.prototype.mapToIcon = function (filename, size, progId) {\n        if (size === void 0) { size = 0; }\n        if (progId === void 0) { progId = \"\"; }\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\", true).get();\n    };\n    return Web;\n}(queryableshareable_1.QueryableShareableWeb));\n__decorate([\n    decorators_1.deprecated(\"This method will be removed in future releases. Please use the methods found in queryable securable.\")\n], Web.prototype, \"doesUserHavePermissions\", null);\nexports.Web = Web;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar queryableshareable_1 = __webpack_require__(12);\nvar files_1 = __webpack_require__(7);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar items_1 = __webpack_require__(10);\n/**\n * Describes a collection of Folder objects\n *\n */\nvar Folders = (function (_super) {\n    __extends(Folders, _super);\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Folders(baseUrl, path) {\n        if (path === void 0) { path = \"folders\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    Folders.prototype.getByName = function (name) {\n        var f = new Folder(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    Folders.prototype.add = function (url) {\n        var _this = this;\n        return this.clone(Folders, \"add('\" + url + \"')\", true).post().then(function (response) {\n            return {\n                data: response,\n                folder: _this.getByName(url),\n            };\n        });\n    };\n    return Folders;\n}(queryable_1.QueryableCollection));\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nvar Folder = (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\n        /**\n         * Specifies the sequence in which content types are displayed.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"files\", {\n        /**\n         * Gets this folder's files\n         *\n         */\n        get: function () {\n            return new files_1.Files(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"folders\", {\n        /**\n         * Gets this folder's sub folders\n         *\n         */\n        get: function () {\n            return new Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\n        /**\n         * Gets this folder's list item field values\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\n        /**\n         * Gets the parent folder, if available\n         *\n         */\n        get: function () {\n            return new Folder(this, \"parentFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"properties\", {\n        /**\n         * Gets this folder's properties\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"properties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\n        /**\n         * Gets this folder's server relative url\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\n        /**\n         * Gets a value that specifies the content type order.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Folder\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                folder: _this,\n            };\n        });\n    };\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Folder.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(Folder, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Folder.prototype.recycle = function () {\n        return this.clone(Folder, \"recycle\", true).post();\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    Folder.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.getEntityUrl(d)), d);\n        });\n    };\n    return Folder;\n}(queryableshareable_1.QueryableShareableFolder));\nexports.Folder = Folder;\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar queryableshareable_1 = __webpack_require__(12);\nvar folders_1 = __webpack_require__(9);\nvar files_1 = __webpack_require__(7);\nvar contenttypes_1 = __webpack_require__(16);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar attachmentfiles_1 = __webpack_require__(42);\nvar lists_1 = __webpack_require__(11);\n/**\n * Describes a collection of Item objects\n *\n */\nvar Items = (function (_super) {\n    __extends(Items, _super);\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Items(baseUrl, path) {\n        if (path === void 0) { path = \"items\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    Items.prototype.getById = function (id) {\n        var i = new Item(this);\n        i.concat(\"(\" + id + \")\");\n        return i;\n    };\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     */\n    Items.prototype.skip = function (skip) {\n        this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\n        return this;\n    };\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    Items.prototype.getPaged = function () {\n        return this.getAs(new PagedItemCollectionParser());\n    };\n    //\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        var removeDependency = this.addBatchDependency();\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n            var postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            var promise = _this.clone(Items, null, true).postAs({ body: postBody }).then(function (data) {\n                return {\n                    data: data,\n                    item: _this.getById(data.Id),\n                };\n            });\n            removeDependency();\n            return promise;\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List).getListItemEntityTypeFullName();\n    };\n    return Items;\n}(queryable_1.QueryableCollection));\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nvar Item = (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\n        /**\n         * Gets the set of attachments for this item\n         *\n         */\n        get: function () {\n            return new attachmentfiles_1.AttachmentFiles(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"contentType\", {\n        /**\n         * Gets the content type for this item\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentType(this, \"ContentType\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions for the item\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\n        /**\n         * Gets the effective base permissions for the item in a UI context\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\n        /**\n         * Gets the field values for this list item in their HTML representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\n        /**\n         * Gets the field values for this list item in their text representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\n        /**\n         * Gets the field values for this list item for use in editing controls\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"folder\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"folder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"file\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new files_1.File(this, \"file\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        return new Promise(function (resolve, reject) {\n            var removeDependency = _this.addBatchDependency();\n            var parentList = _this.getParent(queryable_1.QueryableInstance, _this.parentUrl.substr(0, _this.parentUrl.lastIndexOf(\"/\")));\n            parentList.select(\"ListItemEntityTypeFullName\").getAs().then(function (d) {\n                var postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": d.ListItemEntityTypeFullName },\n                }, properties));\n                removeDependency();\n                return _this.post({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then(function (data) {\n                    resolve({\n                        data: data,\n                        item: _this,\n                    });\n                });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Item.prototype.recycle = function () {\n        return this.clone(Item, \"recycle\", true).post();\n    };\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    Item.prototype.getWopiFrameUrl = function (action) {\n        if (action === void 0) { action = 0; }\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\", true);\n        i._query.add(\"@action\", action);\n        return i.post().then(function (data) {\n            return data.GetWOPIFrameUrl;\n        });\n    };\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\n        return this.clone(Item, \"validateupdatelistitem\", true).post({\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\n        });\n    };\n    return Item;\n}(queryableshareable_1.QueryableShareableItem));\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nvar PagedItemCollection = (function () {\n    function PagedItemCollection(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\n        /**\n         * If true there are more results available in the set, otherwise there are not\n         */\n        get: function () {\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    PagedItemCollection.prototype.getNext = function () {\n        if (this.hasNext) {\n            var items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(function (r) { return r(null); });\n    };\n    return PagedItemCollection;\n}());\nexports.PagedItemCollection = PagedItemCollection;\nvar PagedItemCollectionParser = (function (_super) {\n    __extends(PagedItemCollectionParser, _super);\n    function PagedItemCollectionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PagedItemCollectionParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                r.json().then(function (json) {\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\n                });\n            }\n        });\n    };\n    return PagedItemCollectionParser;\n}(odata_1.ODataParserBase));\nvar ItemUpdatedParser = (function (_super) {\n    __extends(ItemUpdatedParser, _super);\n    function ItemUpdatedParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ItemUpdatedParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    };\n    return ItemUpdatedParser;\n}(odata_1.ODataParserBase));\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar items_1 = __webpack_require__(10);\nvar views_1 = __webpack_require__(49);\nvar contenttypes_1 = __webpack_require__(16);\nvar fields_1 = __webpack_require__(24);\nvar forms_1 = __webpack_require__(43);\nvar subscriptions_1 = __webpack_require__(47);\nvar queryable_1 = __webpack_require__(1);\nvar queryablesecurable_1 = __webpack_require__(26);\nvar util_1 = __webpack_require__(0);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar exceptions_1 = __webpack_require__(3);\nvar folders_1 = __webpack_require__(9);\n/**\n * Describes a collection of List objects\n *\n */\nvar Lists = (function (_super) {\n    __extends(Lists, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Lists(baseUrl, path) {\n        if (path === void 0) { path = \"lists\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    Lists.prototype.getByTitle = function (title) {\n        return new List(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    Lists.prototype.getById = function (id) {\n        var list = new List(this);\n        list.concat(\"('\" + id + \"')\");\n        return list;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var addSettings = util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings);\n        return this.post({ body: JSON.stringify(addSettings) }).then(function (data) {\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\n        });\n    };\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise(function (resolve, reject) {\n            var addOrUpdateSettings = util_1.Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\n            list.get().then(function (_) {\n                list.update(addOrUpdateSettings).then(function (d) {\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            }).catch(function (_) {\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            });\n        });\n    };\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\n        return this.clone(Lists, \"ensuresiteassetslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    Lists.prototype.ensureSitePagesLibrary = function () {\n        return this.clone(Lists, \"ensuresitepageslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    return Lists;\n}(queryable_1.QueryableCollection));\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nvar List = (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(List.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types in this list\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"items\", {\n        /**\n         * Gets the items in this list\n         *\n         */\n        get: function () {\n            return new items_1.Items(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"views\", {\n        /**\n         * Gets the views in this list\n         *\n         */\n        get: function () {\n            return new views_1.Views(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"fields\", {\n        /**\n         * Gets the fields in this list\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"forms\", {\n        /**\n         * Gets the forms in this list\n         *\n         */\n        get: function () {\n            return new forms_1.Forms(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"defaultView\", {\n        /**\n         * Gets the default view of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"DefaultView\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\n        /**\n         * Gets the event receivers attached to this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"relatedFields\", {\n        /**\n         * Gets the related fields of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"getRelatedFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\n        /**\n         * Gets the IRM settings for this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"subscriptions\", {\n        /**\n         * Gets the webhook subscriptions of this list\n         *\n         */\n        get: function () {\n            return new subscriptions_1.Subscriptions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the list\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    List.prototype.getView = function (viewId) {\n        return new views_1.View(this, \"getView('\" + viewId + \"')\");\n    };\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    List.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retList = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    List.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    List.prototype.getChanges = function (query) {\n        return this.clone(List, \"getchanges\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\n        });\n    };\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    List.prototype.getItemsByCAMLQuery = function (query) {\n        var expands = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            expands[_i - 1] = arguments[_i];\n        }\n        var q = this.clone(List, \"getitems\", true);\n        return q.expand.apply(q, expands).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\n        });\n    };\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    List.prototype.getListItemChangesSinceToken = function (query) {\n        return this.clone(List, \"getlistitemchangessincetoken\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\n        }, { parse: function (r) { return r.text(); } });\n    };\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    List.prototype.recycle = function () {\n        return this.clone(List, \"recycle\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Renders list data based on the view xml provided\n     */\n    List.prototype.renderListData = function (viewXml) {\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return data.RenderListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\", true).post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    List.prototype.reserveListItemId = function () {\n        return this.clone(List, \"reservelistitemid\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\n     *\n     */\n    List.prototype.getListItemEntityTypeFullName = function () {\n        return this.clone(List, null).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\n    };\n    return List;\n}(queryablesecurable_1.QueryableSecurable));\nexports.List = List;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar webs_1 = __webpack_require__(8);\nvar odata_1 = __webpack_require__(2);\nvar queryable_1 = __webpack_require__(1);\nvar queryablesecurable_1 = __webpack_require__(26);\nvar types_1 = __webpack_require__(13);\n/**\n * Internal helper class used to augment classes to include sharing functionality\n */\nvar QueryableShareable = (function (_super) {\n    __extends(QueryableShareable, _super);\n    function QueryableShareable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a sharing link for the supplied\n     *\n     * @param kind The kind of link to share\n     * @param expiration The optional expiration for this link\n     */\n    QueryableShareable.prototype.getShareLink = function (kind, expiration) {\n        if (expiration === void 0) { expiration = null; }\n        // date needs to be an ISO string or null\n        var expString = expiration !== null ? expiration.toISOString() : null;\n        // clone using the factory and send the request\n        return this.clone(QueryableShareable, \"shareLink\", true).postAs({\n            body: JSON.stringify({\n                request: {\n                    createLink: true,\n                    emailData: null,\n                    settings: {\n                        expiration: expString,\n                        linkKind: kind,\n                    },\n                },\n            }),\n        });\n    };\n    /**\n     * Shares this instance with the supplied users\n     *\n     * @param loginNames Resolved login names to share\n     * @param role The role\n     * @param requireSignin True to require the user is authenticated, otherwise false\n     * @param propagateAcl True to apply this share to all children\n     * @param emailData If supplied an email will be sent with the indicated properties\n     */\n    QueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\n        var _this = this;\n        if (requireSignin === void 0) { requireSignin = true; }\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        // handle the multiple input types\n        if (!Array.isArray(loginNames)) {\n            loginNames = [loginNames];\n        }\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\n        var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n        // start by looking up the role definition id we need to set the roleValue\n        return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\n            if (!Array.isArray(def) || def.length < 1) {\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\n            }\n            var postBody = {\n                includeAnonymousLinkInEmail: requireSignin,\n                peoplePickerInput: userStr,\n                propagateAcl: propagateAcl,\n                roleValue: \"role:\" + def[0].Id,\n                useSimplifiedRoles: true,\n            };\n            if (typeof emailData !== \"undefined\") {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: emailData.body,\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? \"\" : emailData.subject,\n                    sendEmail: true,\n                });\n            }\n            return _this.clone(QueryableShareable, \"shareObject\", true).postAs({\n                body: JSON.stringify(postBody),\n            });\n        });\n    };\n    /**\n     * Shares an object based on the supplied options\n     *\n     * @param options The set of options to send to the ShareObject method\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\n     */\n    QueryableShareable.prototype.shareObject = function (options, bypass) {\n        var _this = this;\n        if (bypass === void 0) { bypass = false; }\n        if (bypass) {\n            // if the bypass flag is set send the supplied parameters directly to the service\n            return this.sendShareObjectRequest(options);\n        }\n        // extend our options with some defaults\n        options = util_1.Util.extend(options, {\n            group: null,\n            includeAnonymousLinkInEmail: false,\n            propagateAcl: false,\n            useSimplifiedRoles: true,\n        }, true);\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\n            // handle the multiple input types\n            if (!Array.isArray(options.loginNames)) {\n                options.loginNames = [options.loginNames];\n            }\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\n            var postBody = {\n                peoplePickerInput: userStr,\n                roleValue: roleValue,\n                url: options.url,\n            };\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: options.emailData.body,\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? \"Shared for you.\" : options.emailData.subject,\n                    sendEmail: true,\n                });\n            }\n            return _this.sendShareObjectRequest(postBody);\n        });\n    };\n    /**\n     * Calls the web's UnshareObject method\n     *\n     * @param url The url of the object to unshare\n     */\n    QueryableShareable.prototype.unshareObjectWeb = function (url) {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs({\n            body: JSON.stringify({\n                url: url,\n            }),\n        });\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareable.prototype.checkPermissions = function (recipients) {\n        return this.clone(QueryableShareable, \"checkPermissions\", true).postAs({\n            body: JSON.stringify({\n                recipients: recipients,\n            }),\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareable.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, \"getSharingInformation\", true).postAs({\n            body: JSON.stringify({\n                request: request,\n            }),\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, \"getObjectSharingSettings\", true).postAs({\n            body: JSON.stringify({\n                useSimplifiedRoles: useSimplifiedRoles,\n            }),\n        });\n    };\n    /**\n     * Unshares this object\n     */\n    QueryableShareable.prototype.unshareObject = function () {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs();\n    };\n    /**\n     * Deletes a link by type\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareable.prototype.deleteLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, \"deleteLinkByKind\", true).post({\n            body: JSON.stringify({ linkKind: kind }),\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareable.prototype.unshareLink = function (kind, shareId) {\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\n        return this.clone(QueryableShareable, \"unshareLink\", true).post({\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\n        });\n    };\n    /**\n     * Calculates the roleValue string used in the sharing query\n     *\n     * @param role The Sharing Role\n     * @param group The Group type\n     */\n    QueryableShareable.prototype.getRoleValue = function (role, group) {\n        // we will give group precedence, because we had to make a choice\n        if (typeof group !== \"undefined\" && group !== null) {\n            switch (group) {\n                case types_1.RoleType.Contributor:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedMemberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                case types_1.RoleType.Reader:\n                case types_1.RoleType.Guest:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedVisitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                default:\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\n            }\n        }\n        else {\n            var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n            return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\n                if (def.length < 1) {\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\n                }\n                return \"role: \" + def[0].Id;\n            });\n        }\n    };\n    QueryableShareable.prototype.getShareObjectWeb = function (candidate) {\n        return Promise.resolve(webs_1.Web.fromUrl(candidate, \"/_api/SP.Web.ShareObject\"));\n    };\n    QueryableShareable.prototype.sendShareObjectRequest = function (options) {\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(QueryableShareable).post({\n                body: JSON.stringify(options),\n            });\n        });\n    };\n    return QueryableShareable;\n}(queryable_1.Queryable));\nexports.QueryableShareable = QueryableShareable;\nvar QueryableShareableWeb = (function (_super) {\n    __extends(QueryableShareableWeb, _super);\n    function QueryableShareableWeb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this web with the supplied users\n     * @param loginNames The resolved login names to share\n     * @param role The role to share this web\n     * @param emailData Optional email data\n     */\n    QueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\n        var _this = this;\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        var dependency = this.addBatchDependency();\n        return webs_1.Web.fromUrl(this.toUrl(), \"/_api/web/url\").get().then(function (url) {\n            dependency();\n            return _this.shareObject(util_1.Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\n        });\n    };\n    /**\n     * Provides direct access to the static web.ShareObject method\n     *\n     * @param url The url to share\n     * @param loginNames Resolved loginnames string[] of a single login name string\n     * @param roleValue Role value\n     * @param emailData Optional email data\n     * @param groupId Optional group id\n     * @param propagateAcl\n     * @param includeAnonymousLinkInEmail\n     * @param useSimplifiedRoles\n     */\n    QueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).shareObject({\n            emailData: emailData,\n            group: group,\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\n            loginNames: loginNames,\n            propagateAcl: propagateAcl,\n            role: role,\n            url: url,\n            useSimplifiedRoles: useSimplifiedRoles,\n        });\n    };\n    /**\n     * Supplies a method to pass any set of arguments to ShareObject\n     *\n     * @param options The set of options to send to ShareObject\n     */\n    QueryableShareableWeb.prototype.shareObjectRaw = function (options) {\n        return this.clone(QueryableShareable, null, true).shareObject(options, true);\n    };\n    /**\n     * Unshares the object\n     *\n     * @param url The url of the object to stop sharing\n     */\n    QueryableShareableWeb.prototype.unshareObject = function (url) {\n        return this.clone(QueryableShareable, null, true).unshareObjectWeb(url);\n    };\n    return QueryableShareableWeb;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableWeb = QueryableShareableWeb;\nvar QueryableShareableItem = (function (_super) {\n    __extends(QueryableShareableItem, _super);\n    function QueryableShareableItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing for this item\n     *\n     * @param kind The type of link to share\n     * @param expiration The optional expiration date\n     */\n    QueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        return this.clone(QueryableShareable, null, true).getShareLink(kind, expiration);\n    };\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        return this.clone(QueryableShareable, null, true).shareWith(loginNames, role, requireSignin, false, emailData);\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\n        return this.clone(QueryableShareable, null, true).checkPermissions(recipients);\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareableItem.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, null, true).getSharingInformation(request);\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).getObjectSharingSettings(useSimplifiedRoles);\n    };\n    /**\n     * Unshare this item\n     */\n    QueryableShareableItem.prototype.unshare = function () {\n        return this.clone(QueryableShareable, null, true).unshareObject();\n    };\n    /**\n     * Deletes a sharing link by kind\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, null, true).deleteLinkByKind(kind);\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\n        return this.clone(QueryableShareable, null, true).unshareLink(kind, shareId);\n    };\n    return QueryableShareableItem;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableItem = QueryableShareableItem;\nvar FileFolderShared = (function (_super) {\n    __extends(FileFolderShared, _super);\n    function FileFolderShared() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing\n     *\n     * @param kind The kind of link to get\n     * @param expiration Optional, an expiration for this link\n     */\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getShareLink(kind, expiration);\n        });\n    };\n    /**\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\n         *\n         * @param recipients The array of Entities for which Permissions need to be checked.\n         */\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.checkPermissions(recipients);\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    FileFolderShared.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getSharingInformation(request);\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\n        });\n    };\n    /**\n     * Unshare this item\n     */\n    FileFolderShared.prototype.unshare = function () {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareObject();\n        });\n    };\n    /**\n     * Deletes a sharing link by the kind of link\n     *\n     * @param kind The kind of link to be deleted.\n     */\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.deleteLinkByKind(kind);\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId The share id to delete\n     */\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareLink(kind, shareId);\n        });\n    };\n    /**\n     * For files and folders we need to use the associated item end point\n     */\n    FileFolderShared.prototype.getShareable = function () {\n        var _this = this;\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\n        return this.clone(QueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\n            var shareable = new QueryableShareable(odata_1.getEntityUrl(d));\n            // we need to handle batching\n            if (_this.hasBatch) {\n                shareable = shareable.inBatch(_this.batch);\n            }\n            return shareable;\n        });\n    };\n    return FileFolderShared;\n}(queryable_1.QueryableInstance));\nexports.FileFolderShared = FileFolderShared;\nvar QueryableShareableFile = (function (_super) {\n    __extends(QueryableShareableFile, _super);\n    function QueryableShareableFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\n        });\n    };\n    return QueryableShareableFile;\n}(FileFolderShared));\nexports.QueryableShareableFile = QueryableShareableFile;\nvar QueryableShareableFolder = (function (_super) {\n    __extends(QueryableShareableFolder, _super);\n    function QueryableShareableFolder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        if (shareEverything === void 0) { shareEverything = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\n        });\n    };\n    return QueryableShareableFolder;\n}(FileFolderShared));\nexports.QueryableShareableFolder = QueryableShareableFolder;\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar PermissionKind;\n(function (PermissionKind) {\n    /**\n     * Has no permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\n    /**\n     * View items in lists, documents in document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\n    /**\n     * Add items to lists, documents to document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\n    /**\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\n     * in documents, and customize Web Part Pages in document libraries.\n     */\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\n    /**\n     * Delete items from a list, documents from a document library, and Web discussion\n     * comments in documents.\n     */\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\n    /**\n     * Approve a minor version of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\n    /**\n     * View the source of documents with server-side file handlers.\n     */\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\n    /**\n     * View past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\n    /**\n     * Delete past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\n    /**\n     * Discard or check in a document which is checked out to another user.\n     */\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\n    /**\n     * Create, change, and delete personal views of lists.\n     */\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\n    /**\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\n     */\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\n    /**\n     * View forms, views, and application pages, and enumerate lists.\n     */\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\n    /**\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\n     * The list permissions in the site do not change.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\n    /**\n     * Allow users to open a Site, list, or folder to access items inside that container.\n     */\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\n    /**\n     * View pages in a Site.\n     */\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\n    /**\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\n     * a Windows SharePoint Services compatible editor.\n     */\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\n    /**\n     * Apply a theme or borders to the entire Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\n    /**\n     * Apply a style sheet (.css file) to the Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\n    /**\n     * View reports on Site usage.\n     */\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\n    /**\n     * Create a Site using Self-Service Site Creation.\n     */\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\n    /**\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\n     */\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\n    /**\n     * Create a group of users that can be used anywhere within the site collection.\n     */\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\n    /**\n     * Create and change permission levels on the Site and assign permissions to users\n     * and groups.\n     */\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\n    /**\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\n     * and WebDAV interfaces.\n     */\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\n    /**\n     * View information about users of the Site.\n     */\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\n    /**\n     * Add or remove personal Web Parts on a Web Part Page.\n     */\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\n    /**\n     * Update Web Parts to display personalized information.\n     */\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\n    /**\n     * Grant the ability to perform all administration tasks for the Site as well as\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\n     * through the object model or through the user interface (UI). When granted on the\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\n     * site collection scoped Features through the object model. To browse to the Site\n     * Collection Features page and activate or deactivate Site Collection scoped Features\n     * through the UI, you must be a Site Collection administrator.\n     */\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\n    /**\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\n    /**\n     * Use features that launch client applications. Otherwise, users must work on documents\n     * locally and upload changes.\n     */\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\n    /**\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\n     */\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\n    /**\n     * Manage alerts for all users of the Site.\n     */\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\n    /**\n     * Create e-mail alerts.\n     */\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\n    /**\n     * Allows a user to change his or her user information, such as adding a picture.\n     */\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\n    /**\n     * Enumerate permissions on Site, list, folder, document, or list item.\n     */\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\n    /**\n     * Has all permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\n})(PermissionKind = exports.PermissionKind || (exports.PermissionKind = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar PrincipalSource;\n(function (PrincipalSource) {\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\n})(PrincipalSource = exports.PrincipalSource || (exports.PrincipalSource = {}));\nvar RoleType;\n(function (RoleType) {\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\n})(RoleType = exports.RoleType || (exports.RoleType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\nvar SharingLinkKind;\n(function (SharingLinkKind) {\n    /**\n     * Uninitialized link\n     */\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    /**\n     * Direct link to the object being shared\n     */\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\n    /**\n     * Organization-shareable link to the object being shared with view permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\n    /**\n     * Organization-shareable link to the object being shared with edit permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\n    /**\n     * View only anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\n    /**\n     * Read/Write anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\n    /**\n     * Flexible sharing Link where properties can change without affecting link URL\n     */\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\n})(SharingLinkKind = exports.SharingLinkKind || (exports.SharingLinkKind = {}));\n;\n/**\n * Indicates the role of the sharing link\n */\nvar SharingRole;\n(function (SharingRole) {\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\n})(SharingRole = exports.SharingRole || (exports.SharingRole = {}));\nvar SharingOperationStatusCode;\n(function (SharingOperationStatusCode) {\n    /**\n     * The share operation completed without errors.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\n    /**\n     * The share operation completed and generated requests for access.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\n    /**\n     * The share operation failed as there were no resolved users.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\n    /**\n     * The share operation failed due to insufficient permissions.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\n    /**\n     * The share operation failed when attempting a cross site share, which is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\n    /**\n     * The sharing operation failed due to an unknown error.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\n    /**\n     * The text you typed is too long. Please shorten it.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\n    /**\n     * The maximum number of unique scopes in the list has been exceeded.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\n    /**\n     * The share operation failed because a sharing capability is disabled in the site.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\n    /**\n     * The specified object for the share operation is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\n    /**\n     * A SharePoint group cannot contain another SharePoint group.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\n})(SharingOperationStatusCode = exports.SharingOperationStatusCode || (exports.SharingOperationStatusCode = {}));\nvar SPSharedObjectType;\n(function (SPSharedObjectType) {\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\n})(SPSharedObjectType = exports.SPSharedObjectType || (exports.SPSharedObjectType = {}));\nvar SharingDomainRestrictionMode;\n(function (SharingDomainRestrictionMode) {\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\n})(SharingDomainRestrictionMode = exports.SharingDomainRestrictionMode || (exports.SharingDomainRestrictionMode = {}));\n;\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar collections_1 = __webpack_require__(6);\nvar pnplibconfig_1 = __webpack_require__(4);\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nvar PnPClientStorageWrapper = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? -1 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    PnPClientStorageWrapper.prototype.get = function (key) {\n        if (!this.enabled) {\n            return null;\n        }\n        var o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        var persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    };\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    };\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    PnPClientStorageWrapper.prototype.delete = function (key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    };\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\n        var _this = this;\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise(function (resolve) {\n            var o = _this.get(key);\n            if (o == null) {\n                getter().then(function (d) {\n                    _this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    };\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    PnPClientStorageWrapper.prototype.test = function () {\n        var str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Creates the persistable to store\n     */\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\n        if (typeof expire === \"undefined\") {\n            // ensure we are by default inline with the global library setting\n            var defaultTimeout = pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = util_1.Util.dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n        return JSON.stringify({ expiration: expire, value: o });\n    };\n    return PnPClientStorageWrapper;\n}());\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nvar MemoryStorage = (function () {\n    function MemoryStorage(_store) {\n        if (_store === void 0) { _store = new collections_1.Dictionary(); }\n        this._store = _store;\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () {\n            return this._store.count();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.clear = function () {\n        this._store.clear();\n    };\n    MemoryStorage.prototype.getItem = function (key) {\n        return this._store.get(key);\n    };\n    MemoryStorage.prototype.key = function (index) {\n        return this._store.getKeys()[index];\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        this._store.remove(key);\n    };\n    MemoryStorage.prototype.setItem = function (key, data) {\n        this._store.add(key, data);\n    };\n    return MemoryStorage;\n}());\n/**\n * A class that will establish wrappers for both local and session storage\n */\nvar PnPClientStorage = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    function PnPClientStorage() {\n        this.local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n        this.session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n    }\n    return PnPClientStorage;\n}());\nexports.PnPClientStorage = PnPClientStorage;\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = __webpack_require__(38);\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar exceptions_1 = __webpack_require__(3);\nvar HttpClient = (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        this.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n        // second we add the local options so we can overwrite the globals\n        this.mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.5\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            if (!headers.has(\"X-RequestDigest\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        this.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // grab our current delay\n                var delay = ctx.delay;\n                // Check if request was throttled - http status code 429\n                // Check is request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.mergeHeaders = function (target, source) {\n        if (typeof source !== \"undefined\" && source !== null) {\n            var temp = new Request(\"\", { headers: source });\n            temp.headers.forEach(function (value, name) {\n                target.append(name, value);\n            });\n        }\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\n;\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of content types\n *\n */\nvar ContentTypes = (function (_super) {\n    __extends(ContentTypes, _super);\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n     */\n    function ContentTypes(baseUrl, path) {\n        if (path === void 0) { path = \"contenttypes\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    ContentTypes.prototype.getById = function (id) {\n        var ct = new ContentType(this);\n        ct.concat(\"('\" + id + \"')\");\n        return ct;\n    };\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return this.clone(ContentTypes, \"addAvailableContentType\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                contentType: _this.getById(data.id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (group === void 0) { group = \"Custom Content Types\"; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.post({ body: postBody }).then(function (data) {\n            return { contentType: _this.getById(data.id), data: data };\n        });\n    };\n    return ContentTypes;\n}(queryable_1.QueryableCollection));\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nvar ContentType = (function (_super) {\n    __extends(ContentType, _super);\n    function ContentType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\n        /**\n         * Gets the column (also known as field) references in the content type.\n        */\n        get: function () {\n            return new FieldLinks(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"fields\", {\n        /**\n         * Gets a value that specifies the collection of fields for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"fields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"parent\", {\n        /**\n         * Gets the parent content type of the content type.\n         */\n        get: function () {\n            return new ContentType(this, \"parent\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\n        /**\n         * Gets a value that specifies the collection of workflow associations for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this content type\n     */\n    ContentType.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ContentType;\n}(queryable_1.QueryableInstance));\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nvar FieldLinks = (function (_super) {\n    __extends(FieldLinks, _super);\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    function FieldLinks(baseUrl, path) {\n        if (path === void 0) { path = \"fieldlinks\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    FieldLinks.prototype.getById = function (id) {\n        var fl = new FieldLink(this);\n        fl.concat(\"(guid'\" + id + \"')\");\n        return fl;\n    };\n    return FieldLinks;\n}(queryable_1.QueryableCollection));\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nvar FieldLink = (function (_super) {\n    __extends(FieldLink, _super);\n    function FieldLink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldLink;\n}(queryable_1.QueryableInstance));\nexports.FieldLink = FieldLink;\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar sitegroups_1 = __webpack_require__(18);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nvar RoleAssignments = (function (_super) {\n    __extends(RoleAssignments, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function RoleAssignments(baseUrl, path) {\n        if (path === void 0) { path = \"roleassignments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection.\n     *\n     * @param principalId The ID of the user or group to assign permissions to\n     * @param roleDefId The ID of the role definition that defines the permissions to assign\n     *\n     */\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The ID of the user or group in the role assignment.\n     * @param roleDefId The ID of the role definition in the role assignment\n     *\n     */\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Gets the role assignment associated with the specified principal ID from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    RoleAssignments.prototype.getById = function (id) {\n        var ra = new RoleAssignment(this);\n        ra.concat(\"(\" + id + \")\");\n        return ra;\n    };\n    return RoleAssignments;\n}(queryable_1.QueryableCollection));\nexports.RoleAssignments = RoleAssignments;\nvar RoleAssignment = (function (_super) {\n    __extends(RoleAssignment, _super);\n    function RoleAssignment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\n        /**\n         * Get the role definition bindings for this role assignment\n         *\n         */\n        get: function () {\n            return new RoleDefinitionBindings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this role assignment\n     *\n     */\n    RoleAssignment.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleAssignment;\n}(queryable_1.QueryableInstance));\nexports.RoleAssignment = RoleAssignment;\nvar RoleDefinitions = (function (_super) {\n    __extends(RoleDefinitions, _super);\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path\n     *\n     */\n    function RoleDefinitions(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the role definition with the specified ID from the collection.\n     *\n     * @param id The ID of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getById = function (id) {\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets the role definition with the specified name.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getByName = function (name) {\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n    };\n    /**\n     * Gets the role definition with the specified type.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n    };\n    /**\n     * Create a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                definition: _this.getById(data.Id),\n            };\n        });\n    };\n    return RoleDefinitions;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitions = RoleDefinitions;\nvar RoleDefinition = (function (_super) {\n    __extends(RoleDefinition, _super);\n    function RoleDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    /* tslint:disable no-string-literal */\n    RoleDefinition.prototype.update = function (properties) {\n        var _this = this;\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retDef = _this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\n                retDef = parent_1.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this role definition\n     *\n     */\n    RoleDefinition.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleDefinition;\n}(queryable_1.QueryableInstance));\nexports.RoleDefinition = RoleDefinition;\nvar RoleDefinitionBindings = (function (_super) {\n    __extends(RoleDefinitionBindings, _super);\n    function RoleDefinitionBindings(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return RoleDefinitionBindings;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar siteusers_1 = __webpack_require__(30);\nvar util_1 = __webpack_require__(0);\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site users\n *\n */\nvar SiteGroups = (function (_super) {\n    __extends(SiteGroups, _super);\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteGroups(baseUrl, path) {\n        if (path === void 0) { path = \"sitegroups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The properties to be updated\n     */\n    SiteGroups.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                group: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param email The name of the group\n     */\n    SiteGroups.prototype.getByName = function (groupName) {\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n    };\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group\n     */\n    SiteGroups.prototype.getById = function (id) {\n        var sg = new SiteGroup(this);\n        sg.concat(\"(\" + id + \")\");\n        return sg;\n    };\n    /**\n     * Removes the group with the specified member ID from the collection.\n     *\n     * @param id The id of the group to remove\n     */\n    SiteGroups.prototype.removeById = function (id) {\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\", true).post();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\", true).post();\n    };\n    return SiteGroups;\n}(queryable_1.QueryableCollection));\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nvar SiteGroup = (function (_super) {\n    __extends(SiteGroup, _super);\n    function SiteGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\n        /**\n         * Get's the users for this group\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this, \"users\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the user\n    */\n    /* tslint:disable no-string-literal */\n    SiteGroup.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retGroup = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    };\n    return SiteGroup;\n}(queryable_1.QueryableInstance));\nexports.SiteGroup = SiteGroup;\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar UserCustomActions = (function (_super) {\n    __extends(UserCustomActions, _super);\n    function UserCustomActions(baseUrl, path) {\n        if (path === void 0) { path = \"usercustomactions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns the custom action with the specified identifier.\n     *\n     * @param id The GUID ID of the user custom action to get.\n     */\n    UserCustomActions.prototype.getById = function (id) {\n        var uca = new UserCustomAction(this);\n        uca.concat(\"('\" + id + \"')\");\n        return uca;\n    };\n    /**\n     * Create a custom action\n     *\n     * @param creationInfo The information which defines the new custom action\n     *\n     */\n    UserCustomActions.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                action: _this.getById(data.Id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Deletes all custom actions in the collection.\n     *\n     */\n    UserCustomActions.prototype.clear = function () {\n        return this.clone(UserCustomActions, \"clear\", true).post();\n    };\n    return UserCustomActions;\n}(queryable_1.QueryableCollection));\nexports.UserCustomActions = UserCustomActions;\nvar UserCustomAction = (function (_super) {\n    __extends(UserCustomAction, _super);\n    function UserCustomAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UserCustomAction.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                action: _this,\n                data: data,\n            };\n        });\n    };\n    /**\n    * Remove a custom action\n    *\n    */\n    UserCustomAction.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return UserCustomAction;\n}(queryable_1.QueryableInstance));\nexports.UserCustomAction = UserCustomAction;\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage = __webpack_require__(14);\nvar exceptions_1 = __webpack_require__(3);\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nvar CachingConfigurationProvider = (function () {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = \"_configcache_\" + cacheKey;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\n        return this.wrappedProvider;\n    };\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\n        var _this = this;\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        var cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise(function (resolve) {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        var providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then(function (providedConfig) {\n            _this.store.put(_this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    };\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\n        var pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    };\n    return CachingConfigurationProvider;\n}());\nexports.default = CachingConfigurationProvider;\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Makes requests using the fetch API\n */\nvar FetchClient = (function () {\n    function FetchClient() {\n    }\n    FetchClient.prototype.fetch = function (url, options) {\n        return global.fetch(url, options);\n    };\n    return FetchClient;\n}());\nexports.FetchClient = FetchClient;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)))\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = __webpack_require__(14);\nvar util_1 = __webpack_require__(0);\nvar pnplibconfig_1 = __webpack_require__(4);\nvar CachingOptions = (function () {\n    function CachingOptions(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\n        get: function () {\n            if (this.storeName === \"local\") {\n                return CachingOptions.storage.local;\n            }\n            else {\n                return CachingOptions.storage.session;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CachingOptions;\n}());\nCachingOptions.storage = new storage_1.PnPClientStorage();\nexports.CachingOptions = CachingOptions;\nvar CachingParserWrapper = (function () {\n    function CachingParserWrapper(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    CachingParserWrapper.prototype.parse = function (response) {\n        var _this = this;\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(function (data) {\n            if (_this._cacheOptions.store !== null) {\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    };\n    return CachingParserWrapper;\n}());\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of List objects\n *\n */\nvar Features = (function (_super) {\n    __extends(Features, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Features(baseUrl, path) {\n        if (path === void 0) { path = \"features\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    Features.prototype.getById = function (id) {\n        var feature = new Feature(this);\n        feature.concat(\"('\" + id + \"')\");\n        return feature;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    Features.prototype.add = function (id, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"add\", true).post({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(function (data) {\n            return {\n                data: data,\n                feature: _this.getById(id),\n            };\n        });\n    };\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    Features.prototype.remove = function (id, force) {\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"remove\", true).post({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    };\n    return Features;\n}(queryable_1.QueryableCollection));\nexports.Features = Features;\nvar Feature = (function (_super) {\n    __extends(Feature, _super);\n    function Feature() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    Feature.prototype.deactivate = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var removeDependency = this.addBatchDependency();\n        var idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(function (feature) {\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    };\n    return Feature;\n}(queryable_1.QueryableInstance));\nexports.Feature = Feature;\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar types_1 = __webpack_require__(13);\n/**\n * Describes a collection of Field objects\n *\n */\nvar Fields = (function (_super) {\n    __extends(Fields, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Fields(baseUrl, path) {\n        if (path === void 0) { path = \"fields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    Fields.prototype.getByTitle = function (title) {\n        return new Field(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param title The Id of the list\n     */\n    Fields.prototype.getById = function (id) {\n        var f = new Field(this);\n        f.concat(\"('\" + id + \"')\");\n        return f;\n    };\n    /**\n     * Creates a field based on the specified schema\n     */\n    Fields.prototype.createFieldAsXml = function (xml) {\n        var _this = this;\n        var info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        return this.clone(Fields, \"createfieldasxml\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.add = function (title, fieldType, properties) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.clone(Fields, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addText = function (title, maxLength, properties) {\n        if (maxLength === void 0) { maxLength = 255; }\n        var props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\n        if (outputType === void 0) { outputType = types_1.FieldTypes.Text; }\n        var props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.DateTimeFieldFormatType.DateOnly; }\n        if (calendarType === void 0) { calendarType = types_1.CalendarType.Gregorian; }\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\n        var props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\n        var props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\n        var props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\n        if (numberOfLines === void 0) { numberOfLines = 6; }\n        if (richText === void 0) { richText = true; }\n        if (restrictedMode === void 0) { restrictedMode = false; }\n        if (appendOnly === void 0) { appendOnly = false; }\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\n        var props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.UrlFieldFormatType.Hyperlink; }\n        var props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    };\n    return Fields;\n}(queryable_1.QueryableCollection));\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nvar Field = (function (_super) {\n    __extends(Field, _super);\n    function Field() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    Field.prototype.update = function (properties, fieldType) {\n        var _this = this;\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                field: _this,\n            };\n        });\n    };\n    /**\n     * Delete this fields\n     *\n     */\n    Field.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    Field.prototype.setShowInDisplayForm = function (show) {\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    Field.prototype.setShowInEditForm = function (show) {\n        return this.clone(Field, \"setshowineditform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    Field.prototype.setShowInNewForm = function (show) {\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\", true).post();\n    };\n    return Field;\n}(queryable_1.QueryableInstance));\nexports.Field = Field;\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar queryable_1 = __webpack_require__(1);\n/**\n * Represents a collection of navigation nodes\n *\n */\nvar NavigationNodes = (function (_super) {\n    __extends(NavigationNodes, _super);\n    function NavigationNodes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    NavigationNodes.prototype.getById = function (id) {\n        var node = new NavigationNode(this);\n        node.concat(\"(\" + id + \")\");\n        return node;\n    };\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    NavigationNodes.prototype.add = function (title, url, visible) {\n        var _this = this;\n        if (visible === void 0) { visible = true; }\n        var postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        return this.clone(NavigationNodes, null, true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                node: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\n        var postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        return this.clone(NavigationNodes, \"MoveAfter\", true).post({ body: postBody });\n    };\n    return NavigationNodes;\n}(queryable_1.QueryableCollection));\nexports.NavigationNodes = NavigationNodes;\nvar NavigationNode = (function (_super) {\n    __extends(NavigationNode, _super);\n    function NavigationNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\n        /**\n         * Represents the child nodes of this node\n         */\n        get: function () {\n            return new NavigationNodes(this, \"Children\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this node based on the supplied properties\n     *\n     * @param properties The hash of key/value pairs to update\n     */\n    NavigationNode.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                node: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this node and any child nodes\n     */\n    NavigationNode.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return NavigationNode;\n}(queryable_1.QueryableInstance));\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nvar Navigation = (function (_super) {\n    __extends(Navigation, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Navigation(baseUrl, path) {\n        if (path === void 0) { path = \"navigation\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\n        /**\n         * Gets the quicklaunch navigation for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"quicklaunch\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\n        /**\n         * Gets the top bar navigation navigation for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"topnavigationbar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Navigation;\n}(queryable_1.Queryable));\nexports.Navigation = Navigation;\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webs_1 = __webpack_require__(8);\nvar roles_1 = __webpack_require__(17);\nvar types_1 = __webpack_require__(13);\nvar queryable_1 = __webpack_require__(1);\nvar QueryableSecurable = (function (_super) {\n    __extends(QueryableSecurable, _super);\n    function QueryableSecurable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(QueryableSecurable.prototype, \"roleAssignments\", {\n        /**\n         * Gets the set of role assignments for this item\n         *\n         */\n        get: function () {\n            return new roles_1.RoleAssignments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\n        /**\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    QueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\n        var q = this.clone(queryable_1.Queryable, \"getUserEffectivePermissions(@user)\", true);\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.getAs();\n    };\n    /**\n     * Gets the effective permissions for the current user\n     */\n    QueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\n        var _this = this;\n        var w = webs_1.Web.fromUrl(this.toUrl());\n        return w.currentUser.select(\"LoginName\").getAs().then(function (user) {\n            return _this.getUserEffectivePermissions(user.LoginName);\n        });\n    };\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    QueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\n        return this.clone(QueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\", true).post();\n    };\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    QueryableSecurable.prototype.resetRoleInheritance = function () {\n        return this.clone(QueryableSecurable, \"resetroleinheritance\", true).post();\n    };\n    /**\n     * Determines if a given user has the appropriate permissions\n     *\n     * @param loginName The user to check\n     * @param permission The permission being checked\n     */\n    QueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\n        var _this = this;\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Determines if the current user has the requested permissions\n     *\n     * @param permission The permission we wish to check\n     */\n    QueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\n        var _this = this;\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Taken from sp.js, checks the supplied permissions against the mask\n     *\n     * @param value The security principal's permissions on the given object\n     * @param perm The permission checked against the value\n     */\n    /* tslint:disable:no-bitwise */\n    QueryableSecurable.prototype.hasPermissions = function (value, perm) {\n        if (!perm) {\n            return true;\n        }\n        if (perm === types_1.PermissionKind.FullMask) {\n            return (value.High & 32767) === 32767 && value.Low === 65535;\n        }\n        perm = perm - 1;\n        var num = 1;\n        if (perm >= 0 && perm < 32) {\n            num = num << perm;\n            return 0 !== (value.Low & num);\n        }\n        else if (perm >= 32 && perm < 64) {\n            num = num << perm - 32;\n            return 0 !== (value.High & num);\n        }\n        return false;\n    };\n    return QueryableSecurable;\n}(queryable_1.QueryableInstance));\nexports.QueryableSecurable = QueryableSecurable;\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Allows for the fluent construction of search queries\n */\nvar SearchQueryBuilder = (function () {\n    function SearchQueryBuilder(queryText, _query) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (_query === void 0) { _query = {}; }\n        this._query = _query;\n        if (typeof queryText === \"string\" && queryText.length > 0) {\n            this.extendQuery({ Querytext: queryText });\n        }\n    }\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (queryTemplate === void 0) { queryTemplate = {}; }\n        return new SearchQueryBuilder(queryText, queryTemplate);\n    };\n    SearchQueryBuilder.prototype.text = function (queryText) {\n        return this.extendQuery({ Querytext: queryText });\n    };\n    SearchQueryBuilder.prototype.template = function (template) {\n        return this.extendQuery({ QueryTemplate: template });\n    };\n    SearchQueryBuilder.prototype.sourceId = function (id) {\n        return this.extendQuery({ SourceId: id });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\n        get: function () {\n            return this.extendQuery({ EnableInterleaving: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\n        get: function () {\n            return this.extendQuery({ EnableStemming: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\n        get: function () {\n            return this.extendQuery({ TrimDuplicates: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\n        get: function () {\n            return this.extendQuery({ EnableNicknames: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\n        get: function () {\n            return this.extendQuery({ EnableFql: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\n        get: function () {\n            return this.extendQuery({ EnablePhonetic: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\n        get: function () {\n            return this.extendQuery({ BypassResultTypes: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\n        get: function () {\n            return this.extendQuery({ ProcessBestBets: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\n        get: function () {\n            return this.extendQuery({ EnableQueryRules: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\n        get: function () {\n            return this.extendQuery({ EnableSorting: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\n        get: function () {\n            return this.extendQuery({ GenerateBlockRankLog: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\n        return this.extendQuery({ RankingModelId: id });\n    };\n    SearchQueryBuilder.prototype.startRow = function (id) {\n        return this.extendQuery({ StartRow: id });\n    };\n    SearchQueryBuilder.prototype.rowLimit = function (id) {\n        return this.extendQuery({ RowLimit: id });\n    };\n    SearchQueryBuilder.prototype.rowsPerPage = function (id) {\n        return this.extendQuery({ RowsPerPage: id });\n    };\n    SearchQueryBuilder.prototype.selectProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SelectProperties: properties });\n    };\n    SearchQueryBuilder.prototype.culture = function (culture) {\n        return this.extendQuery({ Culture: culture });\n    };\n    SearchQueryBuilder.prototype.refinementFilters = function () {\n        var filters = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filters[_i] = arguments[_i];\n        }\n        return this.extendQuery({ RefinementFilters: filters });\n    };\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\n        return this.extendQuery({ Refiners: refiners });\n    };\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\n        return this.extendQuery({ HiddenConstraints: constraints });\n    };\n    SearchQueryBuilder.prototype.sortList = function () {\n        var sorts = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sorts[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SortList: sorts });\n    };\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\n        return this.extendQuery({ Timeout: milliseconds });\n    };\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ HithighlightedProperties: properties });\n    };\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\n        return this.extendQuery({ ClientType: clientType });\n    };\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\n        return this.extendQuery({ PersonalizationData: data });\n    };\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\n        return this.extendQuery({ ResultsURL: url });\n    };\n    SearchQueryBuilder.prototype.queryTag = function () {\n        var tags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tags[_i] = arguments[_i];\n        }\n        return this.extendQuery({ QueryTag: tags });\n    };\n    SearchQueryBuilder.prototype.properties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ Properties: properties });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\n        get: function () {\n            return this.extendQuery({ ProcessPersonalFavorites: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\n    };\n    SearchQueryBuilder.prototype.reorderingRules = function () {\n        var rules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            rules[_i] = arguments[_i];\n        }\n        return this.extendQuery({ ReorderingRules: rules });\n    };\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\n        get: function () {\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\n        return this.extendQuery({ CollapseSpecification: spec });\n    };\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\n        return this.extendQuery({ UIlanguage: lang });\n    };\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\n        return this.extendQuery({ DesiredSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\n        return this.extendQuery({ MaxSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\n        return this.extendQuery({ SummaryLength: len });\n    };\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\n        return this._query;\n    };\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\n        this._query = util_1.Util.extend(this._query, part);\n        return this;\n    };\n    return SearchQueryBuilder;\n}());\nexports.SearchQueryBuilder = SearchQueryBuilder;\n/**\n * Describes the search API\n *\n */\nvar Search = (function (_super) {\n    __extends(Search, _super);\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    function Search(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/postquery\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    Search.prototype.execute = function (query) {\n        var _this = this;\n        var formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = { results: query.SelectProperties };\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = { results: query.RefinementFilters };\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = { results: query.SortList };\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = { results: query.HithighlightedProperties };\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = { results: query.ReorderingRules };\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = { results: query.Properties };\n        }\n        var postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.post({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\n    };\n    return Search;\n}(queryable_1.QueryableInstance));\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nvar SearchResults = (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\n        if (_raw === void 0) { _raw = null; }\n        if (_primary === void 0) { _primary = null; }\n        this._url = _url;\n        this._query = _query;\n        this._raw = _raw;\n        this._primary = _primary;\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n    }\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\n        get: function () {\n            return this.RawSearchResults.ElapsedTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\n        get: function () {\n            return this._raw;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\n        get: function () {\n            if (this._primary === null) {\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\n            }\n            return this._primary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a page of results\n     *\n     * @param pageNumber Index of the page to return. Used to determine StartRow\n     * @param pageSize Optional, items per page (default = 10)\n     */\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\n        // if we got all the available rows we don't have another page\n        if (this.TotalRows < this.RowCount) {\n            return Promise.resolve(null);\n        }\n        // if pageSize is supplied, then we use that regardless of any previous values\n        // otherwise get the previous RowLimit or default to 10\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\n        var query = util_1.Util.extend(this._query, {\n            RowLimit: rows,\n            StartRow: rows * (pageNumber - 1) + 1,\n        });\n        // we have reached the end\n        if (query.StartRow > this.TotalRows) {\n            return Promise.resolve(null);\n        }\n        var search = new Search(this._url, null);\n        return search.execute(query);\n    };\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\n        var results = new Array();\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\n            var tempResult = tempResults_1[_i];\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\n            results.push(cells.reduce(function (res, cell) {\n                Object.defineProperty(res, cell.Key, {\n                    configurable: false,\n                    enumerable: false,\n                    value: cell.Value,\n                    writable: false,\n                });\n                return res;\n            }, {}));\n        }\n        return results;\n    };\n    return SearchResults;\n}());\nexports.SearchResults = SearchResults;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\nvar SearchBuiltInSourceId = (function () {\n    function SearchBuiltInSourceId() {\n    }\n    return SearchBuiltInSourceId;\n}());\nSearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\nSearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\nSearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\nSearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\nSearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\nSearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\nSearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\nSearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\nSearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\nSearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\nSearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\nSearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\nSearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\nSearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\nSearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\nexports.SearchBuiltInSourceId = SearchBuiltInSourceId;\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar SearchSuggest = (function (_super) {\n    __extends(SearchSuggest, _super);\n    function SearchSuggest(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/suggest\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    SearchSuggest.prototype.execute = function (query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\n    };\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    };\n    return SearchSuggest;\n}(queryable_1.QueryableInstance));\nexports.SearchSuggest = SearchSuggest;\nvar SearchSuggestResult = (function () {\n    function SearchSuggestResult(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n    return SearchSuggestResult;\n}());\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar webs_1 = __webpack_require__(8);\nvar usercustomactions_1 = __webpack_require__(19);\nvar odata_1 = __webpack_require__(2);\nvar features_1 = __webpack_require__(23);\n/**\n * Describes a site collection\n *\n */\nvar Site = (function (_super) {\n    __extends(Site, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Site(baseUrl, path) {\n        if (path === void 0) { path = \"_api/site\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\n        /**\n         * Gets the root web of the site collection\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this, \"rootweb\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"features\", {\n        /**\n         * Gets the active features for this site\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the context information for the site.\n     */\n    Site.prototype.getContextInfo = function () {\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.post().then(function (data) {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                var info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the site URL from a page URL.\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Creates a new batch for requests within the context of context this site\n     *\n     */\n    Site.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    /**\n     * Opens a web by Id (using POST)\n     *\n     * @param webId The GUID id fo the web to open\n     */\n    Site.prototype.openWebById = function (webId) {\n        return this.clone(Site, \"openWebById('\" + webId + \"')\", true).post().then(function (d) {\n            return {\n                data: d,\n                web: webs_1.Web.fromUrl(odata_1.extractOdataId(d)),\n            };\n        });\n    };\n    return Site;\n}(queryable_1.QueryableInstance));\nexports.Site = Site;\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar sitegroups_1 = __webpack_require__(18);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes a collection of all site collection users\n *\n */\nvar SiteUsers = (function (_super) {\n    __extends(SiteUsers, _super);\n    /**\n     * Creates a new instance of the Users class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteUsers(baseUrl, path) {\n        if (path === void 0) { path = \"siteusers\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email of the user\n     */\n    SiteUsers.prototype.getByEmail = function (email) {\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n    };\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    SiteUsers.prototype.getById = function (id) {\n        return new SiteUser(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The email address of the user\n     */\n    SiteUsers.prototype.getByLoginName = function (loginName) {\n        var su = new SiteUser(this);\n        su.concat(\"(@v)\");\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return su;\n    };\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    SiteUsers.prototype.removeById = function (id) {\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\", true).post();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\", true);\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return o.post();\n    };\n    /**\n     * Add a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    SiteUsers.prototype.add = function (loginName) {\n        var _this = this;\n        return this.clone(SiteUsers, null, true).post({\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\n        }).then(function () { return _this.getByLoginName(loginName); });\n    };\n    return SiteUsers;\n}(queryable_1.QueryableCollection));\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nvar SiteUser = (function (_super) {\n    __extends(SiteUser, _super);\n    function SiteUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\n        /**\n         * Get's the groups for this user.\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    SiteUser.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                user: _this,\n            };\n        });\n    };\n    /**\n     * Delete this user\n     *\n     */\n    SiteUser.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return SiteUser;\n}(queryable_1.QueryableInstance));\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nvar CurrentUser = (function (_super) {\n    __extends(CurrentUser, _super);\n    function CurrentUser(baseUrl, path) {\n        if (path === void 0) { path = \"currentuser\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return CurrentUser;\n}(queryable_1.QueryableInstance));\nexports.CurrentUser = CurrentUser;\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\nvar files_1 = __webpack_require__(7);\nvar odata_1 = __webpack_require__(2);\n/**\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\n */\nvar UtilityMethod = (function (_super) {\n    __extends(UtilityMethod, _super);\n    /**\n     * Creates a new instance of the Utility method class\n     *\n     * @param baseUrl The parent url provider\n     * @param methodName The static method name to call on the utility class\n     */\n    function UtilityMethod(baseUrl, methodName) {\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\n    }\n    UtilityMethod.getBaseUrl = function (candidate) {\n        if (typeof candidate === \"string\") {\n            return candidate;\n        }\n        var c = candidate;\n        var url = c.toUrl();\n        var index = url.indexOf(\"_api/\");\n        if (index < 0) {\n            return url;\n        }\n        return url.substr(0, index);\n    };\n    UtilityMethod.prototype.excute = function (props) {\n        return this.postAs({\n            body: JSON.stringify(props),\n        });\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    UtilityMethod.prototype.create = function (methodName, includeBatch) {\n        var clone = new UtilityMethod(this.parentUrl, methodName);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Sends an email based on the supplied properties\n     *\n     * @param props The properties of the email to send\n     */\n    UtilityMethod.prototype.sendEmail = function (props) {\n        var params = {\n            properties: {\n                Body: props.Body,\n                From: props.From,\n                Subject: props.Subject,\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\n            },\n        };\n        if (props.To && props.To.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                To: { results: props.To },\n            });\n        }\n        if (props.CC && props.CC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                CC: { results: props.CC },\n            });\n        }\n        if (props.BCC && props.BCC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                BCC: { results: props.BCC },\n            });\n        }\n        if (props.AdditionalHeaders) {\n            params.properties = util_1.Util.extend(params.properties, {\n                AdditionalHeaders: props.AdditionalHeaders,\n            });\n        }\n        return this.create(\"SendEmail\", true).excute(params);\n    };\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\n        return this.create(\"GetCurrentUserEmailAddresses\", true).excute({});\n    };\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\n        var params = {\n            addToUserInfoList: addToUserInfoList,\n            input: input,\n            inputIsEmailOnly: inputIsEmailOnly,\n            matchUserInfoList: matchUserInfoList,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"ResolvePrincipalInCurrentContext\", true).excute(params);\n    };\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\n        var params = {\n            groupName: groupName,\n            input: input,\n            maxCount: maxCount,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"SearchPrincipalsUsingContextWeb\", true).excute(params);\n    };\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\n        var params = {\n            pageAddress: pageAddress,\n        };\n        return this.create(\"CreateEmailBodyForInvitation\", true).excute(params);\n    };\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\n        if (maxCount === void 0) { maxCount = 30; }\n        var params = {\n            inputs: inputs,\n            maxCount: maxCount,\n        };\n        return this.create(\"ExpandGroupsToPrincipals\", true).excute(params);\n    };\n    UtilityMethod.prototype.createWikiPage = function (info) {\n        return this.create(\"CreateWikiPageInContextWeb\", true).excute({\n            parameters: info,\n        }).then(function (r) {\n            return {\n                data: r,\n                file: new files_1.File(odata_1.extractOdataId(r)),\n            };\n        });\n    };\n    return UtilityMethod;\n}(queryable_1.Queryable));\nexports.UtilityMethod = UtilityMethod;\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = __webpack_require__(6);\n/**\n * Class used to manage the current application settings\n *\n */\nvar Settings = (function () {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    function Settings() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    Settings.prototype.add = function (key, value) {\n        this._settings.add(key, value);\n    };\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    Settings.prototype.addJSON = function (key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    };\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    Settings.prototype.apply = function (hash) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                _this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    Settings.prototype.load = function (provider) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            provider.getConfiguration().then(function (value) {\n                _this._settings.merge(value);\n                resolve();\n            }).catch(function (reason) {\n                reject(reason);\n            });\n        });\n    };\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    Settings.prototype.get = function (key) {\n        return this._settings.get(key);\n    };\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    Settings.prototype.getJSON = function (key) {\n        var o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    };\n    return Settings;\n}());\nexports.Settings = Settings;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search_1 = __webpack_require__(27);\nvar searchsuggest_1 = __webpack_require__(28);\nvar site_1 = __webpack_require__(29);\nvar webs_1 = __webpack_require__(8);\nvar util_1 = __webpack_require__(0);\nvar userprofiles_1 = __webpack_require__(48);\nvar exceptions_1 = __webpack_require__(3);\nvar utilities_1 = __webpack_require__(31);\n/**\n * Root of the SharePoint REST module\n */\nvar SPRest = (function () {\n    function SPRest() {\n    }\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.searchSuggest = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(\"\").execute(finalQuery);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.search = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else if (query instanceof search_1.SearchQueryBuilder) {\n            finalQuery = query.toSearchQuery();\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(\"\").execute(finalQuery);\n    };\n    Object.defineProperty(SPRest.prototype, \"site\", {\n        /**\n         * Begins a site collection scoped REST request\n         *\n         */\n        get: function () {\n            return new site_1.Site(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"web\", {\n        /**\n         * Begins a web scoped REST request\n         *\n         */\n        get: function () {\n            return new webs_1.Web(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\n        /**\n         * Access to user profile methods\n         *\n         */\n        get: function () {\n            return new userprofiles_1.UserProfileQuery(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch object for use with the Queryable.addToBatch method\n     *\n     */\n    SPRest.prototype.createBatch = function () {\n        return this.web.createBatch();\n    };\n    Object.defineProperty(SPRest.prototype, \"utility\", {\n        /**\n         * Static utilities methods from SP.Utilities.Utility\n         */\n        get: function () {\n            return new utilities_1.UtilityMethod(\"\", \"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    };\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    };\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    SPRest.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        var instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance;\n    };\n    return SPRest;\n}());\nexports.SPRest = SPRest;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(44));\nvar httpclient_1 = __webpack_require__(15);\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = __webpack_require__(40);\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = __webpack_require__(39);\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = __webpack_require__(21);\nexports.FetchClient = fetchclient_1.FetchClient;\n__export(__webpack_require__(36));\nvar collections_1 = __webpack_require__(6);\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = __webpack_require__(0);\nexports.Util = util_1.Util;\n__export(__webpack_require__(5));\n__export(__webpack_require__(3));\n\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = __webpack_require__(20);\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = __webpack_require__(37);\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = __webpack_require__(20);\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nvar SPListConfigurationProvider = (function () {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle) {\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\n        /**\n         * Gets the url of the SharePoint site, where the configuration list is located\n         *\n         * @return {string} Url address of the site\n         */\n        get: function () {\n            return this.sourceWeb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\n        /**\n         * Gets the title of the SharePoint list, which contains the configuration settings\n         *\n         * @return {string} List title\n         */\n        get: function () {\n            return this.sourceListTitle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then(function (data) {\n            return data.reduce(function (configuration, item) {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    };\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    SPListConfigurationProvider.prototype.asCaching = function () {\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    };\n    return SPListConfigurationProvider;\n}());\nexports.default = SPListConfigurationProvider;\n\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = __webpack_require__(6);\nvar util_1 = __webpack_require__(0);\nvar odata_1 = __webpack_require__(2);\nvar CachedDigest = (function () {\n    function CachedDigest() {\n    }\n    return CachedDigest;\n}());\nexports.CachedDigest = CachedDigest;\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\nvar digests = new collections_1.Dictionary();\nvar DigestCache = (function () {\n    function DigestCache(_httpClient, _digests) {\n        if (_digests === void 0) { _digests = digests; }\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    DigestCache.prototype.getDigest = function (webUrl) {\n        var _this = this;\n        var cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            var now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Accept\": \"application/json;odata=verbose\",\n                \"Content-type\": \"application/json;odata=verbose;charset=utf-8\",\n            },\n            method: \"POST\",\n        }).then(function (response) {\n            var parser = new odata_1.ODataDefaultParser();\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\n        }).then(function (data) {\n            var newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            var seconds = data.FormDigestTimeoutSeconds;\n            var expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            _this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    };\n    DigestCache.prototype.clear = function () {\n        this._digests.clear();\n    };\n    return DigestCache;\n}());\nexports.DigestCache = DigestCache;\n\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = __webpack_require__(3);\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nvar NodeFetchClient = (function () {\n    function NodeFetchClient() {\n    }\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    NodeFetchClient.prototype.fetch = function () {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    };\n    return NodeFetchClient;\n}());\nexports.NodeFetchClient = NodeFetchClient;\n\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar exceptions_1 = __webpack_require__(3);\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nvar SPRequestExecutorClient = (function () {\n    function SPRequestExecutorClient() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = function (spResponse) {\n            var responseHeaders = new Headers();\n            for (var h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\n        var headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        return new Promise(function (resolve, reject) {\n            var requestOptions = {\n                error: function (error) {\n                    reject(_this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: function (response) {\n                    resolve(_this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n            }\n            else {\n                requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n            }\n            executor.executeAsync(requestOptions);\n        });\n    };\n    return SPRequestExecutorClient;\n}());\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = __webpack_require__(0);\nvar storage_1 = __webpack_require__(14);\nvar configuration_1 = __webpack_require__(33);\nvar logging_1 = __webpack_require__(5);\nvar rest_1 = __webpack_require__(34);\nvar pnplibconfig_1 = __webpack_require__(4);\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the REST interface\n */\nexports.sp = new rest_1.SPRest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Expose a subset of classes from the library for public consumption\n */\n__export(__webpack_require__(35));\n// creating this class instead of directly assigning to default fixes issue #116\nvar Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar odata_1 = __webpack_require__(2);\n/**\n * Describes a collection of Item objects\n *\n */\nvar AttachmentFiles = (function (_super) {\n    __extends(AttachmentFiles, _super);\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n     */\n    function AttachmentFiles(baseUrl, path) {\n        if (path === void 0) { path = \"AttachmentFiles\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    AttachmentFiles.prototype.getByName = function (name) {\n        var f = new AttachmentFile(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new attachment to the collection. Not supported for batching.\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    AttachmentFiles.prototype.add = function (name, content) {\n        var _this = this;\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\").post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(name),\n            };\n        });\n    };\n    /**\n     * Adds mjultiple new attachment to the collection. Not supported for batching.\n     *\n     * @files name The collection of files to add\n     */\n    AttachmentFiles.prototype.addMultiple = function (files) {\n        var _this = this;\n        // add the files in series so we don't get update conflicts\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\").post({\n            body: file.content,\n        }); }); }, Promise.resolve());\n    };\n    return AttachmentFiles;\n}(queryable_1.QueryableCollection));\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nvar AttachmentFile = (function (_super) {\n    __extends(AttachmentFile, _super);\n    function AttachmentFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    AttachmentFile.prototype.getText = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.TextFileParser());\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    AttachmentFile.prototype.getBlob = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BlobFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getBuffer = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BufferFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getJSON = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.JSONFileParser());\n    };\n    /**\n     * Sets the content of a file. Not supported for batching\n     *\n     * @param content The value to set for the file contents\n     */\n    AttachmentFile.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(AttachmentFile, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new AttachmentFile(_this); });\n    };\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return AttachmentFile;\n}(queryable_1.QueryableInstance));\nexports.AttachmentFile = AttachmentFile;\n\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of Field objects\n *\n */\nvar Forms = (function (_super) {\n    __extends(Forms, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Forms(baseUrl, path) {\n        if (path === void 0) { path = \"forms\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    Forms.prototype.getById = function (id) {\n        var i = new Form(this);\n        i.concat(\"('\" + id + \"')\");\n        return i;\n    };\n    return Forms;\n}(queryable_1.QueryableCollection));\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nvar Form = (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Form;\n}(queryable_1.QueryableInstance));\nexports.Form = Form;\n\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(__webpack_require__(22));\nvar files_1 = __webpack_require__(7);\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nvar folders_1 = __webpack_require__(9);\nexports.Folder = folders_1.Folder;\nexports.Folders = folders_1.Folders;\nvar items_1 = __webpack_require__(10);\nexports.Item = items_1.Item;\nexports.Items = items_1.Items;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = __webpack_require__(25);\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = __webpack_require__(11);\nexports.List = lists_1.List;\nexports.Lists = lists_1.Lists;\nvar odata_1 = __webpack_require__(2);\nexports.extractOdataId = odata_1.extractOdataId;\nexports.ODataParserBase = odata_1.ODataParserBase;\nexports.ODataDefaultParser = odata_1.ODataDefaultParser;\nexports.ODataRaw = odata_1.ODataRaw;\nexports.ODataValue = odata_1.ODataValue;\nexports.ODataEntity = odata_1.ODataEntity;\nexports.ODataEntityArray = odata_1.ODataEntityArray;\nexports.TextFileParser = odata_1.TextFileParser;\nexports.BlobFileParser = odata_1.BlobFileParser;\nexports.BufferFileParser = odata_1.BufferFileParser;\nexports.JSONFileParser = odata_1.JSONFileParser;\nvar queryable_1 = __webpack_require__(1);\nexports.Queryable = queryable_1.Queryable;\nexports.QueryableInstance = queryable_1.QueryableInstance;\nexports.QueryableCollection = queryable_1.QueryableCollection;\nvar roles_1 = __webpack_require__(17);\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = __webpack_require__(27);\nexports.Search = search_1.Search;\nexports.SearchQueryBuilder = search_1.SearchQueryBuilder;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nexports.SearchBuiltInSourceId = search_1.SearchBuiltInSourceId;\nvar searchsuggest_1 = __webpack_require__(28);\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = __webpack_require__(29);\nexports.Site = site_1.Site;\n__export(__webpack_require__(13));\nvar utilities_1 = __webpack_require__(31);\nexports.UtilityMethod = utilities_1.UtilityMethod;\nvar webs_1 = __webpack_require__(8);\nexports.Web = webs_1.Web;\n\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = __webpack_require__(22);\nvar httpclient_1 = __webpack_require__(15);\nvar logging_1 = __webpack_require__(5);\nvar util_1 = __webpack_require__(0);\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult(context) {\n    logging_1.Logger.log({\n        data: context.result,\n        level: logging_1.LogLevel.Verbose,\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\n    });\n    return Promise.resolve(context.result);\n}\n/**\n * Sets the result on the context\n */\nfunction setResult(context, value) {\n    return new Promise(function (resolve) {\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\nexports.setResult = setResult;\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next(c) {\n    if (c.pipeline.length < 1) {\n        return Promise.resolve(c);\n    }\n    return c.pipeline.shift()(c);\n}\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nfunction pipe(context) {\n    return next(context)\n        .then(function (ctx) { return returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\n        };\n    };\n}\nexports.requestPipelineMethod = requestPipelineMethod;\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", logging_1.LogLevel.Info);\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = new httpclient_1.HttpClient();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            if (context.isBatched) {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\n                });\n            }\n            else {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\n                });\n            }\n            resolve(context);\n        });\n    };\n    Object.defineProperty(PipelineMethods, \"default\", {\n        get: function () {\n            return [\n                PipelineMethods.logStart,\n                PipelineMethods.caching,\n                PipelineMethods.send,\n                PipelineMethods.logEnd,\n            ];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PipelineMethods;\n}());\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logStart\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"caching\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"send\", null);\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logEnd\", null);\nexports.PipelineMethods = PipelineMethods;\n\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar RelatedItemManagerImpl = (function (_super) {\n    __extends(RelatedItemManagerImpl, _super);\n    function RelatedItemManagerImpl(baseUrl, path) {\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    RelatedItemManagerImpl.FromUrl = function (url) {\n        if (url === null) {\n            return new RelatedItemManagerImpl(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new RelatedItemManagerImpl(url.substr(0, index));\n        }\n        return new RelatedItemManagerImpl(url);\n    };\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetPageOneRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemID,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\n     *\n     * @param sourceListName The source list name or list id\n     * @param sourceItemId The source item id\n     * @param targetItemUrl The target item url\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkToUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                TargetItemUrl: targetItemUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\n     *\n     * @param sourceItemUrl The source item url\n     * @param targetListName The target list name or list id\n     * @param targetItemId The target item id\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkFromUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemUrl: sourceItemUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".DeleteSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryDeleteReverseLink: tryDeleteReverseLink,\n            }),\n        });\n    };\n    return RelatedItemManagerImpl;\n}(queryable_1.Queryable));\nexports.RelatedItemManagerImpl = RelatedItemManagerImpl;\n\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nvar Subscriptions = (function (_super) {\n    __extends(Subscriptions, _super);\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n     */\n    function Subscriptions(baseUrl, path) {\n        if (path === void 0) { path = \"subscriptions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     */\n    Subscriptions.prototype.getById = function (subscriptionId) {\n        var subscription = new Subscription(this);\n        subscription.concat(\"('\" + subscriptionId + \"')\");\n        return subscription;\n    };\n    /**\n     * Create a new webhook subscription\n     *\n     */\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.post({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n            return { data: result, subscription: _this.getById(result.id) };\n        });\n    };\n    return Subscriptions;\n}(queryable_1.QueryableCollection));\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Update a webhook subscription\n     *\n     */\n    Subscription.prototype.update = function (expirationDate) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patch({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n            return { data: data, subscription: _this };\n        });\n    };\n    /**\n     * Remove a webhook subscription\n     *\n     */\n    Subscription.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return Subscription;\n}(queryable_1.QueryableInstance));\nexports.Subscription = Subscription;\n\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar files_1 = __webpack_require__(52);\nvar odata_1 = __webpack_require__(2);\nvar UserProfileQuery = (function (_super) {\n    __extends(UserProfileQuery, _super);\n    function UserProfileQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\n        var _this = _super.call(this, baseUrl, path) || this;\n        _this.profileLoader = new ProfileLoader(baseUrl);\n        return _this;\n    }\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\n        /**\n         * The URL of the edit profile page for the current user.\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\n        /**\n         * A Boolean value that indicates whether the current user's People I'm Following list is public.\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * A Boolean value that indicates whether the current user's People I'm Following list is public.\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Checks whether the current user is following the specified user.\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets tags that the user is following.\n     *\n     * @param maxCount The maximum number of tags to get.\n     */\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\n        if (maxCount === void 0) { maxCount = 20; }\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\", true).get();\n    };\n    /**\n     * Gets the people who are following the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\n        /**\n         * Gets the people who are following the current user.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\n        /**\n         * Gets user properties for the current user.\n         *\n         */\n        get: function () {\n            return new UserProfileQuery(this, \"getmyproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the people who the specified user is following.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\n        /**\n         * Gets the most popular tags.\n         *\n         */\n        get: function () {\n            var q = this.clone(UserProfileQuery, null, true);\n            q.concat(\".gettrendingtags\");\n            return q.get();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the specified user profile property for the specified user.\n     *\n     * @param loginName The account name of the user.\n     * @param propertyName The case-sensitive name of the property to get.\n     */\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Removes the specified user from the user's list of suggested people to follow.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.post();\n    };\n    /**\n     * Checks whether the first user is following the second user.\n     *\n     * @param follower The account name of the user who might be following followee.\n     * @param followee The account name of the user who might be followed.\n     */\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\n        var q = this.clone(UserProfileQuery, null, true);\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    };\n    /**\n     * Uploads and sets the user profile picture. Not supported for batching.\n     *\n     * @param profilePicSource Blob data representing the user's picture\n     */\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            files_1.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\n                request.post({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(function (_) { return resolve(); });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\n        var emails = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            emails[_i] = arguments[_i];\n        }\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            return this.profileLoader.ownerUserProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile that corresponds to the current user.\n         */\n        get: function () {\n            return this.profileLoader.userProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    };\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\n        return this.profileLoader.shareAllSocialData(share);\n    };\n    return UserProfileQuery;\n}(queryable_1.QueryableInstance));\nexports.UserProfileQuery = UserProfileQuery;\nvar ProfileLoader = (function (_super) {\n    __extends(ProfileLoader, _super);\n    function ProfileLoader(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\").post({\n            body: JSON.stringify({ \"emailIDs\": emails }),\n        });\n    };\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n            if (this.hasBatch) {\n                q = q.inBatch(this.batch);\n            }\n            return q.postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile that corresponds to the current user.\n         *\n         */\n        get: function () {\n            return this.clone(ProfileLoader, \"getuserprofile\", true).postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\", true).post();\n    };\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\", true).post();\n    };\n    return ProfileLoader;\n}(queryable_1.Queryable));\n\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar util_1 = __webpack_require__(0);\n/**\n * Describes the views available in the current context\n *\n */\nvar Views = (function (_super) {\n    __extends(Views, _super);\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Views(baseUrl, path) {\n        if (path === void 0) { path = \"views\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    Views.prototype.getById = function (id) {\n        var v = new View(this);\n        v.concat(\"('\" + id + \"')\");\n        return v;\n    };\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    Views.prototype.getByTitle = function (title) {\n        return new View(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    /*tslint:disable max-line-length */\n    Views.prototype.add = function (title, personalView, additionalSettings) {\n        var _this = this;\n        if (personalView === void 0) { personalView = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.clone(Views, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                view: _this.getById(data.Id),\n            };\n        });\n    };\n    return Views;\n}(queryable_1.QueryableCollection));\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(View.prototype, \"fields\", {\n        get: function () {\n            return new ViewFields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    View.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                view: _this,\n            };\n        });\n    };\n    /**\n     * Delete this view\n     *\n     */\n    View.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    View.prototype.renderAsHtml = function () {\n        return this.clone(queryable_1.Queryable, \"renderashtml\", true).get();\n    };\n    return View;\n}(queryable_1.QueryableInstance));\nexports.View = View;\nvar ViewFields = (function (_super) {\n    __extends(ViewFields, _super);\n    function ViewFields(baseUrl, path) {\n        if (path === void 0) { path = \"viewfields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    ViewFields.prototype.getSchemaXml = function () {\n        return this.clone(queryable_1.Queryable, \"schemaxml\", true).get();\n    };\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\", true).post();\n    };\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    ViewFields.prototype.move = function (fieldInternalName, index) {\n        return this.clone(ViewFields, \"moveviewfieldto\", true).post({\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\n        });\n    };\n    /**\n     * Removes all the fields from the collection.\n     */\n    ViewFields.prototype.removeAll = function () {\n        return this.clone(ViewFields, \"removeallviewfields\", true).post();\n    };\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    ViewFields.prototype.remove = function (fieldInternalName) {\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\", true).post();\n    };\n    return ViewFields;\n}(queryable_1.QueryableCollection));\nexports.ViewFields = ViewFields;\n\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = __webpack_require__(1);\nvar LimitedWebPartManager = (function (_super) {\n    __extends(LimitedWebPartManager, _super);\n    function LimitedWebPartManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\n        /**\n         * Gets the set of web part definitions contained by this web part manager\n         *\n         */\n        get: function () {\n            return new WebPartDefinitions(this, \"webparts\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    LimitedWebPartManager.prototype.export = function (id) {\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\", true).post({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    };\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    LimitedWebPartManager.prototype.import = function (xml) {\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\", true).post({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    };\n    return LimitedWebPartManager;\n}(queryable_1.Queryable));\nexports.LimitedWebPartManager = LimitedWebPartManager;\nvar WebPartDefinitions = (function (_super) {\n    __extends(WebPartDefinitions, _super);\n    function WebPartDefinitions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id GUID id of the web part definition to get\n     */\n    WebPartDefinitions.prototype.getById = function (id) {\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\n    };\n    return WebPartDefinitions;\n}(queryable_1.QueryableCollection));\nexports.WebPartDefinitions = WebPartDefinitions;\nvar WebPartDefinition = (function (_super) {\n    __extends(WebPartDefinition, _super);\n    function WebPartDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\n        /**\n         * Gets the webpart information associated with this definition\n         */\n        get: function () {\n            return new WebPart(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    WebPartDefinition.prototype.delete = function () {\n        return this.clone(WebPartDefinition, \"DeleteWebPart\", true).post();\n    };\n    return WebPartDefinition;\n}(queryable_1.QueryableInstance));\nexports.WebPartDefinition = WebPartDefinition;\nvar WebPart = (function (_super) {\n    __extends(WebPart, _super);\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    function WebPart(baseUrl, path) {\n        if (path === void 0) { path = \"webpart\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return WebPart;\n}(queryable_1.QueryableInstance));\nexports.WebPart = WebPart;\n\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = __webpack_require__(5);\nfunction deprecated(message) {\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            logging_1.Logger.log({\n                data: {\n                    descriptor: descriptor,\n                    propertyKey: propertyKey,\n                    target: target,\n                },\n                level: logging_1.LogLevel.Warning,\n                message: message,\n            });\n            return method.apply(this, args);\n        };\n    };\n}\nexports.deprecated = deprecated;\n\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// pnp.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 41);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 69edaa4614fda3f207f5","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar Util = (function () {\n    function Util() {\n    }\n    /**\n     * Gets a callback function which will maintain context across async calls.\n     * Allows for the calling pattern getCtxCallback(thisobj, method, methodarg1, methodarg2, ...)\n     *\n     * @param context The object that will be the 'this' value in the callback\n     * @param method The method to which we will apply the context and parameters\n     * @param params Optional, additional arguments to supply to the wrapped method when it is invoked\n     */\n    Util.getCtxCallback = function (context, method) {\n        var params = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            params[_i - 2] = arguments[_i];\n        }\n        return function () {\n            method.apply(context, params);\n        };\n    };\n    /**\n     * Tests if a url param exists\n     *\n     * @param name The name of the url paramter to check\n     */\n    Util.urlParamExists = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        return regex.test(location.search);\n    };\n    /**\n     * Gets a url param value by name\n     *\n     * @param name The name of the paramter for which we want the value\n     */\n    Util.getUrlParamByName = function (name) {\n        name = name.replace(/[\\[]/, \"\\\\[\").replace(/[\\]]/, \"\\\\]\");\n        var regex = new RegExp(\"[\\\\?&]\" + name + \"=([^&#]*)\");\n        var results = regex.exec(location.search);\n        return results == null ? \"\" : decodeURIComponent(results[1].replace(/\\+/g, \" \"));\n    };\n    /**\n     * Gets a url param by name and attempts to parse a bool value\n     *\n     * @param name The name of the paramter for which we want the boolean value\n     */\n    Util.getUrlParamBoolByName = function (name) {\n        var p = this.getUrlParamByName(name);\n        var isFalse = (p === \"\" || /false|0/i.test(p));\n        return !isFalse;\n    };\n    /**\n     * Inserts the string s into the string target as the index specified by index\n     *\n     * @param target The string into which we will insert s\n     * @param index The location in target to insert s (zero based)\n     * @param s The string to insert into target at position index\n     */\n    Util.stringInsert = function (target, index, s) {\n        if (index > 0) {\n            return target.substring(0, index) + s + target.substring(index, target.length);\n        }\n        return s + target;\n    };\n    /**\n     * Adds a value to a date\n     *\n     * @param date The date to which we will add units, done in local time\n     * @param interval The name of the interval to add, one of: ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second']\n     * @param units The amount to add to date of the given interval\n     *\n     * http://stackoverflow.com/questions/1197928/how-to-add-30-minutes-to-a-javascript-date-object\n     */\n    Util.dateAdd = function (date, interval, units) {\n        var ret = new Date(date.toLocaleString()); // don't change original date\n        switch (interval.toLowerCase()) {\n            case \"year\":\n                ret.setFullYear(ret.getFullYear() + units);\n                break;\n            case \"quarter\":\n                ret.setMonth(ret.getMonth() + 3 * units);\n                break;\n            case \"month\":\n                ret.setMonth(ret.getMonth() + units);\n                break;\n            case \"week\":\n                ret.setDate(ret.getDate() + 7 * units);\n                break;\n            case \"day\":\n                ret.setDate(ret.getDate() + units);\n                break;\n            case \"hour\":\n                ret.setTime(ret.getTime() + units * 3600000);\n                break;\n            case \"minute\":\n                ret.setTime(ret.getTime() + units * 60000);\n                break;\n            case \"second\":\n                ret.setTime(ret.getTime() + units * 1000);\n                break;\n            default:\n                ret = undefined;\n                break;\n        }\n        return ret;\n    };\n    /**\n     * Loads a stylesheet into the current page\n     *\n     * @param path The url to the stylesheet\n     * @param avoidCache If true a value will be appended as a query string to avoid browser caching issues\n     */\n    Util.loadStylesheet = function (path, avoidCache) {\n        if (avoidCache) {\n            path += \"?\" + encodeURIComponent((new Date()).getTime().toString());\n        }\n        var head = document.getElementsByTagName(\"head\");\n        if (head.length > 0) {\n            var e = document.createElement(\"link\");\n            head[0].appendChild(e);\n            e.setAttribute(\"type\", \"text/css\");\n            e.setAttribute(\"rel\", \"stylesheet\");\n            e.setAttribute(\"href\", path);\n        }\n    };\n    /**\n     * Combines an arbitrary set of paths ensuring that the slashes are normalized\n     *\n     * @param paths 0 to n path parts to combine\n     */\n    Util.combinePaths = function () {\n        var paths = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            paths[_i] = arguments[_i];\n        }\n        return paths\n            .filter(function (path) { return !Util.stringIsNullOrEmpty(path); })\n            .map(function (path) { return path.replace(/^[\\\\|\\/]/, \"\").replace(/[\\\\|\\/]$/, \"\"); })\n            .join(\"/\")\n            .replace(/\\\\/g, \"/\");\n    };\n    /**\n     * Gets a random string of chars length\n     *\n     * @param chars The length of the random string to generate\n     */\n    Util.getRandomString = function (chars) {\n        var text = new Array(chars);\n        var possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        for (var i = 0; i < chars; i++) {\n            text[i] = possible.charAt(Math.floor(Math.random() * possible.length));\n        }\n        return text.join(\"\");\n    };\n    /**\n     * Gets a random GUID value\n     *\n     * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\n     */\n    /* tslint:disable no-bitwise */\n    Util.getGUID = function () {\n        var d = new Date().getTime();\n        var guid = \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n            var r = (d + Math.random() * 16) % 16 | 0;\n            d = Math.floor(d / 16);\n            return (c === \"x\" ? r : (r & 0x3 | 0x8)).toString(16);\n        });\n        return guid;\n    };\n    /* tslint:enable */\n    /**\n     * Determines if a given value is a function\n     *\n     * @param candidateFunction The thing to test for being a function\n     */\n    Util.isFunction = function (candidateFunction) {\n        return typeof candidateFunction === \"function\";\n    };\n    /**\n     * @returns whether the provided parameter is a JavaScript Array or not.\n    */\n    Util.isArray = function (array) {\n        if (Array.isArray) {\n            return Array.isArray(array);\n        }\n        return array && typeof array.length === \"number\" && array.constructor === Array;\n    };\n    /**\n     * Determines if a string is null or empty or undefined\n     *\n     * @param s The string to test\n     */\n    Util.stringIsNullOrEmpty = function (s) {\n        return typeof s === \"undefined\" || s === null || s.length < 1;\n    };\n    /**\n     * Provides functionality to extend the given object by doing a shallow copy\n     *\n     * @param target The object to which properties will be copied\n     * @param source The source object from which properties will be copied\n     * @param noOverwrite If true existing properties on the target are not overwritten from the source\n     *\n     */\n    Util.extend = function (target, source, noOverwrite) {\n        if (noOverwrite === void 0) { noOverwrite = false; }\n        if (source === null || typeof source === \"undefined\") {\n            return target;\n        }\n        // ensure we don't overwrite things we don't want overwritten\n        var check = noOverwrite ? function (o, i) { return !(i in o); } : function () { return true; };\n        return Object.getOwnPropertyNames(source)\n            .filter(function (v) { return check(target, v); })\n            .reduce(function (t, v) {\n            t[v] = source[v];\n            return t;\n        }, target);\n    };\n    /**\n     * Determines if a given url is absolute\n     *\n     * @param url The url to check to see if it is absolute\n     */\n    Util.isUrlAbsolute = function (url) {\n        return /^https?:\\/\\/|^\\/\\//i.test(url);\n    };\n    /**\n     * Ensures that a given url is absolute for the current web based on context\n     *\n     * @param candidateUrl The url to make absolute\n     *\n     */\n    Util.toAbsoluteUrl = function (candidateUrl) {\n        return new Promise(function (resolve) {\n            if (Util.isUrlAbsolute(candidateUrl)) {\n                // if we are already absolute, then just return the url\n                return resolve(candidateUrl);\n            }\n            if (pnplibconfig_1.RuntimeConfig.baseUrl !== null) {\n                // base url specified either with baseUrl of spfxContext config property\n                return resolve(Util.combinePaths(pnplibconfig_1.RuntimeConfig.baseUrl, candidateUrl));\n            }\n            if (typeof global._spPageContextInfo !== \"undefined\") {\n                // operating in classic pages\n                if (global._spPageContextInfo.hasOwnProperty(\"webAbsoluteUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webAbsoluteUrl, candidateUrl));\n                }\n                else if (global._spPageContextInfo.hasOwnProperty(\"webServerRelativeUrl\")) {\n                    return resolve(Util.combinePaths(global._spPageContextInfo.webServerRelativeUrl, candidateUrl));\n                }\n            }\n            // does window.location exist and have _layouts in it?\n            if (typeof global.location !== \"undefined\") {\n                var index = global.location.toString().toLowerCase().indexOf(\"/_layouts/\");\n                if (index > 0) {\n                    // we are likely in the workbench in /_layouts/\n                    return resolve(Util.combinePaths(global.location.toString().substr(0, index), candidateUrl));\n                }\n            }\n            return resolve(candidateUrl);\n        });\n    };\n    return Util;\n}());\nexports.Util = Util;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/util.js\n// module id = 0\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar collections_1 = require(\"../collections/collections\");\nvar odata_1 = require(\"./odata\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar logging_1 = require(\"../utils/logging\");\nvar pipeline_1 = require(\"./pipeline\");\n/**\n * Queryable Base Class\n *\n */\nvar Queryable = (function () {\n    /**\n     * Creates a new instance of the Queryable class\n     *\n     * @constructor\n     * @param baseUrl A string or Queryable that should form the base part of the url\n     *\n     */\n    function Queryable(baseUrl, path) {\n        this._query = new collections_1.Dictionary();\n        this._batch = null;\n        if (typeof baseUrl === \"string\") {\n            // we need to do some extra parsing to get the parent url correct if we are\n            // being created from just a string.\n            var urlStr = baseUrl;\n            if (util_1.Util.isUrlAbsolute(urlStr) || urlStr.lastIndexOf(\"/\") < 0) {\n                this._parentUrl = urlStr;\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n            else if (urlStr.lastIndexOf(\"/\") > urlStr.lastIndexOf(\"(\")) {\n                // .../items(19)/fields\n                var index = urlStr.lastIndexOf(\"/\");\n                this._parentUrl = urlStr.slice(0, index);\n                path = util_1.Util.combinePaths(urlStr.slice(index), path);\n                this._url = util_1.Util.combinePaths(this._parentUrl, path);\n            }\n            else {\n                // .../items(19)\n                var index = urlStr.lastIndexOf(\"(\");\n                this._parentUrl = urlStr.slice(0, index);\n                this._url = util_1.Util.combinePaths(urlStr, path);\n            }\n        }\n        else {\n            var q = baseUrl;\n            this._parentUrl = q._url;\n            var target = q._query.get(\"@target\");\n            if (target !== null) {\n                this._query.add(\"@target\", target);\n            }\n            this._url = util_1.Util.combinePaths(this._parentUrl, path);\n        }\n    }\n    /**\n     * Directly concatonates the supplied string to the current url, not normalizing \"/\" chars\n     *\n     * @param pathPart The string to concatonate to the url\n     */\n    Queryable.prototype.concat = function (pathPart) {\n        this._url += pathPart;\n        return this;\n    };\n    /**\n     * Appends the given string and normalizes \"/\" chars\n     *\n     * @param pathPart The string to append\n     */\n    Queryable.prototype.append = function (pathPart) {\n        this._url = util_1.Util.combinePaths(this._url, pathPart);\n    };\n    /**\n     * Blocks a batch call from occuring, MUST be cleared by calling the returned function\n     */\n    Queryable.prototype.addBatchDependency = function () {\n        if (this.hasBatch) {\n            return this._batch.addDependency();\n        }\n        return function () { return null; };\n    };\n    Object.defineProperty(Queryable.prototype, \"hasBatch\", {\n        /**\n         * Indicates if the current query has a batch associated\n         *\n         */\n        get: function () {\n            return this._batch !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"batch\", {\n        /**\n         * The batch currently associated with this query or null\n         *\n         */\n        get: function () {\n            return this.hasBatch ? this._batch : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"parentUrl\", {\n        /**\n         * Gets the parent url used when creating this instance\n         *\n         */\n        get: function () {\n            return this._parentUrl;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Queryable.prototype, \"query\", {\n        /**\n         * Provides access to the query builder for this url\n         *\n         */\n        get: function () {\n            return this._query;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new instance of the supplied factory and extends this into that new instance\n     *\n     * @param factory constructor for the new queryable\n     */\n    Queryable.prototype.as = function (factory) {\n        var o = new factory(this._url, null);\n        return util_1.Util.extend(o, this, true);\n    };\n    /**\n     * Adds this query to the supplied batch\n     *\n     * @example\n     * ```\n     *\n     * let b = pnp.sp.createBatch();\n     * pnp.sp.web.inBatch(b).get().then(...);\n     * b.execute().then(...)\n     * ```\n     */\n    Queryable.prototype.inBatch = function (batch) {\n        if (this._batch !== null) {\n            throw new exceptions_1.AlreadyInBatchException();\n        }\n        this._batch = batch;\n        return this;\n    };\n    /**\n     * Enables caching for this request\n     *\n     * @param options Defines the options used when caching this request\n     */\n    Queryable.prototype.usingCaching = function (options) {\n        if (!pnplibconfig_1.RuntimeConfig.globalCacheDisable) {\n            this._useCaching = true;\n            this._cachingOptions = options;\n        }\n        return this;\n    };\n    /**\n     * Gets the currentl url, made absolute based on the availability of the _spPageContextInfo object\n     *\n     */\n    Queryable.prototype.toUrl = function () {\n        return this._url;\n    };\n    /**\n     * Gets the full url with query information\n     *\n     */\n    Queryable.prototype.toUrlAndQuery = function () {\n        var aliasedParams = new collections_1.Dictionary();\n        var url = this.toUrl().replace(/'!(@.*?)::(.*?)'/ig, function (match, labelName, value) {\n            logging_1.Logger.write(\"Rewriting aliased parameter from match \" + match + \" to label: \" + labelName + \" value: \" + value, logging_1.LogLevel.Verbose);\n            aliasedParams.add(labelName, \"'\" + value + \"'\");\n            return labelName;\n        });\n        // inlude our explicitly set query string params\n        aliasedParams.merge(this._query);\n        if (aliasedParams.count() > 0) {\n            url += \"?\" + aliasedParams.getKeys().map(function (key) { return key + \"=\" + aliasedParams.get(key); }).join(\"&\");\n        }\n        return url;\n    };\n    /**\n     * Gets a parent for this instance as specified\n     *\n     * @param factory The contructor for the class to create\n     */\n    Queryable.prototype.getParent = function (factory, baseUrl, path, batch) {\n        if (baseUrl === void 0) { baseUrl = this.parentUrl; }\n        var parent = new factory(baseUrl, path);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            parent.query.add(\"@target\", target);\n        }\n        if (typeof batch !== \"undefined\") {\n            parent = parent.inBatch(batch);\n        }\n        return parent;\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    Queryable.prototype.clone = function (factory, additionalPath, includeBatch) {\n        if (includeBatch === void 0) { includeBatch = false; }\n        var clone = new factory(this, additionalPath);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Executes the currently built request\n     *\n     * @param parser Allows you to specify a parser to handle the result\n     * @param getOptions The options used for this request\n     */\n    Queryable.prototype.get = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.getAs = function (parser, getOptions) {\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        if (getOptions === void 0) { getOptions = {}; }\n        return this.toRequestContext(\"GET\", getOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.post = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.postAs = function (postOptions, parser) {\n        if (postOptions === void 0) { postOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"POST\", postOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.patch = function (patchOptions, parser) {\n        if (patchOptions === void 0) { patchOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"PATCH\", patchOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    Queryable.prototype.delete = function (deleteOptions, parser) {\n        if (deleteOptions === void 0) { deleteOptions = {}; }\n        if (parser === void 0) { parser = new odata_1.ODataDefaultParser(); }\n        return this.toRequestContext(\"DELETE\", deleteOptions, parser).then(function (context) { return pipeline_1.pipe(context); });\n    };\n    /**\n     * Converts the current instance to a request context\n     *\n     * @param verb The request verb\n     * @param options The set of supplied request options\n     * @param parser The supplied ODataParser instance\n     * @param pipeline Optional request processing pipeline\n     */\n    Queryable.prototype.toRequestContext = function (verb, options, parser, pipeline) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        if (pipeline === void 0) { pipeline = pipeline_1.PipelineMethods.default; }\n        var dependencyDispose = this.hasBatch ? this.addBatchDependency() : function () { return; };\n        return util_1.Util.toAbsoluteUrl(this.toUrlAndQuery()).then(function (url) {\n            // build our request context\n            var context = {\n                batch: _this._batch,\n                batchDependency: dependencyDispose,\n                cachingOptions: _this._cachingOptions,\n                isBatched: _this.hasBatch,\n                isCached: _this._useCaching,\n                options: options,\n                parser: parser,\n                pipeline: pipeline,\n                requestAbsoluteUrl: url,\n                requestId: util_1.Util.getGUID(),\n                verb: verb,\n            };\n            return context;\n        });\n    };\n    return Queryable;\n}());\nexports.Queryable = Queryable;\n/**\n * Represents a REST collection which can be filtered, paged, and selected\n *\n */\nvar QueryableCollection = (function (_super) {\n    __extends(QueryableCollection, _super);\n    function QueryableCollection() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Filters the returned collection (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#bk_supported)\n     *\n     * @param filter The string representing the filter query\n     */\n    QueryableCollection.prototype.filter = function (filter) {\n        this._query.add(\"$filter\", filter);\n        return this;\n    };\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableCollection.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableCollection.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Orders based on the supplied fields ascending\n     *\n     * @param orderby The name of the field to sort on\n     * @param ascending If false DESC is appended, otherwise ASC (default)\n     */\n    QueryableCollection.prototype.orderBy = function (orderBy, ascending) {\n        if (ascending === void 0) { ascending = true; }\n        var keys = this._query.getKeys();\n        var query = [];\n        var asc = ascending ? \" asc\" : \" desc\";\n        for (var i = 0; i < keys.length; i++) {\n            if (keys[i] === \"$orderby\") {\n                query.push(this._query.get(\"$orderby\"));\n                break;\n            }\n        }\n        query.push(\"\" + orderBy + asc);\n        this._query.add(\"$orderby\", query.join(\",\"));\n        return this;\n    };\n    /**\n     * Skips the specified number of items\n     *\n     * @param skip The number of items to skip\n     */\n    QueryableCollection.prototype.skip = function (skip) {\n        this._query.add(\"$skip\", skip.toString());\n        return this;\n    };\n    /**\n     * Limits the query to only return the specified number of items\n     *\n     * @param top The query row limit\n     */\n    QueryableCollection.prototype.top = function (top) {\n        this._query.add(\"$top\", top.toString());\n        return this;\n    };\n    return QueryableCollection;\n}(Queryable));\nexports.QueryableCollection = QueryableCollection;\n/**\n * Represents an instance that can be selected\n *\n */\nvar QueryableInstance = (function (_super) {\n    __extends(QueryableInstance, _super);\n    function QueryableInstance() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Choose which fields to return\n     *\n     * @param selects One or more fields to return\n     */\n    QueryableInstance.prototype.select = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        if (selects.length > 0) {\n            this._query.add(\"$select\", selects.join(\",\"));\n        }\n        return this;\n    };\n    /**\n     * Expands fields such as lookups to get additional data\n     *\n     * @param expands The Fields for which to expand the values\n     */\n    QueryableInstance.prototype.expand = function () {\n        var expands = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            expands[_i] = arguments[_i];\n        }\n        if (expands.length > 0) {\n            this._query.add(\"$expand\", expands.join(\",\"));\n        }\n        return this;\n    };\n    return QueryableInstance;\n}(Queryable));\nexports.QueryableInstance = QueryableInstance;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryable.js\n// module id = 1\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar logging_1 = require(\"../utils/logging\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar exceptions_2 = require(\"../utils/exceptions\");\nfunction extractOdataId(candidate) {\n    if (candidate.hasOwnProperty(\"odata.id\")) {\n        return candidate[\"odata.id\"];\n    }\n    else if (candidate.hasOwnProperty(\"__metadata\") && candidate.__metadata.hasOwnProperty(\"id\")) {\n        return candidate.__metadata.id;\n    }\n    else {\n        throw new exceptions_1.ODataIdException(candidate);\n    }\n}\nexports.extractOdataId = extractOdataId;\nvar ODataParserBase = (function () {\n    function ODataParserBase() {\n    }\n    ODataParserBase.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                if ((r.headers.has(\"Content-Length\") && parseFloat(r.headers.get(\"Content-Length\")) === 0) || r.status === 204) {\n                    resolve({});\n                }\n                else {\n                    r.json().then(function (json) { return resolve(_this.parseODataJSON(json)); }).catch(function (e) { return reject(e); });\n                }\n            }\n        });\n    };\n    ODataParserBase.prototype.handleError = function (r, reject) {\n        if (!r.ok) {\n            r.json().then(function (json) {\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: json,\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            }).catch(function (e) {\n                // we failed to read the body - possibly it is empty. Let's report the original status that caused\n                // the request to fail and log the error with parsing the body if anyone needs it for debugging\n                logging_1.Logger.log({\n                    data: e,\n                    level: logging_1.LogLevel.Warning,\n                    message: \"There was an error parsing the error response body. See data for details.\",\n                });\n                // include the headers as they contain diagnostic information\n                var data = {\n                    responseBody: \"[[body not available]]\",\n                    responseHeaders: r.headers,\n                };\n                reject(new exceptions_2.ProcessHttpClientResponseException(r.status, r.statusText, data));\n            });\n        }\n        return r.ok;\n    };\n    ODataParserBase.prototype.parseODataJSON = function (json) {\n        var result = json;\n        if (json.hasOwnProperty(\"d\")) {\n            if (json.d.hasOwnProperty(\"results\")) {\n                result = json.d.results;\n            }\n            else {\n                result = json.d;\n            }\n        }\n        else if (json.hasOwnProperty(\"value\")) {\n            result = json.value;\n        }\n        return result;\n    };\n    return ODataParserBase;\n}());\nexports.ODataParserBase = ODataParserBase;\nvar ODataDefaultParser = (function (_super) {\n    __extends(ODataDefaultParser, _super);\n    function ODataDefaultParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ODataDefaultParser;\n}(ODataParserBase));\nexports.ODataDefaultParser = ODataDefaultParser;\nvar ODataRawParserImpl = (function () {\n    function ODataRawParserImpl() {\n    }\n    ODataRawParserImpl.prototype.parse = function (r) {\n        return r.json();\n    };\n    return ODataRawParserImpl;\n}());\nexports.ODataRawParserImpl = ODataRawParserImpl;\nvar ODataValueParserImpl = (function (_super) {\n    __extends(ODataValueParserImpl, _super);\n    function ODataValueParserImpl() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ODataValueParserImpl.prototype.parse = function (r) {\n        return _super.prototype.parse.call(this, r).then(function (d) { return d; });\n    };\n    return ODataValueParserImpl;\n}(ODataParserBase));\nvar ODataEntityParserImpl = (function (_super) {\n    __extends(ODataEntityParserImpl, _super);\n    function ODataEntityParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            var o = new _this.factory(getEntityUrl(d), null);\n            return util_1.Util.extend(o, d);\n        });\n    };\n    return ODataEntityParserImpl;\n}(ODataParserBase));\nvar ODataEntityArrayParserImpl = (function (_super) {\n    __extends(ODataEntityArrayParserImpl, _super);\n    function ODataEntityArrayParserImpl(factory) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        return _this;\n    }\n    ODataEntityArrayParserImpl.prototype.parse = function (r) {\n        var _this = this;\n        return _super.prototype.parse.call(this, r).then(function (d) {\n            return d.map(function (v) {\n                var o = new _this.factory(getEntityUrl(v), null);\n                return util_1.Util.extend(o, v);\n            });\n        });\n    };\n    return ODataEntityArrayParserImpl;\n}(ODataParserBase));\nfunction getEntityUrl(entity) {\n    if (entity.hasOwnProperty(\"odata.editLink\")) {\n        // we are dealign with minimal metadata (default)\n        return util_1.Util.combinePaths(\"_api\", entity[\"odata.editLink\"]);\n    }\n    else if (entity.hasOwnProperty(\"__metadata\")) {\n        // we are dealing with verbose, which has an absolute uri\n        return entity.__metadata.uri;\n    }\n    else {\n        // we are likely dealing with nometadata, so don't error but we won't be able to\n        // chain off these objects\n        logging_1.Logger.write(\"No uri information found in ODataEntity parsing, chaining will fail for this object.\", logging_1.LogLevel.Warning);\n        return \"\";\n    }\n}\nexports.getEntityUrl = getEntityUrl;\nexports.ODataRaw = new ODataRawParserImpl();\nfunction ODataValue() {\n    return new ODataValueParserImpl();\n}\nexports.ODataValue = ODataValue;\nfunction ODataEntity(factory) {\n    return new ODataEntityParserImpl(factory);\n}\nexports.ODataEntity = ODataEntity;\nfunction ODataEntityArray(factory) {\n    return new ODataEntityArrayParserImpl(factory);\n}\nexports.ODataEntityArray = ODataEntityArray;\n/**\n * Manages a batch of OData operations\n */\nvar ODataBatch = (function () {\n    function ODataBatch(baseUrl, _batchId) {\n        if (_batchId === void 0) { _batchId = util_1.Util.getGUID(); }\n        this.baseUrl = baseUrl;\n        this._batchId = _batchId;\n        this._requests = [];\n        this._dependencies = [];\n    }\n    Object.defineProperty(ODataBatch.prototype, \"batchId\", {\n        get: function () {\n            return this._batchId;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds a request to a batch (not designed for public use)\n     *\n     * @param url The full url of the request\n     * @param method The http method GET, POST, etc\n     * @param options Any options to include in the request\n     * @param parser The parser that will hadle the results of the request\n     */\n    ODataBatch.prototype.add = function (url, method, options, parser) {\n        var info = {\n            method: method.toUpperCase(),\n            options: options,\n            parser: parser,\n            reject: null,\n            resolve: null,\n            url: url,\n        };\n        var p = new Promise(function (resolve, reject) {\n            info.resolve = resolve;\n            info.reject = reject;\n        });\n        this._requests.push(info);\n        return p;\n    };\n    /**\n     * Adds a dependency insuring that some set of actions will occur before a batch is processed.\n     * MUST be cleared using the returned resolve delegate to allow batches to run\n     */\n    ODataBatch.prototype.addDependency = function () {\n        var resolver;\n        var promise = new Promise(function (resolve) {\n            resolver = resolve;\n        });\n        this._dependencies.push(promise);\n        return resolver;\n    };\n    /**\n     * Execute the current batch and resolve the associated promises\n     *\n     * @returns A promise which will be resolved once all of the batch's child promises have resolved\n     */\n    ODataBatch.prototype.execute = function () {\n        var _this = this;\n        // we need to check the dependencies twice due to how different engines handle things.\n        // We can get a second set of promises added after the first set resolve\n        return Promise.all(this._dependencies).then(function () { return Promise.all(_this._dependencies); }).then(function () { return _this.executeImpl(); });\n    };\n    ODataBatch.prototype.executeImpl = function () {\n        var _this = this;\n        logging_1.Logger.write(\"[\" + this.batchId + \"] (\" + (new Date()).getTime() + \") Executing batch with \" + this._requests.length + \" requests.\", logging_1.LogLevel.Info);\n        // if we don't have any requests, don't bother sending anything\n        // this could be due to caching further upstream, or just an empty batch\n        if (this._requests.length < 1) {\n            logging_1.Logger.write(\"Resolving empty batch.\", logging_1.LogLevel.Info);\n            return Promise.resolve();\n        }\n        // creating the client here allows the url to be populated for nodejs client as well as potentially\n        // any other hacks needed for other types of clients. Essentially allows the absoluteRequestUrl\n        // below to be correct\n        var client = new httpclient_1.HttpClient();\n        // due to timing we need to get the absolute url here so we can use it for all the individual requests\n        // and for sending the entire batch\n        return util_1.Util.toAbsoluteUrl(this.baseUrl).then(function (absoluteRequestUrl) {\n            // build all the requests, send them, pipe results in order to parsers\n            var batchBody = [];\n            var currentChangeSetId = \"\";\n            for (var i = 0; i < _this._requests.length; i++) {\n                var reqInfo = _this._requests[i];\n                if (reqInfo.method === \"GET\") {\n                    if (currentChangeSetId.length > 0) {\n                        // end an existing change set\n                        batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                        currentChangeSetId = \"\";\n                    }\n                    batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                }\n                else {\n                    if (currentChangeSetId.length < 1) {\n                        // start new change set\n                        currentChangeSetId = util_1.Util.getGUID();\n                        batchBody.push(\"--batch_\" + _this._batchId + \"\\n\");\n                        batchBody.push(\"Content-Type: multipart/mixed; boundary=\\\"changeset_\" + currentChangeSetId + \"\\\"\\n\\n\");\n                    }\n                    batchBody.push(\"--changeset_\" + currentChangeSetId + \"\\n\");\n                }\n                // common batch part prefix\n                batchBody.push(\"Content-Type: application/http\\n\");\n                batchBody.push(\"Content-Transfer-Encoding: binary\\n\\n\");\n                var headers = {\n                    \"Accept\": \"application/json;\",\n                };\n                // this is the url of the individual request within the batch\n                var url = util_1.Util.isUrlAbsolute(reqInfo.url) ? reqInfo.url : util_1.Util.combinePaths(absoluteRequestUrl, reqInfo.url);\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Adding request \" + reqInfo.method + \" \" + url + \" to batch.\", logging_1.LogLevel.Verbose);\n                if (reqInfo.method !== \"GET\") {\n                    var method = reqInfo.method;\n                    if (reqInfo.hasOwnProperty(\"options\") && reqInfo.options.hasOwnProperty(\"headers\") && typeof reqInfo.options.headers[\"X-HTTP-Method\"] !== \"undefined\") {\n                        method = reqInfo.options.headers[\"X-HTTP-Method\"];\n                        delete reqInfo.options.headers[\"X-HTTP-Method\"];\n                    }\n                    batchBody.push(method + \" \" + url + \" HTTP/1.1\\n\");\n                    headers = util_1.Util.extend(headers, { \"Content-Type\": \"application/json;odata=verbose;charset=utf-8\" });\n                }\n                else {\n                    batchBody.push(reqInfo.method + \" \" + url + \" HTTP/1.1\\n\");\n                }\n                if (typeof pnplibconfig_1.RuntimeConfig.headers !== \"undefined\") {\n                    headers = util_1.Util.extend(headers, pnplibconfig_1.RuntimeConfig.headers);\n                }\n                if (reqInfo.options && reqInfo.options.headers) {\n                    headers = util_1.Util.extend(headers, reqInfo.options.headers);\n                }\n                for (var name_1 in headers) {\n                    if (headers.hasOwnProperty(name_1)) {\n                        batchBody.push(name_1 + \": \" + headers[name_1] + \"\\n\");\n                    }\n                }\n                batchBody.push(\"\\n\");\n                if (reqInfo.options.body) {\n                    batchBody.push(reqInfo.options.body + \"\\n\\n\");\n                }\n            }\n            if (currentChangeSetId.length > 0) {\n                // Close the changeset\n                batchBody.push(\"--changeset_\" + currentChangeSetId + \"--\\n\\n\");\n                currentChangeSetId = \"\";\n            }\n            batchBody.push(\"--batch_\" + _this._batchId + \"--\\n\");\n            var batchHeaders = {\n                \"Content-Type\": \"multipart/mixed; boundary=batch_\" + _this._batchId,\n            };\n            var batchOptions = {\n                \"body\": batchBody.join(\"\"),\n                \"headers\": batchHeaders,\n            };\n            logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Sending batch request.\", logging_1.LogLevel.Info);\n            return client.post(util_1.Util.combinePaths(absoluteRequestUrl, \"/_api/$batch\"), batchOptions)\n                .then(function (r) { return r.text(); })\n                .then(_this._parseResponse)\n                .then(function (responses) {\n                if (responses.length !== _this._requests.length) {\n                    throw new exceptions_1.BatchParseException(\"Could not properly parse responses to match requests in batch.\");\n                }\n                logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched requests.\", logging_1.LogLevel.Info);\n                return responses.reduce(function (chain, response, index) {\n                    var request = _this._requests[index];\n                    logging_1.Logger.write(\"[\" + _this.batchId + \"] (\" + (new Date()).getTime() + \") Resolving batched request \" + request.method + \" \" + request.url + \".\", logging_1.LogLevel.Verbose);\n                    return chain.then(function (_) { return request.parser.parse(response).then(request.resolve).catch(request.reject); });\n                }, Promise.resolve());\n            });\n        });\n    };\n    /**\n     * Parses the response from a batch request into an array of Response instances\n     *\n     * @param body Text body of the response from the batch request\n     */\n    ODataBatch.prototype._parseResponse = function (body) {\n        return new Promise(function (resolve, reject) {\n            var responses = [];\n            var header = \"--batchresponse_\";\n            // Ex. \"HTTP/1.1 500 Internal Server Error\"\n            var statusRegExp = new RegExp(\"^HTTP/[0-9.]+ +([0-9]+) +(.*)\", \"i\");\n            var lines = body.split(\"\\n\");\n            var state = \"batch\";\n            var status;\n            var statusText;\n            for (var i = 0; i < lines.length; ++i) {\n                var line = lines[i];\n                switch (state) {\n                    case \"batch\":\n                        if (line.substr(0, header.length) === header) {\n                            state = \"batchHeaders\";\n                        }\n                        else {\n                            if (line.trim() !== \"\") {\n                                throw new exceptions_1.BatchParseException(\"Invalid response, line \" + i);\n                            }\n                        }\n                        break;\n                    case \"batchHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"status\";\n                        }\n                        break;\n                    case \"status\":\n                        var parts = statusRegExp.exec(line);\n                        if (parts.length !== 3) {\n                            throw new exceptions_1.BatchParseException(\"Invalid status, line \" + i);\n                        }\n                        status = parseInt(parts[1], 10);\n                        statusText = parts[2];\n                        state = \"statusHeaders\";\n                        break;\n                    case \"statusHeaders\":\n                        if (line.trim() === \"\") {\n                            state = \"body\";\n                        }\n                        break;\n                    case \"body\":\n                        responses.push((status === 204) ? new Response() : new Response(line, { status: status, statusText: statusText }));\n                        state = \"batch\";\n                        break;\n                }\n            }\n            if (state !== \"status\") {\n                reject(new exceptions_1.BatchParseException(\"Unexpected end of input\"));\n            }\n            resolve(responses);\n        });\n    };\n    return ODataBatch;\n}());\nexports.ODataBatch = ODataBatch;\nvar TextFileParser = (function () {\n    function TextFileParser() {\n    }\n    TextFileParser.prototype.parse = function (r) {\n        return r.text();\n    };\n    return TextFileParser;\n}());\nexports.TextFileParser = TextFileParser;\nvar BlobFileParser = (function () {\n    function BlobFileParser() {\n    }\n    BlobFileParser.prototype.parse = function (r) {\n        return r.blob();\n    };\n    return BlobFileParser;\n}());\nexports.BlobFileParser = BlobFileParser;\nvar JSONFileParser = (function () {\n    function JSONFileParser() {\n    }\n    JSONFileParser.prototype.parse = function (r) {\n        return r.json();\n    };\n    return JSONFileParser;\n}());\nexports.JSONFileParser = JSONFileParser;\nvar BufferFileParser = (function () {\n    function BufferFileParser() {\n    }\n    BufferFileParser.prototype.parse = function (r) {\n        if (util_1.Util.isFunction(r.arrayBuffer)) {\n            return r.arrayBuffer();\n        }\n        return r.buffer();\n    };\n    return BufferFileParser;\n}());\nexports.BufferFileParser = BufferFileParser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/odata.js\n// module id = 2\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = require(\"../utils/logging\");\nfunction defaultLog(error) {\n    logging_1.Logger.log({ data: {}, level: logging_1.LogLevel.Error, message: \"[\" + error.name + \"]::\" + error.message });\n}\n/**\n * Represents an exception with an HttpClient request\n *\n */\nvar ProcessHttpClientResponseException = (function (_super) {\n    __extends(ProcessHttpClientResponseException, _super);\n    function ProcessHttpClientResponseException(status, statusText, data) {\n        var _this = _super.call(this, \"Error making HttpClient request in queryable: [\" + status + \"] \" + statusText) || this;\n        _this.status = status;\n        _this.statusText = statusText;\n        _this.data = data;\n        _this.name = \"ProcessHttpClientResponseException\";\n        logging_1.Logger.log({ data: _this.data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ProcessHttpClientResponseException;\n}(Error));\nexports.ProcessHttpClientResponseException = ProcessHttpClientResponseException;\nvar NoCacheAvailableException = (function (_super) {\n    __extends(NoCacheAvailableException, _super);\n    function NoCacheAvailableException(msg) {\n        if (msg === void 0) { msg = \"Cannot create a caching configuration provider since cache is not available.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NoCacheAvailableException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NoCacheAvailableException;\n}(Error));\nexports.NoCacheAvailableException = NoCacheAvailableException;\nvar APIUrlException = (function (_super) {\n    __extends(APIUrlException, _super);\n    function APIUrlException(msg) {\n        if (msg === void 0) { msg = \"Unable to determine API url.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return APIUrlException;\n}(Error));\nexports.APIUrlException = APIUrlException;\nvar AuthUrlException = (function (_super) {\n    __extends(AuthUrlException, _super);\n    function AuthUrlException(data, msg) {\n        if (msg === void 0) { msg = \"Auth URL Endpoint could not be determined from data. Data logged.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"APIUrlException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return AuthUrlException;\n}(Error));\nexports.AuthUrlException = AuthUrlException;\nvar NodeFetchClientUnsupportedException = (function (_super) {\n    __extends(NodeFetchClientUnsupportedException, _super);\n    function NodeFetchClientUnsupportedException(msg) {\n        if (msg === void 0) { msg = \"Using NodeFetchClient in the browser is not supported.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"NodeFetchClientUnsupportedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NodeFetchClientUnsupportedException;\n}(Error));\nexports.NodeFetchClientUnsupportedException = NodeFetchClientUnsupportedException;\nvar SPRequestExecutorUndefinedException = (function (_super) {\n    __extends(SPRequestExecutorUndefinedException, _super);\n    function SPRequestExecutorUndefinedException() {\n        var _this = this;\n        var msg = [\n            \"SP.RequestExecutor is undefined. \",\n            \"Load the SP.RequestExecutor.js library (/_layouts/15/SP.RequestExecutor.js) before loading the PnP JS Core library.\",\n        ].join(\" \");\n        _this = _super.call(this, msg) || this;\n        _this.name = \"SPRequestExecutorUndefinedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return SPRequestExecutorUndefinedException;\n}(Error));\nexports.SPRequestExecutorUndefinedException = SPRequestExecutorUndefinedException;\nvar MaxCommentLengthException = (function (_super) {\n    __extends(MaxCommentLengthException, _super);\n    function MaxCommentLengthException(msg) {\n        if (msg === void 0) { msg = \"The maximum comment length is 1023 characters.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"MaxCommentLengthException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return MaxCommentLengthException;\n}(Error));\nexports.MaxCommentLengthException = MaxCommentLengthException;\nvar NotSupportedInBatchException = (function (_super) {\n    __extends(NotSupportedInBatchException, _super);\n    function NotSupportedInBatchException(operation) {\n        if (operation === void 0) { operation = \"This operation\"; }\n        var _this = _super.call(this, operation + \" is not supported as part of a batch.\") || this;\n        _this.name = \"NotSupportedInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return NotSupportedInBatchException;\n}(Error));\nexports.NotSupportedInBatchException = NotSupportedInBatchException;\nvar ODataIdException = (function (_super) {\n    __extends(ODataIdException, _super);\n    function ODataIdException(data, msg) {\n        if (msg === void 0) { msg = \"Could not extract odata id in object, you may be using nometadata. Object data logged to logger.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"ODataIdException\";\n        logging_1.Logger.log({ data: data, level: logging_1.LogLevel.Error, message: _this.message });\n        return _this;\n    }\n    return ODataIdException;\n}(Error));\nexports.ODataIdException = ODataIdException;\nvar BatchParseException = (function (_super) {\n    __extends(BatchParseException, _super);\n    function BatchParseException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"BatchParseException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return BatchParseException;\n}(Error));\nexports.BatchParseException = BatchParseException;\nvar AlreadyInBatchException = (function (_super) {\n    __extends(AlreadyInBatchException, _super);\n    function AlreadyInBatchException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"AlreadyInBatchException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return AlreadyInBatchException;\n}(Error));\nexports.AlreadyInBatchException = AlreadyInBatchException;\nvar FunctionExpectedException = (function (_super) {\n    __extends(FunctionExpectedException, _super);\n    function FunctionExpectedException(msg) {\n        if (msg === void 0) { msg = \"This query is already part of a batch.\"; }\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"FunctionExpectedException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return FunctionExpectedException;\n}(Error));\nexports.FunctionExpectedException = FunctionExpectedException;\nvar UrlException = (function (_super) {\n    __extends(UrlException, _super);\n    function UrlException(msg) {\n        var _this = _super.call(this, msg) || this;\n        _this.name = \"UrlException\";\n        defaultLog(_this);\n        return _this;\n    }\n    return UrlException;\n}(Error));\nexports.UrlException = UrlException;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/exceptions.js\n// module id = 3\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar fetchclient_1 = require(\"../net/fetchclient\");\nvar RuntimeConfigImpl = (function () {\n    function RuntimeConfigImpl() {\n        // these are our default values for the library\n        this._headers = null;\n        this._defaultCachingStore = \"session\";\n        this._defaultCachingTimeoutSeconds = 60;\n        this._globalCacheDisable = false;\n        this._fetchClientFactory = function () { return new fetchclient_1.FetchClient(); };\n        this._baseUrl = null;\n        this._spfxContext = null;\n    }\n    RuntimeConfigImpl.prototype.set = function (config) {\n        if (config.hasOwnProperty(\"headers\")) {\n            this._headers = config.headers;\n        }\n        if (config.hasOwnProperty(\"globalCacheDisable\")) {\n            this._globalCacheDisable = config.globalCacheDisable;\n        }\n        if (config.hasOwnProperty(\"defaultCachingStore\")) {\n            this._defaultCachingStore = config.defaultCachingStore;\n        }\n        if (config.hasOwnProperty(\"defaultCachingTimeoutSeconds\")) {\n            this._defaultCachingTimeoutSeconds = config.defaultCachingTimeoutSeconds;\n        }\n        if (config.hasOwnProperty(\"fetchClientFactory\")) {\n            this._fetchClientFactory = config.fetchClientFactory;\n        }\n        if (config.hasOwnProperty(\"baseUrl\")) {\n            this._baseUrl = config.baseUrl;\n        }\n        if (config.hasOwnProperty(\"spfxContext\")) {\n            this._spfxContext = config.spfxContext;\n        }\n    };\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"headers\", {\n        get: function () {\n            return this._headers;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingStore\", {\n        get: function () {\n            return this._defaultCachingStore;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"defaultCachingTimeoutSeconds\", {\n        get: function () {\n            return this._defaultCachingTimeoutSeconds;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"globalCacheDisable\", {\n        get: function () {\n            return this._globalCacheDisable;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"fetchClientFactory\", {\n        get: function () {\n            return this._fetchClientFactory;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RuntimeConfigImpl.prototype, \"baseUrl\", {\n        get: function () {\n            if (this._baseUrl !== null) {\n                return this._baseUrl;\n            }\n            else if (this._spfxContext !== null) {\n                return this._spfxContext.pageContext.web.absoluteUrl;\n            }\n            return null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return RuntimeConfigImpl;\n}());\nexports.RuntimeConfigImpl = RuntimeConfigImpl;\nvar _runtimeConfig = new RuntimeConfigImpl();\nexports.RuntimeConfig = _runtimeConfig;\nfunction setRuntimeConfig(config) {\n    _runtimeConfig.set(config);\n}\nexports.setRuntimeConfig = setRuntimeConfig;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/pnplibconfig.js\n// module id = 4\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * A set of logging levels\n *\n */\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Verbose\"] = 0] = \"Verbose\";\n    LogLevel[LogLevel[\"Info\"] = 1] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 2] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 3] = \"Error\";\n    LogLevel[LogLevel[\"Off\"] = 99] = \"Off\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\n/**\n * Class used to subscribe ILogListener and log messages throughout an application\n *\n */\nvar Logger = (function () {\n    function Logger() {\n    }\n    Object.defineProperty(Logger, \"activeLogLevel\", {\n        get: function () {\n            return Logger.instance.activeLogLevel;\n        },\n        set: function (value) {\n            Logger.instance.activeLogLevel = value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Logger, \"instance\", {\n        get: function () {\n            if (typeof Logger._instance === \"undefined\" || Logger._instance === null) {\n                Logger._instance = new LoggerImpl();\n            }\n            return Logger._instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Adds ILogListener instances to the set of subscribed listeners\n     *\n     * @param listeners One or more listeners to subscribe to this log\n     */\n    Logger.subscribe = function () {\n        var listeners = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            listeners[_i] = arguments[_i];\n        }\n        listeners.map(function (listener) { return Logger.instance.subscribe(listener); });\n    };\n    /**\n     * Clears the subscribers collection, returning the collection before modifiction\n     */\n    Logger.clearSubscribers = function () {\n        return Logger.instance.clearSubscribers();\n    };\n    Object.defineProperty(Logger, \"count\", {\n        /**\n         * Gets the current subscriber count\n         */\n        get: function () {\n            return Logger.instance.count;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param message The message to write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: message });\n    };\n    /**\n     * Writes the supplied string to the subscribed listeners\n     *\n     * @param json The json object to stringify and write\n     * @param level [Optional] if supplied will be used as the level of the entry (Default: LogLevel.Verbose)\n     */\n    Logger.writeJSON = function (json, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        Logger.instance.log({ level: level, message: JSON.stringify(json) });\n    };\n    /**\n     * Logs the supplied entry to the subscribed listeners\n     *\n     * @param entry The message to log\n     */\n    Logger.log = function (entry) {\n        Logger.instance.log(entry);\n    };\n    /**\n     * Logs performance tracking data for the the execution duration of the supplied function using console.profile\n     *\n     * @param name The name of this profile boundary\n     * @param f The function to execute and track within this performance boundary\n     */\n    Logger.measure = function (name, f) {\n        return Logger.instance.measure(name, f);\n    };\n    return Logger;\n}());\nexports.Logger = Logger;\nvar LoggerImpl = (function () {\n    function LoggerImpl(activeLogLevel, subscribers) {\n        if (activeLogLevel === void 0) { activeLogLevel = LogLevel.Warning; }\n        if (subscribers === void 0) { subscribers = []; }\n        this.activeLogLevel = activeLogLevel;\n        this.subscribers = subscribers;\n    }\n    LoggerImpl.prototype.subscribe = function (listener) {\n        this.subscribers.push(listener);\n    };\n    LoggerImpl.prototype.clearSubscribers = function () {\n        var s = this.subscribers.slice(0);\n        this.subscribers.length = 0;\n        return s;\n    };\n    Object.defineProperty(LoggerImpl.prototype, \"count\", {\n        get: function () {\n            return this.subscribers.length;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    LoggerImpl.prototype.write = function (message, level) {\n        if (level === void 0) { level = LogLevel.Verbose; }\n        this.log({ level: level, message: message });\n    };\n    LoggerImpl.prototype.log = function (entry) {\n        if (typeof entry === \"undefined\" || entry.level < this.activeLogLevel) {\n            return;\n        }\n        this.subscribers.map(function (subscriber) { return subscriber.log(entry); });\n    };\n    LoggerImpl.prototype.measure = function (name, f) {\n        console.profile(name);\n        try {\n            return f();\n        }\n        finally {\n            console.profileEnd();\n        }\n    };\n    return LoggerImpl;\n}());\n/**\n * Implementation of ILogListener which logs to the browser console\n *\n */\nvar ConsoleListener = (function () {\n    function ConsoleListener() {\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    ConsoleListener.prototype.log = function (entry) {\n        var msg = this.format(entry);\n        switch (entry.level) {\n            case LogLevel.Verbose:\n            case LogLevel.Info:\n                console.log(msg);\n                break;\n            case LogLevel.Warning:\n                console.warn(msg);\n                break;\n            case LogLevel.Error:\n                console.error(msg);\n                break;\n        }\n    };\n    /**\n     * Formats the message\n     *\n     * @param entry The information to format into a string\n     */\n    ConsoleListener.prototype.format = function (entry) {\n        return \"Message: \" + entry.message + \" Data: \" + JSON.stringify(entry.data);\n    };\n    return ConsoleListener;\n}());\nexports.ConsoleListener = ConsoleListener;\n/**\n * Implementation of ILogListener which logs to the supplied function\n *\n */\nvar FunctionListener = (function () {\n    /**\n     * Creates a new instance of the FunctionListener class\n     *\n     * @constructor\n     * @param  method The method to which any logging data will be passed\n     */\n    function FunctionListener(method) {\n        this.method = method;\n    }\n    /**\n     * Any associated data that a given logging listener may choose to log or ignore\n     *\n     * @param entry The information to be logged\n     */\n    FunctionListener.prototype.log = function (entry) {\n        this.method(entry);\n    };\n    return FunctionListener;\n}());\nexports.FunctionListener = FunctionListener;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/logging.js\n// module id = 5\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Generic dictionary\n */\nvar Dictionary = (function () {\n    /**\n     * Creates a new instance of the Dictionary<T> class\n     *\n     * @constructor\n     */\n    function Dictionary(keys, values) {\n        if (keys === void 0) { keys = []; }\n        if (values === void 0) { values = []; }\n        this.keys = keys;\n        this.values = values;\n    }\n    /**\n     * Gets a value from the collection using the specified key\n     *\n     * @param key The key whose value we want to return, returns null if the key does not exist\n     */\n    Dictionary.prototype.get = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        return this.values[index];\n    };\n    /**\n     * Adds the supplied key and value to the dictionary\n     *\n     * @param key The key to add\n     * @param o The value to add\n     */\n    Dictionary.prototype.add = function (key, o) {\n        var index = this.keys.indexOf(key);\n        if (index > -1) {\n            this.values[index] = o;\n        }\n        else {\n            this.keys.push(key);\n            this.values.push(o);\n        }\n    };\n    /**\n     * Merges the supplied typed hash into this dictionary instance. Existing values are updated and new ones are created as appropriate.\n     */\n    Dictionary.prototype.merge = function (source) {\n        var _this = this;\n        if (\"getKeys\" in source) {\n            var sourceAsDictionary_1 = source;\n            sourceAsDictionary_1.getKeys().map(function (key) {\n                _this.add(key, sourceAsDictionary_1.get(key));\n            });\n        }\n        else {\n            var sourceAsHash = source;\n            for (var key in sourceAsHash) {\n                if (sourceAsHash.hasOwnProperty(key)) {\n                    this.add(key, sourceAsHash[key]);\n                }\n            }\n        }\n    };\n    /**\n     * Removes a value from the dictionary\n     *\n     * @param key The key of the key/value pair to remove. Returns null if the key was not found.\n     */\n    Dictionary.prototype.remove = function (key) {\n        var index = this.keys.indexOf(key);\n        if (index < 0) {\n            return null;\n        }\n        var val = this.values[index];\n        this.keys.splice(index, 1);\n        this.values.splice(index, 1);\n        return val;\n    };\n    /**\n     * Returns all the keys currently in the dictionary as an array\n     */\n    Dictionary.prototype.getKeys = function () {\n        return this.keys;\n    };\n    /**\n     * Returns all the values currently in the dictionary as an array\n     */\n    Dictionary.prototype.getValues = function () {\n        return this.values;\n    };\n    /**\n     * Clears the current dictionary\n     */\n    Dictionary.prototype.clear = function () {\n        this.keys = [];\n        this.values = [];\n    };\n    /**\n     * Gets a count of the items currently in the dictionary\n     */\n    Dictionary.prototype.count = function () {\n        return this.keys.length;\n    };\n    return Dictionary;\n}());\nexports.Dictionary = Dictionary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/collections/collections.js\n// module id = 6\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar odata_1 = require(\"./odata\");\nvar util_1 = require(\"../utils/util\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar webparts_1 = require(\"./webparts\");\nvar items_1 = require(\"./items\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar odata_2 = require(\"./odata\");\n/**\n * Describes a collection of File objects\n *\n */\nvar Files = (function (_super) {\n    __extends(Files, _super);\n    /**\n     * Creates a new instance of the Files class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Files(baseUrl, path) {\n        if (path === void 0) { path = \"files\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    Files.prototype.getByName = function (name) {\n        var f = new File(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The file contents blob.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.add = function (url, content, shouldOverWrite) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return new Files(this, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\")\n            .post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Uploads a file. Not supported for batching\n     *\n     * @param url The folder-relative url of the file.\n     * @param content The Blob file content to add\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten? (default: true)\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     * @returns The new File and the raw response.\n     */\n    Files.prototype.addChunked = function (url, content, progress, shouldOverWrite, chunkSize) {\n        var _this = this;\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        var adder = this.clone(Files, \"add(overwrite=\" + shouldOverWrite + \",url='\" + url + \"')\");\n        return adder.post().then(function () { return _this.getByName(url); }).then(function (file) { return file.setContentChunked(content, progress, chunkSize); }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(url),\n            };\n        });\n    };\n    /**\n     * Adds a ghosted file to an existing list or document library. Not supported for batching.\n     *\n     * @param fileUrl The server-relative url where you want to save the file.\n     * @param templateFileType The type of use to create the file.\n     * @returns The template file that was added and the raw response.\n     */\n    Files.prototype.addTemplateFile = function (fileUrl, templateFileType) {\n        var _this = this;\n        return this.clone(Files, \"addTemplateFile(urloffile='\" + fileUrl + \"',templatefiletype=\" + templateFileType + \")\")\n            .post().then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(fileUrl),\n            };\n        });\n    };\n    return Files;\n}(queryable_1.QueryableCollection));\nexports.Files = Files;\n/**\n * Describes a single File instance\n *\n */\nvar File = (function (_super) {\n    __extends(File, _super);\n    function File() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(File.prototype, \"listItemAllFields\", {\n        /**\n         * Gets a value that specifies the list item field values for the list item corresponding to the file.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(File.prototype, \"versions\", {\n        /**\n         * Gets a collection of versions\n         *\n         */\n        get: function () {\n            return new Versions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Approves the file submitted for content approval with the specified comment.\n     * Only documents in lists that are enabled for content approval can be approved.\n     *\n     * @param comment The comment for the approval.\n     */\n    File.prototype.approve = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        return this.clone(File, \"approve(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Stops the chunk upload session without saving the uploaded data. Does not support batching.\n     * If the file doesn’t already exist in the library, the partially uploaded file will be deleted.\n     * Use this in response to user action (as in a request to cancel an upload) or an error or exception.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     */\n    File.prototype.cancelUpload = function (uploadId) {\n        return this.clone(File, \"cancelUpload(uploadId=guid'\" + uploadId + \"')\", false).post();\n    };\n    /**\n     * Checks the file in to a document library based on the check-in type.\n     *\n     * @param comment A comment for the check-in. Its length must be <= 1023.\n     * @param checkinType The check-in type for the file.\n     */\n    File.prototype.checkin = function (comment, checkinType) {\n        if (comment === void 0) { comment = \"\"; }\n        if (checkinType === void 0) { checkinType = CheckinType.Major; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"checkin(comment='\" + comment + \"',checkintype=\" + checkinType + \")\", true).post();\n    };\n    /**\n     * Checks out the file from a document library.\n     */\n    File.prototype.checkout = function () {\n        return this.clone(File, \"checkout\", true).post();\n    };\n    /**\n     * Copies the file to the destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to copy to.\n     * @param shouldOverWrite Should a file with the same name in the same location be overwritten?\n     */\n    File.prototype.copyTo = function (url, shouldOverWrite) {\n        if (shouldOverWrite === void 0) { shouldOverWrite = true; }\n        return this.clone(File, \"copyTo(strnewurl='\" + url + \"',boverwrite=\" + shouldOverWrite + \")\", true).post();\n    };\n    /**\n     * Delete this file.\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    File.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(File, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Denies approval for a file that was submitted for content approval.\n     * Only documents in lists that are enabled for content approval can be denied.\n     *\n     * @param comment The comment for the denial.\n     */\n    File.prototype.deny = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"deny(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Specifies the control set used to access, modify, or add Web Parts associated with this Web Part Page and view.\n     * An exception is thrown if the file is not an ASPX page.\n     *\n     * @param scope The WebPartsPersonalizationScope view on the Web Parts page.\n     */\n    File.prototype.getLimitedWebPartManager = function (scope) {\n        if (scope === void 0) { scope = WebPartsPersonalizationScope.Shared; }\n        return new webparts_1.LimitedWebPartManager(this, \"getLimitedWebPartManager(scope=\" + scope + \")\");\n    };\n    /**\n     * Moves the file to the specified destination url.\n     *\n     * @param url The absolute url or server relative url of the destination file path to move to.\n     * @param moveOperations The bitwise MoveOperations value for how to move the file.\n     */\n    File.prototype.moveTo = function (url, moveOperations) {\n        if (moveOperations === void 0) { moveOperations = MoveOperations.Overwrite; }\n        return this.clone(File, \"moveTo(newurl='\" + url + \"',flags=\" + moveOperations + \")\", true).post();\n    };\n    /**\n     * Submits the file for content approval with the specified comment.\n     *\n     * @param comment The comment for the published file. Its length must be <= 1023.\n     */\n    File.prototype.publish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"publish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Moves the file to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     *\n     * @returns The GUID of the recycled file.\n     */\n    File.prototype.recycle = function () {\n        return this.clone(File, \"recycle\", true).post();\n    };\n    /**\n     * Reverts an existing checkout for the file.\n     *\n     */\n    File.prototype.undoCheckout = function () {\n        return this.clone(File, \"undoCheckout\", true).post();\n    };\n    /**\n     * Removes the file from content approval or unpublish a major version.\n     *\n     * @param comment The comment for the unpublish operation. Its length must be <= 1023.\n     */\n    File.prototype.unpublish = function (comment) {\n        if (comment === void 0) { comment = \"\"; }\n        if (comment.length > 1023) {\n            throw new exceptions_1.MaxCommentLengthException();\n        }\n        return this.clone(File, \"unpublish(comment='\" + comment + \"')\", true).post();\n    };\n    /**\n     * Gets the contents of the file as text. Not supported in batching.\n     *\n     */\n    File.prototype.getText = function () {\n        return this.clone(File, \"$value\").get(new odata_1.TextFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js. Not supported in batching.\n     *\n     */\n    File.prototype.getBlob = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BlobFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getBuffer = function () {\n        return this.clone(File, \"$value\").get(new odata_1.BufferFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js. Not supported in batching.\n     */\n    File.prototype.getJSON = function () {\n        return this.clone(File, \"$value\").get(new odata_1.JSONFileParser(), { headers: { \"binaryStringResponseBody\": \"true\" } });\n    };\n    /**\n     * Sets the content of a file, for large files use setContentChunked. Not supported in batching.\n     *\n     * @param content The file content\n     *\n     */\n    File.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(File, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new File(_this); });\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    File.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_2.getEntityUrl(d)), d);\n        });\n    };\n    /**\n     * Sets the contents of a file using a chunked upload approach. Not supported in batching.\n     *\n     * @param file The file to upload\n     * @param progress A callback function which can be used to track the progress of the upload\n     * @param chunkSize The size of each file slice, in bytes (default: 10485760)\n     */\n    File.prototype.setContentChunked = function (file, progress, chunkSize) {\n        if (chunkSize === void 0) { chunkSize = 10485760; }\n        if (typeof progress === \"undefined\") {\n            progress = function () { return null; };\n        }\n        var self = this;\n        var fileSize = file.size;\n        var blockCount = parseInt((file.size / chunkSize).toString(), 10) + ((file.size % chunkSize === 0) ? 1 : 0);\n        var uploadId = util_1.Util.getGUID();\n        // start the chain with the first fragment\n        progress({ blockNumber: 1, chunkSize: chunkSize, currentPointer: 0, fileSize: fileSize, stage: \"starting\", totalBlocks: blockCount });\n        var chain = self.startUpload(uploadId, file.slice(0, chunkSize));\n        var _loop_1 = function (i) {\n            chain = chain.then(function (pointer) {\n                progress({ blockNumber: i, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"continue\", totalBlocks: blockCount });\n                return self.continueUpload(uploadId, pointer, file.slice(pointer, pointer + chunkSize));\n            });\n        };\n        // skip the first and last blocks\n        for (var i = 2; i < blockCount; i++) {\n            _loop_1(i);\n        }\n        return chain.then(function (pointer) {\n            progress({ blockNumber: blockCount, chunkSize: chunkSize, currentPointer: pointer, fileSize: fileSize, stage: \"finishing\", totalBlocks: blockCount });\n            return self.finishUpload(uploadId, pointer, file.slice(pointer));\n        }).then(function (_) {\n            return self;\n        });\n    };\n    /**\n     * Starts a new chunk upload session and uploads the first fragment.\n     * The current file content is not changed when this method completes.\n     * The method is idempotent (and therefore does not change the result) as long as you use the same values for uploadId and stream.\n     * The upload session ends either when you use the CancelUpload method or when you successfully\n     * complete the upload session by passing the rest of the file contents through the ContinueUpload and FinishUpload methods.\n     * The StartUpload and ContinueUpload methods return the size of the running total of uploaded data in bytes,\n     * so you can pass those return values to subsequent uses of ContinueUpload and FinishUpload.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.startUpload = function (uploadId, fragment) {\n        return this.clone(File, \"startUpload(uploadId=guid'\" + uploadId + \"')\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Continues the chunk upload session with an additional fragment.\n     * The current file content is not changed.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The size of the total uploaded data in bytes.\n     */\n    File.prototype.continueUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"continueUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\").postAs({ body: fragment }).then(function (n) { return parseFloat(n); });\n    };\n    /**\n     * Uploads the last file fragment and commits the file. The current file content is changed when this method completes.\n     * Use the uploadId value that was passed to the StartUpload method that started the upload session.\n     * This method is currently available only on Office 365.\n     *\n     * @param uploadId The unique identifier of the upload session.\n     * @param fileOffset The size of the offset into the file where the fragment starts.\n     * @param fragment The file contents.\n     * @returns The newly uploaded file.\n     */\n    File.prototype.finishUpload = function (uploadId, fileOffset, fragment) {\n        return this.clone(File, \"finishUpload(uploadId=guid'\" + uploadId + \"',fileOffset=\" + fileOffset + \")\")\n            .postAs({ body: fragment }).then(function (response) {\n            return {\n                data: response,\n                file: new File(response.ServerRelativeUrl),\n            };\n        });\n    };\n    return File;\n}(queryableshareable_1.QueryableShareableFile));\nexports.File = File;\n/**\n * Describes a collection of Version objects\n *\n */\nvar Versions = (function (_super) {\n    __extends(Versions, _super);\n    /**\n     * Creates a new instance of the File class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Versions(baseUrl, path) {\n        if (path === void 0) { path = \"versions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a version by id\n     *\n     * @param versionId The id of the version to retrieve\n     */\n    Versions.prototype.getById = function (versionId) {\n        var v = new Version(this);\n        v.concat(\"(\" + versionId + \")\");\n        return v;\n    };\n    /**\n     * Deletes all the file version objects in the collection.\n     *\n     */\n    Versions.prototype.deleteAll = function () {\n        return new Versions(this, \"deleteAll\").post();\n    };\n    /**\n     * Deletes the specified version of the file.\n     *\n     * @param versionId The ID of the file version to delete.\n     */\n    Versions.prototype.deleteById = function (versionId) {\n        return this.clone(Versions, \"deleteById(vid=\" + versionId + \")\", true).post();\n    };\n    /**\n     * Deletes the file version object with the specified version label.\n     *\n     * @param label The version label of the file version to delete, for example: 1.2\n     */\n    Versions.prototype.deleteByLabel = function (label) {\n        return this.clone(Versions, \"deleteByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    /**\n     * Creates a new file version from the file specified by the version label.\n     *\n     * @param label The version label of the file version to restore, for example: 1.2\n     */\n    Versions.prototype.restoreByLabel = function (label) {\n        return this.clone(Versions, \"restoreByLabel(versionlabel='\" + label + \"')\", true).post();\n    };\n    return Versions;\n}(queryable_1.QueryableCollection));\nexports.Versions = Versions;\n/**\n * Describes a single Version instance\n *\n */\nvar Version = (function (_super) {\n    __extends(Version, _super);\n    function Version() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n    * Delete a specific version of a file.\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Version.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return Version;\n}(queryable_1.QueryableInstance));\nexports.Version = Version;\nvar CheckinType;\n(function (CheckinType) {\n    CheckinType[CheckinType[\"Minor\"] = 0] = \"Minor\";\n    CheckinType[CheckinType[\"Major\"] = 1] = \"Major\";\n    CheckinType[CheckinType[\"Overwrite\"] = 2] = \"Overwrite\";\n})(CheckinType = exports.CheckinType || (exports.CheckinType = {}));\nvar WebPartsPersonalizationScope;\n(function (WebPartsPersonalizationScope) {\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"User\"] = 0] = \"User\";\n    WebPartsPersonalizationScope[WebPartsPersonalizationScope[\"Shared\"] = 1] = \"Shared\";\n})(WebPartsPersonalizationScope = exports.WebPartsPersonalizationScope || (exports.WebPartsPersonalizationScope = {}));\nvar MoveOperations;\n(function (MoveOperations) {\n    MoveOperations[MoveOperations[\"Overwrite\"] = 1] = \"Overwrite\";\n    MoveOperations[MoveOperations[\"AllowBrokenThickets\"] = 8] = \"AllowBrokenThickets\";\n})(MoveOperations = exports.MoveOperations || (exports.MoveOperations = {}));\nvar TemplateFileType;\n(function (TemplateFileType) {\n    TemplateFileType[TemplateFileType[\"StandardPage\"] = 0] = \"StandardPage\";\n    TemplateFileType[TemplateFileType[\"WikiPage\"] = 1] = \"WikiPage\";\n    TemplateFileType[TemplateFileType[\"FormPage\"] = 2] = \"FormPage\";\n})(TemplateFileType = exports.TemplateFileType || (exports.TemplateFileType = {}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/files.js\n// module id = 7\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar lists_1 = require(\"./lists\");\nvar fields_1 = require(\"./fields\");\nvar navigation_1 = require(\"./navigation\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar folders_1 = require(\"./folders\");\nvar roles_1 = require(\"./roles\");\nvar files_1 = require(\"./files\");\nvar util_1 = require(\"../utils/util\");\nvar lists_2 = require(\"./lists\");\nvar siteusers_1 = require(\"./siteusers\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar features_1 = require(\"./features\");\nvar decorators_1 = require(\"../utils/decorators\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar relateditems_1 = require(\"./relateditems\");\nvar Webs = (function (_super) {\n    __extends(Webs, _super);\n    function Webs(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webs\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    /**\n     * Adds a new web to the collection\n     *\n     * @param title The new web's title\n     * @param url The new web's relative url\n     * @param description The web web's description\n     * @param template The web's template\n     * @param language The language code to use for this web\n     * @param inheritPermissions If true permissions will be inherited from the partent web\n     * @param additionalSettings Will be passed as part of the web creation body\n     */\n    Webs.prototype.add = function (title, url, description, template, language, inheritPermissions, additionalSettings) {\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = \"STS\"; }\n        if (language === void 0) { language = 1033; }\n        if (inheritPermissions === void 0) { inheritPermissions = true; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var props = util_1.Util.extend({\n            Description: description,\n            Language: language,\n            Title: title,\n            Url: url,\n            UseSamePermissionsAsParentSite: inheritPermissions,\n            WebTemplate: template,\n        }, additionalSettings);\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": { \"type\": \"SP.WebCreationInformation\" },\n            }, props),\n        });\n        return this.clone(Webs, \"add\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                web: new Web(odata_1.extractOdataId(data).replace(/_api\\/web\\/?/i, \"\")),\n            };\n        });\n    };\n    return Webs;\n}(queryable_1.QueryableCollection));\nexports.Webs = Webs;\nvar WebInfos = (function (_super) {\n    __extends(WebInfos, _super);\n    function WebInfos(baseUrl, webPath) {\n        if (webPath === void 0) { webPath = \"webinfos\"; }\n        return _super.call(this, baseUrl, webPath) || this;\n    }\n    return WebInfos;\n}(queryable_1.QueryableCollection));\nexports.WebInfos = WebInfos;\n/**\n * Describes a web\n *\n */\nvar Web = (function (_super) {\n    __extends(Web, _super);\n    function Web(baseUrl, path) {\n        if (path === void 0) { path = \"_api/web\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Creates a new web instance from the given url by indexing the location of the /_api/\n     * segment. If this is not found the method creates a new web with the entire string as\n     * supplied.\n     *\n     * @param url\n     */\n    Web.fromUrl = function (url, path) {\n        if (url === null) {\n            return new Web(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new Web(url.substr(0, index), path);\n        }\n        return new Web(url, path);\n    };\n    Object.defineProperty(Web.prototype, \"webs\", {\n        get: function () {\n            return new Webs(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"webinfos\", {\n        get: function () {\n            return new WebInfos(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"contentTypes\", {\n        /**\n         * Get the content types available in this web\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"lists\", {\n        /**\n         * Get the lists in this web\n         *\n         */\n        get: function () {\n            return new lists_1.Lists(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"fields\", {\n        /**\n         * Gets the fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"features\", {\n        /**\n         * Gets the active features for this web\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"availablefields\", {\n        /**\n         * Gets the available fields in this web\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this, \"availablefields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"navigation\", {\n        /**\n         * Get the navigation options in this web\n         *\n         */\n        get: function () {\n            return new navigation_1.Navigation(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteUsers\", {\n        /**\n         * Gets the site users\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"siteGroups\", {\n        /**\n         * Gets the site groups\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"currentUser\", {\n        /**\n         * Gets the current user\n         */\n        get: function () {\n            return new siteusers_1.CurrentUser(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"folders\", {\n        /**\n         * Get the folders in this web\n         *\n         */\n        get: function () {\n            return new folders_1.Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"roleDefinitions\", {\n        /**\n         * Gets the collection of RoleDefinition resources.\n         *\n         */\n        get: function () {\n            return new roles_1.RoleDefinitions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"relatedItems\", {\n        /**\n         * Provides an interface to manage related items\n         *\n         */\n        get: function () {\n            return relateditems_1.RelatedItemManagerImpl.FromUrl(this.toUrl());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch for requests within the context of context this web\n     *\n     */\n    Web.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    Object.defineProperty(Web.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the web\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedOwnerGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedownergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedMemberGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedmembergroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Web.prototype, \"associatedVisitorGroup\", {\n        get: function () {\n            return new sitegroups_1.SiteGroup(this, \"associatedvisitorgroup\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Get a folder by server relative url\n     *\n     * @param folderRelativeUrl the server relative path to the folder (including /sites/ if applicable)\n     */\n    Web.prototype.getFolderByServerRelativeUrl = function (folderRelativeUrl) {\n        return new folders_1.Folder(this, \"getFolderByServerRelativeUrl('\" + folderRelativeUrl + \"')\");\n    };\n    /**\n     * Get a file by server relative url\n     *\n     * @param fileRelativeUrl the server relative path to the file (including /sites/ if applicable)\n     */\n    Web.prototype.getFileByServerRelativeUrl = function (fileRelativeUrl) {\n        return new files_1.File(this, \"getFileByServerRelativeUrl('\" + fileRelativeUrl + \"')\");\n    };\n    /**\n     * Get a list by server relative url (list's root folder)\n     *\n     * @param listRelativeUrl the server relative path to the list's root folder (including /sites/ if applicable)\n     */\n    Web.prototype.getList = function (listRelativeUrl) {\n        return new lists_2.List(this, \"getList('\" + listRelativeUrl + \"')\");\n    };\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    Web.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Web\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                web: _this,\n            };\n        });\n    };\n    /**\n     * Delete this web\n     *\n     */\n    Web.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    /**\n     * Applies the theme specified by the contents of each of the files specified in the arguments to the site.\n     *\n     * @param colorPaletteUrl Server-relative URL of the color palette file.\n     * @param fontSchemeUrl Server-relative URL of the font scheme.\n     * @param backgroundImageUrl Server-relative URL of the background image.\n     * @param shareGenerated true to store the generated theme files in the root site, or false to store them in this site.\n     */\n    Web.prototype.applyTheme = function (colorPaletteUrl, fontSchemeUrl, backgroundImageUrl, shareGenerated) {\n        var postBody = JSON.stringify({\n            backgroundImageUrl: backgroundImageUrl,\n            colorPaletteUrl: colorPaletteUrl,\n            fontSchemeUrl: fontSchemeUrl,\n            shareGenerated: shareGenerated,\n        });\n        return this.clone(Web, \"applytheme\", true).post({ body: postBody });\n    };\n    /**\n     * Applies the specified site definition or site template to the Web site that has no template applied to it.\n     *\n     * @param template Name of the site definition or the name of the site template\n     */\n    Web.prototype.applyWebTemplate = function (template) {\n        var q = this.clone(Web, \"applywebtemplate\", true);\n        q.concat(\"(@t)\");\n        q.query.add(\"@t\", template);\n        return q.post();\n    };\n    /**\n     * Returns whether the current user has the given set of permissions.\n     *\n     * @param perms The high and low permission range.\n     */\n    Web.prototype.doesUserHavePermissions = function (perms) {\n        var q = this.clone(Web, \"doesuserhavepermissions\", true);\n        q.concat(\"(@p)\");\n        q.query.add(\"@p\", JSON.stringify(perms));\n        return q.get();\n    };\n    /**\n     * Checks whether the specified login name belongs to a valid user in the site. If the user doesn't exist, adds the user to the site.\n     *\n     * @param loginName The login name of the user (ex: i:0#.f|membership|user@domain.onmicrosoft.com)\n     */\n    Web.prototype.ensureUser = function (loginName) {\n        var postBody = JSON.stringify({\n            logonName: loginName,\n        });\n        return this.clone(Web, \"ensureuser\", true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                user: new siteusers_1.SiteUser(odata_1.extractOdataId(data)),\n            };\n        });\n    };\n    /**\n     * Returns a collection of site templates available for the site.\n     *\n     * @param language The LCID of the site templates to get.\n     * @param true to include language-neutral site templates; otherwise false\n     */\n    Web.prototype.availableWebTemplates = function (language, includeCrossLanugage) {\n        if (language === void 0) { language = 1033; }\n        if (includeCrossLanugage === void 0) { includeCrossLanugage = true; }\n        return new queryable_1.QueryableCollection(this, \"getavailablewebtemplates(lcid=\" + language + \", doincludecrosslanguage=\" + includeCrossLanugage + \")\");\n    };\n    /**\n     * Returns the list gallery on the site.\n     *\n     * @param type The gallery type - WebTemplateCatalog = 111, WebPartCatalog = 113 ListTemplateCatalog = 114,\n     * MasterPageCatalog = 116, SolutionCatalog = 121, ThemeCatalog = 123, DesignCatalog = 124, AppDataCatalog = 125\n     */\n    Web.prototype.getCatalog = function (type) {\n        return this.clone(Web, \"getcatalog(\" + type + \")\", true).select(\"Id\").get().then(function (data) {\n            return new lists_2.List(odata_1.extractOdataId(data));\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    Web.prototype.getChanges = function (query) {\n        var postBody = JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) });\n        return this.clone(Web, \"getchanges\", true).post({ body: postBody });\n    };\n    Object.defineProperty(Web.prototype, \"customListTemplate\", {\n        /**\n         * Gets the custom list templates for the site.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getcustomlisttemplates\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Returns the user corresponding to the specified member identifier for the current site.\n     *\n     * @param id The ID of the user.\n     */\n    Web.prototype.getUserById = function (id) {\n        return new siteusers_1.SiteUser(this, \"getUserById(\" + id + \")\");\n    };\n    /**\n     * Returns the name of the image file for the icon that is used to represent the specified file.\n     *\n     * @param filename The file name. If this parameter is empty, the server returns an empty string.\n     * @param size The size of the icon: 16x16 pixels = 0, 32x32 pixels = 1.\n     * @param progId The ProgID of the application that was used to create the file, in the form OLEServerName.ObjectName\n     */\n    Web.prototype.mapToIcon = function (filename, size, progId) {\n        if (size === void 0) { size = 0; }\n        if (progId === void 0) { progId = \"\"; }\n        return this.clone(Web, \"maptoicon(filename='\" + filename + \"', progid='\" + progId + \"', size=\" + size + \")\", true).get();\n    };\n    return Web;\n}(queryableshareable_1.QueryableShareableWeb));\n__decorate([\n    decorators_1.deprecated(\"This method will be removed in future releases. Please use the methods found in queryable securable.\")\n], Web.prototype, \"doesUserHavePermissions\", null);\nexports.Web = Web;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/webs.js\n// module id = 8\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar files_1 = require(\"./files\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"./odata\");\nvar items_1 = require(\"./items\");\n/**\n * Describes a collection of Folder objects\n *\n */\nvar Folders = (function (_super) {\n    __extends(Folders, _super);\n    /**\n     * Creates a new instance of the Folders class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Folders(baseUrl, path) {\n        if (path === void 0) { path = \"folders\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a folder by folder name\n     *\n     */\n    Folders.prototype.getByName = function (name) {\n        var f = new Folder(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new folder to the current folder (relative) or any folder (absolute)\n     *\n     * @param url The relative or absolute url where the new folder will be created. Urls starting with a forward slash are absolute.\n     * @returns The new Folder and the raw response.\n     */\n    Folders.prototype.add = function (url) {\n        var _this = this;\n        return this.clone(Folders, \"add('\" + url + \"')\", true).post().then(function (response) {\n            return {\n                data: response,\n                folder: _this.getByName(url),\n            };\n        });\n    };\n    return Folders;\n}(queryable_1.QueryableCollection));\nexports.Folders = Folders;\n/**\n * Describes a single Folder instance\n *\n */\nvar Folder = (function (_super) {\n    __extends(Folder, _super);\n    function Folder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Folder.prototype, \"contentTypeOrder\", {\n        /**\n         * Specifies the sequence in which content types are displayed.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"contentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"files\", {\n        /**\n         * Gets this folder's files\n         *\n         */\n        get: function () {\n            return new files_1.Files(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"folders\", {\n        /**\n         * Gets this folder's sub folders\n         *\n         */\n        get: function () {\n            return new Folders(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"listItemAllFields\", {\n        /**\n         * Gets this folder's list item field values\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"listItemAllFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"parentFolder\", {\n        /**\n         * Gets the parent folder, if available\n         *\n         */\n        get: function () {\n            return new Folder(this, \"parentFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"properties\", {\n        /**\n         * Gets this folder's properties\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"properties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"serverRelativeUrl\", {\n        /**\n         * Gets this folder's server relative url\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"serverRelativeUrl\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Folder.prototype, \"uniqueContentTypeOrder\", {\n        /**\n         * Gets a value that specifies the content type order.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"uniqueContentTypeOrder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Folder.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.Folder\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                folder: _this,\n            };\n        });\n    };\n    /**\n    * Delete this folder\n    *\n    * @param eTag Value used in the IF-Match header, by default \"*\"\n    */\n    Folder.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.clone(Folder, null, true).post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the folder to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Folder.prototype.recycle = function () {\n        return this.clone(Folder, \"recycle\", true).post();\n    };\n    /**\n     * Gets the associated list item for this folder, loading the default properties\n     */\n    Folder.prototype.getItem = function () {\n        var selects = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            selects[_i] = arguments[_i];\n        }\n        var q = this.listItemAllFields;\n        return q.select.apply(q, selects).get().then(function (d) {\n            return util_1.Util.extend(new items_1.Item(odata_1.getEntityUrl(d)), d);\n        });\n    };\n    return Folder;\n}(queryableshareable_1.QueryableShareableFolder));\nexports.Folder = Folder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/folders.js\n// module id = 9\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar queryableshareable_1 = require(\"./queryableshareable\");\nvar folders_1 = require(\"./folders\");\nvar files_1 = require(\"./files\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"./odata\");\nvar attachmentfiles_1 = require(\"./attachmentfiles\");\nvar lists_1 = require(\"./lists\");\n/**\n * Describes a collection of Item objects\n *\n */\nvar Items = (function (_super) {\n    __extends(Items, _super);\n    /**\n     * Creates a new instance of the Items class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Items(baseUrl, path) {\n        if (path === void 0) { path = \"items\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets an Item by id\n     *\n     * @param id The integer id of the item to retrieve\n     */\n    Items.prototype.getById = function (id) {\n        var i = new Item(this);\n        i.concat(\"(\" + id + \")\");\n        return i;\n    };\n    /**\n     * Skips the specified number of items (https://msdn.microsoft.com/en-us/library/office/fp142385.aspx#sectionSection6)\n     *\n     * @param skip The starting id where the page should start, use with top to specify pages\n     */\n    Items.prototype.skip = function (skip) {\n        this._query.add(\"$skiptoken\", encodeURIComponent(\"Paged=TRUE&p_ID=\" + skip));\n        return this;\n    };\n    /**\n     * Gets a collection designed to aid in paging through data\n     *\n     */\n    Items.prototype.getPaged = function () {\n        return this.getAs(new PagedItemCollectionParser());\n    };\n    //\n    /**\n     * Adds a new item to the collection\n     *\n     * @param properties The new items's properties\n     */\n    Items.prototype.add = function (properties, listItemEntityTypeFullName) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        if (listItemEntityTypeFullName === void 0) { listItemEntityTypeFullName = null; }\n        var removeDependency = this.addBatchDependency();\n        return this.ensureListItemEntityTypeName(listItemEntityTypeFullName).then(function (listItemEntityType) {\n            var postBody = JSON.stringify(util_1.Util.extend({\n                \"__metadata\": { \"type\": listItemEntityType },\n            }, properties));\n            var promise = _this.clone(Items, null, true).postAs({ body: postBody }).then(function (data) {\n                return {\n                    data: data,\n                    item: _this.getById(data.Id),\n                };\n            });\n            removeDependency();\n            return promise;\n        });\n    };\n    /**\n     * Ensures we have the proper list item entity type name, either from the value provided or from the list\n     *\n     * @param candidatelistItemEntityTypeFullName The potential type name\n     */\n    Items.prototype.ensureListItemEntityTypeName = function (candidatelistItemEntityTypeFullName) {\n        return candidatelistItemEntityTypeFullName ?\n            Promise.resolve(candidatelistItemEntityTypeFullName) :\n            this.getParent(lists_1.List).getListItemEntityTypeFullName();\n    };\n    return Items;\n}(queryable_1.QueryableCollection));\nexports.Items = Items;\n/**\n * Descrines a single Item instance\n *\n */\nvar Item = (function (_super) {\n    __extends(Item, _super);\n    function Item() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(Item.prototype, \"attachmentFiles\", {\n        /**\n         * Gets the set of attachments for this item\n         *\n         */\n        get: function () {\n            return new attachmentfiles_1.AttachmentFiles(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"contentType\", {\n        /**\n         * Gets the content type for this item\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentType(this, \"ContentType\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions for the item\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"effectiveBasePermissionsForUI\", {\n        /**\n         * Gets the effective base permissions for the item in a UI context\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissionsForUI\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsHTML\", {\n        /**\n         * Gets the field values for this list item in their HTML representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsHTML\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesAsText\", {\n        /**\n         * Gets the field values for this list item in their text representation\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesAsText\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"fieldValuesForEdit\", {\n        /**\n         * Gets the field values for this list item for use in editing controls\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FieldValuesForEdit\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"folder\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"folder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Item.prototype, \"file\", {\n        /**\n         * Gets the folder associated with this list item (if this item represents a folder)\n         *\n         */\n        get: function () {\n            return new files_1.File(this, \"file\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        return new Promise(function (resolve, reject) {\n            var removeDependency = _this.addBatchDependency();\n            var parentList = _this.getParent(queryable_1.QueryableInstance, _this.parentUrl.substr(0, _this.parentUrl.lastIndexOf(\"/\")));\n            parentList.select(\"ListItemEntityTypeFullName\").getAs().then(function (d) {\n                var postBody = JSON.stringify(util_1.Util.extend({\n                    \"__metadata\": { \"type\": d.ListItemEntityTypeFullName },\n                }, properties));\n                removeDependency();\n                return _this.post({\n                    body: postBody,\n                    headers: {\n                        \"IF-Match\": eTag,\n                        \"X-HTTP-Method\": \"MERGE\",\n                    },\n                }, new ItemUpdatedParser()).then(function (data) {\n                    resolve({\n                        data: data,\n                        item: _this,\n                    });\n                });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Delete this item\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    Item.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Moves the list item to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    Item.prototype.recycle = function () {\n        return this.clone(Item, \"recycle\", true).post();\n    };\n    /**\n     * Gets a string representation of the full URL to the WOPI frame.\n     * If there is no associated WOPI application, or no associated action, an empty string is returned.\n     *\n     * @param action Display mode: 0: view, 1: edit, 2: mobileView, 3: interactivePreview\n     */\n    Item.prototype.getWopiFrameUrl = function (action) {\n        if (action === void 0) { action = 0; }\n        var i = this.clone(Item, \"getWOPIFrameUrl(@action)\", true);\n        i._query.add(\"@action\", action);\n        return i.post().then(function (data) {\n            return data.GetWOPIFrameUrl;\n        });\n    };\n    /**\n     * Validates and sets the values of the specified collection of fields for the list item.\n     *\n     * @param formValues The fields to change and their new values.\n     * @param newDocumentUpdate true if the list item is a document being updated after upload; otherwise false.\n     */\n    Item.prototype.validateUpdateListItem = function (formValues, newDocumentUpdate) {\n        if (newDocumentUpdate === void 0) { newDocumentUpdate = false; }\n        return this.clone(Item, \"validateupdatelistitem\", true).post({\n            body: JSON.stringify({ \"formValues\": formValues, bNewDocumentUpdate: newDocumentUpdate }),\n        });\n    };\n    return Item;\n}(queryableshareable_1.QueryableShareableItem));\nexports.Item = Item;\n/**\n * Provides paging functionality for list items\n */\nvar PagedItemCollection = (function () {\n    function PagedItemCollection(nextUrl, results) {\n        this.nextUrl = nextUrl;\n        this.results = results;\n    }\n    Object.defineProperty(PagedItemCollection.prototype, \"hasNext\", {\n        /**\n         * If true there are more results available in the set, otherwise there are not\n         */\n        get: function () {\n            return typeof this.nextUrl === \"string\" && this.nextUrl.length > 0;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the next set of results, or resolves to null if no results are available\n     */\n    PagedItemCollection.prototype.getNext = function () {\n        if (this.hasNext) {\n            var items = new Items(this.nextUrl, null);\n            return items.getPaged();\n        }\n        return new Promise(function (r) { return r(null); });\n    };\n    return PagedItemCollection;\n}());\nexports.PagedItemCollection = PagedItemCollection;\nvar PagedItemCollectionParser = (function (_super) {\n    __extends(PagedItemCollectionParser, _super);\n    function PagedItemCollectionParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PagedItemCollectionParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                r.json().then(function (json) {\n                    var nextUrl = json.hasOwnProperty(\"d\") && json.d.hasOwnProperty(\"__next\") ? json.d.__next : json[\"odata.nextLink\"];\n                    resolve(new PagedItemCollection(nextUrl, _this.parseODataJSON(json)));\n                });\n            }\n        });\n    };\n    return PagedItemCollectionParser;\n}(odata_1.ODataParserBase));\nvar ItemUpdatedParser = (function (_super) {\n    __extends(ItemUpdatedParser, _super);\n    function ItemUpdatedParser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ItemUpdatedParser.prototype.parse = function (r) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            if (_this.handleError(r, reject)) {\n                resolve({\n                    \"odata.etag\": r.headers.get(\"etag\"),\n                });\n            }\n        });\n    };\n    return ItemUpdatedParser;\n}(odata_1.ODataParserBase));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/items.js\n// module id = 10\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar items_1 = require(\"./items\");\nvar views_1 = require(\"./views\");\nvar contenttypes_1 = require(\"./contenttypes\");\nvar fields_1 = require(\"./fields\");\nvar forms_1 = require(\"./forms\");\nvar subscriptions_1 = require(\"./subscriptions\");\nvar queryable_1 = require(\"./queryable\");\nvar queryablesecurable_1 = require(\"./queryablesecurable\");\nvar util_1 = require(\"../utils/util\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar folders_1 = require(\"./folders\");\n/**\n * Describes a collection of List objects\n *\n */\nvar Lists = (function (_super) {\n    __extends(Lists, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Lists(baseUrl, path) {\n        if (path === void 0) { path = \"lists\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by title\n     *\n     * @param title The title of the list\n     */\n    Lists.prototype.getByTitle = function (title) {\n        return new List(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the list (GUID)\n     */\n    Lists.prototype.getById = function (id) {\n        var list = new List(this);\n        list.concat(\"('\" + id + \"')\");\n        return list;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body\n     */\n    Lists.prototype.add = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var addSettings = util_1.Util.extend({\n            \"AllowContentTypes\": enableContentTypes,\n            \"BaseTemplate\": template,\n            \"ContentTypesEnabled\": enableContentTypes,\n            \"Description\": description,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, additionalSettings);\n        return this.post({ body: JSON.stringify(addSettings) }).then(function (data) {\n            return { data: data, list: _this.getByTitle(addSettings.Title) };\n        });\n    };\n    /**\n     * Ensures that the specified list exists in the collection (note: this method not supported for batching)\n     *\n     * @param title The new list's title\n     * @param description The new list's description\n     * @param template The list template value\n     * @param enableContentTypes If true content types will be allowed and enabled, otherwise they will be disallowed and not enabled\n     * @param additionalSettings Will be passed as part of the list creation body or used to update an existing list\n     */\n    Lists.prototype.ensure = function (title, description, template, enableContentTypes, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (template === void 0) { template = 100; }\n        if (enableContentTypes === void 0) { enableContentTypes = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        if (this.hasBatch) {\n            throw new exceptions_1.NotSupportedInBatchException(\"The ensure list method\");\n        }\n        return new Promise(function (resolve, reject) {\n            var addOrUpdateSettings = util_1.Util.extend(additionalSettings, { Title: title, Description: description, ContentTypesEnabled: enableContentTypes }, true);\n            var list = _this.getByTitle(addOrUpdateSettings.Title);\n            list.get().then(function (_) {\n                list.update(addOrUpdateSettings).then(function (d) {\n                    resolve({ created: false, data: d, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            }).catch(function (_) {\n                _this.add(title, description, template, enableContentTypes, addOrUpdateSettings).then(function (r) {\n                    resolve({ created: true, data: r.data, list: _this.getByTitle(addOrUpdateSettings.Title) });\n                }).catch(function (e) { return reject(e); });\n            });\n        });\n    };\n    /**\n     * Gets a list that is the default asset location for images or other files, which the users upload to their wiki pages.\n     */\n    Lists.prototype.ensureSiteAssetsLibrary = function () {\n        return this.clone(Lists, \"ensuresiteassetslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    /**\n     * Gets a list that is the default location for wiki pages.\n     */\n    Lists.prototype.ensureSitePagesLibrary = function () {\n        return this.clone(Lists, \"ensuresitepageslibrary\", true).post().then(function (json) {\n            return new List(odata_1.extractOdataId(json));\n        });\n    };\n    return Lists;\n}(queryable_1.QueryableCollection));\nexports.Lists = Lists;\n/**\n * Describes a single List instance\n *\n */\nvar List = (function (_super) {\n    __extends(List, _super);\n    function List() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(List.prototype, \"contentTypes\", {\n        /**\n         * Gets the content types in this list\n         *\n         */\n        get: function () {\n            return new contenttypes_1.ContentTypes(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"items\", {\n        /**\n         * Gets the items in this list\n         *\n         */\n        get: function () {\n            return new items_1.Items(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"views\", {\n        /**\n         * Gets the views in this list\n         *\n         */\n        get: function () {\n            return new views_1.Views(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"fields\", {\n        /**\n         * Gets the fields in this list\n         *\n         */\n        get: function () {\n            return new fields_1.Fields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"forms\", {\n        /**\n         * Gets the forms in this list\n         *\n         */\n        get: function () {\n            return new forms_1.Forms(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"defaultView\", {\n        /**\n         * Gets the default view of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"DefaultView\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"effectiveBasePermissions\", {\n        /**\n         * Gets the effective base permissions of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"EffectiveBasePermissions\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"eventReceivers\", {\n        /**\n         * Gets the event receivers attached to this list\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"EventReceivers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"relatedFields\", {\n        /**\n         * Gets the related fields of this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"getRelatedFields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"informationRightsManagementSettings\", {\n        /**\n         * Gets the IRM settings for this list\n         *\n         */\n        get: function () {\n            return new queryable_1.Queryable(this, \"InformationRightsManagementSettings\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"subscriptions\", {\n        /**\n         * Gets the webhook subscriptions of this list\n         *\n         */\n        get: function () {\n            return new subscriptions_1.Subscriptions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(List.prototype, \"rootFolder\", {\n        /**\n         * The root folder of the list\n         */\n        get: function () {\n            return new folders_1.Folder(this, \"rootFolder\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a view by view guid id\n     *\n     */\n    List.prototype.getView = function (viewId) {\n        return new views_1.View(this, \"getView('\" + viewId + \"')\");\n    };\n    /**\n     * Updates this list intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    /* tslint:disable no-string-literal */\n    List.prototype.update = function (properties, eTag) {\n        var _this = this;\n        if (eTag === void 0) { eTag = \"*\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.List\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retList = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retList = _this.getParent(List, _this.parentUrl, \"getByTitle('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                list: retList,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this list\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    List.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the collection of changes from the change log that have occurred within the list, based on the specified query.\n     */\n    List.prototype.getChanges = function (query) {\n        return this.clone(List, \"getchanges\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeQuery\" } }, query) }),\n        });\n    };\n    /**\n     * Returns a collection of items from the list based on the specified query.\n     *\n     * @param CamlQuery The Query schema of Collaborative Application Markup\n     * Language (CAML) is used in various ways within the context of Microsoft SharePoint Foundation\n     * to define queries against list data.\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/ms467521.aspx\n     *\n     * @param expands A URI with a $expand System Query Option indicates that Entries associated with\n     * the Entry or Collection of Entries identified by the Resource Path\n     * section of the URI must be represented inline (i.e. eagerly loaded).\n     * see:\n     *\n     * https://msdn.microsoft.com/en-us/library/office/fp142385.aspx\n     *\n     * http://www.odata.org/documentation/odata-version-2-0/uri-conventions/#ExpandSystemQueryOption\n     */\n    List.prototype.getItemsByCAMLQuery = function (query) {\n        var expands = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            expands[_i - 1] = arguments[_i];\n        }\n        var q = this.clone(List, \"getitems\", true);\n        return q.expand.apply(q, expands).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.CamlQuery\" } }, query) }),\n        });\n    };\n    /**\n     * See: https://msdn.microsoft.com/en-us/library/office/dn292554.aspx\n     */\n    List.prototype.getListItemChangesSinceToken = function (query) {\n        return this.clone(List, \"getlistitemchangessincetoken\", true).post({\n            body: JSON.stringify({ \"query\": util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.ChangeLogItemQuery\" } }, query) }),\n        }, { parse: function (r) { return r.text(); } });\n    };\n    /**\n     * Moves the list to the Recycle Bin and returns the identifier of the new Recycle Bin item.\n     */\n    List.prototype.recycle = function () {\n        return this.clone(List, \"recycle\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"Recycle\")) {\n                return data.Recycle;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Renders list data based on the view xml provided\n     */\n    List.prototype.renderListData = function (viewXml) {\n        var q = this.clone(List, \"renderlistdata(@viewXml)\");\n        q.query.add(\"@viewXml\", \"'\" + viewXml + \"'\");\n        return q.post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"RenderListData\")) {\n                return data.RenderListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the field values and field schema attributes for a list item.\n     */\n    List.prototype.renderListFormData = function (itemId, formId, mode) {\n        return this.clone(List, \"renderlistformdata(itemid=\" + itemId + \", formid='\" + formId + \"', mode='\" + mode + \"')\", true).post().then(function (data) {\n            // data will be a string, so we parse it again\n            data = JSON.parse(data);\n            if (data.hasOwnProperty(\"ListData\")) {\n                return data.ListData;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Reserves a list item ID for idempotent list item creation.\n     */\n    List.prototype.reserveListItemId = function () {\n        return this.clone(List, \"reservelistitemid\", true).post().then(function (data) {\n            if (data.hasOwnProperty(\"ReserveListItemId\")) {\n                return data.ReserveListItemId;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Returns the ListItemEntityTypeFullName for this list, used when adding/updating list items. Does not support batching.\n     *\n     */\n    List.prototype.getListItemEntityTypeFullName = function () {\n        return this.clone(List, null).select(\"ListItemEntityTypeFullName\").getAs().then(function (o) { return o.ListItemEntityTypeFullName; });\n    };\n    return List;\n}(queryablesecurable_1.QueryableSecurable));\nexports.List = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/lists.js\n// module id = 11\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar webs_1 = require(\"./webs\");\nvar odata_1 = require(\"./odata\");\nvar queryable_1 = require(\"./queryable\");\nvar queryablesecurable_1 = require(\"./queryablesecurable\");\nvar types_1 = require(\"./types\");\n/**\n * Internal helper class used to augment classes to include sharing functionality\n */\nvar QueryableShareable = (function (_super) {\n    __extends(QueryableShareable, _super);\n    function QueryableShareable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a sharing link for the supplied\n     *\n     * @param kind The kind of link to share\n     * @param expiration The optional expiration for this link\n     */\n    QueryableShareable.prototype.getShareLink = function (kind, expiration) {\n        if (expiration === void 0) { expiration = null; }\n        // date needs to be an ISO string or null\n        var expString = expiration !== null ? expiration.toISOString() : null;\n        // clone using the factory and send the request\n        return this.clone(QueryableShareable, \"shareLink\", true).postAs({\n            body: JSON.stringify({\n                request: {\n                    createLink: true,\n                    emailData: null,\n                    settings: {\n                        expiration: expString,\n                        linkKind: kind,\n                    },\n                },\n            }),\n        });\n    };\n    /**\n     * Shares this instance with the supplied users\n     *\n     * @param loginNames Resolved login names to share\n     * @param role The role\n     * @param requireSignin True to require the user is authenticated, otherwise false\n     * @param propagateAcl True to apply this share to all children\n     * @param emailData If supplied an email will be sent with the indicated properties\n     */\n    QueryableShareable.prototype.shareWith = function (loginNames, role, requireSignin, propagateAcl, emailData) {\n        var _this = this;\n        if (requireSignin === void 0) { requireSignin = true; }\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        // handle the multiple input types\n        if (!Array.isArray(loginNames)) {\n            loginNames = [loginNames];\n        }\n        var userStr = JSON.stringify(loginNames.map(function (login) { return { Key: login }; }));\n        var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n        // start by looking up the role definition id we need to set the roleValue\n        return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").filter(\"RoleTypeKind eq \" + roleFilter).get().then(function (def) {\n            if (!Array.isArray(def) || def.length < 1) {\n                throw new Error(\"Could not locate a role defintion with RoleTypeKind \" + roleFilter);\n            }\n            var postBody = {\n                includeAnonymousLinkInEmail: requireSignin,\n                peoplePickerInput: userStr,\n                propagateAcl: propagateAcl,\n                roleValue: \"role:\" + def[0].Id,\n                useSimplifiedRoles: true,\n            };\n            if (typeof emailData !== \"undefined\") {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: emailData.body,\n                    emailSubject: typeof emailData.subject !== \"undefined\" ? \"\" : emailData.subject,\n                    sendEmail: true,\n                });\n            }\n            return _this.clone(QueryableShareable, \"shareObject\", true).postAs({\n                body: JSON.stringify(postBody),\n            });\n        });\n    };\n    /**\n     * Shares an object based on the supplied options\n     *\n     * @param options The set of options to send to the ShareObject method\n     * @param bypass If true any processing is skipped and the options are sent directly to the ShareObject method\n     */\n    QueryableShareable.prototype.shareObject = function (options, bypass) {\n        var _this = this;\n        if (bypass === void 0) { bypass = false; }\n        if (bypass) {\n            // if the bypass flag is set send the supplied parameters directly to the service\n            return this.sendShareObjectRequest(options);\n        }\n        // extend our options with some defaults\n        options = util_1.Util.extend(options, {\n            group: null,\n            includeAnonymousLinkInEmail: false,\n            propagateAcl: false,\n            useSimplifiedRoles: true,\n        }, true);\n        return this.getRoleValue(options.role, options.group).then(function (roleValue) {\n            // handle the multiple input types\n            if (!Array.isArray(options.loginNames)) {\n                options.loginNames = [options.loginNames];\n            }\n            var userStr = JSON.stringify(options.loginNames.map(function (login) { return { Key: login }; }));\n            var postBody = {\n                peoplePickerInput: userStr,\n                roleValue: roleValue,\n                url: options.url,\n            };\n            if (typeof options.emailData !== \"undefined\" && options.emailData !== null) {\n                postBody = util_1.Util.extend(postBody, {\n                    emailBody: options.emailData.body,\n                    emailSubject: typeof options.emailData.subject !== \"undefined\" ? \"Shared for you.\" : options.emailData.subject,\n                    sendEmail: true,\n                });\n            }\n            return _this.sendShareObjectRequest(postBody);\n        });\n    };\n    /**\n     * Calls the web's UnshareObject method\n     *\n     * @param url The url of the object to unshare\n     */\n    QueryableShareable.prototype.unshareObjectWeb = function (url) {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs({\n            body: JSON.stringify({\n                url: url,\n            }),\n        });\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareable.prototype.checkPermissions = function (recipients) {\n        return this.clone(QueryableShareable, \"checkPermissions\", true).postAs({\n            body: JSON.stringify({\n                recipients: recipients,\n            }),\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareable.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, \"getSharingInformation\", true).postAs({\n            body: JSON.stringify({\n                request: request,\n            }),\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareable.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, \"getObjectSharingSettings\", true).postAs({\n            body: JSON.stringify({\n                useSimplifiedRoles: useSimplifiedRoles,\n            }),\n        });\n    };\n    /**\n     * Unshares this object\n     */\n    QueryableShareable.prototype.unshareObject = function () {\n        return this.clone(QueryableShareable, \"unshareObject\", true).postAs();\n    };\n    /**\n     * Deletes a link by type\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareable.prototype.deleteLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, \"deleteLinkByKind\", true).post({\n            body: JSON.stringify({ linkKind: kind }),\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareable.prototype.unshareLink = function (kind, shareId) {\n        if (shareId === void 0) { shareId = \"00000000-0000-0000-0000-000000000000\"; }\n        return this.clone(QueryableShareable, \"unshareLink\", true).post({\n            body: JSON.stringify({ linkKind: kind, shareId: shareId }),\n        });\n    };\n    /**\n     * Calculates the roleValue string used in the sharing query\n     *\n     * @param role The Sharing Role\n     * @param group The Group type\n     */\n    QueryableShareable.prototype.getRoleValue = function (role, group) {\n        // we will give group precedence, because we had to make a choice\n        if (typeof group !== \"undefined\" && group !== null) {\n            switch (group) {\n                case types_1.RoleType.Contributor:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedMemberGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                case types_1.RoleType.Reader:\n                case types_1.RoleType.Guest:\n                    return webs_1.Web.fromUrl(this.toUrl()).associatedVisitorGroup.select(\"Id\").getAs().then(function (g) { return \"group: \" + g.Id; });\n                default:\n                    throw new Error(\"Could not determine role value for supplied value. Contributor, Reader, and Guest are supported\");\n            }\n        }\n        else {\n            var roleFilter = role === types_1.SharingRole.Edit ? types_1.RoleType.Contributor : types_1.RoleType.Reader;\n            return webs_1.Web.fromUrl(this.toUrl()).roleDefinitions.select(\"Id\").top(1).filter(\"RoleTypeKind eq \" + roleFilter).getAs().then(function (def) {\n                if (def.length < 1) {\n                    throw new Error(\"Could not locate associated role definition for supplied role. Edit and View are supported\");\n                }\n                return \"role: \" + def[0].Id;\n            });\n        }\n    };\n    QueryableShareable.prototype.getShareObjectWeb = function (candidate) {\n        return Promise.resolve(webs_1.Web.fromUrl(candidate, \"/_api/SP.Web.ShareObject\"));\n    };\n    QueryableShareable.prototype.sendShareObjectRequest = function (options) {\n        return this.getShareObjectWeb(this.toUrl()).then(function (web) {\n            return web.expand(\"UsersWithAccessRequests\", \"GroupsSharedWith\").as(QueryableShareable).post({\n                body: JSON.stringify(options),\n            });\n        });\n    };\n    return QueryableShareable;\n}(queryable_1.Queryable));\nexports.QueryableShareable = QueryableShareable;\nvar QueryableShareableWeb = (function (_super) {\n    __extends(QueryableShareableWeb, _super);\n    function QueryableShareableWeb() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this web with the supplied users\n     * @param loginNames The resolved login names to share\n     * @param role The role to share this web\n     * @param emailData Optional email data\n     */\n    QueryableShareableWeb.prototype.shareWith = function (loginNames, role, emailData) {\n        var _this = this;\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        var dependency = this.addBatchDependency();\n        return webs_1.Web.fromUrl(this.toUrl(), \"/_api/web/url\").get().then(function (url) {\n            dependency();\n            return _this.shareObject(util_1.Util.combinePaths(url, \"/_layouts/15/aclinv.aspx?forSharing=1&mbypass=1\"), loginNames, role, emailData);\n        });\n    };\n    /**\n     * Provides direct access to the static web.ShareObject method\n     *\n     * @param url The url to share\n     * @param loginNames Resolved loginnames string[] of a single login name string\n     * @param roleValue Role value\n     * @param emailData Optional email data\n     * @param groupId Optional group id\n     * @param propagateAcl\n     * @param includeAnonymousLinkInEmail\n     * @param useSimplifiedRoles\n     */\n    QueryableShareableWeb.prototype.shareObject = function (url, loginNames, role, emailData, group, propagateAcl, includeAnonymousLinkInEmail, useSimplifiedRoles) {\n        if (propagateAcl === void 0) { propagateAcl = false; }\n        if (includeAnonymousLinkInEmail === void 0) { includeAnonymousLinkInEmail = false; }\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).shareObject({\n            emailData: emailData,\n            group: group,\n            includeAnonymousLinkInEmail: includeAnonymousLinkInEmail,\n            loginNames: loginNames,\n            propagateAcl: propagateAcl,\n            role: role,\n            url: url,\n            useSimplifiedRoles: useSimplifiedRoles,\n        });\n    };\n    /**\n     * Supplies a method to pass any set of arguments to ShareObject\n     *\n     * @param options The set of options to send to ShareObject\n     */\n    QueryableShareableWeb.prototype.shareObjectRaw = function (options) {\n        return this.clone(QueryableShareable, null, true).shareObject(options, true);\n    };\n    /**\n     * Unshares the object\n     *\n     * @param url The url of the object to stop sharing\n     */\n    QueryableShareableWeb.prototype.unshareObject = function (url) {\n        return this.clone(QueryableShareable, null, true).unshareObjectWeb(url);\n    };\n    return QueryableShareableWeb;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableWeb = QueryableShareableWeb;\nvar QueryableShareableItem = (function (_super) {\n    __extends(QueryableShareableItem, _super);\n    function QueryableShareableItem() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing for this item\n     *\n     * @param kind The type of link to share\n     * @param expiration The optional expiration date\n     */\n    QueryableShareableItem.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        return this.clone(QueryableShareable, null, true).getShareLink(kind, expiration);\n    };\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableItem.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        return this.clone(QueryableShareable, null, true).shareWith(loginNames, role, requireSignin, false, emailData);\n    };\n    /**\n     * Checks Permissions on the list of Users and returns back role the users have on the Item.\n     *\n     * @param recipients The array of Entities for which Permissions need to be checked.\n     */\n    QueryableShareableItem.prototype.checkSharingPermissions = function (recipients) {\n        return this.clone(QueryableShareable, null, true).checkPermissions(recipients);\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    QueryableShareableItem.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        return this.clone(QueryableShareable, null, true).getSharingInformation(request);\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    QueryableShareableItem.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        return this.clone(QueryableShareable, null, true).getObjectSharingSettings(useSimplifiedRoles);\n    };\n    /**\n     * Unshare this item\n     */\n    QueryableShareableItem.prototype.unshare = function () {\n        return this.clone(QueryableShareable, null, true).unshareObject();\n    };\n    /**\n     * Deletes a sharing link by kind\n     *\n     * @param kind Deletes a sharing link by the kind of link\n     */\n    QueryableShareableItem.prototype.deleteSharingLinkByKind = function (kind) {\n        return this.clone(QueryableShareable, null, true).deleteLinkByKind(kind);\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId\n     */\n    QueryableShareableItem.prototype.unshareLink = function (kind, shareId) {\n        return this.clone(QueryableShareable, null, true).unshareLink(kind, shareId);\n    };\n    return QueryableShareableItem;\n}(queryablesecurable_1.QueryableSecurable));\nexports.QueryableShareableItem = QueryableShareableItem;\nvar FileFolderShared = (function (_super) {\n    __extends(FileFolderShared, _super);\n    function FileFolderShared() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a link suitable for sharing\n     *\n     * @param kind The kind of link to get\n     * @param expiration Optional, an expiration for this link\n     */\n    FileFolderShared.prototype.getShareLink = function (kind, expiration) {\n        if (kind === void 0) { kind = types_1.SharingLinkKind.OrganizationView; }\n        if (expiration === void 0) { expiration = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getShareLink(kind, expiration);\n        });\n    };\n    /**\n         * Checks Permissions on the list of Users and returns back role the users have on the Item.\n         *\n         * @param recipients The array of Entities for which Permissions need to be checked.\n         */\n    FileFolderShared.prototype.checkSharingPermissions = function (recipients) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.checkPermissions(recipients);\n        });\n    };\n    /**\n     * Get Sharing Information.\n     *\n     * @param request The SharingInformationRequest Object.\n     */\n    FileFolderShared.prototype.getSharingInformation = function (request) {\n        if (request === void 0) { request = null; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getSharingInformation(request);\n        });\n    };\n    /**\n     * Gets the sharing settings of an item.\n     *\n     * @param useSimplifiedRoles Determines whether to use simplified roles.\n     */\n    FileFolderShared.prototype.getObjectSharingSettings = function (useSimplifiedRoles) {\n        if (useSimplifiedRoles === void 0) { useSimplifiedRoles = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.getObjectSharingSettings(useSimplifiedRoles);\n        });\n    };\n    /**\n     * Unshare this item\n     */\n    FileFolderShared.prototype.unshare = function () {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareObject();\n        });\n    };\n    /**\n     * Deletes a sharing link by the kind of link\n     *\n     * @param kind The kind of link to be deleted.\n     */\n    FileFolderShared.prototype.deleteSharingLinkByKind = function (kind) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.deleteLinkByKind(kind);\n        });\n    };\n    /**\n     * Removes the specified link to the item.\n     *\n     * @param kind The kind of link to be deleted.\n     * @param shareId The share id to delete\n     */\n    FileFolderShared.prototype.unshareLink = function (kind, shareId) {\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.unshareLink(kind, shareId);\n        });\n    };\n    /**\n     * For files and folders we need to use the associated item end point\n     */\n    FileFolderShared.prototype.getShareable = function () {\n        var _this = this;\n        // sharing only works on the item end point, not the file one - so we create a folder instance with the item url internally\n        return this.clone(QueryableShareableFile, \"listItemAllFields\", false).select(\"odata.editlink\").get().then(function (d) {\n            var shareable = new QueryableShareable(odata_1.getEntityUrl(d));\n            // we need to handle batching\n            if (_this.hasBatch) {\n                shareable = shareable.inBatch(_this.batch);\n            }\n            return shareable;\n        });\n    };\n    return FileFolderShared;\n}(queryable_1.QueryableInstance));\nexports.FileFolderShared = FileFolderShared;\nvar QueryableShareableFile = (function (_super) {\n    __extends(QueryableShareableFile, _super);\n    function QueryableShareableFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFile.prototype.shareWith = function (loginNames, role, requireSignin, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, false, emailData);\n        });\n    };\n    return QueryableShareableFile;\n}(FileFolderShared));\nexports.QueryableShareableFile = QueryableShareableFile;\nvar QueryableShareableFolder = (function (_super) {\n    __extends(QueryableShareableFolder, _super);\n    function QueryableShareableFolder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Shares this item with one or more users\n     *\n     * @param loginNames string or string[] of resolved login names to which this item will be shared\n     * @param role The role (View | Edit) applied to the share\n     * @param shareEverything Share everything in this folder, even items with unique permissions.\n     * @param requireSignin If true the user must signin to view link, otherwise anyone with the link can access the resource\n     * @param emailData Optional, if inlucded an email will be sent. Note subject currently has no effect.\n     */\n    QueryableShareableFolder.prototype.shareWith = function (loginNames, role, requireSignin, shareEverything, emailData) {\n        if (role === void 0) { role = types_1.SharingRole.View; }\n        if (requireSignin === void 0) { requireSignin = true; }\n        if (shareEverything === void 0) { shareEverything = false; }\n        var dependency = this.addBatchDependency();\n        return this.getShareable().then(function (shareable) {\n            dependency();\n            return shareable.shareWith(loginNames, role, requireSignin, shareEverything, emailData);\n        });\n    };\n    return QueryableShareableFolder;\n}(FileFolderShared));\nexports.QueryableShareableFolder = QueryableShareableFolder;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryableshareable.js\n// module id = 12\n// module chunks = 0","// reference: https://msdn.microsoft.com/en-us/library/office/dn600183.aspx\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Determines the display mode of the given control or view\n */\nvar ControlMode;\n(function (ControlMode) {\n    ControlMode[ControlMode[\"Display\"] = 1] = \"Display\";\n    ControlMode[ControlMode[\"Edit\"] = 2] = \"Edit\";\n    ControlMode[ControlMode[\"New\"] = 3] = \"New\";\n})(ControlMode = exports.ControlMode || (exports.ControlMode = {}));\n/**\n * Specifies the type of the field.\n */\nvar FieldTypes;\n(function (FieldTypes) {\n    FieldTypes[FieldTypes[\"Invalid\"] = 0] = \"Invalid\";\n    FieldTypes[FieldTypes[\"Integer\"] = 1] = \"Integer\";\n    FieldTypes[FieldTypes[\"Text\"] = 2] = \"Text\";\n    FieldTypes[FieldTypes[\"Note\"] = 3] = \"Note\";\n    FieldTypes[FieldTypes[\"DateTime\"] = 4] = \"DateTime\";\n    FieldTypes[FieldTypes[\"Counter\"] = 5] = \"Counter\";\n    FieldTypes[FieldTypes[\"Choice\"] = 6] = \"Choice\";\n    FieldTypes[FieldTypes[\"Lookup\"] = 7] = \"Lookup\";\n    FieldTypes[FieldTypes[\"Boolean\"] = 8] = \"Boolean\";\n    FieldTypes[FieldTypes[\"Number\"] = 9] = \"Number\";\n    FieldTypes[FieldTypes[\"Currency\"] = 10] = \"Currency\";\n    FieldTypes[FieldTypes[\"URL\"] = 11] = \"URL\";\n    FieldTypes[FieldTypes[\"Computed\"] = 12] = \"Computed\";\n    FieldTypes[FieldTypes[\"Threading\"] = 13] = \"Threading\";\n    FieldTypes[FieldTypes[\"Guid\"] = 14] = \"Guid\";\n    FieldTypes[FieldTypes[\"MultiChoice\"] = 15] = \"MultiChoice\";\n    FieldTypes[FieldTypes[\"GridChoice\"] = 16] = \"GridChoice\";\n    FieldTypes[FieldTypes[\"Calculated\"] = 17] = \"Calculated\";\n    FieldTypes[FieldTypes[\"File\"] = 18] = \"File\";\n    FieldTypes[FieldTypes[\"Attachments\"] = 19] = \"Attachments\";\n    FieldTypes[FieldTypes[\"User\"] = 20] = \"User\";\n    FieldTypes[FieldTypes[\"Recurrence\"] = 21] = \"Recurrence\";\n    FieldTypes[FieldTypes[\"CrossProjectLink\"] = 22] = \"CrossProjectLink\";\n    FieldTypes[FieldTypes[\"ModStat\"] = 23] = \"ModStat\";\n    FieldTypes[FieldTypes[\"Error\"] = 24] = \"Error\";\n    FieldTypes[FieldTypes[\"ContentTypeId\"] = 25] = \"ContentTypeId\";\n    FieldTypes[FieldTypes[\"PageSeparator\"] = 26] = \"PageSeparator\";\n    FieldTypes[FieldTypes[\"ThreadIndex\"] = 27] = \"ThreadIndex\";\n    FieldTypes[FieldTypes[\"WorkflowStatus\"] = 28] = \"WorkflowStatus\";\n    FieldTypes[FieldTypes[\"AllDayEvent\"] = 29] = \"AllDayEvent\";\n    FieldTypes[FieldTypes[\"WorkflowEventType\"] = 30] = \"WorkflowEventType\";\n})(FieldTypes = exports.FieldTypes || (exports.FieldTypes = {}));\nvar DateTimeFieldFormatType;\n(function (DateTimeFieldFormatType) {\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateOnly\"] = 0] = \"DateOnly\";\n    DateTimeFieldFormatType[DateTimeFieldFormatType[\"DateTime\"] = 1] = \"DateTime\";\n})(DateTimeFieldFormatType = exports.DateTimeFieldFormatType || (exports.DateTimeFieldFormatType = {}));\n/**\n * Specifies the control settings while adding a field.\n */\nvar AddFieldOptions;\n(function (AddFieldOptions) {\n    /**\n     *  Specify that a new field added to the list must also be added to the default content type in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"DefaultValue\"] = 0] = \"DefaultValue\";\n    /**\n     * Specify that a new field added to the list must also be added to the default content type in the site collection.\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToDefaultContentType\"] = 1] = \"AddToDefaultContentType\";\n    /**\n     * Specify that a new field must not be added to any other content type\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToNoContentType\"] = 2] = \"AddToNoContentType\";\n    /**\n     *  Specify that a new field that is added to the specified list must also be added to all content types in the site collection\n     */\n    AddFieldOptions[AddFieldOptions[\"AddToAllContentTypes\"] = 4] = \"AddToAllContentTypes\";\n    /**\n     * Specify adding an internal field name hint for the purpose of avoiding possible database locking or field renaming operations\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldInternalNameHint\"] = 8] = \"AddFieldInternalNameHint\";\n    /**\n     * Specify that a new field that is added to the specified list must also be added to the default list view\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldToDefaultView\"] = 16] = \"AddFieldToDefaultView\";\n    /**\n     * Specify to confirm that no other field has the same display name\n     */\n    AddFieldOptions[AddFieldOptions[\"AddFieldCheckDisplayName\"] = 32] = \"AddFieldCheckDisplayName\";\n})(AddFieldOptions = exports.AddFieldOptions || (exports.AddFieldOptions = {}));\nvar CalendarType;\n(function (CalendarType) {\n    CalendarType[CalendarType[\"Gregorian\"] = 1] = \"Gregorian\";\n    CalendarType[CalendarType[\"Japan\"] = 3] = \"Japan\";\n    CalendarType[CalendarType[\"Taiwan\"] = 4] = \"Taiwan\";\n    CalendarType[CalendarType[\"Korea\"] = 5] = \"Korea\";\n    CalendarType[CalendarType[\"Hijri\"] = 6] = \"Hijri\";\n    CalendarType[CalendarType[\"Thai\"] = 7] = \"Thai\";\n    CalendarType[CalendarType[\"Hebrew\"] = 8] = \"Hebrew\";\n    CalendarType[CalendarType[\"GregorianMEFrench\"] = 9] = \"GregorianMEFrench\";\n    CalendarType[CalendarType[\"GregorianArabic\"] = 10] = \"GregorianArabic\";\n    CalendarType[CalendarType[\"GregorianXLITEnglish\"] = 11] = \"GregorianXLITEnglish\";\n    CalendarType[CalendarType[\"GregorianXLITFrench\"] = 12] = \"GregorianXLITFrench\";\n    CalendarType[CalendarType[\"KoreaJapanLunar\"] = 14] = \"KoreaJapanLunar\";\n    CalendarType[CalendarType[\"ChineseLunar\"] = 15] = \"ChineseLunar\";\n    CalendarType[CalendarType[\"SakaEra\"] = 16] = \"SakaEra\";\n    CalendarType[CalendarType[\"UmAlQura\"] = 23] = \"UmAlQura\";\n})(CalendarType = exports.CalendarType || (exports.CalendarType = {}));\nvar UrlFieldFormatType;\n(function (UrlFieldFormatType) {\n    UrlFieldFormatType[UrlFieldFormatType[\"Hyperlink\"] = 0] = \"Hyperlink\";\n    UrlFieldFormatType[UrlFieldFormatType[\"Image\"] = 1] = \"Image\";\n})(UrlFieldFormatType = exports.UrlFieldFormatType || (exports.UrlFieldFormatType = {}));\nvar PermissionKind;\n(function (PermissionKind) {\n    /**\n     * Has no permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"EmptyMask\"] = 0] = \"EmptyMask\";\n    /**\n     * View items in lists, documents in document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"ViewListItems\"] = 1] = \"ViewListItems\";\n    /**\n     * Add items to lists, documents to document libraries, and Web discussion comments.\n     */\n    PermissionKind[PermissionKind[\"AddListItems\"] = 2] = \"AddListItems\";\n    /**\n     * Edit items in lists, edit documents in document libraries, edit Web discussion comments\n     * in documents, and customize Web Part Pages in document libraries.\n     */\n    PermissionKind[PermissionKind[\"EditListItems\"] = 3] = \"EditListItems\";\n    /**\n     * Delete items from a list, documents from a document library, and Web discussion\n     * comments in documents.\n     */\n    PermissionKind[PermissionKind[\"DeleteListItems\"] = 4] = \"DeleteListItems\";\n    /**\n     * Approve a minor version of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ApproveItems\"] = 5] = \"ApproveItems\";\n    /**\n     * View the source of documents with server-side file handlers.\n     */\n    PermissionKind[PermissionKind[\"OpenItems\"] = 6] = \"OpenItems\";\n    /**\n     * View past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"ViewVersions\"] = 7] = \"ViewVersions\";\n    /**\n     * Delete past versions of a list item or document.\n     */\n    PermissionKind[PermissionKind[\"DeleteVersions\"] = 8] = \"DeleteVersions\";\n    /**\n     * Discard or check in a document which is checked out to another user.\n     */\n    PermissionKind[PermissionKind[\"CancelCheckout\"] = 9] = \"CancelCheckout\";\n    /**\n     * Create, change, and delete personal views of lists.\n     */\n    PermissionKind[PermissionKind[\"ManagePersonalViews\"] = 10] = \"ManagePersonalViews\";\n    /**\n     * Create and delete lists, add or remove columns in a list, and add or remove public views of a list.\n     */\n    PermissionKind[PermissionKind[\"ManageLists\"] = 12] = \"ManageLists\";\n    /**\n     * View forms, views, and application pages, and enumerate lists.\n     */\n    PermissionKind[PermissionKind[\"ViewFormPages\"] = 13] = \"ViewFormPages\";\n    /**\n     * Make content of a list or document library retrieveable for anonymous users through SharePoint search.\n     * The list permissions in the site do not change.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessList\"] = 14] = \"AnonymousSearchAccessList\";\n    /**\n     * Allow users to open a Site, list, or folder to access items inside that container.\n     */\n    PermissionKind[PermissionKind[\"Open\"] = 17] = \"Open\";\n    /**\n     * View pages in a Site.\n     */\n    PermissionKind[PermissionKind[\"ViewPages\"] = 18] = \"ViewPages\";\n    /**\n     * Add, change, or delete HTML pages or Web Part Pages, and edit the Site using\n     * a Windows SharePoint Services compatible editor.\n     */\n    PermissionKind[PermissionKind[\"AddAndCustomizePages\"] = 19] = \"AddAndCustomizePages\";\n    /**\n     * Apply a theme or borders to the entire Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyThemeAndBorder\"] = 20] = \"ApplyThemeAndBorder\";\n    /**\n     * Apply a style sheet (.css file) to the Site.\n     */\n    PermissionKind[PermissionKind[\"ApplyStyleSheets\"] = 21] = \"ApplyStyleSheets\";\n    /**\n     * View reports on Site usage.\n     */\n    PermissionKind[PermissionKind[\"ViewUsageData\"] = 22] = \"ViewUsageData\";\n    /**\n     * Create a Site using Self-Service Site Creation.\n     */\n    PermissionKind[PermissionKind[\"CreateSSCSite\"] = 23] = \"CreateSSCSite\";\n    /**\n     * Create subsites such as team sites, Meeting Workspace sites, and Document Workspace sites.\n     */\n    PermissionKind[PermissionKind[\"ManageSubwebs\"] = 24] = \"ManageSubwebs\";\n    /**\n     * Create a group of users that can be used anywhere within the site collection.\n     */\n    PermissionKind[PermissionKind[\"CreateGroups\"] = 25] = \"CreateGroups\";\n    /**\n     * Create and change permission levels on the Site and assign permissions to users\n     * and groups.\n     */\n    PermissionKind[PermissionKind[\"ManagePermissions\"] = 26] = \"ManagePermissions\";\n    /**\n     * Enumerate files and folders in a Site using Microsoft Office SharePoint Designer\n     * and WebDAV interfaces.\n     */\n    PermissionKind[PermissionKind[\"BrowseDirectories\"] = 27] = \"BrowseDirectories\";\n    /**\n     * View information about users of the Site.\n     */\n    PermissionKind[PermissionKind[\"BrowseUserInfo\"] = 28] = \"BrowseUserInfo\";\n    /**\n     * Add or remove personal Web Parts on a Web Part Page.\n     */\n    PermissionKind[PermissionKind[\"AddDelPrivateWebParts\"] = 29] = \"AddDelPrivateWebParts\";\n    /**\n     * Update Web Parts to display personalized information.\n     */\n    PermissionKind[PermissionKind[\"UpdatePersonalWebParts\"] = 30] = \"UpdatePersonalWebParts\";\n    /**\n     * Grant the ability to perform all administration tasks for the Site as well as\n     * manage content, activate, deactivate, or edit properties of Site scoped Features\n     * through the object model or through the user interface (UI). When granted on the\n     * root Site of a Site Collection, activate, deactivate, or edit properties of\n     * site collection scoped Features through the object model. To browse to the Site\n     * Collection Features page and activate or deactivate Site Collection scoped Features\n     * through the UI, you must be a Site Collection administrator.\n     */\n    PermissionKind[PermissionKind[\"ManageWeb\"] = 31] = \"ManageWeb\";\n    /**\n     * Content of lists and document libraries in the Web site will be retrieveable for anonymous users through\n     * SharePoint search if the list or document library has AnonymousSearchAccessList set.\n     */\n    PermissionKind[PermissionKind[\"AnonymousSearchAccessWebLists\"] = 32] = \"AnonymousSearchAccessWebLists\";\n    /**\n     * Use features that launch client applications. Otherwise, users must work on documents\n     * locally and upload changes.\n     */\n    PermissionKind[PermissionKind[\"UseClientIntegration\"] = 37] = \"UseClientIntegration\";\n    /**\n     * Use SOAP, WebDAV, or Microsoft Office SharePoint Designer interfaces to access the Site.\n     */\n    PermissionKind[PermissionKind[\"UseRemoteAPIs\"] = 38] = \"UseRemoteAPIs\";\n    /**\n     * Manage alerts for all users of the Site.\n     */\n    PermissionKind[PermissionKind[\"ManageAlerts\"] = 39] = \"ManageAlerts\";\n    /**\n     * Create e-mail alerts.\n     */\n    PermissionKind[PermissionKind[\"CreateAlerts\"] = 40] = \"CreateAlerts\";\n    /**\n     * Allows a user to change his or her user information, such as adding a picture.\n     */\n    PermissionKind[PermissionKind[\"EditMyUserInfo\"] = 41] = \"EditMyUserInfo\";\n    /**\n     * Enumerate permissions on Site, list, folder, document, or list item.\n     */\n    PermissionKind[PermissionKind[\"EnumeratePermissions\"] = 63] = \"EnumeratePermissions\";\n    /**\n     * Has all permissions on the Site. Not available through the user interface.\n     */\n    PermissionKind[PermissionKind[\"FullMask\"] = 65] = \"FullMask\";\n})(PermissionKind = exports.PermissionKind || (exports.PermissionKind = {}));\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\nvar PrincipalSource;\n(function (PrincipalSource) {\n    PrincipalSource[PrincipalSource[\"None\"] = 0] = \"None\";\n    PrincipalSource[PrincipalSource[\"UserInfoList\"] = 1] = \"UserInfoList\";\n    PrincipalSource[PrincipalSource[\"Windows\"] = 2] = \"Windows\";\n    PrincipalSource[PrincipalSource[\"MembershipProvider\"] = 4] = \"MembershipProvider\";\n    PrincipalSource[PrincipalSource[\"RoleProvider\"] = 8] = \"RoleProvider\";\n    PrincipalSource[PrincipalSource[\"All\"] = 15] = \"All\";\n})(PrincipalSource = exports.PrincipalSource || (exports.PrincipalSource = {}));\nvar RoleType;\n(function (RoleType) {\n    RoleType[RoleType[\"None\"] = 0] = \"None\";\n    RoleType[RoleType[\"Guest\"] = 1] = \"Guest\";\n    RoleType[RoleType[\"Reader\"] = 2] = \"Reader\";\n    RoleType[RoleType[\"Contributor\"] = 3] = \"Contributor\";\n    RoleType[RoleType[\"WebDesigner\"] = 4] = \"WebDesigner\";\n    RoleType[RoleType[\"Administrator\"] = 5] = \"Administrator\";\n})(RoleType = exports.RoleType || (exports.RoleType = {}));\nvar PageType;\n(function (PageType) {\n    PageType[PageType[\"Invalid\"] = -1] = \"Invalid\";\n    PageType[PageType[\"DefaultView\"] = 0] = \"DefaultView\";\n    PageType[PageType[\"NormalView\"] = 1] = \"NormalView\";\n    PageType[PageType[\"DialogView\"] = 2] = \"DialogView\";\n    PageType[PageType[\"View\"] = 3] = \"View\";\n    PageType[PageType[\"DisplayForm\"] = 4] = \"DisplayForm\";\n    PageType[PageType[\"DisplayFormDialog\"] = 5] = \"DisplayFormDialog\";\n    PageType[PageType[\"EditForm\"] = 6] = \"EditForm\";\n    PageType[PageType[\"EditFormDialog\"] = 7] = \"EditFormDialog\";\n    PageType[PageType[\"NewForm\"] = 8] = \"NewForm\";\n    PageType[PageType[\"NewFormDialog\"] = 9] = \"NewFormDialog\";\n    PageType[PageType[\"SolutionForm\"] = 10] = \"SolutionForm\";\n    PageType[PageType[\"PAGE_MAXITEMS\"] = 11] = \"PAGE_MAXITEMS\";\n})(PageType = exports.PageType || (exports.PageType = {}));\nvar SharingLinkKind;\n(function (SharingLinkKind) {\n    /**\n     * Uninitialized link\n     */\n    SharingLinkKind[SharingLinkKind[\"Uninitialized\"] = 0] = \"Uninitialized\";\n    /**\n     * Direct link to the object being shared\n     */\n    SharingLinkKind[SharingLinkKind[\"Direct\"] = 1] = \"Direct\";\n    /**\n     * Organization-shareable link to the object being shared with view permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationView\"] = 2] = \"OrganizationView\";\n    /**\n     * Organization-shareable link to the object being shared with edit permissions\n     */\n    SharingLinkKind[SharingLinkKind[\"OrganizationEdit\"] = 3] = \"OrganizationEdit\";\n    /**\n     * View only anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousView\"] = 4] = \"AnonymousView\";\n    /**\n     * Read/Write anonymous link\n     */\n    SharingLinkKind[SharingLinkKind[\"AnonymousEdit\"] = 5] = \"AnonymousEdit\";\n    /**\n     * Flexible sharing Link where properties can change without affecting link URL\n     */\n    SharingLinkKind[SharingLinkKind[\"Flexible\"] = 6] = \"Flexible\";\n})(SharingLinkKind = exports.SharingLinkKind || (exports.SharingLinkKind = {}));\n;\n/**\n * Indicates the role of the sharing link\n */\nvar SharingRole;\n(function (SharingRole) {\n    SharingRole[SharingRole[\"None\"] = 0] = \"None\";\n    SharingRole[SharingRole[\"View\"] = 1] = \"View\";\n    SharingRole[SharingRole[\"Edit\"] = 2] = \"Edit\";\n    SharingRole[SharingRole[\"Owner\"] = 3] = \"Owner\";\n})(SharingRole = exports.SharingRole || (exports.SharingRole = {}));\nvar SharingOperationStatusCode;\n(function (SharingOperationStatusCode) {\n    /**\n     * The share operation completed without errors.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CompletedSuccessfully\"] = 0] = \"CompletedSuccessfully\";\n    /**\n     * The share operation completed and generated requests for access.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessRequestsQueued\"] = 1] = \"AccessRequestsQueued\";\n    /**\n     * The share operation failed as there were no resolved users.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NoResolvedUsers\"] = -1] = \"NoResolvedUsers\";\n    /**\n     * The share operation failed due to insufficient permissions.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"AccessDenied\"] = -2] = \"AccessDenied\";\n    /**\n     * The share operation failed when attempting a cross site share, which is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CrossSiteRequestNotSupported\"] = -3] = \"CrossSiteRequestNotSupported\";\n    /**\n     * The sharing operation failed due to an unknown error.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"UnknowError\"] = -4] = \"UnknowError\";\n    /**\n     * The text you typed is too long. Please shorten it.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"EmailBodyTooLong\"] = -5] = \"EmailBodyTooLong\";\n    /**\n     * The maximum number of unique scopes in the list has been exceeded.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ListUniqueScopesExceeded\"] = -6] = \"ListUniqueScopesExceeded\";\n    /**\n     * The share operation failed because a sharing capability is disabled in the site.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"CapabilityDisabled\"] = -7] = \"CapabilityDisabled\";\n    /**\n     * The specified object for the share operation is not supported.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"ObjectNotSupported\"] = -8] = \"ObjectNotSupported\";\n    /**\n     * A SharePoint group cannot contain another SharePoint group.\n     */\n    SharingOperationStatusCode[SharingOperationStatusCode[\"NestedGroupsNotSupported\"] = -9] = \"NestedGroupsNotSupported\";\n})(SharingOperationStatusCode = exports.SharingOperationStatusCode || (exports.SharingOperationStatusCode = {}));\nvar SPSharedObjectType;\n(function (SPSharedObjectType) {\n    SPSharedObjectType[SPSharedObjectType[\"Unknown\"] = 0] = \"Unknown\";\n    SPSharedObjectType[SPSharedObjectType[\"File\"] = 1] = \"File\";\n    SPSharedObjectType[SPSharedObjectType[\"Folder\"] = 2] = \"Folder\";\n    SPSharedObjectType[SPSharedObjectType[\"Item\"] = 3] = \"Item\";\n    SPSharedObjectType[SPSharedObjectType[\"List\"] = 4] = \"List\";\n    SPSharedObjectType[SPSharedObjectType[\"Web\"] = 5] = \"Web\";\n    SPSharedObjectType[SPSharedObjectType[\"Max\"] = 6] = \"Max\";\n})(SPSharedObjectType = exports.SPSharedObjectType || (exports.SPSharedObjectType = {}));\nvar SharingDomainRestrictionMode;\n(function (SharingDomainRestrictionMode) {\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"None\"] = 0] = \"None\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"AllowList\"] = 1] = \"AllowList\";\n    SharingDomainRestrictionMode[SharingDomainRestrictionMode[\"BlockList\"] = 2] = \"BlockList\";\n})(SharingDomainRestrictionMode = exports.SharingDomainRestrictionMode || (exports.SharingDomainRestrictionMode = {}));\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/types.js\n// module id = 13\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./util\");\nvar collections_1 = require(\"../collections/collections\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\n/**\n * A wrapper class to provide a consistent interface to browser based storage\n *\n */\nvar PnPClientStorageWrapper = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorageWrapper class\n     *\n     * @constructor\n     */\n    function PnPClientStorageWrapper(store, defaultTimeoutMinutes) {\n        this.store = store;\n        this.defaultTimeoutMinutes = defaultTimeoutMinutes;\n        this.defaultTimeoutMinutes = (defaultTimeoutMinutes === void 0) ? -1 : defaultTimeoutMinutes;\n        this.enabled = this.test();\n    }\n    /**\n     * Get a value from storage, or null if that value does not exist\n     *\n     * @param key The key whose value we want to retrieve\n     */\n    PnPClientStorageWrapper.prototype.get = function (key) {\n        if (!this.enabled) {\n            return null;\n        }\n        var o = this.store.getItem(key);\n        if (o == null) {\n            return null;\n        }\n        var persistable = JSON.parse(o);\n        if (new Date(persistable.expiration) <= new Date()) {\n            this.delete(key);\n            return null;\n        }\n        else {\n            return persistable.value;\n        }\n    };\n    /**\n     * Adds a value to the underlying storage\n     *\n     * @param key The key to use when storing the provided value\n     * @param o The value to store\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.put = function (key, o, expire) {\n        if (this.enabled) {\n            this.store.setItem(key, this.createPersistable(o, expire));\n        }\n    };\n    /**\n     * Deletes a value from the underlying storage\n     *\n     * @param key The key of the pair we want to remove from storage\n     */\n    PnPClientStorageWrapper.prototype.delete = function (key) {\n        if (this.enabled) {\n            this.store.removeItem(key);\n        }\n    };\n    /**\n     * Gets an item from the underlying storage, or adds it if it does not exist using the supplied getter function\n     *\n     * @param key The key to use when storing the provided value\n     * @param getter A function which will upon execution provide the desired value\n     * @param expire Optional, if provided the expiration of the item, otherwise the default is used\n     */\n    PnPClientStorageWrapper.prototype.getOrPut = function (key, getter, expire) {\n        var _this = this;\n        if (!this.enabled) {\n            return getter();\n        }\n        return new Promise(function (resolve) {\n            var o = _this.get(key);\n            if (o == null) {\n                getter().then(function (d) {\n                    _this.put(key, d, expire);\n                    resolve(d);\n                });\n            }\n            else {\n                resolve(o);\n            }\n        });\n    };\n    /**\n     * Used to determine if the wrapped storage is available currently\n     */\n    PnPClientStorageWrapper.prototype.test = function () {\n        var str = \"test\";\n        try {\n            this.store.setItem(str, str);\n            this.store.removeItem(str);\n            return true;\n        }\n        catch (e) {\n            return false;\n        }\n    };\n    /**\n     * Creates the persistable to store\n     */\n    PnPClientStorageWrapper.prototype.createPersistable = function (o, expire) {\n        if (typeof expire === \"undefined\") {\n            // ensure we are by default inline with the global library setting\n            var defaultTimeout = pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds;\n            if (this.defaultTimeoutMinutes > 0) {\n                defaultTimeout = this.defaultTimeoutMinutes * 60;\n            }\n            expire = util_1.Util.dateAdd(new Date(), \"second\", defaultTimeout);\n        }\n        return JSON.stringify({ expiration: expire, value: o });\n    };\n    return PnPClientStorageWrapper;\n}());\nexports.PnPClientStorageWrapper = PnPClientStorageWrapper;\n/**\n * A thin implementation of in-memory storage for use in nodejs\n */\nvar MemoryStorage = (function () {\n    function MemoryStorage(_store) {\n        if (_store === void 0) { _store = new collections_1.Dictionary(); }\n        this._store = _store;\n    }\n    Object.defineProperty(MemoryStorage.prototype, \"length\", {\n        get: function () {\n            return this._store.count();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    MemoryStorage.prototype.clear = function () {\n        this._store.clear();\n    };\n    MemoryStorage.prototype.getItem = function (key) {\n        return this._store.get(key);\n    };\n    MemoryStorage.prototype.key = function (index) {\n        return this._store.getKeys()[index];\n    };\n    MemoryStorage.prototype.removeItem = function (key) {\n        this._store.remove(key);\n    };\n    MemoryStorage.prototype.setItem = function (key, data) {\n        this._store.add(key, data);\n    };\n    return MemoryStorage;\n}());\n/**\n * A class that will establish wrappers for both local and session storage\n */\nvar PnPClientStorage = (function () {\n    /**\n     * Creates a new instance of the PnPClientStorage class\n     *\n     * @constructor\n     */\n    function PnPClientStorage() {\n        this.local = typeof localStorage !== \"undefined\" ? new PnPClientStorageWrapper(localStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n        this.session = typeof sessionStorage !== \"undefined\" ? new PnPClientStorageWrapper(sessionStorage) : new PnPClientStorageWrapper(new MemoryStorage());\n    }\n    return PnPClientStorage;\n}());\nexports.PnPClientStorage = PnPClientStorage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/storage.js\n// module id = 14\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar digestcache_1 = require(\"./digestcache\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar HttpClient = (function () {\n    function HttpClient() {\n        this._impl = pnplibconfig_1.RuntimeConfig.fetchClientFactory();\n        this._digestCache = new digestcache_1.DigestCache(this);\n    }\n    HttpClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { cache: \"no-cache\", credentials: \"same-origin\" }, true);\n        var headers = new Headers();\n        // first we add the global headers so they can be overwritten by any passed in locally to this call\n        this.mergeHeaders(headers, pnplibconfig_1.RuntimeConfig.headers);\n        // second we add the local options so we can overwrite the globals\n        this.mergeHeaders(headers, options.headers);\n        // lastly we apply any default headers we need that may not exist\n        if (!headers.has(\"Accept\")) {\n            headers.append(\"Accept\", \"application/json\");\n        }\n        if (!headers.has(\"Content-Type\")) {\n            headers.append(\"Content-Type\", \"application/json;odata=verbose;charset=utf-8\");\n        }\n        if (!headers.has(\"X-ClientService-ClientTag\")) {\n            headers.append(\"X-ClientService-ClientTag\", \"PnPCoreJS:2.0.5\");\n        }\n        opts = util_1.Util.extend(opts, { headers: headers });\n        if (opts.method && opts.method.toUpperCase() !== \"GET\") {\n            if (!headers.has(\"X-RequestDigest\")) {\n                var index = url.indexOf(\"_api/\");\n                if (index < 0) {\n                    throw new exceptions_1.APIUrlException();\n                }\n                var webUrl = url.substr(0, index);\n                return this._digestCache.getDigest(webUrl)\n                    .then(function (digest) {\n                    headers.append(\"X-RequestDigest\", digest);\n                    return _this.fetchRaw(url, opts);\n                });\n            }\n        }\n        return this.fetchRaw(url, opts);\n    };\n    HttpClient.prototype.fetchRaw = function (url, options) {\n        var _this = this;\n        if (options === void 0) { options = {}; }\n        // here we need to normalize the headers\n        var rawHeaders = new Headers();\n        this.mergeHeaders(rawHeaders, options.headers);\n        options = util_1.Util.extend(options, { headers: rawHeaders });\n        var retry = function (ctx) {\n            _this._impl.fetch(url, options).then(function (response) { return ctx.resolve(response); }).catch(function (response) {\n                // grab our current delay\n                var delay = ctx.delay;\n                // Check if request was throttled - http status code 429\n                // Check is request failed due to server unavailable - http status code 503\n                if (response.status !== 429 && response.status !== 503) {\n                    ctx.reject(response);\n                }\n                // Increment our counters.\n                ctx.delay *= 2;\n                ctx.attempts++;\n                // If we have exceeded the retry count, reject.\n                if (ctx.retryCount <= ctx.attempts) {\n                    ctx.reject(response);\n                }\n                // Set our retry timeout for {delay} milliseconds.\n                setTimeout(util_1.Util.getCtxCallback(_this, retry, ctx), delay);\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            var retryContext = {\n                attempts: 0,\n                delay: 100,\n                reject: reject,\n                resolve: resolve,\n                retryCount: 7,\n            };\n            retry.call(_this, retryContext);\n        });\n    };\n    HttpClient.prototype.get = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"GET\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.post = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"POST\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.patch = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"PATCH\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.delete = function (url, options) {\n        if (options === void 0) { options = {}; }\n        var opts = util_1.Util.extend(options, { method: \"DELETE\" });\n        return this.fetch(url, opts);\n    };\n    HttpClient.prototype.mergeHeaders = function (target, source) {\n        if (typeof source !== \"undefined\" && source !== null) {\n            var temp = new Request(\"\", { headers: source });\n            temp.headers.forEach(function (value, name) {\n                target.append(name, value);\n            });\n        }\n    };\n    return HttpClient;\n}());\nexports.HttpClient = HttpClient;\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/httpclient.js\n// module id = 15\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of content types\n *\n */\nvar ContentTypes = (function (_super) {\n    __extends(ContentTypes, _super);\n    /**\n     * Creates a new instance of the ContentTypes class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content types collection\n     */\n    function ContentTypes(baseUrl, path) {\n        if (path === void 0) { path = \"contenttypes\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a ContentType by content type id\n     */\n    ContentTypes.prototype.getById = function (id) {\n        var ct = new ContentType(this);\n        ct.concat(\"('\" + id + \"')\");\n        return ct;\n    };\n    /**\n     * Adds an existing contenttype to a content type collection\n     *\n     * @param contentTypeId in the following format, for example: 0x010102\n     */\n    ContentTypes.prototype.addAvailableContentType = function (contentTypeId) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"contentTypeId\": contentTypeId,\n        });\n        return this.clone(ContentTypes, \"addAvailableContentType\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                contentType: _this.getById(data.id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Adds a new content type to the collection\n     *\n     * @param id The desired content type id for the new content type (also determines the parent content type)\n     * @param name The name of the content type\n     * @param description The description of the content type\n     * @param group The group in which to add the content type\n     * @param additionalSettings Any additional settings to provide when creating the content type\n     *\n     */\n    ContentTypes.prototype.add = function (id, name, description, group, additionalSettings) {\n        var _this = this;\n        if (description === void 0) { description = \"\"; }\n        if (group === void 0) { group = \"Custom Content Types\"; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Description\": description,\n            \"Group\": group,\n            \"Id\": { \"StringValue\": id },\n            \"Name\": name,\n            \"__metadata\": { \"type\": \"SP.ContentType\" },\n        }, additionalSettings));\n        return this.post({ body: postBody }).then(function (data) {\n            return { contentType: _this.getById(data.id), data: data };\n        });\n    };\n    return ContentTypes;\n}(queryable_1.QueryableCollection));\nexports.ContentTypes = ContentTypes;\n/**\n * Describes a single ContentType instance\n *\n */\nvar ContentType = (function (_super) {\n    __extends(ContentType, _super);\n    function ContentType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(ContentType.prototype, \"fieldLinks\", {\n        /**\n         * Gets the column (also known as field) references in the content type.\n        */\n        get: function () {\n            return new FieldLinks(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"fields\", {\n        /**\n         * Gets a value that specifies the collection of fields for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"fields\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"parent\", {\n        /**\n         * Gets the parent content type of the content type.\n         */\n        get: function () {\n            return new ContentType(this, \"parent\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ContentType.prototype, \"workflowAssociations\", {\n        /**\n         * Gets a value that specifies the collection of workflow associations for the content type.\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"workflowAssociations\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this content type\n     */\n    ContentType.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return ContentType;\n}(queryable_1.QueryableInstance));\nexports.ContentType = ContentType;\n/**\n * Represents a collection of field link instances\n */\nvar FieldLinks = (function (_super) {\n    __extends(FieldLinks, _super);\n    /**\n     * Creates a new instance of the ContentType class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this content type instance\n     */\n    function FieldLinks(baseUrl, path) {\n        if (path === void 0) { path = \"fieldlinks\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a FieldLink by GUID id\n     *\n     * @param id The GUID id of the field link\n     */\n    FieldLinks.prototype.getById = function (id) {\n        var fl = new FieldLink(this);\n        fl.concat(\"(guid'\" + id + \"')\");\n        return fl;\n    };\n    return FieldLinks;\n}(queryable_1.QueryableCollection));\nexports.FieldLinks = FieldLinks;\n/**\n * Represents a field link instance\n */\nvar FieldLink = (function (_super) {\n    __extends(FieldLink, _super);\n    function FieldLink() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return FieldLink;\n}(queryable_1.QueryableInstance));\nexports.FieldLink = FieldLink;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/contenttypes.js\n// module id = 16\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a set of role assignments for the current scope\n *\n */\nvar RoleAssignments = (function (_super) {\n    __extends(RoleAssignments, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function RoleAssignments(baseUrl, path) {\n        if (path === void 0) { path = \"roleassignments\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new role assignment with the specified principal and role definitions to the collection.\n     *\n     * @param principalId The ID of the user or group to assign permissions to\n     * @param roleDefId The ID of the role definition that defines the permissions to assign\n     *\n     */\n    RoleAssignments.prototype.add = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"addroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Removes the role assignment with the specified principal and role definition from the collection\n     *\n     * @param principalId The ID of the user or group in the role assignment.\n     * @param roleDefId The ID of the role definition in the role assignment\n     *\n     */\n    RoleAssignments.prototype.remove = function (principalId, roleDefId) {\n        return this.clone(RoleAssignments, \"removeroleassignment(principalid=\" + principalId + \", roledefid=\" + roleDefId + \")\", true).post();\n    };\n    /**\n     * Gets the role assignment associated with the specified principal ID from the collection.\n     *\n     * @param id The id of the role assignment\n     */\n    RoleAssignments.prototype.getById = function (id) {\n        var ra = new RoleAssignment(this);\n        ra.concat(\"(\" + id + \")\");\n        return ra;\n    };\n    return RoleAssignments;\n}(queryable_1.QueryableCollection));\nexports.RoleAssignments = RoleAssignments;\nvar RoleAssignment = (function (_super) {\n    __extends(RoleAssignment, _super);\n    function RoleAssignment() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(RoleAssignment.prototype, \"groups\", {\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RoleAssignment.prototype, \"bindings\", {\n        /**\n         * Get the role definition bindings for this role assignment\n         *\n         */\n        get: function () {\n            return new RoleDefinitionBindings(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Delete this role assignment\n     *\n     */\n    RoleAssignment.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleAssignment;\n}(queryable_1.QueryableInstance));\nexports.RoleAssignment = RoleAssignment;\nvar RoleDefinitions = (function (_super) {\n    __extends(RoleDefinitions, _super);\n    /**\n     * Creates a new instance of the RoleDefinitions class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path\n     *\n     */\n    function RoleDefinitions(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets the role definition with the specified ID from the collection.\n     *\n     * @param id The ID of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getById = function (id) {\n        return new RoleDefinition(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets the role definition with the specified name.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getByName = function (name) {\n        return new RoleDefinition(this, \"getbyname('\" + name + \"')\");\n    };\n    /**\n     * Gets the role definition with the specified type.\n     *\n     * @param name The name of the role definition.\n     *\n     */\n    RoleDefinitions.prototype.getByType = function (roleTypeKind) {\n        return new RoleDefinition(this, \"getbytype(\" + roleTypeKind + \")\");\n    };\n    /**\n     * Create a role definition\n     *\n     * @param name The new role definition's name\n     * @param description The new role definition's description\n     * @param order The order in which the role definition appears\n     * @param basePermissions The permissions mask for this role definition\n     *\n     */\n    RoleDefinitions.prototype.add = function (name, description, order, basePermissions) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            BasePermissions: util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, basePermissions),\n            Description: description,\n            Name: name,\n            Order: order,\n            __metadata: { \"type\": \"SP.RoleDefinition\" },\n        });\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                definition: _this.getById(data.Id),\n            };\n        });\n    };\n    return RoleDefinitions;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitions = RoleDefinitions;\nvar RoleDefinition = (function (_super) {\n    __extends(RoleDefinition, _super);\n    function RoleDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this web intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the web\n     */\n    /* tslint:disable no-string-literal */\n    RoleDefinition.prototype.update = function (properties) {\n        var _this = this;\n        if (typeof properties.hasOwnProperty(\"BasePermissions\") !== \"undefined\") {\n            properties[\"BasePermissions\"] = util_1.Util.extend({ __metadata: { type: \"SP.BasePermissions\" } }, properties[\"BasePermissions\"]);\n        }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.RoleDefinition\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retDef = _this;\n            if (properties.hasOwnProperty(\"Name\")) {\n                var parent_1 = _this.getParent(RoleDefinitions, _this.parentUrl, \"\");\n                retDef = parent_1.getByName(properties[\"Name\"]);\n            }\n            return {\n                data: data,\n                definition: retDef,\n            };\n        });\n    };\n    /* tslint:enable */\n    /**\n     * Delete this role definition\n     *\n     */\n    RoleDefinition.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return RoleDefinition;\n}(queryable_1.QueryableInstance));\nexports.RoleDefinition = RoleDefinition;\nvar RoleDefinitionBindings = (function (_super) {\n    __extends(RoleDefinitionBindings, _super);\n    function RoleDefinitionBindings(baseUrl, path) {\n        if (path === void 0) { path = \"roledefinitionbindings\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return RoleDefinitionBindings;\n}(queryable_1.QueryableCollection));\nexports.RoleDefinitionBindings = RoleDefinitionBindings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/roles.js\n// module id = 17\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar siteusers_1 = require(\"./siteusers\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Principal Type enum\n *\n */\nvar PrincipalType;\n(function (PrincipalType) {\n    PrincipalType[PrincipalType[\"None\"] = 0] = \"None\";\n    PrincipalType[PrincipalType[\"User\"] = 1] = \"User\";\n    PrincipalType[PrincipalType[\"DistributionList\"] = 2] = \"DistributionList\";\n    PrincipalType[PrincipalType[\"SecurityGroup\"] = 4] = \"SecurityGroup\";\n    PrincipalType[PrincipalType[\"SharePointGroup\"] = 8] = \"SharePointGroup\";\n    PrincipalType[PrincipalType[\"All\"] = 15] = \"All\";\n})(PrincipalType = exports.PrincipalType || (exports.PrincipalType = {}));\n/**\n * Describes a collection of site users\n *\n */\nvar SiteGroups = (function (_super) {\n    __extends(SiteGroups, _super);\n    /**\n     * Creates a new instance of the SiteUsers class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteGroups(baseUrl, path) {\n        if (path === void 0) { path = \"sitegroups\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Adds a new group to the site collection\n     *\n     * @param props The properties to be updated\n     */\n    SiteGroups.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                group: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Gets a group from the collection by name\n     *\n     * @param email The name of the group\n     */\n    SiteGroups.prototype.getByName = function (groupName) {\n        return new SiteGroup(this, \"getByName('\" + groupName + \"')\");\n    };\n    /**\n     * Gets a group from the collection by id\n     *\n     * @param id The id of the group\n     */\n    SiteGroups.prototype.getById = function (id) {\n        var sg = new SiteGroup(this);\n        sg.concat(\"(\" + id + \")\");\n        return sg;\n    };\n    /**\n     * Removes the group with the specified member ID from the collection.\n     *\n     * @param id The id of the group to remove\n     */\n    SiteGroups.prototype.removeById = function (id) {\n        return this.clone(SiteGroups, \"removeById('\" + id + \"')\", true).post();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    SiteGroups.prototype.removeByLoginName = function (loginName) {\n        return this.clone(SiteGroups, \"removeByLoginName('\" + loginName + \"')\", true).post();\n    };\n    return SiteGroups;\n}(queryable_1.QueryableCollection));\nexports.SiteGroups = SiteGroups;\n/**\n * Describes a single group\n *\n */\nvar SiteGroup = (function (_super) {\n    __extends(SiteGroup, _super);\n    function SiteGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteGroup.prototype, \"users\", {\n        /**\n         * Get's the users for this group\n         *\n         */\n        get: function () {\n            return new siteusers_1.SiteUsers(this, \"users\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this group instance with the supplied properties\n    *\n    * @param properties A GroupWriteableProperties object of property names and values to update for the user\n    */\n    /* tslint:disable no-string-literal */\n    SiteGroup.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.Group\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            var retGroup = _this;\n            if (properties.hasOwnProperty(\"Title\")) {\n                retGroup = _this.getParent(SiteGroup, _this.parentUrl, \"getByName('\" + properties[\"Title\"] + \"')\");\n            }\n            return {\n                data: data,\n                group: retGroup,\n            };\n        });\n    };\n    return SiteGroup;\n}(queryable_1.QueryableInstance));\nexports.SiteGroup = SiteGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/sitegroups.js\n// module id = 18\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\nvar UserCustomActions = (function (_super) {\n    __extends(UserCustomActions, _super);\n    function UserCustomActions(baseUrl, path) {\n        if (path === void 0) { path = \"usercustomactions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns the custom action with the specified identifier.\n     *\n     * @param id The GUID ID of the user custom action to get.\n     */\n    UserCustomActions.prototype.getById = function (id) {\n        var uca = new UserCustomAction(this);\n        uca.concat(\"('\" + id + \"')\");\n        return uca;\n    };\n    /**\n     * Create a custom action\n     *\n     * @param creationInfo The information which defines the new custom action\n     *\n     */\n    UserCustomActions.prototype.add = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({ __metadata: { \"type\": \"SP.UserCustomAction\" } }, properties));\n        return this.post({ body: postBody }).then(function (data) {\n            return {\n                action: _this.getById(data.Id),\n                data: data,\n            };\n        });\n    };\n    /**\n     * Deletes all custom actions in the collection.\n     *\n     */\n    UserCustomActions.prototype.clear = function () {\n        return this.clone(UserCustomActions, \"clear\", true).post();\n    };\n    return UserCustomActions;\n}(queryable_1.QueryableCollection));\nexports.UserCustomActions = UserCustomActions;\nvar UserCustomAction = (function (_super) {\n    __extends(UserCustomAction, _super);\n    function UserCustomAction() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    UserCustomAction.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.UserCustomAction\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                action: _this,\n                data: data,\n            };\n        });\n    };\n    /**\n    * Remove a custom action\n    *\n    */\n    UserCustomAction.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return UserCustomAction;\n}(queryable_1.QueryableInstance));\nexports.UserCustomAction = UserCustomAction;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/usercustomactions.js\n// module id = 19\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage = require(\"../../utils/storage\");\nvar exceptions_1 = require(\"../../utils/exceptions\");\n/**\n * A caching provider which can wrap other non-caching providers\n *\n */\nvar CachingConfigurationProvider = (function () {\n    /**\n     * Creates a new caching configuration provider\n     * @constructor\n     * @param {IConfigurationProvider} wrappedProvider Provider which will be used to fetch the configuration\n     * @param {string} cacheKey Key that will be used to store cached items to the cache\n     * @param {IPnPClientStore} cacheStore OPTIONAL storage, which will be used to store cached settings.\n     */\n    function CachingConfigurationProvider(wrappedProvider, cacheKey, cacheStore) {\n        this.wrappedProvider = wrappedProvider;\n        this.store = (cacheStore) ? cacheStore : this.selectPnPCache();\n        this.cacheKey = \"_configcache_\" + cacheKey;\n    }\n    /**\n     * Gets the wrapped configuration providers\n     *\n     * @return {IConfigurationProvider} Wrapped configuration provider\n     */\n    CachingConfigurationProvider.prototype.getWrappedProvider = function () {\n        return this.wrappedProvider;\n    };\n    /**\n     * Loads the configuration values either from the cache or from the wrapped provider\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    CachingConfigurationProvider.prototype.getConfiguration = function () {\n        var _this = this;\n        // Cache not available, pass control to  the wrapped provider\n        if ((!this.store) || (!this.store.enabled)) {\n            return this.wrappedProvider.getConfiguration();\n        }\n        // Value is found in cache, return it directly\n        var cachedConfig = this.store.get(this.cacheKey);\n        if (cachedConfig) {\n            return new Promise(function (resolve) {\n                resolve(cachedConfig);\n            });\n        }\n        // Get and cache value from the wrapped provider\n        var providerPromise = this.wrappedProvider.getConfiguration();\n        providerPromise.then(function (providedConfig) {\n            _this.store.put(_this.cacheKey, providedConfig);\n        });\n        return providerPromise;\n    };\n    CachingConfigurationProvider.prototype.selectPnPCache = function () {\n        var pnpCache = new storage.PnPClientStorage();\n        if ((pnpCache.local) && (pnpCache.local.enabled)) {\n            return pnpCache.local;\n        }\n        if ((pnpCache.session) && (pnpCache.session.enabled)) {\n            return pnpCache.session;\n        }\n        throw new exceptions_1.NoCacheAvailableException();\n    };\n    return CachingConfigurationProvider;\n}());\nexports.default = CachingConfigurationProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/cachingConfigurationProvider.js\n// module id = 20\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Makes requests using the fetch API\n */\nvar FetchClient = (function () {\n    function FetchClient() {\n    }\n    FetchClient.prototype.fetch = function (url, options) {\n        return global.fetch(url, options);\n    };\n    return FetchClient;\n}());\nexports.FetchClient = FetchClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/fetchclient.js\n// module id = 21\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar storage_1 = require(\"../utils/storage\");\nvar util_1 = require(\"../utils/util\");\nvar pnplibconfig_1 = require(\"../configuration/pnplibconfig\");\nvar CachingOptions = (function () {\n    function CachingOptions(key) {\n        this.key = key;\n        this.expiration = util_1.Util.dateAdd(new Date(), \"second\", pnplibconfig_1.RuntimeConfig.defaultCachingTimeoutSeconds);\n        this.storeName = pnplibconfig_1.RuntimeConfig.defaultCachingStore;\n    }\n    Object.defineProperty(CachingOptions.prototype, \"store\", {\n        get: function () {\n            if (this.storeName === \"local\") {\n                return CachingOptions.storage.local;\n            }\n            else {\n                return CachingOptions.storage.session;\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return CachingOptions;\n}());\nCachingOptions.storage = new storage_1.PnPClientStorage();\nexports.CachingOptions = CachingOptions;\nvar CachingParserWrapper = (function () {\n    function CachingParserWrapper(_parser, _cacheOptions) {\n        this._parser = _parser;\n        this._cacheOptions = _cacheOptions;\n    }\n    CachingParserWrapper.prototype.parse = function (response) {\n        var _this = this;\n        // add this to the cache based on the options\n        return this._parser.parse(response).then(function (data) {\n            if (_this._cacheOptions.store !== null) {\n                _this._cacheOptions.store.put(_this._cacheOptions.key, data, _this._cacheOptions.expiration);\n            }\n            return data;\n        });\n    };\n    return CachingParserWrapper;\n}());\nexports.CachingParserWrapper = CachingParserWrapper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/caching.js\n// module id = 22\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of List objects\n *\n */\nvar Features = (function (_super) {\n    __extends(Features, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Features(baseUrl, path) {\n        if (path === void 0) { path = \"features\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param id The Id of the feature (GUID)\n     */\n    Features.prototype.getById = function (id) {\n        var feature = new Feature(this);\n        feature.concat(\"('\" + id + \"')\");\n        return feature;\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature activation will be forced\n     */\n    Features.prototype.add = function (id, force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"add\", true).post({\n            body: JSON.stringify({\n                featdefScope: 0,\n                featureId: id,\n                force: force,\n            }),\n        }).then(function (data) {\n            return {\n                data: data,\n                feature: _this.getById(id),\n            };\n        });\n    };\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param id The Id of the feature (GUID)\n     * @param force If true the feature deactivation will be forced\n     */\n    Features.prototype.remove = function (id, force) {\n        if (force === void 0) { force = false; }\n        return this.clone(Features, \"remove\", true).post({\n            body: JSON.stringify({\n                featureId: id,\n                force: force,\n            }),\n        });\n    };\n    return Features;\n}(queryable_1.QueryableCollection));\nexports.Features = Features;\nvar Feature = (function (_super) {\n    __extends(Feature, _super);\n    function Feature() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Removes (deactivates) a feature from the collection\n     *\n     * @param force If true the feature deactivation will be forced\n     */\n    Feature.prototype.deactivate = function (force) {\n        var _this = this;\n        if (force === void 0) { force = false; }\n        var removeDependency = this.addBatchDependency();\n        var idGet = new Feature(this).select(\"DefinitionId\");\n        return idGet.getAs().then(function (feature) {\n            var promise = _this.getParent(Features, _this.parentUrl, \"\", _this.batch).remove(feature.DefinitionId, force);\n            removeDependency();\n            return promise;\n        });\n    };\n    return Feature;\n}(queryable_1.QueryableInstance));\nexports.Feature = Feature;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/features.js\n// module id = 23\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\nvar types_1 = require(\"./types\");\n/**\n * Describes a collection of Field objects\n *\n */\nvar Fields = (function (_super) {\n    __extends(Fields, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Fields(baseUrl, path) {\n        if (path === void 0) { path = \"fields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a field from the collection by title\n     *\n     * @param title The case-sensitive title of the field\n     */\n    Fields.prototype.getByTitle = function (title) {\n        return new Field(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Gets a field from the collection by using internal name or title\n     *\n     * @param name The case-sensitive internal name or title of the field\n     */\n    Fields.prototype.getByInternalNameOrTitle = function (name) {\n        return new Field(this, \"getByInternalNameOrTitle('\" + name + \"')\");\n    };\n    /**\n     * Gets a list from the collection by guid id\n     *\n     * @param title The Id of the list\n     */\n    Fields.prototype.getById = function (id) {\n        var f = new Field(this);\n        f.concat(\"('\" + id + \"')\");\n        return f;\n    };\n    /**\n     * Creates a field based on the specified schema\n     */\n    Fields.prototype.createFieldAsXml = function (xml) {\n        var _this = this;\n        var info;\n        if (typeof xml === \"string\") {\n            info = { SchemaXml: xml };\n        }\n        else {\n            info = xml;\n        }\n        var postBody = JSON.stringify({\n            \"parameters\": util_1.Util.extend({\n                \"__metadata\": {\n                    \"type\": \"SP.XmlSchemaFieldCreationInformation\",\n                },\n            }, info),\n        });\n        return this.clone(Fields, \"createfieldasxml\", true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new list to the collection\n     *\n     * @param title The new field's title\n     * @param fieldType The new field's type (ex: SP.FieldText)\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.add = function (title, fieldType, properties) {\n        var _this = this;\n        if (properties === void 0) { properties = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"Title\": title,\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.clone(Fields, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                field: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Adds a new SP.FieldText to the collection\n     *\n     * @param title The field title\n     * @param maxLength The maximum number of characters allowed in the value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addText = function (title, maxLength, properties) {\n        if (maxLength === void 0) { maxLength = 255; }\n        var props = {\n            FieldTypeKind: 2,\n            MaxLength: maxLength,\n        };\n        return this.add(title, \"SP.FieldText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCalculated to the collection\n     *\n     * @param title The field title.\n     * @param formula The formula for the field.\n     * @param dateFormat The date and time format that is displayed in the field.\n     * @param outputType Specifies the output format for the field. Represents a FieldType value.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCalculated = function (title, formula, dateFormat, outputType, properties) {\n        if (outputType === void 0) { outputType = types_1.FieldTypes.Text; }\n        var props = {\n            DateFormat: dateFormat,\n            FieldTypeKind: 17,\n            Formula: formula,\n            OutputType: outputType,\n        };\n        return this.add(title, \"SP.FieldCalculated\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldDateTime to the collection\n     *\n     * @param title The field title\n     * @param displayFormat The format of the date and time that is displayed in the field.\n     * @param calendarType Specifies the calendar type of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addDateTime = function (title, displayFormat, calendarType, friendlyDisplayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.DateTimeFieldFormatType.DateOnly; }\n        if (calendarType === void 0) { calendarType = types_1.CalendarType.Gregorian; }\n        if (friendlyDisplayFormat === void 0) { friendlyDisplayFormat = 0; }\n        var props = {\n            DateTimeCalendarType: calendarType,\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 4,\n            FriendlyDisplayFormat: friendlyDisplayFormat,\n        };\n        return this.add(title, \"SP.FieldDateTime\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldNumber to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addNumber = function (title, minValue, maxValue, properties) {\n        var props = { FieldTypeKind: 9 };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldNumber\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldCurrency to the collection\n     *\n     * @param title The field title\n     * @param minValue The field's minimum value\n     * @param maxValue The field's maximum value\n     * @param currencyLocalId Specifies the language code identifier (LCID) used to format the value of the field\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     */\n    Fields.prototype.addCurrency = function (title, minValue, maxValue, currencyLocalId, properties) {\n        if (currencyLocalId === void 0) { currencyLocalId = 1033; }\n        var props = {\n            CurrencyLocaleId: currencyLocalId,\n            FieldTypeKind: 10,\n        };\n        if (typeof minValue !== \"undefined\") {\n            props = util_1.Util.extend({ MinimumValue: minValue }, props);\n        }\n        if (typeof maxValue !== \"undefined\") {\n            props = util_1.Util.extend({ MaximumValue: maxValue }, props);\n        }\n        return this.add(title, \"SP.FieldCurrency\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldMultiLineText to the collection\n     *\n     * @param title The field title\n     * @param numberOfLines Specifies the number of lines of text to display for the field.\n     * @param richText Specifies whether the field supports rich formatting.\n     * @param restrictedMode Specifies whether the field supports a subset of rich formatting.\n     * @param appendOnly Specifies whether all changes to the value of the field are displayed in list forms.\n     * @param allowHyperlink Specifies whether a hyperlink is allowed as a value of the field.\n     * @param properties Differ by type of field being created (see: https://msdn.microsoft.com/en-us/library/office/dn600182.aspx)\n     *\n     */\n    Fields.prototype.addMultilineText = function (title, numberOfLines, richText, restrictedMode, appendOnly, allowHyperlink, properties) {\n        if (numberOfLines === void 0) { numberOfLines = 6; }\n        if (richText === void 0) { richText = true; }\n        if (restrictedMode === void 0) { restrictedMode = false; }\n        if (appendOnly === void 0) { appendOnly = false; }\n        if (allowHyperlink === void 0) { allowHyperlink = true; }\n        var props = {\n            AllowHyperlink: allowHyperlink,\n            AppendOnly: appendOnly,\n            FieldTypeKind: 3,\n            NumberOfLines: numberOfLines,\n            RestrictedMode: restrictedMode,\n            RichText: richText,\n        };\n        return this.add(title, \"SP.FieldMultiLineText\", util_1.Util.extend(props, properties));\n    };\n    /**\n     * Adds a new SP.FieldUrl to the collection\n     *\n     * @param title The field title\n     */\n    Fields.prototype.addUrl = function (title, displayFormat, properties) {\n        if (displayFormat === void 0) { displayFormat = types_1.UrlFieldFormatType.Hyperlink; }\n        var props = {\n            DisplayFormat: displayFormat,\n            FieldTypeKind: 11,\n        };\n        return this.add(title, \"SP.FieldUrl\", util_1.Util.extend(props, properties));\n    };\n    return Fields;\n}(queryable_1.QueryableCollection));\nexports.Fields = Fields;\n/**\n * Describes a single of Field instance\n *\n */\nvar Field = (function (_super) {\n    __extends(Field, _super);\n    function Field() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Updates this field intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the list\n     * @param fieldType The type value, required to update child field type properties\n     */\n    Field.prototype.update = function (properties, fieldType) {\n        var _this = this;\n        if (fieldType === void 0) { fieldType = \"SP.Field\"; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": fieldType },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                field: _this,\n            };\n        });\n    };\n    /**\n     * Delete this fields\n     *\n     */\n    Field.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Sets the value of the ShowInDisplayForm property for this field.\n     */\n    Field.prototype.setShowInDisplayForm = function (show) {\n        return this.clone(Field, \"setshowindisplayform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInEditForm property for this field.\n     */\n    Field.prototype.setShowInEditForm = function (show) {\n        return this.clone(Field, \"setshowineditform(\" + show + \")\", true).post();\n    };\n    /**\n     * Sets the value of the ShowInNewForm property for this field.\n     */\n    Field.prototype.setShowInNewForm = function (show) {\n        return this.clone(Field, \"setshowinnewform(\" + show + \")\", true).post();\n    };\n    return Field;\n}(queryable_1.QueryableInstance));\nexports.Field = Field;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/fields.js\n// module id = 24\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar queryable_1 = require(\"./queryable\");\n/**\n * Represents a collection of navigation nodes\n *\n */\nvar NavigationNodes = (function (_super) {\n    __extends(NavigationNodes, _super);\n    function NavigationNodes() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a navigation node by id\n     *\n     * @param id The id of the node\n     */\n    NavigationNodes.prototype.getById = function (id) {\n        var node = new NavigationNode(this);\n        node.concat(\"(\" + id + \")\");\n        return node;\n    };\n    /**\n     * Adds a new node to the collection\n     *\n     * @param title Display name of the node\n     * @param url The url of the node\n     * @param visible If true the node is visible, otherwise it is hidden (default: true)\n     */\n    NavigationNodes.prototype.add = function (title, url, visible) {\n        var _this = this;\n        if (visible === void 0) { visible = true; }\n        var postBody = JSON.stringify({\n            IsVisible: visible,\n            Title: title,\n            Url: url,\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        });\n        return this.clone(NavigationNodes, null, true).post({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                node: _this.getById(data.Id),\n            };\n        });\n    };\n    /**\n     * Moves a node to be after another node in the navigation\n     *\n     * @param nodeId Id of the node to move\n     * @param previousNodeId Id of the node after which we move the node specified by nodeId\n     */\n    NavigationNodes.prototype.moveAfter = function (nodeId, previousNodeId) {\n        var postBody = JSON.stringify({\n            nodeId: nodeId,\n            previousNodeId: previousNodeId,\n        });\n        return this.clone(NavigationNodes, \"MoveAfter\", true).post({ body: postBody });\n    };\n    return NavigationNodes;\n}(queryable_1.QueryableCollection));\nexports.NavigationNodes = NavigationNodes;\nvar NavigationNode = (function (_super) {\n    __extends(NavigationNode, _super);\n    function NavigationNode() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(NavigationNode.prototype, \"children\", {\n        /**\n         * Represents the child nodes of this node\n         */\n        get: function () {\n            return new NavigationNodes(this, \"Children\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this node based on the supplied properties\n     *\n     * @param properties The hash of key/value pairs to update\n     */\n    NavigationNode.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.NavigationNode\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                node: _this,\n            };\n        });\n    };\n    /**\n     * Deletes this node and any child nodes\n     */\n    NavigationNode.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return NavigationNode;\n}(queryable_1.QueryableInstance));\nexports.NavigationNode = NavigationNode;\n/**\n * Exposes the navigation components\n *\n */\nvar Navigation = (function (_super) {\n    __extends(Navigation, _super);\n    /**\n     * Creates a new instance of the Lists class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Navigation(baseUrl, path) {\n        if (path === void 0) { path = \"navigation\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Navigation.prototype, \"quicklaunch\", {\n        /**\n         * Gets the quicklaunch navigation for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"quicklaunch\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Navigation.prototype, \"topNavigationBar\", {\n        /**\n         * Gets the top bar navigation navigation for the current context\n         *\n         */\n        get: function () {\n            return new NavigationNodes(this, \"topnavigationbar\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return Navigation;\n}(queryable_1.Queryable));\nexports.Navigation = Navigation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/navigation.js\n// module id = 25\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar webs_1 = require(\"./webs\");\nvar roles_1 = require(\"./roles\");\nvar types_1 = require(\"./types\");\nvar queryable_1 = require(\"./queryable\");\nvar QueryableSecurable = (function (_super) {\n    __extends(QueryableSecurable, _super);\n    function QueryableSecurable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(QueryableSecurable.prototype, \"roleAssignments\", {\n        /**\n         * Gets the set of role assignments for this item\n         *\n         */\n        get: function () {\n            return new roles_1.RoleAssignments(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryableSecurable.prototype, \"firstUniqueAncestorSecurableObject\", {\n        /**\n         * Gets the closest securable up the security hierarchy whose permissions are applied to this list item\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableInstance(this, \"FirstUniqueAncestorSecurableObject\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the effective permissions for the user supplied\n     *\n     * @param loginName The claims username for the user (ex: i:0#.f|membership|user@domain.com)\n     */\n    QueryableSecurable.prototype.getUserEffectivePermissions = function (loginName) {\n        var q = this.clone(queryable_1.Queryable, \"getUserEffectivePermissions(@user)\", true);\n        q.query.add(\"@user\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.getAs();\n    };\n    /**\n     * Gets the effective permissions for the current user\n     */\n    QueryableSecurable.prototype.getCurrentUserEffectivePermissions = function () {\n        var _this = this;\n        var w = webs_1.Web.fromUrl(this.toUrl());\n        return w.currentUser.select(\"LoginName\").getAs().then(function (user) {\n            return _this.getUserEffectivePermissions(user.LoginName);\n        });\n    };\n    /**\n     * Breaks the security inheritance at this level optinally copying permissions and clearing subscopes\n     *\n     * @param copyRoleAssignments If true the permissions are copied from the current parent scope\n     * @param clearSubscopes Optional. true to make all child securable objects inherit role assignments from the current object\n     */\n    QueryableSecurable.prototype.breakRoleInheritance = function (copyRoleAssignments, clearSubscopes) {\n        if (copyRoleAssignments === void 0) { copyRoleAssignments = false; }\n        if (clearSubscopes === void 0) { clearSubscopes = false; }\n        return this.clone(QueryableSecurable, \"breakroleinheritance(copyroleassignments=\" + copyRoleAssignments + \", clearsubscopes=\" + clearSubscopes + \")\", true).post();\n    };\n    /**\n     * Removes the local role assignments so that it re-inherit role assignments from the parent object.\n     *\n     */\n    QueryableSecurable.prototype.resetRoleInheritance = function () {\n        return this.clone(QueryableSecurable, \"resetroleinheritance\", true).post();\n    };\n    /**\n     * Determines if a given user has the appropriate permissions\n     *\n     * @param loginName The user to check\n     * @param permission The permission being checked\n     */\n    QueryableSecurable.prototype.userHasPermissions = function (loginName, permission) {\n        var _this = this;\n        return this.getUserEffectivePermissions(loginName).then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Determines if the current user has the requested permissions\n     *\n     * @param permission The permission we wish to check\n     */\n    QueryableSecurable.prototype.currentUserHasPermissions = function (permission) {\n        var _this = this;\n        return this.getCurrentUserEffectivePermissions().then(function (perms) {\n            return _this.hasPermissions(perms, permission);\n        });\n    };\n    /**\n     * Taken from sp.js, checks the supplied permissions against the mask\n     *\n     * @param value The security principal's permissions on the given object\n     * @param perm The permission checked against the value\n     */\n    /* tslint:disable:no-bitwise */\n    QueryableSecurable.prototype.hasPermissions = function (value, perm) {\n        if (!perm) {\n            return true;\n        }\n        if (perm === types_1.PermissionKind.FullMask) {\n            return (value.High & 32767) === 32767 && value.Low === 65535;\n        }\n        perm = perm - 1;\n        var num = 1;\n        if (perm >= 0 && perm < 32) {\n            num = num << perm;\n            return 0 !== (value.Low & num);\n        }\n        else if (perm >= 32 && perm < 64) {\n            num = num << perm - 32;\n            return 0 !== (value.High & num);\n        }\n        return false;\n    };\n    return QueryableSecurable;\n}(queryable_1.QueryableInstance));\nexports.QueryableSecurable = QueryableSecurable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/queryablesecurable.js\n// module id = 26\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Allows for the fluent construction of search queries\n */\nvar SearchQueryBuilder = (function () {\n    function SearchQueryBuilder(queryText, _query) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (_query === void 0) { _query = {}; }\n        this._query = _query;\n        if (typeof queryText === \"string\" && queryText.length > 0) {\n            this.extendQuery({ Querytext: queryText });\n        }\n    }\n    SearchQueryBuilder.create = function (queryText, queryTemplate) {\n        if (queryText === void 0) { queryText = \"\"; }\n        if (queryTemplate === void 0) { queryTemplate = {}; }\n        return new SearchQueryBuilder(queryText, queryTemplate);\n    };\n    SearchQueryBuilder.prototype.text = function (queryText) {\n        return this.extendQuery({ Querytext: queryText });\n    };\n    SearchQueryBuilder.prototype.template = function (template) {\n        return this.extendQuery({ QueryTemplate: template });\n    };\n    SearchQueryBuilder.prototype.sourceId = function (id) {\n        return this.extendQuery({ SourceId: id });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableInterleaving\", {\n        get: function () {\n            return this.extendQuery({ EnableInterleaving: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableStemming\", {\n        get: function () {\n            return this.extendQuery({ EnableStemming: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"trimDuplicates\", {\n        get: function () {\n            return this.extendQuery({ TrimDuplicates: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableNicknames\", {\n        get: function () {\n            return this.extendQuery({ EnableNicknames: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableFql\", {\n        get: function () {\n            return this.extendQuery({ EnableFql: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enablePhonetic\", {\n        get: function () {\n            return this.extendQuery({ EnablePhonetic: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"bypassResultTypes\", {\n        get: function () {\n            return this.extendQuery({ BypassResultTypes: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processBestBets\", {\n        get: function () {\n            return this.extendQuery({ ProcessBestBets: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableQueryRules\", {\n        get: function () {\n            return this.extendQuery({ EnableQueryRules: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableSorting\", {\n        get: function () {\n            return this.extendQuery({ EnableSorting: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchQueryBuilder.prototype, \"generateBlockRankLog\", {\n        get: function () {\n            return this.extendQuery({ GenerateBlockRankLog: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.rankingModelId = function (id) {\n        return this.extendQuery({ RankingModelId: id });\n    };\n    SearchQueryBuilder.prototype.startRow = function (id) {\n        return this.extendQuery({ StartRow: id });\n    };\n    SearchQueryBuilder.prototype.rowLimit = function (id) {\n        return this.extendQuery({ RowLimit: id });\n    };\n    SearchQueryBuilder.prototype.rowsPerPage = function (id) {\n        return this.extendQuery({ RowsPerPage: id });\n    };\n    SearchQueryBuilder.prototype.selectProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SelectProperties: properties });\n    };\n    SearchQueryBuilder.prototype.culture = function (culture) {\n        return this.extendQuery({ Culture: culture });\n    };\n    SearchQueryBuilder.prototype.refinementFilters = function () {\n        var filters = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            filters[_i] = arguments[_i];\n        }\n        return this.extendQuery({ RefinementFilters: filters });\n    };\n    SearchQueryBuilder.prototype.refiners = function (refiners) {\n        return this.extendQuery({ Refiners: refiners });\n    };\n    SearchQueryBuilder.prototype.hiddenConstraints = function (constraints) {\n        return this.extendQuery({ HiddenConstraints: constraints });\n    };\n    SearchQueryBuilder.prototype.sortList = function () {\n        var sorts = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            sorts[_i] = arguments[_i];\n        }\n        return this.extendQuery({ SortList: sorts });\n    };\n    SearchQueryBuilder.prototype.timeout = function (milliseconds) {\n        return this.extendQuery({ Timeout: milliseconds });\n    };\n    SearchQueryBuilder.prototype.hithighlightedProperties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ HithighlightedProperties: properties });\n    };\n    SearchQueryBuilder.prototype.clientType = function (clientType) {\n        return this.extendQuery({ ClientType: clientType });\n    };\n    SearchQueryBuilder.prototype.personalizationData = function (data) {\n        return this.extendQuery({ PersonalizationData: data });\n    };\n    SearchQueryBuilder.prototype.resultsURL = function (url) {\n        return this.extendQuery({ ResultsURL: url });\n    };\n    SearchQueryBuilder.prototype.queryTag = function () {\n        var tags = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            tags[_i] = arguments[_i];\n        }\n        return this.extendQuery({ QueryTag: tags });\n    };\n    SearchQueryBuilder.prototype.properties = function () {\n        var properties = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            properties[_i] = arguments[_i];\n        }\n        return this.extendQuery({ Properties: properties });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"processPersonalFavorites\", {\n        get: function () {\n            return this.extendQuery({ ProcessPersonalFavorites: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.queryTemplatePropertiesUrl = function (url) {\n        return this.extendQuery({ QueryTemplatePropertiesUrl: url });\n    };\n    SearchQueryBuilder.prototype.reorderingRules = function () {\n        var rules = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            rules[_i] = arguments[_i];\n        }\n        return this.extendQuery({ ReorderingRules: rules });\n    };\n    SearchQueryBuilder.prototype.hitHighlightedMultivaluePropertyLimit = function (limit) {\n        return this.extendQuery({ HitHighlightedMultivaluePropertyLimit: limit });\n    };\n    Object.defineProperty(SearchQueryBuilder.prototype, \"enableOrderingHitHighlightedProperty\", {\n        get: function () {\n            return this.extendQuery({ EnableOrderingHitHighlightedProperty: true });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SearchQueryBuilder.prototype.collapseSpecification = function (spec) {\n        return this.extendQuery({ CollapseSpecification: spec });\n    };\n    SearchQueryBuilder.prototype.uiLanguage = function (lang) {\n        return this.extendQuery({ UIlanguage: lang });\n    };\n    SearchQueryBuilder.prototype.desiredSnippetLength = function (len) {\n        return this.extendQuery({ DesiredSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.maxSnippetLength = function (len) {\n        return this.extendQuery({ MaxSnippetLength: len });\n    };\n    SearchQueryBuilder.prototype.summaryLength = function (len) {\n        return this.extendQuery({ SummaryLength: len });\n    };\n    SearchQueryBuilder.prototype.toSearchQuery = function () {\n        return this._query;\n    };\n    SearchQueryBuilder.prototype.extendQuery = function (part) {\n        this._query = util_1.Util.extend(this._query, part);\n        return this;\n    };\n    return SearchQueryBuilder;\n}());\nexports.SearchQueryBuilder = SearchQueryBuilder;\n/**\n * Describes the search API\n *\n */\nvar Search = (function (_super) {\n    __extends(Search, _super);\n    /**\n     * Creates a new instance of the Search class\n     *\n     * @param baseUrl The url for the search context\n     * @param query The SearchQuery object to execute\n     */\n    function Search(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/postquery\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * .......\n     * @returns Promise\n     */\n    Search.prototype.execute = function (query) {\n        var _this = this;\n        var formattedBody;\n        formattedBody = query;\n        if (formattedBody.SelectProperties) {\n            formattedBody.SelectProperties = { results: query.SelectProperties };\n        }\n        if (formattedBody.RefinementFilters) {\n            formattedBody.RefinementFilters = { results: query.RefinementFilters };\n        }\n        if (formattedBody.SortList) {\n            formattedBody.SortList = { results: query.SortList };\n        }\n        if (formattedBody.HithighlightedProperties) {\n            formattedBody.HithighlightedProperties = { results: query.HithighlightedProperties };\n        }\n        if (formattedBody.ReorderingRules) {\n            formattedBody.ReorderingRules = { results: query.ReorderingRules };\n        }\n        if (formattedBody.Properties) {\n            formattedBody.Properties = { results: query.Properties };\n        }\n        var postBody = JSON.stringify({\n            request: util_1.Util.extend({\n                \"__metadata\": { \"type\": \"Microsoft.Office.Server.Search.REST.SearchRequest\" },\n            }, formattedBody),\n        });\n        return this.post({ body: postBody }).then(function (data) { return new SearchResults(data, _this.toUrl(), query); });\n    };\n    return Search;\n}(queryable_1.QueryableInstance));\nexports.Search = Search;\n/**\n * Describes the SearchResults class, which returns the formatted and raw version of the query response\n */\nvar SearchResults = (function () {\n    /**\n     * Creates a new instance of the SearchResult class\n     *\n     */\n    function SearchResults(rawResponse, _url, _query, _raw, _primary) {\n        if (_raw === void 0) { _raw = null; }\n        if (_primary === void 0) { _primary = null; }\n        this._url = _url;\n        this._query = _query;\n        this._raw = _raw;\n        this._primary = _primary;\n        this._raw = rawResponse.postquery ? rawResponse.postquery : rawResponse;\n    }\n    Object.defineProperty(SearchResults.prototype, \"ElapsedTime\", {\n        get: function () {\n            return this.RawSearchResults.ElapsedTime;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RowCount\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.RowCount;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRows\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRows;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"TotalRowsIncludingDuplicates\", {\n        get: function () {\n            return this.RawSearchResults.PrimaryQueryResult.RelevantResults.TotalRowsIncludingDuplicates;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"RawSearchResults\", {\n        get: function () {\n            return this._raw;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SearchResults.prototype, \"PrimarySearchResults\", {\n        get: function () {\n            if (this._primary === null) {\n                this._primary = this.formatSearchResults(this._raw.PrimaryQueryResult.RelevantResults.Table.Rows);\n            }\n            return this._primary;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets a page of results\n     *\n     * @param pageNumber Index of the page to return. Used to determine StartRow\n     * @param pageSize Optional, items per page (default = 10)\n     */\n    SearchResults.prototype.getPage = function (pageNumber, pageSize) {\n        // if we got all the available rows we don't have another page\n        if (this.TotalRows < this.RowCount) {\n            return Promise.resolve(null);\n        }\n        // if pageSize is supplied, then we use that regardless of any previous values\n        // otherwise get the previous RowLimit or default to 10\n        var rows = typeof pageSize !== \"undefined\" ? pageSize : this._query.hasOwnProperty(\"RowLimit\") ? this._query.RowLimit : 10;\n        var query = util_1.Util.extend(this._query, {\n            RowLimit: rows,\n            StartRow: rows * (pageNumber - 1) + 1,\n        });\n        // we have reached the end\n        if (query.StartRow > this.TotalRows) {\n            return Promise.resolve(null);\n        }\n        var search = new Search(this._url, null);\n        return search.execute(query);\n    };\n    /**\n     * Formats a search results array\n     *\n     * @param rawResults The array to process\n     */\n    SearchResults.prototype.formatSearchResults = function (rawResults) {\n        var results = new Array();\n        var tempResults = rawResults.results ? rawResults.results : rawResults;\n        for (var _i = 0, tempResults_1 = tempResults; _i < tempResults_1.length; _i++) {\n            var tempResult = tempResults_1[_i];\n            var cells = tempResult.Cells.results ? tempResult.Cells.results : tempResult.Cells;\n            results.push(cells.reduce(function (res, cell) {\n                Object.defineProperty(res, cell.Key, {\n                    configurable: false,\n                    enumerable: false,\n                    value: cell.Value,\n                    writable: false,\n                });\n                return res;\n            }, {}));\n        }\n        return results;\n    };\n    return SearchResults;\n}());\nexports.SearchResults = SearchResults;\n/**\n * defines the SortDirection enum\n */\nvar SortDirection;\n(function (SortDirection) {\n    SortDirection[SortDirection[\"Ascending\"] = 0] = \"Ascending\";\n    SortDirection[SortDirection[\"Descending\"] = 1] = \"Descending\";\n    SortDirection[SortDirection[\"FQLFormula\"] = 2] = \"FQLFormula\";\n})(SortDirection = exports.SortDirection || (exports.SortDirection = {}));\n/**\n * defines the ReorderingRuleMatchType  enum\n */\nvar ReorderingRuleMatchType;\n(function (ReorderingRuleMatchType) {\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultContainsKeyword\"] = 0] = \"ResultContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleContainsKeyword\"] = 1] = \"TitleContainsKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"TitleMatchesKeyword\"] = 2] = \"TitleMatchesKeyword\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlStartsWith\"] = 3] = \"UrlStartsWith\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"UrlExactlyMatches\"] = 4] = \"UrlExactlyMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ContentTypeIs\"] = 5] = \"ContentTypeIs\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"FileExtensionMatches\"] = 6] = \"FileExtensionMatches\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ResultHasTag\"] = 7] = \"ResultHasTag\";\n    ReorderingRuleMatchType[ReorderingRuleMatchType[\"ManualCondition\"] = 8] = \"ManualCondition\";\n})(ReorderingRuleMatchType = exports.ReorderingRuleMatchType || (exports.ReorderingRuleMatchType = {}));\n/**\n * Specifies the type value for the property\n */\nvar QueryPropertyValueType;\n(function (QueryPropertyValueType) {\n    QueryPropertyValueType[QueryPropertyValueType[\"None\"] = 0] = \"None\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringType\"] = 1] = \"StringType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"Int32TYpe\"] = 2] = \"Int32TYpe\";\n    QueryPropertyValueType[QueryPropertyValueType[\"BooleanType\"] = 3] = \"BooleanType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"StringArrayType\"] = 4] = \"StringArrayType\";\n    QueryPropertyValueType[QueryPropertyValueType[\"UnSupportedType\"] = 5] = \"UnSupportedType\";\n})(QueryPropertyValueType = exports.QueryPropertyValueType || (exports.QueryPropertyValueType = {}));\nvar SearchBuiltInSourceId = (function () {\n    function SearchBuiltInSourceId() {\n    }\n    return SearchBuiltInSourceId;\n}());\nSearchBuiltInSourceId.Documents = \"e7ec8cee-ded8-43c9-beb5-436b54b31e84\";\nSearchBuiltInSourceId.ItemsMatchingContentType = \"5dc9f503-801e-4ced-8a2c-5d1237132419\";\nSearchBuiltInSourceId.ItemsMatchingTag = \"e1327b9c-2b8c-4b23-99c9-3730cb29c3f7\";\nSearchBuiltInSourceId.ItemsRelatedToCurrentUser = \"48fec42e-4a92-48ce-8363-c2703a40e67d\";\nSearchBuiltInSourceId.ItemsWithSameKeywordAsThisItem = \"5c069288-1d17-454a-8ac6-9c642a065f48\";\nSearchBuiltInSourceId.LocalPeopleResults = \"b09a7990-05ea-4af9-81ef-edfab16c4e31\";\nSearchBuiltInSourceId.LocalReportsAndDataResults = \"203fba36-2763-4060-9931-911ac8c0583b\";\nSearchBuiltInSourceId.LocalSharePointResults = \"8413cd39-2156-4e00-b54d-11efd9abdb89\";\nSearchBuiltInSourceId.LocalVideoResults = \"78b793ce-7956-4669-aa3b-451fc5defebf\";\nSearchBuiltInSourceId.Pages = \"5e34578e-4d08-4edc-8bf3-002acf3cdbcc\";\nSearchBuiltInSourceId.Pictures = \"38403c8c-3975-41a8-826e-717f2d41568a\";\nSearchBuiltInSourceId.Popular = \"97c71db1-58ce-4891-8b64-585bc2326c12\";\nSearchBuiltInSourceId.RecentlyChangedItems = \"ba63bbae-fa9c-42c0-b027-9a878f16557c\";\nSearchBuiltInSourceId.RecommendedItems = \"ec675252-14fa-4fbe-84dd-8d098ed74181\";\nSearchBuiltInSourceId.Wiki = \"9479bf85-e257-4318-b5a8-81a180f5faa1\";\nexports.SearchBuiltInSourceId = SearchBuiltInSourceId;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/search.js\n// module id = 27\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar SearchSuggest = (function (_super) {\n    __extends(SearchSuggest, _super);\n    function SearchSuggest(baseUrl, path) {\n        if (path === void 0) { path = \"_api/search/suggest\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    SearchSuggest.prototype.execute = function (query) {\n        this.mapQueryToQueryString(query);\n        return this.get().then(function (response) { return new SearchSuggestResult(response); });\n    };\n    SearchSuggest.prototype.mapQueryToQueryString = function (query) {\n        this.query.add(\"querytext\", \"'\" + query.querytext + \"'\");\n        if (query.hasOwnProperty(\"count\")) {\n            this.query.add(\"inumberofquerysuggestions\", query.count.toString());\n        }\n        if (query.hasOwnProperty(\"personalCount\")) {\n            this.query.add(\"inumberofresultsuggestions\", query.personalCount.toString());\n        }\n        if (query.hasOwnProperty(\"preQuery\")) {\n            this.query.add(\"fprequerysuggestions\", query.preQuery.toString());\n        }\n        if (query.hasOwnProperty(\"hitHighlighting\")) {\n            this.query.add(\"fhithighlighting\", query.hitHighlighting.toString());\n        }\n        if (query.hasOwnProperty(\"capitalize\")) {\n            this.query.add(\"fcapitalizefirstletters\", query.capitalize.toString());\n        }\n        if (query.hasOwnProperty(\"culture\")) {\n            this.query.add(\"culture\", query.culture.toString());\n        }\n        if (query.hasOwnProperty(\"stemming\")) {\n            this.query.add(\"enablestemming\", query.stemming.toString());\n        }\n        if (query.hasOwnProperty(\"includePeople\")) {\n            this.query.add(\"showpeoplenamesuggestions\", query.includePeople.toString());\n        }\n        if (query.hasOwnProperty(\"queryRules\")) {\n            this.query.add(\"enablequeryrules\", query.queryRules.toString());\n        }\n        if (query.hasOwnProperty(\"prefixMatch\")) {\n            this.query.add(\"fprefixmatchallterms\", query.prefixMatch.toString());\n        }\n    };\n    return SearchSuggest;\n}(queryable_1.QueryableInstance));\nexports.SearchSuggest = SearchSuggest;\nvar SearchSuggestResult = (function () {\n    function SearchSuggestResult(json) {\n        if (json.hasOwnProperty(\"suggest\")) {\n            // verbose\n            this.PeopleNames = json.suggest.PeopleNames.results;\n            this.PersonalResults = json.suggest.PersonalResults.results;\n            this.Queries = json.suggest.Queries.results;\n        }\n        else {\n            this.PeopleNames = json.PeopleNames;\n            this.PersonalResults = json.PersonalResults;\n            this.Queries = json.Queries;\n        }\n    }\n    return SearchSuggestResult;\n}());\nexports.SearchSuggestResult = SearchSuggestResult;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/searchsuggest.js\n// module id = 28\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar webs_1 = require(\"./webs\");\nvar usercustomactions_1 = require(\"./usercustomactions\");\nvar odata_1 = require(\"./odata\");\nvar features_1 = require(\"./features\");\n/**\n * Describes a site collection\n *\n */\nvar Site = (function (_super) {\n    __extends(Site, _super);\n    /**\n     * Creates a new instance of the RoleAssignments class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Site(baseUrl, path) {\n        if (path === void 0) { path = \"_api/site\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    Object.defineProperty(Site.prototype, \"rootWeb\", {\n        /**\n         * Gets the root web of the site collection\n         *\n         */\n        get: function () {\n            return new webs_1.Web(this, \"rootweb\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"features\", {\n        /**\n         * Gets the active features for this site\n         *\n         */\n        get: function () {\n            return new features_1.Features(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(Site.prototype, \"userCustomActions\", {\n        /**\n         * Get all custom actions on a site collection\n         *\n         */\n        get: function () {\n            return new usercustomactions_1.UserCustomActions(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the context information for the site.\n     */\n    Site.prototype.getContextInfo = function () {\n        var q = new Site(this.parentUrl, \"_api/contextinfo\");\n        return q.post().then(function (data) {\n            if (data.hasOwnProperty(\"GetContextWebInformation\")) {\n                var info = data.GetContextWebInformation;\n                info.SupportedSchemaVersions = info.SupportedSchemaVersions.results;\n                return info;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the document libraries on a site. Static method. (SharePoint Online only)\n     *\n     * @param absoluteWebUrl The absolute url of the web whose document libraries should be returned\n     */\n    Site.prototype.getDocumentLibraries = function (absoluteWebUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getdocumentlibraries(@v)\");\n        q.query.add(\"@v\", \"'\" + absoluteWebUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetDocumentLibraries\")) {\n                return data.GetDocumentLibraries;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Gets the site URL from a page URL.\n     *\n     * @param absolutePageUrl The absolute url of the page\n     */\n    Site.prototype.getWebUrlFromPageUrl = function (absolutePageUrl) {\n        var q = new queryable_1.Queryable(\"\", \"_api/sp.web.getweburlfrompageurl(@v)\");\n        q.query.add(\"@v\", \"'\" + absolutePageUrl + \"'\");\n        return q.get().then(function (data) {\n            if (data.hasOwnProperty(\"GetWebUrlFromPageUrl\")) {\n                return data.GetWebUrlFromPageUrl;\n            }\n            else {\n                return data;\n            }\n        });\n    };\n    /**\n     * Creates a new batch for requests within the context of context this site\n     *\n     */\n    Site.prototype.createBatch = function () {\n        return new odata_1.ODataBatch(this.parentUrl);\n    };\n    /**\n     * Opens a web by Id (using POST)\n     *\n     * @param webId The GUID id fo the web to open\n     */\n    Site.prototype.openWebById = function (webId) {\n        return this.clone(Site, \"openWebById('\" + webId + \"')\", true).post().then(function (d) {\n            return {\n                data: d,\n                web: webs_1.Web.fromUrl(odata_1.extractOdataId(d)),\n            };\n        });\n    };\n    return Site;\n}(queryable_1.QueryableInstance));\nexports.Site = Site;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/site.js\n// module id = 29\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar sitegroups_1 = require(\"./sitegroups\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes a collection of all site collection users\n *\n */\nvar SiteUsers = (function (_super) {\n    __extends(SiteUsers, _super);\n    /**\n     * Creates a new instance of the Users class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this user collection\n     */\n    function SiteUsers(baseUrl, path) {\n        if (path === void 0) { path = \"siteusers\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a user from the collection by email\n     *\n     * @param email The email of the user\n     */\n    SiteUsers.prototype.getByEmail = function (email) {\n        return new SiteUser(this, \"getByEmail('\" + email + \"')\");\n    };\n    /**\n     * Gets a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    SiteUsers.prototype.getById = function (id) {\n        return new SiteUser(this, \"getById(\" + id + \")\");\n    };\n    /**\n     * Gets a user from the collection by login name\n     *\n     * @param loginName The email address of the user\n     */\n    SiteUsers.prototype.getByLoginName = function (loginName) {\n        var su = new SiteUser(this);\n        su.concat(\"(@v)\");\n        su.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return su;\n    };\n    /**\n     * Removes a user from the collection by id\n     *\n     * @param id The id of the user\n     */\n    SiteUsers.prototype.removeById = function (id) {\n        return this.clone(SiteUsers, \"removeById(\" + id + \")\", true).post();\n    };\n    /**\n     * Removes a user from the collection by login name\n     *\n     * @param loginName The login name of the user\n     */\n    SiteUsers.prototype.removeByLoginName = function (loginName) {\n        var o = this.clone(SiteUsers, \"removeByLoginName(@v)\", true);\n        o.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return o.post();\n    };\n    /**\n     * Add a user to a group\n     *\n     * @param loginName The login name of the user to add to the group\n     *\n     */\n    SiteUsers.prototype.add = function (loginName) {\n        var _this = this;\n        return this.clone(SiteUsers, null, true).post({\n            body: JSON.stringify({ \"__metadata\": { \"type\": \"SP.User\" }, LoginName: loginName }),\n        }).then(function () { return _this.getByLoginName(loginName); });\n    };\n    return SiteUsers;\n}(queryable_1.QueryableCollection));\nexports.SiteUsers = SiteUsers;\n/**\n * Describes a single user\n *\n */\nvar SiteUser = (function (_super) {\n    __extends(SiteUser, _super);\n    function SiteUser() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(SiteUser.prototype, \"groups\", {\n        /**\n         * Get's the groups for this user.\n         *\n         */\n        get: function () {\n            return new sitegroups_1.SiteGroups(this, \"groups\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n    * Updates this user instance with the supplied properties\n    *\n    * @param properties A plain object of property names and values to update for the user\n    */\n    SiteUser.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = util_1.Util.extend({ \"__metadata\": { \"type\": \"SP.User\" } }, properties);\n        return this.post({\n            body: JSON.stringify(postBody),\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                user: _this,\n            };\n        });\n    };\n    /**\n     * Delete this user\n     *\n     */\n    SiteUser.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return SiteUser;\n}(queryable_1.QueryableInstance));\nexports.SiteUser = SiteUser;\n/**\n * Represents the current user\n */\nvar CurrentUser = (function (_super) {\n    __extends(CurrentUser, _super);\n    function CurrentUser(baseUrl, path) {\n        if (path === void 0) { path = \"currentuser\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return CurrentUser;\n}(queryable_1.QueryableInstance));\nexports.CurrentUser = CurrentUser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/siteusers.js\n// module id = 30\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\nvar files_1 = require(\"./files\");\nvar odata_1 = require(\"./odata\");\n/**\n * Allows for calling of the static SP.Utilities.Utility methods by supplying the method name\n */\nvar UtilityMethod = (function (_super) {\n    __extends(UtilityMethod, _super);\n    /**\n     * Creates a new instance of the Utility method class\n     *\n     * @param baseUrl The parent url provider\n     * @param methodName The static method name to call on the utility class\n     */\n    function UtilityMethod(baseUrl, methodName) {\n        return _super.call(this, UtilityMethod.getBaseUrl(baseUrl), \"_api/SP.Utilities.Utility.\" + methodName) || this;\n    }\n    UtilityMethod.getBaseUrl = function (candidate) {\n        if (typeof candidate === \"string\") {\n            return candidate;\n        }\n        var c = candidate;\n        var url = c.toUrl();\n        var index = url.indexOf(\"_api/\");\n        if (index < 0) {\n            return url;\n        }\n        return url.substr(0, index);\n    };\n    UtilityMethod.prototype.excute = function (props) {\n        return this.postAs({\n            body: JSON.stringify(props),\n        });\n    };\n    /**\n     * Clones this queryable into a new queryable instance of T\n     * @param factory Constructor used to create the new instance\n     * @param additionalPath Any additional path to include in the clone\n     * @param includeBatch If true this instance's batch will be added to the cloned instance\n     */\n    UtilityMethod.prototype.create = function (methodName, includeBatch) {\n        var clone = new UtilityMethod(this.parentUrl, methodName);\n        var target = this.query.get(\"@target\");\n        if (target !== null) {\n            clone.query.add(\"@target\", target);\n        }\n        if (includeBatch && this.hasBatch) {\n            clone = clone.inBatch(this.batch);\n        }\n        return clone;\n    };\n    /**\n     * Sends an email based on the supplied properties\n     *\n     * @param props The properties of the email to send\n     */\n    UtilityMethod.prototype.sendEmail = function (props) {\n        var params = {\n            properties: {\n                Body: props.Body,\n                From: props.From,\n                Subject: props.Subject,\n                \"__metadata\": { \"type\": \"SP.Utilities.EmailProperties\" },\n            },\n        };\n        if (props.To && props.To.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                To: { results: props.To },\n            });\n        }\n        if (props.CC && props.CC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                CC: { results: props.CC },\n            });\n        }\n        if (props.BCC && props.BCC.length > 0) {\n            params.properties = util_1.Util.extend(params.properties, {\n                BCC: { results: props.BCC },\n            });\n        }\n        if (props.AdditionalHeaders) {\n            params.properties = util_1.Util.extend(params.properties, {\n                AdditionalHeaders: props.AdditionalHeaders,\n            });\n        }\n        return this.create(\"SendEmail\", true).excute(params);\n    };\n    UtilityMethod.prototype.getCurrentUserEmailAddresses = function () {\n        return this.create(\"GetCurrentUserEmailAddresses\", true).excute({});\n    };\n    UtilityMethod.prototype.resolvePrincipal = function (input, scopes, sources, inputIsEmailOnly, addToUserInfoList, matchUserInfoList) {\n        if (matchUserInfoList === void 0) { matchUserInfoList = false; }\n        var params = {\n            addToUserInfoList: addToUserInfoList,\n            input: input,\n            inputIsEmailOnly: inputIsEmailOnly,\n            matchUserInfoList: matchUserInfoList,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"ResolvePrincipalInCurrentContext\", true).excute(params);\n    };\n    UtilityMethod.prototype.searchPrincipals = function (input, scopes, sources, groupName, maxCount) {\n        var params = {\n            groupName: groupName,\n            input: input,\n            maxCount: maxCount,\n            scopes: scopes,\n            sources: sources,\n        };\n        return this.create(\"SearchPrincipalsUsingContextWeb\", true).excute(params);\n    };\n    UtilityMethod.prototype.createEmailBodyForInvitation = function (pageAddress) {\n        var params = {\n            pageAddress: pageAddress,\n        };\n        return this.create(\"CreateEmailBodyForInvitation\", true).excute(params);\n    };\n    UtilityMethod.prototype.expandGroupsToPrincipals = function (inputs, maxCount) {\n        if (maxCount === void 0) { maxCount = 30; }\n        var params = {\n            inputs: inputs,\n            maxCount: maxCount,\n        };\n        return this.create(\"ExpandGroupsToPrincipals\", true).excute(params);\n    };\n    UtilityMethod.prototype.createWikiPage = function (info) {\n        return this.create(\"CreateWikiPageInContextWeb\", true).excute({\n            parameters: info,\n        }).then(function (r) {\n            return {\n                data: r,\n                file: new files_1.File(odata_1.extractOdataId(r)),\n            };\n        });\n    };\n    return UtilityMethod;\n}(queryable_1.Queryable));\nexports.UtilityMethod = UtilityMethod;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/utilities.js\n// module id = 31\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 32\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = require(\"../collections/collections\");\n/**\n * Class used to manage the current application settings\n *\n */\nvar Settings = (function () {\n    /**\n     * Creates a new instance of the settings class\n     *\n     * @constructor\n     */\n    function Settings() {\n        this._settings = new collections_1.Dictionary();\n    }\n    /**\n     * Adds a new single setting, or overwrites a previous setting with the same key\n     *\n     * @param {string} key The key used to store this setting\n     * @param {string} value The setting value to store\n     */\n    Settings.prototype.add = function (key, value) {\n        this._settings.add(key, value);\n    };\n    /**\n     * Adds a JSON value to the collection as a string, you must use getJSON to rehydrate the object when read\n     *\n     * @param {string} key The key used to store this setting\n     * @param {any} value The setting value to store\n     */\n    Settings.prototype.addJSON = function (key, value) {\n        this._settings.add(key, JSON.stringify(value));\n    };\n    /**\n     * Applies the supplied hash to the setting collection overwriting any existing value, or created new values\n     *\n     * @param {TypedHash<any>} hash The set of values to add\n     */\n    Settings.prototype.apply = function (hash) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            try {\n                _this._settings.merge(hash);\n                resolve();\n            }\n            catch (e) {\n                reject(e);\n            }\n        });\n    };\n    /**\n     * Loads configuration settings into the collection from the supplied provider and returns a Promise\n     *\n     * @param {IConfigurationProvider} provider The provider from which we will load the settings\n     */\n    Settings.prototype.load = function (provider) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            provider.getConfiguration().then(function (value) {\n                _this._settings.merge(value);\n                resolve();\n            }).catch(function (reason) {\n                reject(reason);\n            });\n        });\n    };\n    /**\n     * Gets a value from the configuration\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {string} string value from the configuration\n     */\n    Settings.prototype.get = function (key) {\n        return this._settings.get(key);\n    };\n    /**\n     * Gets a JSON value, rehydrating the stored string to the original object\n     *\n     * @param {string} key The key whose value we want to return. Returns null if the key does not exist\n     * @return {any} object from the configuration\n     */\n    Settings.prototype.getJSON = function (key) {\n        var o = this.get(key);\n        if (typeof o === \"undefined\" || o === null) {\n            return o;\n        }\n        return JSON.parse(o);\n    };\n    return Settings;\n}());\nexports.Settings = Settings;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/configuration.js\n// module id = 33\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar search_1 = require(\"./search\");\nvar searchsuggest_1 = require(\"./searchsuggest\");\nvar site_1 = require(\"./site\");\nvar webs_1 = require(\"./webs\");\nvar util_1 = require(\"../utils/util\");\nvar userprofiles_1 = require(\"./userprofiles\");\nvar exceptions_1 = require(\"../utils/exceptions\");\nvar utilities_1 = require(\"./utilities\");\n/**\n * Root of the SharePoint REST module\n */\nvar SPRest = (function () {\n    function SPRest() {\n    }\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.searchSuggest = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { querytext: query };\n        }\n        else {\n            finalQuery = query;\n        }\n        return new searchsuggest_1.SearchSuggest(\"\").execute(finalQuery);\n    };\n    /**\n     * Executes a search against this web context\n     *\n     * @param query The SearchQuery definition\n     */\n    SPRest.prototype.search = function (query) {\n        var finalQuery;\n        if (typeof query === \"string\") {\n            finalQuery = { Querytext: query };\n        }\n        else if (query instanceof search_1.SearchQueryBuilder) {\n            finalQuery = query.toSearchQuery();\n        }\n        else {\n            finalQuery = query;\n        }\n        return new search_1.Search(\"\").execute(finalQuery);\n    };\n    Object.defineProperty(SPRest.prototype, \"site\", {\n        /**\n         * Begins a site collection scoped REST request\n         *\n         */\n        get: function () {\n            return new site_1.Site(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"web\", {\n        /**\n         * Begins a web scoped REST request\n         *\n         */\n        get: function () {\n            return new webs_1.Web(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPRest.prototype, \"profiles\", {\n        /**\n         * Access to user profile methods\n         *\n         */\n        get: function () {\n            return new userprofiles_1.UserProfileQuery(\"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new batch object for use with the Queryable.addToBatch method\n     *\n     */\n    SPRest.prototype.createBatch = function () {\n        return this.web.createBatch();\n    };\n    Object.defineProperty(SPRest.prototype, \"utility\", {\n        /**\n         * Static utilities methods from SP.Utilities.Utility\n         */\n        get: function () {\n            return new utilities_1.UtilityMethod(\"\", \"\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Begins a cross-domain, host site scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainSite = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(site_1.Site, addInWebUrl, hostWebUrl, \"site\");\n    };\n    /**\n     * Begins a cross-domain, host web scoped REST request, for use in add-in webs\n     *\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     */\n    SPRest.prototype.crossDomainWeb = function (addInWebUrl, hostWebUrl) {\n        return this._cdImpl(webs_1.Web, addInWebUrl, hostWebUrl, \"web\");\n    };\n    /**\n     * Implements the creation of cross domain REST urls\n     *\n     * @param factory The constructor of the object to create Site | Web\n     * @param addInWebUrl The absolute url of the add-in web\n     * @param hostWebUrl The absolute url of the host web\n     * @param urlPart String part to append to the url \"site\" | \"web\"\n     */\n    SPRest.prototype._cdImpl = function (factory, addInWebUrl, hostWebUrl, urlPart) {\n        if (!util_1.Util.isUrlAbsolute(addInWebUrl)) {\n            throw new exceptions_1.UrlException(\"The addInWebUrl parameter must be an absolute url.\");\n        }\n        if (!util_1.Util.isUrlAbsolute(hostWebUrl)) {\n            throw new exceptions_1.UrlException(\"The hostWebUrl parameter must be an absolute url.\");\n        }\n        var url = util_1.Util.combinePaths(addInWebUrl, \"_api/SP.AppContextSite(@target)\");\n        var instance = new factory(url, urlPart);\n        instance.query.add(\"@target\", \"'\" + encodeURIComponent(hostWebUrl) + \"'\");\n        return instance;\n    };\n    return SPRest;\n}());\nexports.SPRest = SPRest;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/rest.js\n// module id = 34\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"../sharepoint/index\"));\nvar httpclient_1 = require(\"../net/httpclient\");\nexports.HttpClient = httpclient_1.HttpClient;\nvar sprequestexecutorclient_1 = require(\"../net/sprequestexecutorclient\");\nexports.SPRequestExecutorClient = sprequestexecutorclient_1.SPRequestExecutorClient;\nvar nodefetchclient_1 = require(\"../net/nodefetchclient\");\nexports.NodeFetchClient = nodefetchclient_1.NodeFetchClient;\nvar fetchclient_1 = require(\"../net/fetchclient\");\nexports.FetchClient = fetchclient_1.FetchClient;\n__export(require(\"../configuration/providers/index\"));\nvar collections_1 = require(\"../collections/collections\");\nexports.Dictionary = collections_1.Dictionary;\nvar util_1 = require(\"../utils/util\");\nexports.Util = util_1.Util;\n__export(require(\"../utils/logging\"));\n__export(require(\"../utils/exceptions\"));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/types/index.js\n// module id = 35\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\nexports.CachingConfigurationProvider = cachingConfigurationProvider_1.default;\nvar spListConfigurationProvider_1 = require(\"./spListConfigurationProvider\");\nexports.SPListConfigurationProvider = spListConfigurationProvider_1.default;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/index.js\n// module id = 36\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar cachingConfigurationProvider_1 = require(\"./cachingConfigurationProvider\");\n/**\n * A configuration provider which loads configuration values from a SharePoint list\n *\n */\nvar SPListConfigurationProvider = (function () {\n    /**\n     * Creates a new SharePoint list based configuration provider\n     * @constructor\n     * @param {string} webUrl Url of the SharePoint site, where the configuration list is located\n     * @param {string} listTitle Title of the SharePoint list, which contains the configuration settings (optional, default = \"config\")\n     */\n    function SPListConfigurationProvider(sourceWeb, sourceListTitle) {\n        if (sourceListTitle === void 0) { sourceListTitle = \"config\"; }\n        this.sourceWeb = sourceWeb;\n        this.sourceListTitle = sourceListTitle;\n    }\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"web\", {\n        /**\n         * Gets the url of the SharePoint site, where the configuration list is located\n         *\n         * @return {string} Url address of the site\n         */\n        get: function () {\n            return this.sourceWeb;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SPListConfigurationProvider.prototype, \"listTitle\", {\n        /**\n         * Gets the title of the SharePoint list, which contains the configuration settings\n         *\n         * @return {string} List title\n         */\n        get: function () {\n            return this.sourceListTitle;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Loads the configuration values from the SharePoint list\n     *\n     * @return {Promise<TypedHash<string>>} Promise of loaded configuration values\n     */\n    SPListConfigurationProvider.prototype.getConfiguration = function () {\n        return this.web.lists.getByTitle(this.listTitle).items.select(\"Title\", \"Value\")\n            .getAs().then(function (data) {\n            return data.reduce(function (configuration, item) {\n                return Object.defineProperty(configuration, item.Title, {\n                    configurable: false,\n                    enumerable: false,\n                    value: item.Value,\n                    writable: false,\n                });\n            }, {});\n        });\n    };\n    /**\n     * Wraps the current provider in a cache enabled provider\n     *\n     * @return {CachingConfigurationProvider} Caching providers which wraps the current provider\n     */\n    SPListConfigurationProvider.prototype.asCaching = function () {\n        var cacheKey = \"splist_\" + this.web.toUrl() + \"+\" + this.listTitle;\n        return new cachingConfigurationProvider_1.default(this, cacheKey);\n    };\n    return SPListConfigurationProvider;\n}());\nexports.default = SPListConfigurationProvider;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/configuration/providers/spListConfigurationProvider.js\n// module id = 37\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar collections_1 = require(\"../collections/collections\");\nvar util_1 = require(\"../utils/util\");\nvar odata_1 = require(\"../sharepoint/odata\");\nvar CachedDigest = (function () {\n    function CachedDigest() {\n    }\n    return CachedDigest;\n}());\nexports.CachedDigest = CachedDigest;\n// allows for the caching of digests across all HttpClient's which each have their own DigestCache wrapper.\nvar digests = new collections_1.Dictionary();\nvar DigestCache = (function () {\n    function DigestCache(_httpClient, _digests) {\n        if (_digests === void 0) { _digests = digests; }\n        this._httpClient = _httpClient;\n        this._digests = _digests;\n    }\n    DigestCache.prototype.getDigest = function (webUrl) {\n        var _this = this;\n        var cachedDigest = this._digests.get(webUrl);\n        if (cachedDigest !== null) {\n            var now = new Date();\n            if (now < cachedDigest.expiration) {\n                return Promise.resolve(cachedDigest.value);\n            }\n        }\n        var url = util_1.Util.combinePaths(webUrl, \"/_api/contextinfo\");\n        return this._httpClient.fetchRaw(url, {\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Accept\": \"application/json;odata=verbose\",\n                \"Content-type\": \"application/json;odata=verbose;charset=utf-8\",\n            },\n            method: \"POST\",\n        }).then(function (response) {\n            var parser = new odata_1.ODataDefaultParser();\n            return parser.parse(response).then(function (d) { return d.GetContextWebInformation; });\n        }).then(function (data) {\n            var newCachedDigest = new CachedDigest();\n            newCachedDigest.value = data.FormDigestValue;\n            var seconds = data.FormDigestTimeoutSeconds;\n            var expiration = new Date();\n            expiration.setTime(expiration.getTime() + 1000 * seconds);\n            newCachedDigest.expiration = expiration;\n            _this._digests.add(webUrl, newCachedDigest);\n            return newCachedDigest.value;\n        });\n    };\n    DigestCache.prototype.clear = function () {\n        this._digests.clear();\n    };\n    return DigestCache;\n}());\nexports.DigestCache = DigestCache;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/digestcache.js\n// module id = 38\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * This module is substituted for the NodeFetchClient.ts during the packaging process. This helps to reduce the pnp.js file size by\n * not including all of the node dependencies\n */\nvar NodeFetchClient = (function () {\n    function NodeFetchClient() {\n    }\n    /**\n     * Always throws an error that NodeFetchClient is not supported for use in the browser\n     */\n    NodeFetchClient.prototype.fetch = function () {\n        throw new exceptions_1.NodeFetchClientUnsupportedException();\n    };\n    return NodeFetchClient;\n}());\nexports.NodeFetchClient = NodeFetchClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/nodefetchclientbrowser.js\n// module id = 39\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"../utils/util\");\nvar exceptions_1 = require(\"../utils/exceptions\");\n/**\n * Makes requests using the SP.RequestExecutor library.\n */\nvar SPRequestExecutorClient = (function () {\n    function SPRequestExecutorClient() {\n        /**\n         * Converts a SharePoint REST API response to a fetch API response.\n         */\n        this.convertToResponse = function (spResponse) {\n            var responseHeaders = new Headers();\n            for (var h in spResponse.headers) {\n                if (spResponse.headers[h]) {\n                    responseHeaders.append(h, spResponse.headers[h]);\n                }\n            }\n            // issue #256, Cannot have an empty string body when creating a Response with status 204\n            var body = spResponse.statusCode === 204 ? null : spResponse.body;\n            return new Response(body, {\n                headers: responseHeaders,\n                status: spResponse.statusCode,\n                statusText: spResponse.statusText,\n            });\n        };\n    }\n    /**\n     * Fetches a URL using the SP.RequestExecutor library.\n     */\n    SPRequestExecutorClient.prototype.fetch = function (url, options) {\n        var _this = this;\n        if (typeof SP === \"undefined\" || typeof SP.RequestExecutor === \"undefined\") {\n            throw new exceptions_1.SPRequestExecutorUndefinedException();\n        }\n        var addinWebUrl = url.substring(0, url.indexOf(\"/_api\")), executor = new SP.RequestExecutor(addinWebUrl);\n        var headers = {}, iterator, temp;\n        if (options.headers && options.headers instanceof Headers) {\n            iterator = options.headers.entries();\n            temp = iterator.next();\n            while (!temp.done) {\n                headers[temp.value[0]] = temp.value[1];\n                temp = iterator.next();\n            }\n        }\n        else {\n            headers = options.headers;\n        }\n        return new Promise(function (resolve, reject) {\n            var requestOptions = {\n                error: function (error) {\n                    reject(_this.convertToResponse(error));\n                },\n                headers: headers,\n                method: options.method,\n                success: function (response) {\n                    resolve(_this.convertToResponse(response));\n                },\n                url: url,\n            };\n            if (options.body) {\n                requestOptions = util_1.Util.extend(requestOptions, { body: options.body });\n            }\n            else {\n                requestOptions = util_1.Util.extend(requestOptions, { binaryStringRequestBody: true });\n            }\n            executor.executeAsync(requestOptions);\n        });\n    };\n    return SPRequestExecutorClient;\n}());\nexports.SPRequestExecutorClient = SPRequestExecutorClient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/net/sprequestexecutorclient.js\n// module id = 40\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar util_1 = require(\"./utils/util\");\nvar storage_1 = require(\"./utils/storage\");\nvar configuration_1 = require(\"./configuration/configuration\");\nvar logging_1 = require(\"./utils/logging\");\nvar rest_1 = require(\"./sharepoint/rest\");\nvar pnplibconfig_1 = require(\"./configuration/pnplibconfig\");\n/**\n * Root class of the Patterns and Practices namespace, provides an entry point to the library\n */\n/**\n * Utility methods\n */\nexports.util = util_1.Util;\n/**\n * Provides access to the REST interface\n */\nexports.sp = new rest_1.SPRest();\n/**\n * Provides access to local and session storage\n */\nexports.storage = new storage_1.PnPClientStorage();\n/**\n * Global configuration instance to which providers can be added\n */\nexports.config = new configuration_1.Settings();\n/**\n * Global logging instance to which subscribers can be registered and messages written\n */\nexports.log = logging_1.Logger;\n/**\n * Allows for the configuration of the library\n */\nexports.setup = pnplibconfig_1.setRuntimeConfig;\n/**\n * Expose a subset of classes from the library for public consumption\n */\n__export(require(\"./types/index\"));\n// creating this class instead of directly assigning to default fixes issue #116\nvar Def = {\n    /**\n     * Global configuration instance to which providers can be added\n     */\n    config: exports.config,\n    /**\n     * Global logging instance to which subscribers can be registered and messages written\n     */\n    log: exports.log,\n    /**\n     * Provides access to local and session storage\n     */\n    setup: exports.setup,\n    /**\n     * Provides access to the REST interface\n     */\n    sp: exports.sp,\n    /**\n     * Provides access to local and session storage\n     */\n    storage: exports.storage,\n    /**\n     * Utility methods\n     */\n    util: exports.util,\n};\n/**\n * Enables use of the import pnp from syntax\n */\nexports.default = Def;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/pnp.js\n// module id = 41\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar odata_1 = require(\"./odata\");\n/**\n * Describes a collection of Item objects\n *\n */\nvar AttachmentFiles = (function (_super) {\n    __extends(AttachmentFiles, _super);\n    /**\n     * Creates a new instance of the AttachmentFiles class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this attachments collection\n     */\n    function AttachmentFiles(baseUrl, path) {\n        if (path === void 0) { path = \"AttachmentFiles\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a Attachment File by filename\n     *\n     * @param name The name of the file, including extension.\n     */\n    AttachmentFiles.prototype.getByName = function (name) {\n        var f = new AttachmentFile(this);\n        f.concat(\"('\" + name + \"')\");\n        return f;\n    };\n    /**\n     * Adds a new attachment to the collection. Not supported for batching.\n     *\n     * @param name The name of the file, including extension.\n     * @param content The Base64 file content.\n     */\n    AttachmentFiles.prototype.add = function (name, content) {\n        var _this = this;\n        return this.clone(AttachmentFiles, \"add(FileName='\" + name + \"')\").post({\n            body: content,\n        }).then(function (response) {\n            return {\n                data: response,\n                file: _this.getByName(name),\n            };\n        });\n    };\n    /**\n     * Adds mjultiple new attachment to the collection. Not supported for batching.\n     *\n     * @files name The collection of files to add\n     */\n    AttachmentFiles.prototype.addMultiple = function (files) {\n        var _this = this;\n        // add the files in series so we don't get update conflicts\n        return files.reduce(function (chain, file) { return chain.then(function () { return _this.clone(AttachmentFiles, \"add(FileName='\" + file.name + \"')\").post({\n            body: file.content,\n        }); }); }, Promise.resolve());\n    };\n    return AttachmentFiles;\n}(queryable_1.QueryableCollection));\nexports.AttachmentFiles = AttachmentFiles;\n/**\n * Describes a single attachment file instance\n *\n */\nvar AttachmentFile = (function (_super) {\n    __extends(AttachmentFile, _super);\n    function AttachmentFile() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets the contents of the file as text\n     *\n     */\n    AttachmentFile.prototype.getText = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.TextFileParser());\n    };\n    /**\n     * Gets the contents of the file as a blob, does not work in Node.js\n     *\n     */\n    AttachmentFile.prototype.getBlob = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BlobFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getBuffer = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.BufferFileParser());\n    };\n    /**\n     * Gets the contents of a file as an ArrayBuffer, works in Node.js\n     */\n    AttachmentFile.prototype.getJSON = function () {\n        return this.clone(AttachmentFile, \"$value\").get(new odata_1.JSONFileParser());\n    };\n    /**\n     * Sets the content of a file. Not supported for batching\n     *\n     * @param content The value to set for the file contents\n     */\n    AttachmentFile.prototype.setContent = function (content) {\n        var _this = this;\n        return this.clone(AttachmentFile, \"$value\").post({\n            body: content,\n            headers: {\n                \"X-HTTP-Method\": \"PUT\",\n            },\n        }).then(function (_) { return new AttachmentFile(_this); });\n    };\n    /**\n     * Delete this attachment file\n     *\n     * @param eTag Value used in the IF-Match header, by default \"*\"\n     */\n    AttachmentFile.prototype.delete = function (eTag) {\n        if (eTag === void 0) { eTag = \"*\"; }\n        return this.post({\n            headers: {\n                \"IF-Match\": eTag,\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    return AttachmentFile;\n}(queryable_1.QueryableInstance));\nexports.AttachmentFile = AttachmentFile;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/attachmentfiles.js\n// module id = 42\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of Field objects\n *\n */\nvar Forms = (function (_super) {\n    __extends(Forms, _super);\n    /**\n     * Creates a new instance of the Fields class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Forms(baseUrl, path) {\n        if (path === void 0) { path = \"forms\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a form by id\n     *\n     * @param id The guid id of the item to retrieve\n     */\n    Forms.prototype.getById = function (id) {\n        var i = new Form(this);\n        i.concat(\"('\" + id + \"')\");\n        return i;\n    };\n    return Forms;\n}(queryable_1.QueryableCollection));\nexports.Forms = Forms;\n/**\n * Describes a single of Form instance\n *\n */\nvar Form = (function (_super) {\n    __extends(Form, _super);\n    function Form() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return Form;\n}(queryable_1.QueryableInstance));\nexports.Form = Form;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/forms.js\n// module id = 43\n// module chunks = 0","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./caching\"));\nvar files_1 = require(\"./files\");\nexports.CheckinType = files_1.CheckinType;\nexports.WebPartsPersonalizationScope = files_1.WebPartsPersonalizationScope;\nexports.MoveOperations = files_1.MoveOperations;\nexports.TemplateFileType = files_1.TemplateFileType;\nvar folders_1 = require(\"./folders\");\nexports.Folder = folders_1.Folder;\nexports.Folders = folders_1.Folders;\nvar items_1 = require(\"./items\");\nexports.Item = items_1.Item;\nexports.Items = items_1.Items;\nexports.PagedItemCollection = items_1.PagedItemCollection;\nvar navigation_1 = require(\"./navigation\");\nexports.NavigationNodes = navigation_1.NavigationNodes;\nexports.NavigationNode = navigation_1.NavigationNode;\nvar lists_1 = require(\"./lists\");\nexports.List = lists_1.List;\nexports.Lists = lists_1.Lists;\nvar odata_1 = require(\"./odata\");\nexports.extractOdataId = odata_1.extractOdataId;\nexports.ODataParserBase = odata_1.ODataParserBase;\nexports.ODataDefaultParser = odata_1.ODataDefaultParser;\nexports.ODataRaw = odata_1.ODataRaw;\nexports.ODataValue = odata_1.ODataValue;\nexports.ODataEntity = odata_1.ODataEntity;\nexports.ODataEntityArray = odata_1.ODataEntityArray;\nexports.TextFileParser = odata_1.TextFileParser;\nexports.BlobFileParser = odata_1.BlobFileParser;\nexports.BufferFileParser = odata_1.BufferFileParser;\nexports.JSONFileParser = odata_1.JSONFileParser;\nvar queryable_1 = require(\"./queryable\");\nexports.Queryable = queryable_1.Queryable;\nexports.QueryableInstance = queryable_1.QueryableInstance;\nexports.QueryableCollection = queryable_1.QueryableCollection;\nvar roles_1 = require(\"./roles\");\nexports.RoleDefinitionBindings = roles_1.RoleDefinitionBindings;\nvar search_1 = require(\"./search\");\nexports.Search = search_1.Search;\nexports.SearchQueryBuilder = search_1.SearchQueryBuilder;\nexports.SearchResults = search_1.SearchResults;\nexports.SortDirection = search_1.SortDirection;\nexports.ReorderingRuleMatchType = search_1.ReorderingRuleMatchType;\nexports.QueryPropertyValueType = search_1.QueryPropertyValueType;\nexports.SearchBuiltInSourceId = search_1.SearchBuiltInSourceId;\nvar searchsuggest_1 = require(\"./searchsuggest\");\nexports.SearchSuggest = searchsuggest_1.SearchSuggest;\nexports.SearchSuggestResult = searchsuggest_1.SearchSuggestResult;\nvar site_1 = require(\"./site\");\nexports.Site = site_1.Site;\n__export(require(\"./types\"));\nvar utilities_1 = require(\"./utilities\");\nexports.UtilityMethod = utilities_1.UtilityMethod;\nvar webs_1 = require(\"./webs\");\nexports.Web = webs_1.Web;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/index.js\n// module id = 44\n// module chunks = 0","\"use strict\";\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar caching_1 = require(\"./caching\");\nvar httpclient_1 = require(\"../net/httpclient\");\nvar logging_1 = require(\"../utils/logging\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Resolves the context's result value\n *\n * @param context The current context\n */\nfunction returnResult(context) {\n    logging_1.Logger.log({\n        data: context.result,\n        level: logging_1.LogLevel.Verbose,\n        message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Returning result, see data property for value.\",\n    });\n    return Promise.resolve(context.result);\n}\n/**\n * Sets the result on the context\n */\nfunction setResult(context, value) {\n    return new Promise(function (resolve) {\n        context.result = value;\n        context.hasResult = true;\n        resolve(context);\n    });\n}\nexports.setResult = setResult;\n/**\n * Invokes the next method in the provided context's pipeline\n *\n * @param c The current request context\n */\nfunction next(c) {\n    if (c.pipeline.length < 1) {\n        return Promise.resolve(c);\n    }\n    return c.pipeline.shift()(c);\n}\n/**\n * Executes the current request context's pipeline\n *\n * @param context Current context\n */\nfunction pipe(context) {\n    return next(context)\n        .then(function (ctx) { return returnResult(ctx); })\n        .catch(function (e) {\n        logging_1.Logger.log({\n            data: e,\n            level: logging_1.LogLevel.Error,\n            message: \"Error in request pipeline: \" + e.message,\n        });\n        throw e;\n    });\n}\nexports.pipe = pipe;\n/**\n * decorator factory applied to methods in the pipeline to control behavior\n */\nfunction requestPipelineMethod(alwaysRun) {\n    if (alwaysRun === void 0) { alwaysRun = false; }\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            // if we have a result already in the pipeline, pass it along and don't call the tagged method\n            if (!alwaysRun && args.length > 0 && args[0].hasOwnProperty(\"hasResult\") && args[0].hasResult) {\n                logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Skipping request pipeline method \" + propertyKey + \", existing result in pipeline.\", logging_1.LogLevel.Verbose);\n                return Promise.resolve(args[0]);\n            }\n            // apply the tagged method\n            logging_1.Logger.write(\"[\" + args[0].requestId + \"] (\" + (new Date()).getTime() + \") Calling request pipeline method \" + propertyKey + \".\", logging_1.LogLevel.Verbose);\n            // then chain the next method in the context's pipeline - allows for dynamic pipeline\n            return method.apply(target, args).then(function (ctx) { return next(ctx); });\n        };\n    };\n}\nexports.requestPipelineMethod = requestPipelineMethod;\n/**\n * Contains the methods used within the request pipeline\n */\nvar PipelineMethods = (function () {\n    function PipelineMethods() {\n    }\n    /**\n     * Logs the start of the request\n     */\n    PipelineMethods.logStart = function (context) {\n        return new Promise(function (resolve) {\n            logging_1.Logger.log({\n                data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                level: logging_1.LogLevel.Info,\n                message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Beginning \" + context.verb + \" request (\" + context.requestAbsoluteUrl + \")\",\n            });\n            resolve(context);\n        });\n    };\n    /**\n     * Handles caching of the request\n     */\n    PipelineMethods.caching = function (context) {\n        return new Promise(function (resolve) {\n            // handle caching, if applicable\n            if (context.verb === \"GET\" && context.isCached) {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Caching is enabled for request, checking cache...\", logging_1.LogLevel.Info);\n                var cacheOptions = new caching_1.CachingOptions(context.requestAbsoluteUrl.toLowerCase());\n                if (typeof context.cachingOptions !== \"undefined\") {\n                    cacheOptions = util_1.Util.extend(cacheOptions, context.cachingOptions);\n                }\n                // we may not have a valid store\n                if (cacheOptions.store !== null) {\n                    // check if we have the data in cache and if so resolve the promise and return\n                    var data = cacheOptions.store.get(cacheOptions.key);\n                    if (data !== null) {\n                        // ensure we clear any help batch dependency we are resolving from the cache\n                        logging_1.Logger.log({\n                            data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : data,\n                            level: logging_1.LogLevel.Info,\n                            message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value returned from cache.\",\n                        });\n                        context.batchDependency();\n                        return setResult(context, data).then(function (ctx) { return resolve(ctx); });\n                    }\n                }\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Value not found in cache.\", logging_1.LogLevel.Info);\n                // if we don't then wrap the supplied parser in the caching parser wrapper\n                // and send things on their way\n                context.parser = new caching_1.CachingParserWrapper(context.parser, cacheOptions);\n            }\n            return resolve(context);\n        });\n    };\n    /**\n     * Sends the request\n     */\n    PipelineMethods.send = function (context) {\n        return new Promise(function (resolve, reject) {\n            // send or batch the request\n            if (context.isBatched) {\n                // we are in a batch, so add to batch, remove dependency, and resolve with the batch's promise\n                var p = context.batch.add(context.requestAbsoluteUrl, context.verb, context.options, context.parser);\n                // we release the dependency here to ensure the batch does not execute until the request is added to the batch\n                context.batchDependency();\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Batching request in batch \" + context.batch.batchId + \".\", logging_1.LogLevel.Info);\n                // we set the result as the promise which will be resolved by the batch's execution\n                resolve(setResult(context, p));\n            }\n            else {\n                logging_1.Logger.write(\"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Sending request.\", logging_1.LogLevel.Info);\n                // we are not part of a batch, so proceed as normal\n                var client = new httpclient_1.HttpClient();\n                var opts = util_1.Util.extend(context.options || {}, { method: context.verb });\n                client.fetch(context.requestAbsoluteUrl, opts)\n                    .then(function (response) { return context.parser.parse(response); })\n                    .then(function (result) { return setResult(context, result); })\n                    .then(function (ctx) { return resolve(ctx); })\n                    .catch(function (e) { return reject(e); });\n            }\n        });\n    };\n    /**\n     * Logs the end of the request\n     */\n    PipelineMethods.logEnd = function (context) {\n        return new Promise(function (resolve) {\n            if (context.isBatched) {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") \" + context.verb + \" request will complete in batch \" + context.batch.batchId + \".\",\n                });\n            }\n            else {\n                logging_1.Logger.log({\n                    data: logging_1.Logger.activeLogLevel === logging_1.LogLevel.Info ? {} : context,\n                    level: logging_1.LogLevel.Info,\n                    message: \"[\" + context.requestId + \"] (\" + (new Date()).getTime() + \") Completing \" + context.verb + \" request.\",\n                });\n            }\n            resolve(context);\n        });\n    };\n    Object.defineProperty(PipelineMethods, \"default\", {\n        get: function () {\n            return [\n                PipelineMethods.logStart,\n                PipelineMethods.caching,\n                PipelineMethods.send,\n                PipelineMethods.logEnd,\n            ];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PipelineMethods;\n}());\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logStart\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"caching\", null);\n__decorate([\n    requestPipelineMethod()\n], PipelineMethods, \"send\", null);\n__decorate([\n    requestPipelineMethod(true)\n], PipelineMethods, \"logEnd\", null);\nexports.PipelineMethods = PipelineMethods;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/pipeline.js\n// module id = 45\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar RelatedItemManagerImpl = (function (_super) {\n    __extends(RelatedItemManagerImpl, _super);\n    function RelatedItemManagerImpl(baseUrl, path) {\n        if (path === void 0) { path = \"_api/SP.RelatedItemManager\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    RelatedItemManagerImpl.FromUrl = function (url) {\n        if (url === null) {\n            return new RelatedItemManagerImpl(\"\");\n        }\n        var index = url.indexOf(\"_api/\");\n        if (index > -1) {\n            return new RelatedItemManagerImpl(url.substr(0, index));\n        }\n        return new RelatedItemManagerImpl(url);\n    };\n    RelatedItemManagerImpl.prototype.getRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.getPageOneRelatedItems = function (sourceListName, sourceItemId) {\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".GetPageOneRelatedItems\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.addSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemID, targetWebUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemID,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by list name and item id, to an item specified by url\n     *\n     * @param sourceListName The source list name or list id\n     * @param sourceItemId The source item id\n     * @param targetItemUrl The target item url\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkToUrl = function (sourceListName, sourceItemId, targetItemUrl, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkToUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                TargetItemUrl: targetItemUrl,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    /**\n     * Adds a related item link from an item specified by url, to an item specified by list name and item id\n     *\n     * @param sourceItemUrl The source item url\n     * @param targetListName The target list name or list id\n     * @param targetItemId The target item id\n     * @param tryAddReverseLink If set to true try to add the reverse link (will not return error if it fails)\n     */\n    RelatedItemManagerImpl.prototype.addSingleLinkFromUrl = function (sourceItemUrl, targetListName, targetItemId, tryAddReverseLink) {\n        if (tryAddReverseLink === void 0) { tryAddReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".AddSingleLinkFromUrl\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemUrl: sourceItemUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TryAddReverseLink: tryAddReverseLink,\n            }),\n        });\n    };\n    RelatedItemManagerImpl.prototype.deleteSingleLink = function (sourceListName, sourceItemId, sourceWebUrl, targetListName, targetItemId, targetWebUrl, tryDeleteReverseLink) {\n        if (tryDeleteReverseLink === void 0) { tryDeleteReverseLink = false; }\n        var query = this.clone(RelatedItemManagerImpl, null, true);\n        query.concat(\".DeleteSingleLink\");\n        return query.post({\n            body: JSON.stringify({\n                SourceItemID: sourceItemId,\n                SourceListName: sourceListName,\n                SourceWebUrl: sourceWebUrl,\n                TargetItemID: targetItemId,\n                TargetListName: targetListName,\n                TargetWebUrl: targetWebUrl,\n                TryDeleteReverseLink: tryDeleteReverseLink,\n            }),\n        });\n    };\n    return RelatedItemManagerImpl;\n}(queryable_1.Queryable));\nexports.RelatedItemManagerImpl = RelatedItemManagerImpl;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/relateditems.js\n// module id = 46\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\n/**\n * Describes a collection of webhook subscriptions\n *\n */\nvar Subscriptions = (function (_super) {\n    __extends(Subscriptions, _super);\n    /**\n     * Creates a new instance of the Subscriptions class\n     *\n     * @param baseUrl - The url or Queryable which forms the parent of this webhook subscriptions collection\n     */\n    function Subscriptions(baseUrl, path) {\n        if (path === void 0) { path = \"subscriptions\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Returns all the webhook subscriptions or the specified webhook subscription\n     *\n     */\n    Subscriptions.prototype.getById = function (subscriptionId) {\n        var subscription = new Subscription(this);\n        subscription.concat(\"('\" + subscriptionId + \"')\");\n        return subscription;\n    };\n    /**\n     * Create a new webhook subscription\n     *\n     */\n    Subscriptions.prototype.add = function (notificationUrl, expirationDate, clientState) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"clientState\": clientState || \"pnp-js-core-subscription\",\n            \"expirationDateTime\": expirationDate,\n            \"notificationUrl\": notificationUrl,\n            \"resource\": this.toUrl(),\n        });\n        return this.post({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (result) {\n            return { data: result, subscription: _this.getById(result.id) };\n        });\n    };\n    return Subscriptions;\n}(queryable_1.QueryableCollection));\nexports.Subscriptions = Subscriptions;\n/**\n * Describes a single webhook subscription instance\n *\n */\nvar Subscription = (function (_super) {\n    __extends(Subscription, _super);\n    function Subscription() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Update a webhook subscription\n     *\n     */\n    Subscription.prototype.update = function (expirationDate) {\n        var _this = this;\n        var postBody = JSON.stringify({\n            \"expirationDateTime\": expirationDate,\n        });\n        return this.patch({ body: postBody, headers: { \"Content-Type\": \"application/json\" } }).then(function (data) {\n            return { data: data, subscription: _this };\n        });\n    };\n    /**\n     * Remove a webhook subscription\n     *\n     */\n    Subscription.prototype.delete = function () {\n        return _super.prototype.delete.call(this);\n    };\n    return Subscription;\n}(queryable_1.QueryableInstance));\nexports.Subscription = Subscription;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/subscriptions.js\n// module id = 47\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar files_1 = require(\"../utils/files\");\nvar odata_1 = require(\"./odata\");\nvar UserProfileQuery = (function (_super) {\n    __extends(UserProfileQuery, _super);\n    function UserProfileQuery(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.peoplemanager\"; }\n        var _this = _super.call(this, baseUrl, path) || this;\n        _this.profileLoader = new ProfileLoader(baseUrl);\n        return _this;\n    }\n    Object.defineProperty(UserProfileQuery.prototype, \"editProfileLink\", {\n        /**\n         * The URL of the edit profile page for the current user.\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"EditProfileLink\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"isMyPeopleListPublic\", {\n        /**\n         * A Boolean value that indicates whether the current user's People I'm Following list is public.\n         */\n        get: function () {\n            return this.clone(UserProfileQuery, \"IsMyPeopleListPublic\").getAs(odata_1.ODataValue());\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * A Boolean value that indicates whether the current user's People I'm Following list is public.\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Checks whether the current user is following the specified user.\n     *\n     * @param loginName The account name of the user\n     */\n    UserProfileQuery.prototype.amIFollowing = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"amifollowing(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets tags that the user is following.\n     *\n     * @param maxCount The maximum number of tags to get.\n     */\n    UserProfileQuery.prototype.getFollowedTags = function (maxCount) {\n        if (maxCount === void 0) { maxCount = 20; }\n        return this.clone(UserProfileQuery, \"getfollowedtags(\" + maxCount + \")\", true).get();\n    };\n    /**\n     * Gets the people who are following the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getFollowersFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getfollowersfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"myFollowers\", {\n        /**\n         * Gets the people who are following the current user.\n         *\n         */\n        get: function () {\n            return new queryable_1.QueryableCollection(this, \"getmyfollowers\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"myProperties\", {\n        /**\n         * Gets user properties for the current user.\n         *\n         */\n        get: function () {\n            return new UserProfileQuery(this, \"getmyproperties\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the people who the specified user is following.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPeopleFollowedBy = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpeoplefollowedby(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Gets user properties for the specified user.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.getPropertiesFor = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"getpropertiesfor(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"trendingTags\", {\n        /**\n         * Gets the most popular tags.\n         *\n         */\n        get: function () {\n            var q = this.clone(UserProfileQuery, null, true);\n            q.concat(\".gettrendingtags\");\n            return q.get();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Gets the specified user profile property for the specified user.\n     *\n     * @param loginName The account name of the user.\n     * @param propertyName The case-sensitive name of the property to get.\n     */\n    UserProfileQuery.prototype.getUserProfilePropertyFor = function (loginName, propertyName) {\n        var q = this.clone(UserProfileQuery, \"getuserprofilepropertyfor(accountname=@v, propertyname='\" + propertyName + \"')\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.get();\n    };\n    /**\n     * Removes the specified user from the user's list of suggested people to follow.\n     *\n     * @param loginName The account name of the user.\n     */\n    UserProfileQuery.prototype.hideSuggestion = function (loginName) {\n        var q = this.clone(UserProfileQuery, \"hidesuggestion(@v)\", true);\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(loginName) + \"'\");\n        return q.post();\n    };\n    /**\n     * Checks whether the first user is following the second user.\n     *\n     * @param follower The account name of the user who might be following followee.\n     * @param followee The account name of the user who might be followed.\n     */\n    UserProfileQuery.prototype.isFollowing = function (follower, followee) {\n        var q = this.clone(UserProfileQuery, null, true);\n        q.concat(\".isfollowing(possiblefolloweraccountname=@v, possiblefolloweeaccountname=@y)\");\n        q.query.add(\"@v\", \"'\" + encodeURIComponent(follower) + \"'\");\n        q.query.add(\"@y\", \"'\" + encodeURIComponent(followee) + \"'\");\n        return q.get();\n    };\n    /**\n     * Uploads and sets the user profile picture. Not supported for batching.\n     *\n     * @param profilePicSource Blob data representing the user's picture\n     */\n    UserProfileQuery.prototype.setMyProfilePic = function (profilePicSource) {\n        var _this = this;\n        return new Promise(function (resolve, reject) {\n            files_1.readBlobAsArrayBuffer(profilePicSource).then(function (buffer) {\n                var request = new UserProfileQuery(_this, \"setmyprofilepicture\");\n                request.post({\n                    body: String.fromCharCode.apply(null, new Uint16Array(buffer)),\n                }).then(function (_) { return resolve(); });\n            }).catch(function (e) { return reject(e); });\n        });\n    };\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    UserProfileQuery.prototype.createPersonalSiteEnqueueBulk = function () {\n        var emails = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            emails[_i] = arguments[_i];\n        }\n        return this.profileLoader.createPersonalSiteEnqueueBulk(emails);\n    };\n    Object.defineProperty(UserProfileQuery.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            return this.profileLoader.ownerUserProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(UserProfileQuery.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile that corresponds to the current user.\n         */\n        get: function () {\n            return this.profileLoader.userProfile;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    UserProfileQuery.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.profileLoader.createPersonalSite(interactiveRequest);\n    };\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    UserProfileQuery.prototype.shareAllSocialData = function (share) {\n        return this.profileLoader.shareAllSocialData(share);\n    };\n    return UserProfileQuery;\n}(queryable_1.QueryableInstance));\nexports.UserProfileQuery = UserProfileQuery;\nvar ProfileLoader = (function (_super) {\n    __extends(ProfileLoader, _super);\n    function ProfileLoader(baseUrl, path) {\n        if (path === void 0) { path = \"_api/sp.userprofiles.profileloader.getprofileloader\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Provisions one or more users' personal sites. (My Site administrator on SharePoint Online only)\n     *\n     * @param emails The email addresses of the users to provision sites for\n     */\n    ProfileLoader.prototype.createPersonalSiteEnqueueBulk = function (emails) {\n        return this.clone(ProfileLoader, \"createpersonalsiteenqueuebulk\").post({\n            body: JSON.stringify({ \"emailIDs\": emails }),\n        });\n    };\n    Object.defineProperty(ProfileLoader.prototype, \"ownerUserProfile\", {\n        /**\n         * Gets the user profile of the site owner.\n         *\n         */\n        get: function () {\n            var q = this.getParent(ProfileLoader, this.parentUrl, \"_api/sp.userprofiles.profileloader.getowneruserprofile\");\n            if (this.hasBatch) {\n                q = q.inBatch(this.batch);\n            }\n            return q.postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ProfileLoader.prototype, \"userProfile\", {\n        /**\n         * Gets the user profile that corresponds to the current user.\n         *\n         */\n        get: function () {\n            return this.clone(ProfileLoader, \"getuserprofile\", true).postAs();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Enqueues creating a personal site for this user, which can be used to share documents, web pages, and other files.\n     *\n     * @param interactiveRequest true if interactively (web) initiated request, or false if non-interactively (client) initiated request\n     */\n    ProfileLoader.prototype.createPersonalSite = function (interactiveRequest) {\n        if (interactiveRequest === void 0) { interactiveRequest = false; }\n        return this.clone(ProfileLoader, \"getuserprofile/createpersonalsiteenque(\" + interactiveRequest + \")\", true).post();\n    };\n    /**\n     * Sets the privacy settings for this profile.\n     *\n     * @param share true to make all social data public; false to make all social data private.\n     */\n    ProfileLoader.prototype.shareAllSocialData = function (share) {\n        return this.clone(ProfileLoader, \"getuserprofile/shareallsocialdata(\" + share + \")\", true).post();\n    };\n    return ProfileLoader;\n}(queryable_1.Queryable));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/userprofiles.js\n// module id = 48\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar util_1 = require(\"../utils/util\");\n/**\n * Describes the views available in the current context\n *\n */\nvar Views = (function (_super) {\n    __extends(Views, _super);\n    /**\n     * Creates a new instance of the Views class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     */\n    function Views(baseUrl, path) {\n        if (path === void 0) { path = \"views\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a view by guid id\n     *\n     * @param id The GUID id of the view\n     */\n    Views.prototype.getById = function (id) {\n        var v = new View(this);\n        v.concat(\"('\" + id + \"')\");\n        return v;\n    };\n    /**\n     * Gets a view by title (case-sensitive)\n     *\n     * @param title The case-sensitive title of the view\n     */\n    Views.prototype.getByTitle = function (title) {\n        return new View(this, \"getByTitle('\" + title + \"')\");\n    };\n    /**\n     * Adds a new view to the collection\n     *\n     * @param title The new views's title\n     * @param personalView True if this is a personal view, otherwise false, default = false\n     * @param additionalSettings Will be passed as part of the view creation body\n     */\n    /*tslint:disable max-line-length */\n    Views.prototype.add = function (title, personalView, additionalSettings) {\n        var _this = this;\n        if (personalView === void 0) { personalView = false; }\n        if (additionalSettings === void 0) { additionalSettings = {}; }\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"PersonalView\": personalView,\n            \"Title\": title,\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, additionalSettings));\n        return this.clone(Views, null, true).postAs({ body: postBody }).then(function (data) {\n            return {\n                data: data,\n                view: _this.getById(data.Id),\n            };\n        });\n    };\n    return Views;\n}(queryable_1.QueryableCollection));\nexports.Views = Views;\n/**\n * Describes a single View instance\n *\n */\nvar View = (function (_super) {\n    __extends(View, _super);\n    function View() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(View.prototype, \"fields\", {\n        get: function () {\n            return new ViewFields(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Updates this view intance with the supplied properties\n     *\n     * @param properties A plain object hash of values to update for the view\n     */\n    View.prototype.update = function (properties) {\n        var _this = this;\n        var postBody = JSON.stringify(util_1.Util.extend({\n            \"__metadata\": { \"type\": \"SP.View\" },\n        }, properties));\n        return this.post({\n            body: postBody,\n            headers: {\n                \"X-HTTP-Method\": \"MERGE\",\n            },\n        }).then(function (data) {\n            return {\n                data: data,\n                view: _this,\n            };\n        });\n    };\n    /**\n     * Delete this view\n     *\n     */\n    View.prototype.delete = function () {\n        return this.post({\n            headers: {\n                \"X-HTTP-Method\": \"DELETE\",\n            },\n        });\n    };\n    /**\n     * Returns the list view as HTML.\n     *\n     */\n    View.prototype.renderAsHtml = function () {\n        return this.clone(queryable_1.Queryable, \"renderashtml\", true).get();\n    };\n    return View;\n}(queryable_1.QueryableInstance));\nexports.View = View;\nvar ViewFields = (function (_super) {\n    __extends(ViewFields, _super);\n    function ViewFields(baseUrl, path) {\n        if (path === void 0) { path = \"viewfields\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    /**\n     * Gets a value that specifies the XML schema that represents the collection.\n     */\n    ViewFields.prototype.getSchemaXml = function () {\n        return this.clone(queryable_1.Queryable, \"schemaxml\", true).get();\n    };\n    /**\n     * Adds the field with the specified field internal name or display name to the collection.\n     *\n     * @param fieldTitleOrInternalName The case-sensitive internal name or display name of the field to add.\n     */\n    ViewFields.prototype.add = function (fieldTitleOrInternalName) {\n        return this.clone(ViewFields, \"addviewfield('\" + fieldTitleOrInternalName + \"')\", true).post();\n    };\n    /**\n     * Moves the field with the specified field internal name to the specified position in the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to move.\n     * @param index The zero-based index of the new position for the field.\n     */\n    ViewFields.prototype.move = function (fieldInternalName, index) {\n        return this.clone(ViewFields, \"moveviewfieldto\", true).post({\n            body: JSON.stringify({ \"field\": fieldInternalName, \"index\": index }),\n        });\n    };\n    /**\n     * Removes all the fields from the collection.\n     */\n    ViewFields.prototype.removeAll = function () {\n        return this.clone(ViewFields, \"removeallviewfields\", true).post();\n    };\n    /**\n     * Removes the field with the specified field internal name from the collection.\n     *\n     * @param fieldInternalName The case-sensitive internal name of the field to remove from the view.\n     */\n    ViewFields.prototype.remove = function (fieldInternalName) {\n        return this.clone(ViewFields, \"removeviewfield('\" + fieldInternalName + \"')\", true).post();\n    };\n    return ViewFields;\n}(queryable_1.QueryableCollection));\nexports.ViewFields = ViewFields;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/views.js\n// module id = 49\n// module chunks = 0","\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar queryable_1 = require(\"./queryable\");\nvar LimitedWebPartManager = (function (_super) {\n    __extends(LimitedWebPartManager, _super);\n    function LimitedWebPartManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(LimitedWebPartManager.prototype, \"webparts\", {\n        /**\n         * Gets the set of web part definitions contained by this web part manager\n         *\n         */\n        get: function () {\n            return new WebPartDefinitions(this, \"webparts\");\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Exports a webpart definition\n     *\n     * @param id the GUID id of the definition to export\n     */\n    LimitedWebPartManager.prototype.export = function (id) {\n        return this.clone(LimitedWebPartManager, \"ExportWebPart\", true).post({\n            body: JSON.stringify({ webPartId: id }),\n        });\n    };\n    /**\n     * Imports a webpart\n     *\n     * @param xml webpart definition which must be valid XML in the .dwp or .webpart format\n     */\n    LimitedWebPartManager.prototype.import = function (xml) {\n        return this.clone(LimitedWebPartManager, \"ImportWebPart\", true).post({\n            body: JSON.stringify({ webPartXml: xml }),\n        });\n    };\n    return LimitedWebPartManager;\n}(queryable_1.Queryable));\nexports.LimitedWebPartManager = LimitedWebPartManager;\nvar WebPartDefinitions = (function (_super) {\n    __extends(WebPartDefinitions, _super);\n    function WebPartDefinitions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Gets a web part definition from the collection by id\n     *\n     * @param id GUID id of the web part definition to get\n     */\n    WebPartDefinitions.prototype.getById = function (id) {\n        return new WebPartDefinition(this, \"getbyid('\" + id + \"')\");\n    };\n    return WebPartDefinitions;\n}(queryable_1.QueryableCollection));\nexports.WebPartDefinitions = WebPartDefinitions;\nvar WebPartDefinition = (function (_super) {\n    __extends(WebPartDefinition, _super);\n    function WebPartDefinition() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(WebPartDefinition.prototype, \"webpart\", {\n        /**\n         * Gets the webpart information associated with this definition\n         */\n        get: function () {\n            return new WebPart(this);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Removes a webpart from a page, all settings will be lost\n     */\n    WebPartDefinition.prototype.delete = function () {\n        return this.clone(WebPartDefinition, \"DeleteWebPart\", true).post();\n    };\n    return WebPartDefinition;\n}(queryable_1.QueryableInstance));\nexports.WebPartDefinition = WebPartDefinition;\nvar WebPart = (function (_super) {\n    __extends(WebPart, _super);\n    /**\n     * Creates a new instance of the WebPart class\n     *\n     * @param baseUrl The url or Queryable which forms the parent of this fields collection\n     * @param path Optional, if supplied will be appended to the supplied baseUrl\n     */\n    function WebPart(baseUrl, path) {\n        if (path === void 0) { path = \"webpart\"; }\n        return _super.call(this, baseUrl, path) || this;\n    }\n    return WebPart;\n}(queryable_1.QueryableInstance));\nexports.WebPart = WebPart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/sharepoint/webparts.js\n// module id = 50\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar logging_1 = require(\"./logging\");\nfunction deprecated(message) {\n    return function (target, propertyKey, descriptor) {\n        var method = descriptor.value;\n        descriptor.value = function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            logging_1.Logger.log({\n                data: {\n                    descriptor: descriptor,\n                    propertyKey: propertyKey,\n                    target: target,\n                },\n                level: logging_1.LogLevel.Warning,\n                message: message,\n            });\n            return method.apply(this, args);\n        };\n    };\n}\nexports.deprecated = deprecated;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/decorators.js\n// module id = 51\n// module chunks = 0","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Reads a blob as text\n *\n * @param blob The data to read\n */\nfunction readBlobAsText(blob) {\n    return readBlobAs(blob, \"string\");\n}\nexports.readBlobAsText = readBlobAsText;\n/**\n * Reads a blob into an array buffer\n *\n * @param blob The data to read\n */\nfunction readBlobAsArrayBuffer(blob) {\n    return readBlobAs(blob, \"buffer\");\n}\nexports.readBlobAsArrayBuffer = readBlobAsArrayBuffer;\n/**\n * Generic method to read blob's content\n *\n * @param blob The data to read\n * @param mode The read mode\n */\nfunction readBlobAs(blob, mode) {\n    return new Promise(function (resolve, reject) {\n        try {\n            var reader = new FileReader();\n            reader.onload = function (e) {\n                resolve(e.target.result);\n            };\n            switch (mode) {\n                case \"string\":\n                    reader.readAsText(blob);\n                    break;\n                case \"buffer\":\n                    reader.readAsArrayBuffer(blob);\n                    break;\n            }\n        }\n        catch (e) {\n            reject(e);\n        }\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/utils/files.js\n// module id = 52\n// module chunks = 0"],"sourceRoot":""}