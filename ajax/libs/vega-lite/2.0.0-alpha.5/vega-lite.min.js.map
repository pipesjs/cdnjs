{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/json-stable-stringify/index.js","node_modules/jsonify/index.js","node_modules/jsonify/lib/parse.js","node_modules/jsonify/lib/stringify.js","node_modules/tslib/tslib.js","node_modules/vega-parser/src/parsers/event-selector.js","node_modules/vega-parser/src/parsers/marks/marktypes.js","node_modules/vega-util/build/vega-util.js","package.json","src/aggregate.ts","src/axis.ts","src/bin.ts","src/channel.ts","src/compile/axis/encode.ts","src/compile/axis/parse.ts","src/compile/axis/rules.ts","src/compile/common.ts","src/compile/compile.ts","src/compile/data/bin.ts","src/compile/data/data.ts","src/compile/data/filter.ts","src/compile/data/formatparse.ts","src/compile/data/formula.ts","src/compile/data/nonpositivefilter.ts","src/compile/data/nullfilter.ts","src/compile/data/pathorder.ts","src/compile/data/source.ts","src/compile/data/stack.ts","src/compile/data/summary.ts","src/compile/data/timeunit.ts","src/compile/facet.ts","src/compile/layer.ts","src/compile/layout.ts","src/compile/legend/encode.ts","src/compile/legend/parse.ts","src/compile/legend/rules.ts","src/compile/mark/area.ts","src/compile/mark/bar.ts","src/compile/mark/init.ts","src/compile/mark/line.ts","src/compile/mark/mark.ts","src/compile/mark/mixins.ts","src/compile/mark/point.ts","src/compile/mark/rect.ts","src/compile/mark/rule.ts","src/compile/mark/text.ts","src/compile/mark/tick.ts","src/compile/mark/valueref.ts","src/compile/model.ts","src/compile/scale/domain.ts","src/compile/scale/init.ts","src/compile/scale/parse.ts","src/compile/scale/range.ts","src/compile/scale/rules.ts","src/compile/scale/scale.ts","src/compile/scale/type.ts","src/compile/selection/interval.ts","src/compile/selection/multi.ts","src/compile/selection/selection.ts","src/compile/selection/single.ts","src/compile/selection/transforms/inputs.ts","src/compile/selection/transforms/nearest.ts","src/compile/selection/transforms/project.ts","src/compile/selection/transforms/scales.ts","src/compile/selection/transforms/toggle.ts","src/compile/selection/transforms/transforms.ts","src/compile/selection/transforms/translate.ts","src/compile/selection/transforms/zoom.ts","src/compile/unit.ts","src/compositemark.ts","src/config.ts","src/data.ts","src/datetime.ts","src/encoding.ts","src/fielddef.ts","src/filter.ts","src/legend.ts","src/log.ts","src/mark.ts","src/scale.ts","src/selection.ts","src/sort.ts","src/spec.ts","src/stack.ts","src/timeunit.ts","src/type.ts","src/util.ts","src/validate.ts","src/vega.schema.ts","src/vl.ts"],"names":["f","exports","module","define","amd","g","window","global","self","this","vl","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","json","JSON","obj","opts","cmp","space","Array","join","cycles","replacer","key","value","node","b","aobj","bobj","seen","stringify","parent","level","indent","colonSeparator","toJSON","undefined","_typeof","isArray","out","item","push","indexOf","TypeError","keys","objectKeys","sort","keyValue","splice","","x","toString","Object","has","prototype","hasOwnProperty","parse","at","ch","text","escapee","\"","\\","/","error","m","name","message","next","c","charAt","number","string","isFinite","hex","uffff","parseInt","String","fromCharCode","white","word","array","object","source","reviver","result","walk","holder","k","v","quote","escapable","lastIndex","test","replace","meta","charCodeAt","slice","str","partial","mind","gap","rep","apply","\b","\t","\n","\f","\r","__extends","__assign","__rest","__decorate","__param","__metadata","__awaiter","__generator","__exportStar","__values","__read","__spread","__asyncGenerator","__asyncDelegator","__asyncValues","factory","createExporter","previous","id","root","exporter","extendStatics","setPrototypeOf","__proto__","d","p","__","constructor","create","assign","arguments","getOwnPropertySymbols","decorators","target","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","paramIndex","decorator","metadataKey","metadataValue","metadata","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","done","then","body","verb","op","_","y","label","ops","pop","trys","sent","throw","return","Symbol","iterator","ar","concat","q","resume","shift","settle","delegate","fulfill","asyncIterator","find","endChar","pushChar","popChar","count","parseMerge","output","start","COMMA","LBRACK","LBRACE","RBRACK","RBRACE","substring","trim","parseSelector","parseBetween","parseStream","stream","GT","map","between","j","filter","DEFAULT_SOURCE","throttle","markname","lastIndexOf","parseThrottle","NAME","COLON","ILLEGAL","type","_marktypes","isMarkType","marktype","consume","debounce","split","selector","VIEW","marktypes","_vegaUtil","ArcMark","AreaMark","GroupMark","ImageMark","LineMark","PathMark","RectMark","RuleMark","ShapeMark","SymbolMark","TextMark","toSet","vega","accessorName","fn","fname","accessorFields","fields","$","isObject","isString","log","method","input","args","console","accessor","splitAccessPath","path","field","_field","Function","empty","identity","zero","one","truthy","falsy","None","Warn","Info","Debug","logger","_level","warn","info","debug","compare","orders","lt","gt","idx","ord","isFunction","constant","extend","len","extentIndex","NULL","fastmap","_test","size","get","set","delete","clear","clean","forEach","inherits","child","proto","isNumber","merge","array0","array1","n0","n1","merged","i0","i1","repeat","reps","pad","padchar","align","Math","ceil","peek","truncate","ellipsis","max","visitArray","visitor","stringValue","author","version","collaborators","homepage","description","main","types","bin","vl2png","vl2svg","vl2vg","directories","scripts","prebuild","build","postbuild","build:images","build:toc","build:site","build:versions","build:test-gallery","checkschema","data","deploy","deploy:gh","deploy:schema","prestart","poststart","preschema","schema","presite","site","lint","test:nocompile","test:only","test:debug","mocha:test","mocha:examples","codecov","watch:build","watch:test","watch","x-compile","x-diff","repository","url","license","bugs","devDependencies","@types/chai","@types/highlight.js","@types/d3","@types/json-stable-stringify","@types/mocha","@types/node","ajv","babel-preset-es2015","babelify","browser-sync","browserify","browserify-shim","chai","cheerio","d3","exorcist","highlight.js","mocha","nodemon","nyc","source-map-support","tsify","tslint","tslint-eslint-rules","typescript","typescript-json-schema","uglify-js","vega-datasets","vega-embed","vega-parser","watchify","yaml-front-matter","dependencies","json-stable-stringify","tslib","vega-util","yargs","AGGREGATE_OPS","SUM_OPS","SHARED_DOMAIN_OPS","defaultAxisConfig","labelMaxLength","AXIS_PROPERTIES","VL_ONLY_AXIS_PROPERTIES","autoMaxBins","channel","channel_1","ROW","COLUMN","SIZE","SHAPE","supportMark","mark","getSupportedMark","X","Y","COLOR","DETAIL","ORDER","OPACITY","point","tick","rule","circle","square","bar","rect","line","area","X2","Y2","TEXT","hasScale","util_1","contains","supportScaleType","scaleType","POSITION_SCALE_TYPE_INDEX","rangeType","Channel","scale_1","CHANNELS","UNIT_CHANNELS","UNIT_SCALE_CHANNELS","SCALE_CHANNELS","NONSPATIAL_CHANNELS","NONSPATIAL_SCALE_CHANNELS","STACK_GROUP_CHANNELS","without","SCALE_TYPES","labels","model","labelsSpec","def","fieldDef","axis","config","type_1","NOMINAL","ORDINAL","signal","TEMPORAL","common_1","timeFormatExpression","timeUnit","format","shortTimeLabels","timeFormat","labelAngle","angle","orient","baseline","parseAxisComponent","axisChannels","reduce","vgAxes","parseMainAxis","isVisibleAxis","grid","parseGridAxis","isFalseOrNull","some","AXIS_PARTS","part","hasAxisPart","parseAxis","isGridAxis","vgAxis","scale","scaleName","axis_1","property","getSpecifiedOrDefaultValue","gridScale","encodeSpec","encode","update","specifiedAxis","rules","domain","ticks","tickCount","title","values","zindex","numberFormat","gridShow","hasDiscreteScale","gridChannel","INVALID_CHANNEL_FOR_AXIS","fieldTitle","fielddef_1","maxLength","titleMaxLength","vals","datetime_1","isDateTime","dt","timestamp","z","domainAndTicks","buildModel","spec","parentGivenName","spec_1","isFacetSpec","facet_1","FacetModel","isLayerSpec","layer_1","LayerModel","isUnitSpec","unit_1","UnitModel","INVALID_SPEC","applyConfig","propsList","applyMarkConfig","getMarkConfig","prop","markSpecificConfig","QUANTITATIVE","aggregate","timeFormatConfig","_format","timeunit_1","formatExpression","sortParams","orderDef","orderChannelDef","binSuffix","order","compile","inputSpec","normalize","assemble","reset","$schema","topLevelBasicProperties","signals","selection_1","assembleTopLevelSignals","assembleData","assembleLayout","assembleSelectionData","marks","assembleRootGroup","padding","autosize","viewport","background","rootGroup","getName","from","data_1","LAYOUT","width","height","assembleParentGroupProperties","cell","assembleGroup","numberFormatExpr","expr","reduceFieldDef","binComponent","binTrans","as","transform","extent","extentSignal","maxbins","bin_1","hasDiscreteDomainOrHasLegend","hasDiscreteDomain","legend","startField","datum","endField","hash","parseUnit","parseFacet","childDataComponent","component","parseLayer","children","flatten","parseUnitData","formatParse","formatparse_1","nullFilter","nullfilter_1","filter_1","nonPositiveFilter","nonpositivefilter_1","pathOrder","pathorder_1","source_1","calculate","formula_1","formula","summary","summary_1","stack","stack_1","parseFacetData","parseLayerData","dataComponent","sourceData","dataName","SOURCE","summaryData","nonPositiveFilterTransform","dataTable","stackData","pathOrderCollectTransform","expression","filterComponent","compatibleSource","calcFieldMap","fieldMap","parseComponent","val","isEqualFilter","equal","isRangeFilter","range","isOneOfFilter","oneOf","forEachFieldDef","isCount","isUrlData","parse_1","differ","formulaComponent","channels","nonPositiveComponent","ScaleType","LOG","nonPositiveFilterComponent","filterInvalid","aggregator","DEFAULT_NULL_FILTERS","nominal","ordinal","quantitative","temporal","nullFilterComponent","filters","_filters","encoding_1","sort_1","channelHasField","encoding","dimensionChannel","markDef","sortField","isSortField","isAggregate","pathOrderComponent","stringifiedPathOrder","_i","_a","_b","_c","isInlineData","defaultExtension","exec","dataFormat","formatType","feature","mesh","isNamedData","renameData","childData","canMerge","getStackByFields","stackBy","by","stackProperties","groupby","groupbyChannel","groupbyFieldDef","stackby","STACKED","SUMMARY","fieldChannel","offset","impute","stackComponent","newName","facetedField","orderby","addDimension","dims","meas","dimensions","measures","summaryComponents","summaryComponent","summaryNameWithoutPrefix","substr","mergeMeasures","parentMeasures","childMeasures","field_1","summaries","childSummary","sourceName","fnDictSet","ops_1","timeUnitComponent","fieldExpr","hasSubPlotWithXy","hasDescendantWithFieldOnChannel","spacing","facetSpacing","getFacetGroupProperties","mergedCellConfig","facet","sizeName","assembleAxesGroupData","column","COLUMN_AXES_DATA_PREFIX","row","ROW_AXES_DATA_PREFIX","parseAxisGroups","axisGroup","getSharedAxisGroup","rules_1","axes","isX","facetChannel","hasFacet","dataPrefix","axesGroup","group","getRowGridGroups","facetGridConfig","rowGrid","x2","stroke","color","strokeOpacity","opacity","strokeWidth","getColumnGridGroups","columnGrid","y2","config_1","layout_1","model_1","init_1","parse_2","_super","_this","scales","legends","_spacing","initConfig","initFacet","initScalesAndSpacing","initAxis","tslib_1","specConfig","mergeDeep","duplicate","defaultConfig","emptyFieldDef","incompatibleChannel","_scale","default","_axis","axisSpec","vlOnlyAxisProperties_1","modelAxis","yAxis","hasSummary","facetedTable","parseData","parseSelection","parseLayoutData","layout","parseFacetLayout","parseScale","scaleComponent","scaleNameWithoutPrefix","renameScale","parseMark","parseAxisGroup","xAxisGroup","yAxisGroup","axisGroups","parseGridGroup","gridGroups","parseLegend","assembleSignals","layoutData","assembleMarks","getMapping","isFacet","Model","mark_1","data_2","domain_1","layer","parseLayerLayout","childScales","modelScales","unionDomains","binLegend","binLegendLabel","axisComponent","legendComponent","cellConfig","FILL_STROKE_CONFIG","isLayer","compatible","layoutComponent","distinctFields","distinct","parseUnitLayout","parseUnitSizeLayout","getDistinct","channelSizeName","unitSizeExpr","rangeStep","cardinality","cardinalityExpr","paddingOuter","paddingInner","parseFacetSizeLayout","childLayoutComponent","sizeType","childSizeComponent","facetSizeFormula","innerSize","parseLayerSizeLayout","sizeType_1","distinctField","prefix","symbols","symbolsSpec","BAR","TICK","shape","CIRCLE","SQUARE","POINT","LINE","AREA","cfg","filled","colorDef","isValueDef","fill","shapeDef","hasContinuousDomain","scale_2","BIN_LEGEND_LABEL_SUFFIX","parseLegendComponent","getLegendDefWithScale","suffix","BIN_LEGEND_SUFFIX","legend_1","LEGEND_PROPERTIES","specifiedLegend","mixins","vgMark","role","encodeEntry","pointPosition","pointPosition2","nonPosition","markDefProperties","sizeDef","xDef","xScaleName","xScale","isFieldDef","binnedPosition","binSpacing","BAND","bandPosition","centeredBandPosition","ref","midX","defaultSizeRef","yDef","yScaleName","yScale","midY","discreteBandSize","band","continuousBandSize","BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL","initMarkDef","isMarkDef","specifiedOrient","orientOverridden","initEncoding","stacked","opacityConfig","defaultOpacity","filledConfig","RULE","RECT","yIsRange","xIsRange","xScaleType","yScaleType","xIsContinuous","isContinuous","yIsContinuous","xIsTemporal","yIsTemporal","unclearOrientContinuous","unclearOrientDiscreteOrEmpty","vgChannel","parsePathMark","parseNonPathMark","dataFrom","details","detailFields","pathMarks","markCompiler","FACETED_PATH_PREFIX","NONSPATIAL_CHANNELS_EXCEPT_ORDER","area_1","bar_1","line_1","point_1","rect_1","rule_1","text_1","tick_1","defaultValue","util","props","valueIfDefined","opt","defaultRef","channelDef","valueRef","midPoint","wrapCondition","condition","selection","selectionTest","selectionName","negate","predicate","sizeChannel","fieldRef","defaultPosRef","centerChannel","stackable","baseChannel","stackable2","fixedShape","shapeMixins","x2Def","scaleTypeNotWorkWithMark","y2Def","xDefault","textDef","textXRangeStep","alignConfig","defaultSize","scaleRangeStep","bandSize","vgSizeChannel","vgThicknessChannel","thickness","aFieldDef","a2fieldDef","side","binMidSignal","zeroOrMinX","zeroOrMinY","zeroOrMaxX","zeroOrMaxY","TIME","UTC","NameMap","nameMap","rename","oldName","dataNameMap","scaleNameMap","sizeNameMap","DEPRECATED_FILTER_NULL","assembleScales","arr","assembleAxes","assembleLegends","init","acc","cd","isUnit","delimiter","dataSourceType","renameSize","originalScaleName","initDomain","scaleConfig","canUseUnaggregatedDomain","valid","reason","useUnaggregatedDomain","parseDomain","parseSingleChannelDomain","domainSort","isBoolean","aggregate_1","unaggregateDomainWithNonSharedDomainOp","unaggregatedDomainWithLogScale","unaggregateDomainHasNoEffectForRawField","normalizeDomain","vega_schema_1","isDataRefDomain","isFieldRefUnionDomain","isDataRefUnionedDomain","INVAID_DOMAIN","domain1","domain2","normalizedDomain1","normalizedDomain2","domains","unique","allData","topLevelSize","xyRangeSteps","specifiedScale","NON_TYPE_RANGE_SCALE_PROPERTIES","specifiedValue","supportedByScaleType","scaleTypeSupportProperty","channelIncompatability","channelScalePropertyIncompatability","scalePropertyNotWorkWithScaleType","getValue","range_1","getDefaultValue","nice","round","parseScaleComponent","scaleComponentsIndex","scaleComponents","parseMainScale","parseBinLegend","parseBinLegendLabel","parseRange","NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES","reverse","scheme","isExtendedScheme","rangeMixins","specifiedRangeStepIsNull","RANGE_PROPERTIES_1","RANGE_PROPERTIES","stepSize","rangeStepDropped","rangeMin","sizeRangeMin","rangeMax","sizeRangeMax","defaultRange","minOpacity","maxOpacity","minBandSize","minStrokeWidth","minFontSize","minSize","maxBandSize","minXYRangeStep","maxStrokeWidth","maxFontSize","maxSize","pointStep","min","smallestUnit","pointPadding","bandPaddingInner","bandPaddingOuter","specifiedType","hasTopLevelSize","specifiedRangeStep","newScaleType","defaultType","scaleTypeNotWorkWithChannel","discreteToContinuousType","discreteChannelCannotEncode","isDiscreteByDefault","LINEAR","invalidFieldType","haveRangeStep","projections","selCmpt","project","channelSignal","channelSignalName","coord","invert","bind","on","scales_1","events","evt","cb","log_1","BRUSH","interval","intervals","translate","cs","tupleExpr","modifyExpr","tpl","TUPLE","enter","multi","proj","parseUnitSelection","selDefs","selCmpts","selectionConfig","name_1","selDef","encodings","event_selector_1","transforms_1","forEachTransform","txCompiler","assembleUnitSignals","forEachSelection","selCompiler","MODIFY","STORE","topLevelSignals","assembleUnitData","assembleUnitMarks","clippedGroup","selMarks","clip","store","PREDICATES_OPS","compiler","selections","name_2","sel","single_1","multi_1","interval_1","single","independent","union","union_others","intersect","intersect_others","inputBindings","unshift","VORONOI","nearest","index","isPathgroup","exists","cellDef","isVoronoi","projection","scaleBindings","bound","domainRaw","TOGGLE","toggle","compilers","project_1","toggle_1","translate_1","zoom_1","inputs_1","nearest_1","zoom","inputs","getSign","onDelta","anchor","ANCHOR","delta","DELTA","sign","lo","hi","base","sx","sy","force","sname","vlEncoding","mark_2","parse_3","init_2","providedWidth","providedHeight","dropInvalidFieldDefs","initScales","initAxes","initLegend","initSize","hasFacetParent","topLevelWidth","topLevelHeight","_legend","legendSpec","toSpec","excludeConfig","excludeData","add","normalizer","normalizerRegistry","remove","ERRORBAR","outerSpec","encodingWithoutSize","encodingWithoutX2Y2","defaultCellConfig","defaultFacetCellConfig","defaultFacetGridConfig","defaultFacetConfig","defaultOverlayConfig","pointStyle","lineStyle","countTitle","defaultMarkConfig","defaultBarConfig","defaultTextConfig","defaultTickConfig","overlay","defaultScaleConfig","defaultLegendConfig","year","quarter","month","date","day","hours","minutes","seconds","milliseconds","normalizeQuarter","invalidTimeUnit","normalizeMonth","lowerM","toLowerCase","monthIndex","MONTHS","shortM","shortMonthIndex","SHORT_MONTHS","normalizeDay","lowerD","dayIndex","DAYS","shortD","shortDayIndex","SHORT_DAYS","Date","droppedDay","setFullYear","SUNDAY_YEAR","setDate","setMonth","setHours","setMinutes","setSeconds","setMilliseconds","getTime","dateTimeExpr","units","channelDefs","isRanged","fieldDefs","mapping","r1","nofn","isDiscrete","toUpperCase","fullType","getFullName","newType","emptyOrInvalidFieldType","channelCompatibility","warning","facetChannelShouldBeDiscrete","COMPATIBLE","in","valueExpr","lower","upper","isSingleTimeUnit","datetime","runLocalLogger","localLogger","current","LocalLogger","wrap","vega_util_1","warns","infos","debugs","markOrFacet","when","original","actual","cannotUseScalePropertyWithNonColor","cannotUseRangePropertyWithFacet","propName","cannotStackRangedMark","cannotStackNonLinearScale","cannotStackNonSummativeAggregate","unitName","dayReplacedWithDate","fullTimeUnit","CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN","CANNOT_USE_RANGE_WITH_POSITION","CANNOT_USE_PADDING_WITH_FACET","isPrimitiveMark","markType","PRIMITIVE_MARK_INDEX","Mark","PRIMITIVE_MARKS","STROKE_CONFIG","FILL_CONFIG","DISCRETE_DOMAIN_INDEX","CONTINUOUS_DOMAIN_INDEX","isContinuousToContinuous","CONTINUOUS_TO_CONTINUOUS_INDEX","POW","SQRT","SEQUENTIAL","QUANTILE","QUANTIZE","THRESHOLD","CONTINUOUS_TO_CONTINUOUS_SCALES","CONTINUOUS_DOMAIN_SCALES","DISCRETE_DOMAIN_SCALES","TIME_SCALE_TYPES","shapes","SCALE_PROPERTIES","isFacetedUnitSpec","hasRow","hasColumn","normalizeFacet","normalizeLayer","normalizeFacetedUnit","normalizeNonFacetUnit","normalizeNonFacet","subspec","rest","isNonFacetUnitSpecWithPrimitiveMark","overlayConfig","overlayWithLine","overlayWithPoint","normalizeRangedUnit","normalizeOverlay","compositeMark","hasX","hasY","hasX2","hasY2","normalizedSpec","outerProps","baseSpec","omit","baseConfig","layerSpec","pick","lineSpec","markConfig","pointSpec","accumulate","dict","pureFieldDef","fieldDefIndex","isStacked","stackConfig","STACKABLE_MARKS","sc","hasXField","hasYField","xIsAggregate","yIsAggregate","fieldChannelAggregate","fieldChannelScale","stackOffset","STACK_BY_DEFAULT_MARKS","SINGLE_TIMEUNIT_INDEX","convert","unit","SINGLE_TIMEUNITS","singleUnit","containsTimeUnit","TimeUnit","DAY","YEAR","getFullYear","QUARTER","floor","getMonth","MONTH","DATE","getDate","HOURS","getHours","MINUTES","getMinutes","SECONDS","getSeconds","MILLISECONDS","getMilliseconds","isMultiTimeUnit","MULTI_TIMEUNIT_INDEX","fullTimeUnitStr","timeUnitStr","func","_d","tu","dateComponents","hasYear","timeComponents","dateTimeComponents","YEARMONTH","YEARMONTHDATE","YEARMONTHDATEHOURS","YEARMONTHDATEHOURSMINUTES","YEARMONTHDATEHOURSMINUTESSECONDS","MONTHDATE","HOURSMINUTES","HOURSMINUTESSECONDS","MINUTESSECONDS","SECONDSMILLISECONDS","YEARQUARTER","QUARTERMONTH","YEARQUARTERMONTH","MULTI_TIMEUNITS","TIMEUNITS","Type","copy","vega_util_2","excludedItems","other","every","arrays","dest","src","src_1","deepMerge_","results","values_1","_vals","getEncodingMappingError","requiredChannelMap","supportedChannelMap","DEFAULT_REQUIRED_CHANNEL_MAP","DEFAULT_SUPPORTED_CHANNEL_TYPE","requiredChannels","supportedChannels","compile_1","validate"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,GAAAV,MAAA,WAAA,GAAAG,EAAA,OAAA,SAAAQ,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,gOCAI0B,EAAuB,mBAATC,MAAuBA,KAAOT,EAAQ,UAExDjB,GAAOD,QAAU,SAAU4B,EAAKC,GACvBA,IAAMA,MACS,kBAATA,KAAqBA,GAASC,IAAKD,GAC9C,IAAIE,GAAQF,EAAKE,OAAS,EACL,iBAAVA,KAAoBA,EAAQC,MAAMD,EAAM,GAAGE,KAAK,KAC3D,IAAIC,GAAiC,iBAAhBL,GAAKK,QAAwBL,EAAKK,OACnDC,EAAWN,EAAKM,UAAY,SAASC,EAAKC,GAAS,MAAOA,IAE1DP,EAAMD,EAAKC,KAAQ,SAAU/B,GAC7B,MAAO,UAAUuC,GACb,MAAO,UAAUrB,EAAGsB,GAChB,GAAIC,IAASJ,IAAKnB,EAAGoB,MAAOC,EAAKrB,IAC7BwB,GAASL,IAAKG,EAAGF,MAAOC,EAAKC,GACjC,OAAOxC,GAAEyC,EAAMC,MAGxBZ,EAAKC,KAEJY,IACJ,OAAQ,SAASC,GAAWC,EAAQR,EAAKE,EAAMO,GAC3C,GAAIC,GAASf,EAAS,KAAO,GAAIC,OAAMa,EAAQ,GAAGZ,KAAKF,GAAU,GAC7DgB,EAAiBhB,EAAQ,KAAO,GAQpC,IANIO,GAAQA,EAAKU,QAAiC,kBAAhBV,GAAKU,SACnCV,EAAOA,EAAKU,UAGhBV,EAAOH,EAASZ,KAAKqB,EAAQR,EAAKE,GAErBW,SAATX,EAAJ,CAGA,GAAoB,YAAhB,mBAAOA,GAAP,YAAAY,EAAOZ,KAA8B,OAATA,EAC5B,MAAOZ,GAAKiB,UAAUL,EAE1B,IAAIa,EAAQb,GAAO,CAEf,IAAK,GADDc,MACKjC,EAAI,EAAGA,EAAImB,EAAKd,OAAQL,IAAK,CAClC,GAAIkC,GAAOV,EAAUL,EAAMnB,EAAGmB,EAAKnB,GAAI0B,EAAM,IAAMnB,EAAKiB,UAAU,KAClES,GAAIE,KAAKR,EAASf,EAAQsB,GAE9B,MAAO,IAAMD,EAAInB,KAAK,KAAOa,EAAS,IAGtC,GAAIJ,EAAKa,QAAQjB,MAAU,EAAI,CAC3B,GAAIJ,EAAQ,MAAOR,GAAKiB,UAAU,YAClC,MAAM,IAAIa,WAAU,yCAEnBd,EAAKY,KAAKhB,EAIf,KAAK,GAFDmB,GAAOC,EAAWpB,GAAMqB,KAAK7B,GAAOA,EAAIQ,IACxCc,KACKjC,EAAI,EAAGA,EAAIsC,EAAKjC,OAAQL,IAAK,CAClC,GAAIiB,GAAMqB,EAAKtC,GACXkB,EAAQM,EAAUL,EAAMF,EAAKE,EAAKF,GAAMS,EAAM,EAElD,IAAIR,EAAJ,CAEA,GAAIuB,GAAWlC,EAAKiB,UAAUP,GACxBW,EACAV,CAENe,GAAIE,KAAKR,EAASf,EAAQ6B,IAG9B,MADAlB,GAAKmB,OAAOnB,EAAKa,QAAQjB,GAAO,GACzB,IAAMc,EAAInB,KAAK,KAAOa,EAAS,OAEzCgB,GAAIlC,GAAO,GAAIA,EAAK,GAG7B,IAAIuB,GAAUnB,MAAMmB,SAAW,SAAUY,GACrC,MAA+B,sBAArBC,SAASzC,KAAKwC,IAGxBL,EAAaO,OAAOR,MAAQ,SAAU7B,GACtC,GAAIsC,GAAMD,OAAOE,UAAUC,gBAAkB,WAAc,OAAO,GAC9DX,IACJ,KAAK,GAAIrB,KAAOR,GACRsC,EAAI3C,KAAKK,EAAKQ,IAAMqB,EAAKH,KAAKlB,EAEtC,OAAOqB,iDClFXzD,GAAQqE,MAAQnD,EAAQ,eACxBlB,EAAQ2C,UAAYzB,EAAQ,8FCDxBoD,GACAC,EAWAC,EA4IAnC,8MAtJAoC,GACIC,IAAM,IACNC,KAAM,KACNC,IAAM,IACNrC,EAAM,KACNxC,EAAM,KACNa,EAAM,KACNC,EAAM,KACNF,EAAM,MAIVkE,EAAQ,SAAUC,GAEd,MACIC,KAAS,cACTC,QAASF,EACTR,GAASA,EACTE,KAASA,IAIjBS,EAAO,SAAUC,GAWb,MATIA,IAAKA,IAAMX,GACXM,EAAM,aAAeK,EAAI,iBAAmBX,EAAK,KAMrDA,EAAKC,EAAKW,OAAOb,GACjBA,GAAM,EACCC,GAGXa,EAAS,QAAAA,KAEL,GAAIA,GACAC,EAAS,EAMb,KAJW,MAAPd,IACAc,EAAS,IACTJ,EAAK,MAEFV,GAAM,KAAOA,GAAM,KACtBc,GAAUd,EACVU,GAEJ,IAAW,MAAPV,EAEA,IADAc,GAAU,IACHJ,KAAUV,GAAM,KAAOA,GAAM,KAChCc,GAAUd,CAGlB,IAAW,MAAPA,GAAqB,MAAPA,EAOd,IANAc,GAAUd,EACVU,IACW,MAAPV,GAAqB,MAAPA,IACdc,GAAUd,EACVU,KAEGV,GAAM,KAAOA,GAAM,KACtBc,GAAUd,EACVU,GAIR,OADAG,IAAUC,EACLC,SAASF,GAGHA,MAFPP,GAAM,eAMdQ,EAAS,QAAAA,KAEL,GAAIE,GACApE,EAEAqE,EADAH,EAAS,EAIb,IAAW,MAAPd,EACA,KAAOU,KAAQ,CACX,GAAW,MAAPV,EAEA,MADAU,KACOI,CACJ,IAAW,OAAPd,EAEP,GADAU,IACW,MAAPV,EAAY,CAEZ,IADAiB,EAAQ,EACHrE,EAAI,EAAGA,EAAI,IACZoE,EAAME,SAASR,IAAQ,IAClBK,SAASC,IAFCpE,GAAK,EAKpBqE,EAAgB,GAARA,EAAaD,CAEzBF,IAAUK,OAAOC,aAAaH,OAC3B,CAAA,GAA2B,gBAAhBf,GAAQF,GAGtB,KAFAc,IAAUZ,EAAQF,OAKtBc,IAAUd,EAItBM,EAAM,eAGVe,EAAQ,WAIJ,KAAOrB,GAAMA,GAAM,KACfU,KAIRY,EAAO,WAIH,OAAQtB,GACR,IAAK,IAKD,MAJAU,GAAK,KACLA,EAAK,KACLA,EAAK,KACLA,EAAK,MACE,CACX,KAAK,IAMD,MALAA,GAAK,KACLA,EAAK,KACLA,EAAK,KACLA,EAAK,KACLA,EAAK,MACE,CACX,KAAK,IAKD,MAJAA,GAAK,KACLA,EAAK,KACLA,EAAK,KACLA,EAAK,KACE,KAEXJ,EAAM,eAAiBN,EAAK,MAKhCuB,EAAQ,QAAAA,KAIJ,GAAIA,KAEJ,IAAW,MAAPvB,EAAY,CAGZ,GAFAU,EAAK,KACLW,IACW,MAAPrB,EAEA,MADAU,GAAK,KACEa,CAEX,MAAOvB,GAAI,CAGP,GAFAuB,EAAMxC,KAAKjB,KACXuD,IACW,MAAPrB,EAEA,MADAU,GAAK,KACEa,CAEXb,GAAK,KACLW,KAGRf,EAAM,cAGVkB,EAAS,QAAAA,KAIL,GAAI3D,GACA2D,IAEJ,IAAW,MAAPxB,EAAY,CAGZ,GAFAU,EAAK,KACLW,IACW,MAAPrB,EAEA,MADAU,GAAK,KACEc,CAEX,MAAOxB,GAAI,CASP,GARAnC,EAAMiD,IACNO,IACAX,EAAK,KACDhB,OAAOG,eAAe7C,KAAKwE,EAAQ3D,IACnCyC,EAAM,kBAAoBzC,EAAM,KAEpC2D,EAAO3D,GAAOC,IACduD,IACW,MAAPrB,EAEA,MADAU,GAAK,KACEc,CAEXd,GAAK,KACLW,KAGRf,EAAM,cAGdxC,GAAQ,WAMJ,OADAuD,IACQrB,GACR,IAAK,IACD,MAAOwB,IACX,KAAK,IACD,MAAOD,IACX,KAAK,IACD,MAAOT,IACX,KAAK,IACD,MAAOD,IACX,SACI,MAAOb,IAAM,KAAOA,GAAM,IAAMa,IAAWS,MAOnD5F,EAAOD,QAAU,SAAUgG,EAAQC,GAC/B,GAAIC,EAiBJ,OAfA1B,GAAOwB,EACP1B,EAAK,EACLC,EAAK,IACL2B,EAAS7D,IACTuD,IACIrB,GACAM,EAAM,gBASgB,kBAAZoB,GAA0B,QAASE,GAAKC,EAAQhE,GAC1D,GAAIiE,GAAGC,EAAGjE,EAAQ+D,EAAOhE,EACzB,IAAIC,GAA0B,YAAjB,mBAAOA,GAAP,YAAAa,EAAOb,IAChB,IAAKgE,IAAKhE,GACF4B,OAAOE,UAAUC,eAAe7C,KAAKc,EAAOgE,KAC5CC,EAAIH,EAAK9D,EAAOgE,GACNpD,SAANqD,EACAjE,EAAMgE,GAAKC,QAEJjE,GAAMgE,GAK7B,OAAOJ,GAAQ1E,KAAK6E,EAAQhE,EAAKC,KAClCyB,GAAIoC,GAAS,IAAOA,uCChQ3B,SAASK,GAAMlB,GAOX,MADAmB,GAAUC,UAAY,EACfD,EAAUE,KAAKrB,GAAU,IAAMA,EAAOsB,QAAQH,EAAW,SAAUvF,GACtE,GAAIiE,GAAI0B,EAAK3F,EACb,OAAoB,gBAANiE,GAAiBA,EAC3B,OAAS,OAASjE,EAAE4F,WAAW,GAAG7C,SAAS,KAAK8C,OAAM,KACzD,IAAM,IAAMzB,EAAS,IAG9B,QAAS0B,GAAI3E,EAAKgE,GAEd,GAAIjF,GACAkF,EACAC,EACA9E,EAEAwF,EADAC,EAAOC,EAEP7E,EAAQ+D,EAAOhE,EAenB,QAZIC,GAA0B,YAAjB,mBAAOA,GAAP,YAAAa,EAAOb,KACY,kBAAjBA,GAAMW,SACjBX,EAAQA,EAAMW,OAAOZ,IAKN,kBAAR+E,KACP9E,EAAQ8E,EAAI5F,KAAK6E,EAAQhE,EAAKC,IAIlC,mBAAeA,GAAf,YAAAa,EAAeb,IACX,IAAK,SACD,MAAOkE,GAAMlE,EAEjB,KAAK,SAED,MAAOiD,UAASjD,GAASqD,OAAOrD,GAAS,MAE7C,KAAK,UACL,IAAK,OAID,MAAOqD,QAAOrD,EAElB,KAAK,SACD,IAAKA,EAAO,MAAO,MAKnB,IAJA6E,GAAOpE,EACPkE,KAG+C,mBAA3C/C,OAAOE,UAAUH,SAASoD,MAAM/E,GAA6B,CAE7D,IADAb,EAASa,EAAMb,OACVL,EAAI,EAAGA,EAAIK,EAAQL,GAAK,EACzB6F,EAAQ7F,GAAK4F,EAAI5F,EAAGkB,IAAU,MASlC,OAJAiE,GAAuB,IAAnBU,EAAQxF,OAAe,KAAO0F,EAC9B,MAAQA,EAAMF,EAAQ/E,KAAK,MAAQiF,GAAO,KAAOD,EAAO,IACxD,IAAMD,EAAQ/E,KAAK,KAAO,IAC9BiF,EAAMD,EACCX,EAKX,GAAIa,GAAsB,YAAf,mBAAOA,GAAP,YAAAjE,EAAOiE,IAEd,IADA3F,EAAS2F,EAAI3F,OACRL,EAAI,EAAGA,EAAIK,EAAQL,GAAK,EACzBkF,EAAIc,EAAIhG,GACS,gBAANkF,KACPC,EAAIS,EAAIV,EAAGhE,GACPiE,GACAU,EAAQ1D,KAAKiD,EAAMF,IAAMa,EAAM,KAAO,KAAOZ,QAOzD,KAAKD,IAAKhE,GACF4B,OAAOE,UAAUC,eAAe7C,KAAKc,EAAOgE,KAC5CC,EAAIS,EAAIV,EAAGhE,GACPiE,GACAU,EAAQ1D,KAAKiD,EAAMF,IAAMa,EAAM,KAAO,KAAOZ,GAajE,OAJAA,GAAuB,IAAnBU,EAAQxF,OAAe,KAAO0F,EAC9B,MAAQA,EAAMF,EAAQ/E,KAAK,MAAQiF,GAAO,KAAOD,EAAO,IACxD,IAAMD,EAAQ/E,KAAK,KAAO,IAC9BiF,EAAMD,EACCX,MAvHXY,GACApE,EAUAqE,8MAZAX,EAAY,2HAGZI,GACIS,KAAM,MACNC,KAAM,MACNC,KAAM,MACNC,KAAM,MACNC,KAAM,MACN/C,IAAM,MACNC,KAAM,OAkHd1E,GAAOD,QAAU,SAAUqC,EAAOF,EAAUJ,GACxC,GAAIZ,EAMJ,IALA+F,EAAM,GACNpE,EAAS,GAIY,gBAAVf,GACP,IAAKZ,EAAI,EAAGA,EAAIY,EAAOZ,GAAK,EACxB2B,GAAU,QAIQ,gBAAVf,KACZe,EAASf,EAMb,IADAoF,EAAMhF,EACFA,GAAgC,kBAAbA,KACC,YAApB,mBAAOA,GAAP,YAAAe,EAAOf,KAAoD,gBAApBA,GAASX,QAChD,KAAM,IAAIJ,OAAM,iBAKpB,OAAO2F,GAAI,IAAKjD,GAAIzB,0DCzIpBqF,GACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,+MACJ,SAAWC,GAWP,QAASC,GAAe1I,EAAS2I,GAC7B,MAAO,UAAUC,EAAItC,GAAK,MAAOtG,GAAQ4I,GAAMD,EAAWA,EAASC,EAAItC,GAAKA,GAXhF,GAAIuC,GAAyB,YAAlB,mBAAOvI,GAAP,YAAA4C,EAAO5C,IAAsBA,EAAyB,YAAhB,mBAAOC,MAAP,YAAA2C,EAAO3C,OAAoBA,KAAuB,WAAhB2C,EAAO1C,MAAoBA,OACxF,mBAAXN,IAAyBA,EAAOC,IACvCD,EAAO,SAAU,WAAY,SAAUF,GAAWyI,EAAQC,EAAeG,EAAMH,EAAe1I,OAG9FyI,EADuB,YAAlB,mBAAOxI,GAAP,YAAAiD,EAAOjD,KAAiD,WAA1BiD,EAAOjD,EAAOD,SACzC0I,EAAeG,EAAMH,EAAezI,EAAOD,UAG3C0I,EAAeG,KAM9B,SAAUC,GACP,GAAIC,GAAgB9E,OAAO+E,iBACpBC,uBAA2BjH,QAAS,SAAUkH,EAAG3G,GAAK2G,EAAED,UAAY1G,IACvE,SAAU2G,EAAG3G,GAAK,IAAK,GAAI4G,KAAK5G,GAAOA,EAAE6B,eAAe+E,KAAID,EAAEC,GAAK5G,EAAE4G,IAEzEzB,GAAY,SAAUwB,EAAG3G,GAErB,QAAS6G,KAAO5I,KAAK6I,YAAcH,EADnCH,EAAcG,EAAG3G,GAEjB2G,EAAE/E,UAAkB,OAAN5B,EAAa0B,OAAOqF,OAAO/G,IAAM6G,EAAGjF,UAAY5B,EAAE4B,UAAW,GAAIiF,KAGnFzB,EAAW1D,OAAOsF,QAAU,SAAU5I,GAClC,IAAK,GAAIG,GAAGK,EAAI,EAAGP,EAAI4I,UAAUhI,OAAQL,EAAIP,EAAGO,IAAK,CACjDL,EAAI0I,UAAUrI,EACd,KAAK,GAAIgI,KAAKrI,GAAOmD,OAAOE,UAAUC,eAAe7C,KAAKT,EAAGqI,KAAIxI,EAAEwI,GAAKrI,EAAEqI,IAE9E,MAAOxI,IAGXiH,EAAS,SAAU9G,EAAGJ,GAClB,GAAIC,KACJ,KAAK,GAAIwI,KAAKrI,GAAOmD,OAAOE,UAAUC,eAAe7C,KAAKT,EAAGqI,IAAMzI,EAAE6C,QAAQ4F,GAAK,IAC9ExI,EAAEwI,GAAKrI,EAAEqI,GACb,IAAS,MAALrI,GAAqD,kBAAjCmD,QAAOwF,sBAC3B,IAAK,GAAItI,GAAI,EAAGgI,EAAIlF,OAAOwF,sBAAsB3I,GAAIK,EAAIgI,EAAE3H,OAAQL,IAAST,EAAE6C,QAAQ4F,EAAEhI,IAAM,IAC1FR,EAAEwI,EAAEhI,IAAML,EAAEqI,EAAEhI,IACtB,OAAOR,IAGXkH,EAAa,SAAU6B,EAAYC,EAAQvH,EAAKwH,GAC5C,GAA2HV,GAAvHhE,EAAIsE,UAAUhI,OAAQX,EAAIqE,EAAI,EAAIyE,EAAkB,OAATC,EAAgBA,EAAO3F,OAAO4F,yBAAyBF,EAAQvH,GAAOwH,CACrH,IAAuB,YAAnB,mBAAOE,SAAP,YAAA5G,EAAO4G,WAAoD,kBAArBA,SAAQC,SAAyBlJ,EAAIiJ,QAAQC,SAASL,EAAYC,EAAQvH,EAAKwH,OACpH,KAAK,GAAIzI,GAAIuI,EAAWlI,OAAS,EAAGL,GAAK,EAAGA,KAAS+H,EAAIQ,EAAWvI,MAAIN,GAAKqE,EAAI,EAAIgE,EAAErI,GAAKqE,EAAI,EAAIgE,EAAES,EAAQvH,EAAKvB,GAAKqI,EAAES,EAAQvH,KAASvB,EAChJ,OAAOqE,GAAI,GAAKrE,GAAKoD,OAAO+F,eAAeL,EAAQvH,EAAKvB,GAAIA,GAGhEiH,EAAU,SAAUmC,EAAYC,GAC5B,MAAO,UAAUP,EAAQvH,GAAO8H,EAAUP,EAAQvH,EAAK6H,KAG3DlC,EAAa,SAAUoC,EAAaC,GAChC,GAAuB,YAAnB,mBAAON,SAAP,YAAA5G,EAAO4G,WAAoD,kBAArBA,SAAQO,SAAyB,MAAOP,SAAQO,SAASF,EAAaC,IAGpHpC,EAAY,SAAUsC,EAASC,EAAYC,EAAGC,GAC1C,MAAO,KAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,QAASC,GAAUxI,GAAS,IAAMyI,EAAKL,EAAUxF,KAAK5C,IAAW,MAAO3B,GAAKkK,EAAOlK,IACpF,QAASqK,GAAS1I,GAAS,IAAMyI,EAAKL,EAAA,MAAmBpI,IAAW,MAAO3B,GAAKkK,EAAOlK,IACvF,QAASoK,GAAK5E,GAAUA,EAAO8E,KAAOL,EAAQzE,EAAO7D,OAAS,GAAImI,GAAE,SAAUG,GAAWA,EAAQzE,EAAO7D,SAAW4I,KAAKJ,EAAWE,GACnID,GAAML,EAAYA,EAAUrD,MAAMkD,EAASC,QAAmBtF,WAItEgD,EAAc,SAAUqC,EAASY,GAG7B,QAASC,GAAKvK,GAAK,MAAO,UAAU0F,GAAK,MAAOwE,IAAMlK,EAAG0F,KACzD,QAASwE,GAAKM,GACV,GAAIrL,EAAG,KAAM,IAAIyD,WAAU,kCAC3B,MAAO6H,GAAG,IACN,GAAItL,EAAI,EAAGuL,IAAM3K,EAAI2K,EAAU,EAARF,EAAG,GAAS,SAAWA,EAAG,GAAK,QAAU,YAAczK,EAAIA,EAAEY,KAAK+J,EAAGF,EAAG,KAAKJ,KAAM,MAAOrK,EAEjH,QADI2K,EAAI,EAAG3K,IAAGyK,GAAM,EAAGzK,EAAE0B,QACjB+I,EAAG,IACP,IAAK,GAAG,IAAK,GAAGzK,EAAIyK,CAAI,MACxB,KAAK,GAAc,MAAXC,GAAEE,SAAkBlJ,MAAO+I,EAAG,GAAIJ,MAAM,EAChD,KAAK,GAAGK,EAAEE,QAASD,EAAIF,EAAG,GAAIA,GAAM,EAAI,SACxC,KAAK,GAAGA,EAAKC,EAAEG,IAAIC,MAAOJ,EAAEK,KAAKD,KAAO,SACxC,SACI,GAAM9K,EAAI0K,EAAEK,OAAM/K,EAAIA,EAAEa,OAAS,GAAKb,EAAEA,EAAEa,OAAS,MAAkB,IAAV4J,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEC,EAAI,CAAG,UACjG,GAAc,IAAVD,EAAG,MAAczK,GAAMyK,EAAG,GAAKzK,EAAE,IAAMyK,EAAG,GAAKzK,EAAE,IAAM,CAAE0K,EAAEE,MAAQH,EAAG,EAAI,OAC9E,GAAc,IAAVA,EAAG,IAAYC,EAAEE,MAAQ5K,EAAE,GAAI,CAAE0K,EAAEE,MAAQ5K,EAAE,GAAIA,EAAIyK,CAAI,OAC7D,GAAIzK,GAAK0K,EAAEE,MAAQ5K,EAAE,GAAI,CAAE0K,EAAEE,MAAQ5K,EAAE,GAAI0K,EAAEG,IAAIlI,KAAK8H,EAAK,OACvDzK,EAAE,IAAI0K,EAAEG,IAAIC,MAChBJ,EAAEK,KAAKD,KAAO,UAEtBL,EAAKF,EAAK3J,KAAK+I,EAASe,GAC1B,MAAO3K,GAAK0K,GAAM,EAAG1K,GAAI4K,EAAI,EAjBrB,QAiBoCvL,EAAIY,EAAI,EACtD,GAAY,EAARyK,EAAG,GAAQ,KAAMA,GAAG,EAAI,QAAS/I,MAAO+I,EAAG,GAAKA,EAAG,GAAK,OAAQJ,MAAM,GAvB9E,GAAsGjL,GAAGuL,EAAG3K,EAAGP,EAA3GiL,GAAME,MAAO,EAAGI,KAAM,WAAa,GAAW,EAAPhL,EAAE,GAAQ,KAAMA,GAAE,EAAI,OAAOA,GAAE,IAAO+K,QAAUF,OAC3F,OAAOpL,IAAM6E,KAAMkG,EAAK,GAAIS,MAAST,EAAK,GAAIU,OAAUV,EAAK,IAAwB,kBAAXW,UAA0B1L,EAAE0L,OAAOC,UAAY,WAAa,MAAOvL,QAAUJ,GA0B3J8H,EAAe,SAAUpD,EAAG9E,GACxB,IAAK,GAAImJ,KAAKrE,GAAQ9E,EAAQoE,eAAe+E,KAAInJ,EAAQmJ,GAAKrE,EAAEqE,KAGpEhB,EAAW,SAAUpH,GACjB,GAAI+D,GAAsB,kBAAXgH,SAAyB/K,EAAE+K,OAAOC,UAAW5K,EAAI,CAChE,OAAI2D,GAAUA,EAAEvD,KAAKR,IAEjBkE,KAAM,WAEF,MADIlE,IAAKI,GAAKJ,EAAES,SAAQT,EAAI,SACnBsB,MAAOtB,GAAKA,EAAEI,KAAM6J,MAAOjK,MAKhDqH,EAAS,SAAUrH,EAAGH,GAClB,GAAIkE,GAAsB,kBAAXgH,SAAyB/K,EAAE+K,OAAOC,SACjD,KAAKjH,EAAG,MAAO/D,EACf,IAAmBF,GAAYH,EAA3BS,EAAI2D,EAAEvD,KAAKR,GAAOiL,IACtB,KACI,MAAc,SAANpL,GAAgBA,KAAM,MAAQC,EAAIM,EAAE8D,QAAQ+F,MAAMgB,EAAG1I,KAAKzC,EAAEwB,OAExE,MAAOwC,GAASnE,GAAMmE,MAAOA,GAH7B,QAKI,IACQhE,IAAMA,EAAEmK,OAASlG,EAAI3D,EAAA,SAAc2D,EAAEvD,KAAKJ,GADlD,QAGU,GAAIT,EAAG,KAAMA,GAAEmE,OAE7B,MAAOmH,IAGX3D,EAAW,WACP,IAAK,GAAI2D,MAAS7K,EAAI,EAAGA,EAAIqI,UAAUhI,OAAQL,IAC3C6K,EAAKA,EAAGC,OAAO7D,EAAOoB,UAAUrI,IACpC,OAAO6K,IAGX1D,EAAmB,SAAUgC,EAASC,EAAYE,GAI9C,QAASU,GAAKvK,GAAK,MAAO,UAAU0F,GAAK,MAAO,IAAIoE,SAAQ,SAAUzJ,EAAGsB,GAAK2J,EAAE5I,MAAM1C,EAAG0F,EAAGrF,EAAGsB,IAAK0C,OACpG,QAASA,MAAcC,GAAKgH,EAAE1K,QAAQ2K,GAAQjH,EAAIgH,EAAEE,SAAS,GAAIlH,EAAE,IACnE,QAASiH,GAAOvL,EAAG0F,GAAK,IAAMwE,EAAK1K,EAAEQ,GAAG0F,IAAO,MAAO5F,GAAK2L,EAAOnH,EAAE,GAAIxE,IACxE,QAASoK,GAAKjK,GAAKA,EAAEmK,KAAOqB,EAAOnH,EAAE,GAAIrE,GAAoB,UAAfA,EAAEwB,MAAM,GAAiBgK,EAAOnH,EAAE,IAAM7C,MAAOxB,EAAEwB,MAAM,GAAI2I,MAAM,IAAWN,QAAQC,QAAQ9J,EAAEwB,MAAM,IAAI4I,KAAoB,aAAfpK,EAAEwB,MAAM,GAAoBiK,EAAWC,EAAS3B,GAC3M,QAAS0B,GAASzL,GAAKiK,EAAKjK,EAAEmK,KAAOnK,GAAMwB,OAAQ,QAASxB,EAAEwB,OAAQ2I,MAAM,IAC5E,QAASuB,GAAQlK,GAAS8J,EAAO,OAAQ9J,GACzC,QAASuI,GAAOvI,GAAS8J,EAAO,QAAS9J,GACzC,QAASgK,GAAOtM,EAAGuG,GAAKpB,EAAI,OAAQnF,EAAEuG,GAAIrB,IAV1C,IAAK6G,OAAOU,cAAe,KAAM,IAAIhJ,WAAU,uCAC/C,IAA4D0B,GAAG/D,EAA3Df,EAAIqK,EAAUrD,MAAMkD,EAASC,OAAmB2B,IACpD,OAAO/K,IAAM8D,KAAMkG,EAAK,QAASS,MAAST,EAAK,SAAUU,OAAUV,EAAK,WAAahK,EAAE2K,OAAOU,eAAiB,WAAc,MAAOhM,OAASW,GAWjJoH,EAAmB,SAAUxH,GAGzB,QAASoK,GAAKvK,EAAGb,GAAK,MAAO,UAAUuG,GAAK,OAASjE,OAAQ,YAAatB,EAAEH,IAAMb,GAAGwB,KAAKR,EAAGuF,IAAK0E,MAAM,IAFxG,GAAI7J,IAAM8D,KAAMkG,EAAK,QAASS,MAAST,EAAK,QAAS,SAAUzK,GAAK,KAAMA,KAAOmL,OAAUV,EAAK,SAAU,SAAU7E,GAAK,OAASjE,MAAOiE,EAAG0E,MAAM,KAClJ,OAAOjK,GAAIyH,EAAczH,GAAII,EAAE2K,OAAOC,UAAY,WAAc,MAAOvL,OAASW,GAIpFqH,EAAgB,SAAUzH,GACtB,IAAK+K,OAAOU,cAAe,KAAM,IAAIhJ,WAAU,uCAC/C,IAAIsB,GAAI/D,EAAE+K,OAAOU,cACjB,OAAO1H,GAAIA,EAAEvD,KAAKR,GAAyB,kBAAboH,GAA0BA,EAASpH,GAAKA,EAAE+K,OAAOC,aAGnFjD,EAAS,YAAapB,GACtBoB,EAAS,WAAYnB,GACrBmB,EAAS,SAAUlB,GACnBkB,EAAS,aAAcjB,GACvBiB,EAAS,UAAWhB,GACpBgB,EAAS,aAAcf,GACvBe,EAAS,YAAad,GACtBc,EAAS,cAAeb,GACxBa,EAAS,eAAgBZ,GACzBY,EAAS,WAAYX,GACrBW,EAAS,SAAUV,GACnBU,EAAS,WAAYT,GACrBS,EAAS,mBAAoBR,GAC7BQ,EAAS,mBAAoBP,GAC7BO,EAAS,gBAAiBN,2JCpL9B,SAASiE,GAAK3L,EAAGK,EAAGuL,EAASC,EAAUC,GAIrC,IAHA,GAEI1H,GAFA2H,EAAQ,EACRjM,EAAIE,EAAEU,OAEHL,EAAEP,IAAKO,EAAG,CAEf,GADA+D,EAAIpE,EAAEK,IACD0L,GAAS3H,IAAMwH,EAAS,MAAOvL,EAC3ByL,IAAWA,EAAQrJ,QAAQ2B,IAAM,IAAK2H,EACtCF,GAAYA,EAASpJ,QAAQ2B,IAAM,KAAK2H,EAEnD,MAAO1L,GAGT,QAAS2L,GAAWhM,GAMlB,IALA,GAAIiM,MACAC,EAAQ,EACRpM,EAAIE,EAAEU,OACNL,EAAI,EAEDA,EAAIP,GACTO,EAAIsL,EAAK3L,EAAGK,EAAG8L,EAAOC,EAASC,EAAQC,EAASC,GAChDN,EAAOzJ,KAAKxC,EAAEwM,UAAUN,EAAO7L,GAAGoM,QAClCP,IAAU7L,CAGZ,IAAsB,IAAlB4L,EAAOvL,OACT,KAAM,yBAA2BV,CAEnC,OAAOiM,GAGT,QAASS,GAAc1M,GACrB,MAAgB,MAATA,EAAE,GACL2M,EAAa3M,GACb4M,EAAY5M,GAGlB,QAAS2M,GAAa3M,GACpB,GAGIyB,GAAGoL,EAHHX,EAAQ,EACRpM,EAAIE,EAAEU,OACNL,EAAI,CAIR,IADAA,EAAIsL,EAAK3L,EAAGK,EAAGiM,EAAQF,EAAQE,GAC3BjM,IAAMP,EACR,KAAM,2BAA6BE,CAIrC,IADAyB,EAAIuK,EAAWhM,EAAEwM,UAAUN,EAAO7L,IACjB,IAAboB,EAAEf,OACJ,KAAM,4CAA8CV,CAItD,IADAA,EAAIA,EAAEgG,MAAM3F,EAAI,GAAGoM,OACfzM,EAAE,KAAO8M,EACX,KAAM,wCAA4C9M,CAMpD,OAHAyB,GAAIA,EAAEsL,IAAIL,GAEVG,EAASH,EAAc1M,EAAEgG,MAAM,GAAGyG,QAC9BI,EAAOG,SAEPA,QAASvL,EACToL,OAAQA,IAGVA,EAAOG,QAAUvL,EAGZoL,GAGT,QAASD,GAAY5M,GACnB,GAMWiN,GACPC,EAPAL,GAAU3H,OAAQiI,GAClBjI,KACAkI,GAAY,EAAG,GACfC,EAAW,EACXnB,EAAQ,EACRpM,EAAIE,EAAEU,OACNL,EAAI,CAIR,IAAIL,EAAEF,EAAE,KAAOyM,EAAQ,CAErB,GADAlM,EAAIL,EAAEsN,YAAYjB,KACdhM,GAAK,GAQF,KAAM,0BAA4BL,CAPvC,KACEoN,EAAWG,EAAcvN,EAAEwM,UAAUnM,EAAE,EAAGP,EAAE,IAC5C,MAAOF,GACP,KAAM,mCAAqCI,EAE7CA,EAAIA,EAAEgG,MAAM,EAAG3F,GAAGoM,OAClB3M,EAAIE,EAAEU,OAERL,EAAI,EAGN,IAAKP,EAAG,KAAME,EAcd,IAXIA,EAAE,KAAOwN,IAAMH,IAAahN,GAGhC4M,EAAItB,EAAK3L,EAAGK,EAAGoN,GACXR,EAAInN,IACNoF,EAAO1C,KAAKxC,EAAEwM,UAAUN,EAAOe,GAAGR,QAClCP,EAAQ7L,IAAM4M,GAIhB5M,EAAIsL,EAAK3L,EAAGK,EAAG+L,GACX/L,IAAMP,EACRoF,EAAO1C,KAAKxC,EAAEwM,UAAUN,EAAOpM,GAAG2M,YAKlC,IAHAvH,EAAO1C,KAAKxC,EAAEwM,UAAUN,EAAO7L,GAAGoM,QAClCS,KACAhB,IAAU7L,EACN6L,IAAUpM,EAAG,KAAM,2BAA6BE,CAItD,MAAOK,EAAIP,GAAG,CAEZ,GADAO,EAAIsL,EAAK3L,EAAGK,EAAGiM,GACXjM,IAAMP,EAAG,KAAM,2BAA6BE,CAEhD,IADAkN,EAAO1K,KAAKxC,EAAEwM,UAAUN,EAAO7L,GAAGoM,QAC9BpM,EAAIP,EAAE,GAAKE,IAAIK,KAAO+L,EAAQ,KAAM,0BAA4BpM,CACpEkM,KAAU7L,EAIZ,KAAMP,EAAIoF,EAAOxE,SAAWgN,EAAQ9H,KAAKV,EAAOpF,EAAE,IAChD,KAAM,2BAA6BE,CAuBrC,OApBIF,GAAI,GACN+M,EAAOc,KAAOzI,EAAO,GACjBmI,EACFR,EAAOQ,SAAWnI,EAAO,GAAGc,MAAM,IACzB,EAAA4H,EAAAC,YAAW3I,EAAO,IAC3B2H,EAAOiB,SAAW5I,EAAO,GAEzB2H,EAAO3H,OAASA,EAAO,IAGzB2H,EAAOc,KAAOzI,EAAO,GAEO,MAA1B2H,EAAOc,KAAK3H,OAAM,KACpB6G,EAAOkB,SAAU,EACjBlB,EAAOc,KAAOd,EAAOc,KAAK3H,MAAM,GAAG,IAEvB,MAAVkH,IAAgBL,EAAOK,OAASA,GAChCE,EAAS,KAAIP,EAAOO,SAAWA,EAAS,IACxCA,EAAS,KAAIP,EAAOmB,SAAWZ,EAAS,IAErCP,EAGT,QAASU,GAAcvN,GACrB,GAAIG,GAAIH,EAAEiO,MAAM9B,EAChB,KAAKnM,EAAEU,QAAUP,EAAEO,OAAS,EAAG,KAAMV,EACrC,OAAOG,GAAE4M,IAAI,SAASxC,GACpB,GAAItH,IAAKsH,CACT,IAAItH,IAAMA,EAAG,KAAMjD,EACnB,OAAOiD,gEAtLI,SAASiL,EAAUhJ,GAEhC,MADAiI,GAAiBjI,GAAUiJ,EACpBnC,EAAWkC,EAASzB,QAAQM,IAAIL,GARzC,IAsBIS,GAtBJS,EAAAxN,EAAA,qBAWI+N,EAAS,OACT/B,EAAS,IACTE,EAAS,IACTD,EAAS,IACTE,EAAS,IACTkB,EAAS,IACTtB,EAAS,IACTqB,EAAS,IACTV,EAAS,IAETY,EAAU,sECQP,SAASG,GAAWF,GACzB,MAAOS,GAAU9K,eAAeqK,sMADlBE,WAAAA,CA7BhB,IAAAQ,GAAAjO,EAAA,aAcWgO,GAZAlP,EAAAoP,QAAU,MACVpP,EAAAqP,SAAW,OACXrP,EAAAsP,UAAY,QACZtP,EAAAuP,UAAY,QACZvP,EAAAwP,SAAW,OACXxP,EAAAyP,SAAW,OACXzP,EAAA0P,SAAW,OACX1P,EAAA2P,SAAW,OACX3P,EAAA4P,UAAY,QACZ5P,EAAA6P,WAAa,SACb7P,EAAA8P,SAAW,OAEX9P,EAAAkP,WAAY,EAAAC,EAAAY,QACrB,IACA,MACA,OACA,QACA,QACA,OACA,OACA,OACA,OACA,QACA,SACA,6QC1BD,SAAUzP,EAAQmI,GACE,YAAnB,mBAAOzI,GAAP,YAAAkD,EAAOlD,KAA0C,mBAAXC,GAAyBwI,EAAQzI,GACrD,kBAAXE,IAAyBA,EAAOC,IAAMD,GAAQ,WAAYuI,GAChEA,EAASnI,EAAO0P,KAAO1P,EAAO0P,WAHhC/M,OAIQ,SAAUjD,GAUnB,QAASiQ,GAAaC,GACpB,MAAa,OAANA,EAAa,KAAOA,EAAGC,MAGhC,QAASC,GAAeF,GACtB,MAAa,OAANA,EAAa,KAAOA,EAAGG,OA2DhC,QAASC,GAAEvM,GACT,MAAOZ,GAAQY,GAAK,IAAMA,EAAE8J,IAAIyC,GAAK,IACjCC,EAASxM,IAAMyM,EAASzM,GAGxBpC,KAAKgB,UAAUoB,GAAG4C,QAAQ,SAAS,WAAWA,QAAQ,SAAU,WAChE5C,EA4BN,QAAS0M,GAAIC,EAAQ7N,EAAO8N,GAC1B,GAAIC,IAAQ/N,GAAOoJ,UAAUnF,MAAMvF,KAAKoP,GACxCE,SAAQH,GAAQtJ,MAAMyJ,QAASD,GA5GjC,GAAIE,GAAW,SAASZ,EAAIG,EAAQtL,GAClC,MACEmL,GAAGG,OAASA,MACZH,EAAGC,MAAQpL,EACXmL,GAYArL,EAAQ,SAASG,GACnB,KAAM5D,OAAM4D,IAGV+L,EAAkB,SAAS5H,GAU7B,QAAS7F,KACP0N,EAAK1N,KAAKxC,EAAIqI,EAAEmE,UAAUnM,EAAG4M,IAC7BjN,EAAI,GACJK,EAAI4M,EAAI,EAZV,GAKI5M,GAAG4M,EAAG7I,EALN8L,KACA9E,EAAI,KACJ3J,EAAI,EACJ3B,EAAIuI,EAAE3H,OACNV,EAAI,EAWR,KARAqI,GAAQ,GAQHhI,EAAE4M,EAAE,EAAGA,EAAEnN,IAAKmN,EAEjB,GADA7I,EAAIiE,EAAE4E,GACI,OAAN7I,EAAYpE,GAAKqI,EAAEmE,UAAUnM,EAAG4M,GAAI5M,IAAM4M,MACzC,IAAI7I,IAAMgH,EAAG5I,IAAQ4I,EAAI,KAAM3J,GAAI,MACnC,CAAA,GAAI2J,EAAG,QACH/K,KAAMoB,GAAW,MAAN2C,GAAW/D,EAAI4M,EAAI,EAAG7B,EAAIhH,GACrC/D,IAAMoB,GAAW,MAAN2C,GAAW/D,EAAI4M,EAAI,EAAG7B,EAAIhH,GAC/B,MAANA,GAAc3C,EACR,MAAN2C,GACH6I,EAAI5M,GAAGmC,IACXf,EAAIpB,EAAI4M,EAAI,GAEC,MAAN7I,IACF3C,GAAGsC,EAAM,qCAAuCsE,GACjD5G,EAAI,GAAGe,IACXf,EAAI,EACJpB,EAAI4M,EAAI,GATiBA,EAAI5M,EAAKmC,IAAUnC,EAAI4M,EAAI,EAgBxD,MAHIxL,IAAGsC,EAAM,wCAA0CsE,GACnD+C,GAAGrH,EAAM,sCAAwCsE,GACjD4E,EAAI5M,MAAK4M,EAAGzK,KACT0N,GAGL7N,EAAUnB,MAAMmB,QAEhBoN,EAAW,SAASlF,GACtB,MAAOA,KAAMpH,OAAOoH,IAGlBmF,EAAW,SAASnF,GACtB,MAAoB,gBAANA,IAYZ4F,EAAQ,SAASC,EAAOnM,GAC1B,GAAIiM,GAAOD,EAAgBG,GACvB7P,EAAO,YAAc2P,EAAKnD,IAAIyC,GAAGrO,KAAK,MAAQ,IAElD,OAAO6O,GACLK,SAAS,IAAK9P,IACZ6P,EAAsB,IAAdF,EAAKxP,OAAawP,EAAK,GAAKE,GACtCnM,GAAQmM,IAIRE,KAEAxI,EAAKqI,EAAM,MAEXI,EAAWP,EAAS,SAASzF,GAAK,MAAOA,IAAM+F,EAAO,YAEtDE,EAAOR,EAAS,WAAa,MAAO,IAAMM,EAAO,QAEjDG,EAAMT,EAAS,WAAa,MAAO,IAAMM,EAAO,OAEhDI,EAASV,EAAS,WAAa,OAAO,GAASM,EAAO,QAEtDK,EAAQX,EAAS,WAAa,OAAO,GAAUM,EAAO,SAOtDM,EAAQ,EACRC,EAAQ,EACRC,EAAQ,EACRC,EAAQ,EAERC,EAAS,SAASzG,GACpB,GAAI0G,GAAQ1G,GAAKqG,CACjB,QACE7O,MAAO,SAASwI,GACd,MAAO7B,WAAUhI,QAAUuQ,GAAS1G,EAAG7K,MAAQuR,GAEjDC,KAAM,WAEJ,MADID,IAASJ,GAAMlB,EAAI,OAAQ,OAAQjH,WAChChJ,MAETyR,KAAM,WAEJ,MADIF,IAASH,GAAMnB,EAAI,MAAO,OAAQjH,WAC/BhJ,MAET0R,MAAO,WAEL,MADIH,IAASF,GAAOpB,EAAI,MAAO,QAASjH,WACjChJ,QAKTsF,EAAQ,SAASuF,GACnB,MAAY,OAALA,EAAalI,EAAQkI,GAAKA,GAAKA,OAGpC8G,EAAU,SAAS9B,EAAQ+B,GAC7B,GAQIjR,GAAG4M,EAAGhO,EAAGiB,EAAGsF,EAAG4C,EAAGmJ,EAAIC,EARtBC,KACAzQ,GAAOuO,EAASvK,EAAMuK,IAASxC,IAAI,SAAS9N,EAAGoB,GAC7C,MAAY,OAALpB,EAAY,MACdwS,EAAIjP,KAAKnC,GAAI4P,EAAgBhR,GAAG8N,IAAIyC,GAAGrO,KAAK,SAEnDrB,EAAI2R,EAAI/Q,OAAS,EACjBgR,EAAM1M,EAAMsM,GACZ/Q,EAAO,iBAGX,IAAIT,EAAI,EAAG,MAAO,KAElB,KAAKmN,EAAE,EAAGA,GAAGnN,IAAKmN,EAChB5M,EAAIoR,EAAIxE,GACRhO,EAAI+B,EAAIX,GACRH,EAAI,QAAQjB,EAAE,KACduG,EAAI,QAAQvG,EAAE,KACdmJ,EAAI,0DACJmJ,EAAgB,eAAXG,EAAIrR,IAAuBmR,EAAG,GAAG,IAAOA,GAAG,EAAI,GACpDjR,GAAQ,IAAML,EAAE,IAAIsF,EAAE,uBAAyB+L,EAC3C,4BAA8BC,EAC9B,IAAIpJ,EAAE,eAAiBmJ,EACvB,iBAAmBC,GAClBnR,EAAIP,EAAI,IAAM,KAGrB,OAAOkQ,GACLK,SAAS,IAAK,IAAK9P,EAAO,KAC1BgP,EAAOrC,OAAO,SAAS3C,GAAK,MAAY,OAALA,MAInCoH,EAAa,SAASpH,GACxB,MAAoB,kBAANA,IAGZqH,EAAW,SAASrH,GACtB,MAAOoH,GAAWpH,GAAKA,EAAI,WAAa,MAAOA,KAG7CsH,EAAS,SAAStH,GACpB,IAAK,GAAItH,GAAGsC,EAAGlF,EAAE,EAAGyR,EAAIpJ,UAAUhI,OAAQL,EAAEyR,IAAOzR,EAAG,CACpD4C,EAAIyF,UAAUrI,EACd,KAAKkF,IAAKtC,GAAKsH,EAAEhF,GAAKtC,EAAEsC,GAE1B,MAAOgF,IAGLwH,EAAc,SAAS/M,EAAO/F,GAChC,GAEIkB,GAAGsB,EAAG2C,EAAGlE,EAAGsF,EAFZnF,GAAI,EACJP,EAAIkF,EAAMtE,MAGd,IAAS,MAALzB,EAAW,CACb,OAASoB,EAAIP,GAAG,GAAsB,OAAjB2B,EAAIuD,EAAM3E,KAAeoB,GAAKA,EAAG,CAAEtB,EAAIiE,EAAI3C,CAAG,OAEnE,IADAvB,EAAIsF,EAAInF,IACCA,EAAIP,GAAyB,OAAjB2B,EAAIuD,EAAM3E,MACzBF,EAAIsB,IAAGtB,EAAIsB,EAAGvB,EAAIG,GAClB+D,EAAI3C,IAAG2C,EAAI3C,EAAG+D,EAAInF,QAEnB,CACL,OAASA,EAAIP,GAAG,GAAmC,OAA9B2B,EAAIxC,EAAE+F,EAAM3E,GAAIA,EAAG2E,KAAmBvD,GAAKA,EAAG,CAAEtB,EAAIiE,EAAI3C,CAAG,OAEhF,IADAvB,EAAIsF,EAAInF,IACCA,EAAIP,GAAsC,OAA9B2B,EAAIxC,EAAE+F,EAAM3E,GAAIA,EAAG2E,MAClC7E,EAAIsB,IAAGtB,EAAIsB,EAAGvB,EAAIG,GAClB+D,EAAI3C,IAAG2C,EAAI3C,EAAG+D,EAAInF,IAI1B,OAAQH,EAAGsF,IAGTwM,KAEAC,EAAU,SAASpC,GAKrB,QAASzM,GAAI9B,GACX,MAAOR,GAAIwC,eAAehC,IAAQR,EAAIQ,KAAS0Q,EALjD,GACIjF,GACAmF,EAFApR,IA4DJ,OApDAiM,IACEoF,KAAM,EACN7B,MAAO,EACPrL,OAAQnE,EACRsC,IAAKA,EACLgP,IAAK,SAAS9Q,GACZ,MAAO8B,GAAI9B,GAAOR,EAAIQ,GAAOa,QAE/BkQ,IAAK,SAAS/Q,EAAKC,GAMjB,MALK6B,GAAI9B,OACLyL,EAAIoF,KACFrR,EAAIQ,KAAS0Q,KAAQjF,EAAIuD,OAE/BxP,EAAIQ,GAAOC,EACJ7B,MAET4S,OAAQ,SAAShR,GAMf,MALI8B,GAAI9B,OACJyL,EAAIoF,OACJpF,EAAIuD,MACNxP,EAAIQ,GAAO0Q,GAENtS,MAET6S,MAAO,WACLxF,EAAIoF,KAAOpF,EAAIuD,MAAQ,EACvBvD,EAAI9H,OAASnE,MAEf8E,KAAM,SAAS2E,GACb,MAAO7B,WAAUhI,QAAUwR,EAAO3H,EAAGwC,GAAOmF,GAE9CM,MAAO,WACL,GAEIlR,GAAKC,EAFL4C,KACAgO,EAAO,CAEX,KAAK7Q,IAAOR,GACVS,EAAQT,EAAIQ,GACRC,IAAUyQ,GAAUE,GAASA,EAAK3Q,KACpC4C,EAAK7C,GAAOC,IACV4Q,EAGNpF,GAAIoF,KAAOA,EACXpF,EAAIuD,MAAQ,EACZvD,EAAI9H,OAAUnE,EAAMqD,IAIpB0L,GAAO1M,OAAOR,KAAKkN,GAAO4C,QAAQ,SAASnR,GAC7CyL,EAAIsF,IAAI/Q,EAAKuO,EAAMvO,MAGdyL,GAGL2F,EAAW,SAASC,EAAO7Q,GAC7B,GAAI8Q,GAASD,EAAMtP,UAAYF,OAAOqF,OAAO1G,EAAOuB,UAEpD,OADAuP,GAAMrK,YAAcoK,EACbC,GAGLC,EAAW,SAAStI,GACtB,MAAoB,gBAANA,IAGZjJ,EAAM,SAASiO,GACjBA,EAASA,EAASvK,EAAMuK,GAAUA,CAClC,IAAIH,GAAOG,GAAUA,EAAO7O,OAExB2P,SAAS,IAAK,aACZd,EAAOxC,IAAI,SAAS9N,GAClB,MAAO,KAAOgR,EAAgBhR,GAAG8N,IAAIyC,GAAGrO,KAAK,MAAQ,MACpDA,KAAK,SAAa,KAJvB,WAAa,MAAO,GAKxB,OAAO6O,GAASZ,EAAIG,EAAQ,QAG1BuD,EAAQ,SAASzB,EAAS0B,EAAQC,EAAQ/G,GAC5C,GAAIgH,GAAKF,EAAOrS,OACZwS,EAAKF,EAAOtS,MAEhB,KAAKwS,EAAI,MAAOH,EAChB,KAAKE,EAAI,MAAOD,EAKhB,KAHA,GAAIG,GAASlH,GAAU,GAAI8G,GAAOxK,YAAY0K,EAAKC,GAC/CE,EAAK,EAAGC,EAAK,EAAGhT,EAAI,EAEjB+S,EAAGH,GAAMI,EAAGH,IAAM7S,EACvB8S,EAAO9S,GAAKgR,EAAQ0B,EAAOK,GAAKJ,EAAOK,IAAO,EACzCL,EAAOK,KACPN,EAAOK,IAGd,MAAOA,EAAGH,IAAMG,IAAM/S,EACpB8S,EAAO9S,GAAK0S,EAAOK,EAGrB,MAAOC,EAAGH,IAAMG,IAAMhT,EACpB8S,EAAO9S,GAAK2S,EAAOK,EAGrB,OAAOF,IAGLG,EAAS,SAASrN,EAAKsN,GAEzB,IADA,GAAIvT,GAAI,KACCuT,GAAQ,GAAGvT,GAAKiG,CACzB,OAAOjG,IAGLwT,EAAM,SAASvN,EAAKvF,EAAQ+S,EAASC,GACvC,GAAItP,GAAIqP,GAAW,IACfzT,EAAIiG,EAAM,GACVnG,EAAIY,EAASV,EAAEU,MAEnB,OAAOZ,IAAK,EAAIE,EACF,SAAV0T,EAAmBJ,EAAOlP,EAAGtE,GAAKE,EACxB,WAAV0T,EAAqBJ,EAAOlP,KAAMtE,EAAE,IAAME,EAAIsT,EAAOlP,EAAGuP,KAAKC,KAAK9T,EAAE,IACpEE,EAAIsT,EAAOlP,EAAGtE,IAGhB+T,EAAO,SAAS7O,GAClB,MAAOA,GAAMA,EAAMtE,OAAS,IAG1BuO,EAAQ,SAAS1E,GACnB,IAAK,GAAIvK,MAAMK,EAAE,EAAGP,EAAEyK,EAAE7J,OAAQL,EAAEP,IAAKO,EAAGL,EAAEuK,EAAElK,IAAM,CACpD,OAAOL,IAGL8T,EAAW,SAAS7N,EAAKvF,EAAQgT,EAAOK,GAC1C,GAAInU,GAAgB,MAAZmU,EAAmBA,EAAW,IAClC/T,EAAIiG,EAAM,GACVnG,EAAIE,EAAEU,OACNF,EAAImT,KAAKK,IAAI,EAAGtT,EAASd,EAAEc,OAE/B,OAAOZ,IAAKY,EAASV,EACP,SAAV0T,EAAmB9T,EAAII,EAAEgG,MAAMlG,EAAIU,GACzB,WAAVkT,EAAqB1T,EAAEgG,MAAM,EAAG2N,KAAKC,KAAKpT,EAAE,IAAMZ,EAAII,EAAEgG,MAAMlG,KAAOU,EAAE,IACvER,EAAEgG,MAAM,EAAGxF,GAAKZ,GAGlBqU,EAAa,SAASjP,EAAOkI,EAAQgH,GACvC,GAAIlP,EAAO,CACT,GAA6BnF,GAAzBQ,EAAI,EAAGP,EAAIkF,EAAMtE,MACrB,IAAIwM,EACF,KAAO7M,EAAEP,IAAKO,GACRR,EAAIqN,EAAOlI,EAAM3E,MAAK6T,EAAQrU,EAAGQ,EAAG2E,OAG1CA,GAAMyN,QAAQyB,IAKpBhV,GAAQ8Q,SAAWA,EACnB9Q,EAAQiQ,aAAeA,EACvBjQ,EAAQoQ,eAAiBA,EACzBpQ,EAAQ4I,GAAKA,EACb5I,EAAQqR,SAAWA,EACnBrR,EAAQsR,KAAOA,EACftR,EAAQuR,IAAMA,EACdvR,EAAQwR,OAASA,EACjBxR,EAAQyR,MAAQA,EAChBzR,EAAQ8R,OAASA,EACjB9R,EAAQ0R,KAAOA,EACf1R,EAAQ2R,KAAOA,EACf3R,EAAQ4R,KAAOA,EACf5R,EAAQ6R,MAAQA,EAChB7R,EAAQ8F,MAAQA,EAChB9F,EAAQmS,QAAUA,EAClBnS,EAAQ0S,SAAWA,EACnB1S,EAAQ6E,MAAQA,EAChB7E,EAAQ2S,OAASA,EACjB3S,EAAQ6S,YAAcA,EACtB7S,EAAQ+S,QAAUA,EAClB/S,EAAQiR,MAAQA,EAChBjR,EAAQwT,SAAWA,EACnBxT,EAAQmD,QAAUA,EAClBnD,EAAQyS,WAAaA,EACrBzS,EAAQ2T,SAAWA,EACnB3T,EAAQuQ,SAAWA,EACnBvQ,EAAQwQ,SAAWA,EACnBxQ,EAAQoC,IAAMA,EACdpC,EAAQ4T,MAAQA,EAChB5T,EAAQsU,IAAMA,EACdtU,EAAQ2U,KAAOA,EACf3U,EAAQoU,OAASA,EACjBpU,EAAQ+Q,gBAAkBA,EAC1B/Q,EAAQiV,YAAc3E,EACtBtQ,EAAQ+P,MAAQA,EAChB/P,EAAQ4U,SAAWA,EACnB5U,EAAQ+U,WAAaA,EAErB9Q,OAAO+F,eAAehK,EAAS,cAAgBqC,OAAO,8BCxatDpC,EAAAD,SACA+E,KAAA,YACAmQ,OAAA,2DACAC,QAAA,gBACAC,eACA,yEACA,wEACA,kDAEAC,SAAA,oCACAC,YAAA,+IACAC,KAAA,kBACAC,MAAA,oBACAC,KACAC,OAAA,eACAC,OAAA,eACAC,MAAA,eAEAC,aACAnP,KAAA,QAEAoP,SACAC,SAAA,+DACAC,MAAA,gJACAC,UAAA,4JACAC,eAAA,6CACAC,YAAA,sDACAC,aAAA,4EACAC,iBAAA,4BACAC,qBAAA,6FACAC,YAAA,0BACAjD,MAAA,uMACAkD,KAAA,kDAEAC,OAAA,oBACAC,YAAA,uBACAC,gBAAA,2BAEAC,SAAA,0DACA5J,MAAA,+IACA6J,UAAA,gCAEAC,UAAA,mBACAC,OAAA,oHAEAC,QAAA,qGACAC,KAAA,2BAEAC,KAAA,qDAEAxQ,KAAA,kEACAyQ,iBAAA,8DACAC,YAAA,iEACAC,aAAA,6HACAC,aAAA,8CACAC,iBAAA,4EAEAC,QAAA,2DACAC,cAAA,oHACAC,aAAA,wBACAC,MAAA,qFACAC,YAAA,gCACAC,SAAA,8BAEAC,YACArJ,KAAA,MACAsJ,IAAA,yCAEAC,QAAA,eACAC,MACAF,IAAA,4CAEAG,iBACAC,cAAA,UACAC,sBAAA,SACAC,YAAA,SACAC,+BAAA,UACAC,eAAA,UACAC,cAAA,SACAC,IAAA,eACAC,sBAAA,UACAC,SAAA,SACAC,eAAA,UACAC,WAAA,UACAC,kBAAA,UACAC,KAAA,SACAC,QAAA,UACAxB,QAAA,SACAyB,GAAA,SACAC,SAAA,SACAC,eAAA,SACAC,MAAA,SACAC,QAAA,UACAC,IAAA,UACAC,qBAAA,UACAC,MAAA,SACAC,OAAA,SACAC,sBAAA,SACAC,WAAA,SACAC,yBAAA,UACAC,YAAA,SACA7J,KAAA,gBACA8J,gBAAA,8BACAC,aAAA,eACAC,cAAA,iBACAC,SAAA,SACAC,oBAAA,UAEAC,cACAC,wBAAA,SACAC,MAAA,SACAC,YAAA,SACAC,MAAA,kGC1Gava,EAAAwa,eACT,SACA,QACA,QACA,UACA,WACA,MACA,OACA,UACA,WACA,YACA,QACA,SACA,SACA,KACA,KACA,WACA,MACA,MACA,SACA,UAISxa,EAAAya,SACT,QACA,MACA,WACA,QACA,WAMSza,EAAA0a,mBACT,OACA,UACA,SACA,KACA,KACA,MACA,8FCpCS1a,EAAA2a,mBACXC,eAAgB,IA0EL5a,EAAA6a,iBACX,SAAU,SAAU,OAAQ,eAAgB,SAAU,YAAa,YAAa,SAAU,SAAU,WAAY,YAAa,QAAS,WAAY,QAAS,eAAgB,SAAU,UAG1K7a,EAAA8a,yBAAoD,uDCjDjE,SAAAC,GAA4BC,GAC1B,OAAQA,GACN,IAAKC,GAAAC,IACL,IAAKD,GAAAE,OACL,IAAKF,GAAAG,KAGL,IAAKH,GAAAI,MACH,MAAO,EACT,SACE,MAAO,qDApDb,IAAAJ,GAAA/Z,EAAA,YA0CAlB,GAAA+a,YAAAA,qDCiDA,SAAAO,GAA4BN,EAAkBO,GAC5C,MAAOA,KAAQC,GAAiBR,GAQlC,QAAAQ,GAAiCR,GAC/B,OAAQA,GACN,IAAKhb,GAAAyb,EACL,IAAKzb,GAAA0b,EACL,IAAK1b,GAAA2b,MACL,IAAK3b,GAAA4b,OACL,IAAK5b,GAAA6b,MACL,IAAK7b,GAAA8b,QACL,IAAK9b,GAAAkb,IACL,IAAKlb,GAAAmb,OACH,OACEY,OAAO,EAAMC,MAAM,EAAMC,MAAM,EAAMC,QAAQ,EAAMC,QAAQ,EAC3DC,KAAK,EAAMC,MAAM,EAAMC,MAAM,EAAMC,MAAM,EAAM/X,MAAM,EAEzD,KAAKxE,GAAAwc,GACL,IAAKxc,GAAAyc,GACH,OACER,MAAM,EAAMG,KAAK,EAAMC,MAAM,EAAME,MAAM,EAE7C,KAAKvc,GAAAob,KACH,OACEW,OAAO,EAAMC,MAAM,EAAMC,MAAM,EAAMC,QAAQ,EAAMC,QAAQ,EAC3DC,KAAK,EAAM5X,MAAM,EAAM8X,MAAM,EAEjC,KAAKtc,GAAAqb,MACH,OAAQU,OAAO,EACjB,KAAK/b,GAAA0c,KACH,OAAQlY,MAAM,GAElB,SAGF,QAAAmY,GAAyB3B,GACvB,OAAQ4B,EAAAC,UAAU7c,EAAA4b,OAAQ5b,EAAA0c,KAAM1c,EAAA6b,OAAQb,GAM1C,QAAA8B,GAAiC9B,EAAkB+B,GACjD,OAAQ/B,GACN,IAAKhb,GAAAkb,IACL,IAAKlb,GAAAmb,OACH,MAAqB,SAAd4B,CACT,KAAK/c,GAAAyb,EACL,IAAKzb,GAAA0b,EACL,IAAK1b,GAAAob,KACL,IAAKpb,GAAA8b,QAGH,MAAOiB,KAAaC,EACtB,KAAKhd,GAAA2b,MACH,MAAqB,SAAdoB,CACT,KAAK/c,GAAAqb,MACH,MAAqB,YAAd0B,EAGX,OAAO,EAGT,QAAAE,GAA0BjC,GACxB,OAAQA,GACN,IAAKhb,GAAAyb,EACL,IAAKzb,GAAA0b,EACL,IAAK1b,GAAAob,KACL,IAAKpb,GAAA8b,QACH,MAAO,YAET,KAAK9b,GAAAkb,IACL,IAAKlb,GAAAmb,OACL,IAAKnb,GAAAqb,MACH,MAAO,UAGT,KAAKrb,GAAA2b,MACH,MAAO,UAGT,KAAK3b,GAAAwc,GACL,IAAKxc,GAAAyc,GACL,IAAKzc,GAAA4b,OACL,IAAK5b,GAAA0c,KACL,IAAK1c,GAAA6b,MACH,OAGJ,KAAM,IAAIza,OAAM,wCAA0C4Z,mDAjL5D,IAGiBkC,GAHjBC,EAAAjc,EAAA,WACA0b,EAAA1b,EAAA,WAEA,SAAiBgc,GAEFA,EAAAhC,IAAa,MACbgC,EAAA/B,OAAmB,SAGnB+B,EAAAzB,EAAS,IACTyB,EAAAxB,EAAS,IACTwB,EAAAV,GAAW,KACXU,EAAAT,GAAW,KAGXS,EAAAvB,MAAiB,QACjBuB,EAAA7B,MAAiB,QACjB6B,EAAA9B,KAAe,OACf8B,EAAApB,QAAqB,UAGrBoB,EAAAR,KAAe,OACfQ,EAAArB,MAAiB,QACjBqB,EAAAtB,OAAmB,UApBjBsB,EAAAld,EAAAkd,UAAAld,EAAAkd,aAyBJld,EAAAyb,EAAIyB,EAAQzB,EACZzb,EAAA0b,EAAIwB,EAAQxB,EACZ1b,EAAAwc,GAAKU,EAAQV,GACbxc,EAAAyc,GAAKS,EAAQT,GACbzc,EAAAkb,IAAMgC,EAAQhC,IACdlb,EAAAmb,OAAS+B,EAAQ/B,OACjBnb,EAAAqb,MAAQ6B,EAAQ7B,MAChBrb,EAAAob,KAAO8B,EAAQ9B,KACfpb,EAAA2b,MAAQuB,EAAQvB,MAChB3b,EAAA0c,KAAOQ,EAAQR,KACf1c,EAAA4b,OAASsB,EAAQtB,OACjB5b,EAAA6b,MAAQqB,EAAQrB,MAChB7b,EAAA8b,QAAUoB,EAAQpB,QAGlB9b,EAAAod,UAAYpd,EAAAyb,EAAGzb,EAAA0b,EAAG1b,EAAAwc,GAAIxc,EAAAyc,GAAIzc,EAAAkb,IAAKlb,EAAAmb,OAAQnb,EAAAob,KAAMpb,EAAAqb,MAAOrb,EAAA2b,MAAO3b,EAAA6b,MAAO7b,EAAA8b,QAAS9b,EAAA0c,KAAM1c,EAAA4b,QAGjF5b,EAAAqd,eAAiBrd,EAAAyb,EAAGzb,EAAA0b,EAAG1b,EAAAwc,GAAIxc,EAAAyc,GAAIzc,EAAAob,KAAMpb,EAAAqb,MAAOrb,EAAA2b,MAAO3b,EAAA6b,MAAO7b,EAAA8b,QAAS9b,EAAA0c,KAAM1c,EAAA4b,QAGzE5b,EAAAsd,qBAAuBtd,EAAAyb,EAAGzb,EAAA0b,EAAG1b,EAAAob,KAAMpb,EAAAqb,MAAOrb,EAAA2b,MAAO3b,EAAA8b,SAGjD9b,EAAAud,gBAAkBvd,EAAAyb,EAAGzb,EAAA0b,EAAG1b,EAAAob,KAAMpb,EAAAqb,MAAOrb,EAAA2b,MAAO3b,EAAA8b,QAAS9b,EAAAkb,IAAKlb,EAAAmb,QAG1Dnb,EAAAwd,qBAAuBxd,EAAAob,KAAMpb,EAAAqb,MAAOrb,EAAA2b,MAAO3b,EAAA6b,MAAO7b,EAAA8b,QAAS9b,EAAA0c,KAAM1c,EAAA4b,QAGjE5b,EAAAyd,2BAA6Bzd,EAAAob,KAAMpb,EAAAqb,MAAOrb,EAAA2b,MAAO3b,EAAA8b,SAGjD9b,EAAA0d,sBAAwB1d,EAAA2b,MAAO3b,EAAA4b,OAAQ5b,EAAA6b,MAAO7b,EAAA8b,QAAS9b,EAAAob,MAqBpEpb,EAAAsb,YAAAA,EASAtb,EAAAwb,iBAAAA,EAgCAxb,EAAA2c,SAAAA,CAKA,IAAMK,GAA4BJ,EAAA7M,MAAM6M,EAAAe,QAAQR,EAAAS,aAAc,UAAW,eAEzE5d,GAAA8c,iBAAAA,EAqBA9c,EAAAid,UAAAA,+DCxJA,SAAAY,GAAuBC,EAAc9C,EAAkB+C,EAAiBC,GACtE,GAAMC,GAAWH,EAAMG,SAASjD,GAC1BkD,EAAOJ,EAAMI,KAAKlD,GAClBmD,EAASL,EAAMK,MAoDrB,OAjDIvB,GAAAC,UAAUuB,EAAAC,QAASD,EAAAE,SAAUL,EAASxP,OAASyP,EAAKtD,eAEtDmD,EAAanB,EAAAjK,QACXnO,MACE+Z,OAAQ,yBAAyBL,EAAKtD,eAAc,MAErDmD,OACME,EAASxP,OAAS2P,EAAAI,WAC3BT,EAAanB,EAAAjK,QACXnO,MACE+Z,OAAQE,EAAAC,qBAAqB,cAAeT,EAASU,SAAUT,EAAKU,OAAQT,EAAOD,KAAKW,gBAAiBV,EAAOW,cAEjHf,IAImB9a,SAApBib,EAAKa,WACPhB,EAAWiB,OAAS3c,MAAO6b,EAAKa,YAG5B/D,IAAYC,EAAAQ,IAAMmB,EAAAC,UAAUuB,EAAAC,QAASD,EAAAE,SAAUL,EAASxP,OAAWwP,EAASxI,KAAOwI,EAASxP,OAAS2P,EAAAI,YACvGT,EAAWiB,OAAS3c,MAAO,MAM3B0b,EAAWiB,QACkB,MAA3BjB,EAAWiB,MAAM3c,MACnB0b,EAAWvJ,OACTnS,MAAsB,QAAf2b,EAAIiB,OAAmB,OACrBjE,IAAYC,EAAAQ,GAAKT,IAAYC,EAAAE,OAAU,QACxC,UAE0B,KAA3B4C,EAAWiB,MAAM3c,QAC1B0b,EAAWvJ,OAASnS,MAAO,YAI3B0b,EAAWiB,QAGkB,MAA3BjB,EAAWiB,MAAM3c,MACnB0b,EAAWmB,UAAY7c,MAAQ2Y,IAAYC,EAAAQ,GAAKT,IAAYC,EAAAE,OAAU,SAAW,UAC7C,KAA3B4C,EAAWiB,MAAM3c,QAC1B0b,EAAWmB,UAAY7c,MAAO,YAIC,IAA5Bua,EAAAnZ,KAAKsa,GAAYvc,OAAeyB,OAAY8a,kDA/DrD,IAAA9C,GAAA/Z,EAAA,iBACAkd,EAAAld,EAAA,cACA0b,EAAA1b,EAAA,cAGAud,EAAAvd,EAAA,YAGAlB,GAAA6d,OAAAA,wGCKA,SAAAsB,GAAmCrB,EAAcsB,GAC/C,MAAOA,GAAaC,OAAO,SAASnB,EAAMlD,GACxC,GAAMsE,KACN,IAAIxB,EAAMI,KAAKlD,GAAU,CACvB,GAAMzF,GAAOgK,EAAcvE,EAAS8C,EAChCvI,IAAQiK,EAAcjK,IACxB+J,EAAOhc,KAAKiS,EAGd,IAAMkK,GAAOC,EAAc1E,EAAS8C,EAChC2B,IAAQD,EAAcC,IACxBH,EAAOhc,KAAKmc,GAGVH,EAAO9d,OAAS,IAClB0c,EAAKlD,GAAWsE,GAGpB,MAAOpB,QAIX,QAAAyB,GAAuBrZ,GACrB,MAAOA,MAAM,GAAe,OAANA,EAMxB,QAAAkZ,GAAuBtB,GACrB,MAAOtB,GAAAgD,KAAKC,EAAY,SAACC,GAAS,MAAAC,GAAY7B,EAAM4B,KAGtD,QAAAC,GAAqB7B,EAAc4B,GAIjC,MAAa,SAATA,GAA4B,UAATA,IACZ5B,EAAK4B,IAGRH,EAAczB,EAAK4B,IAM7B,QAAAJ,GAA8B1E,EAAkB8C,GAE9C,MAAOkC,GAAUhF,EAAS8C,GAAO,GAGnC,QAAAyB,GAA8BvE,EAAkB8C,GAC9C,MAAOkC,GAAUhF,EAAS8C,GAAO,GAGnC,QAAAkC,GAAmBhF,EAAkB8C,EAAcmC,GACjD,GAAM/B,GAAOJ,EAAMI,KAAKlD,GAEpBkF,GACFC,MAAOrC,EAAMsC,UAAUpF,GAIzBqF,GAAAxF,gBAAgBtH,QAAQ,SAAS+M,GAC/B,GAAMje,GAAQke,EAA2BD,EAAUpC,EAAMlD,EAAS8C,EAAOmC,EAC3Dhd,UAAVZ,IACF6d,EAAOI,GAAYje,IAKvB,IAAMme,GAAYD,EAA2B,YAAarC,EAAMlD,EAAS8C,EAAOmC,EAC9Dhd,UAAdud,IACAN,EAAOM,UAAYA,EAKvB,IAAMC,GAAavC,EAAKwC,UAqBxB,OApBAb,GAAWtM,QAAQ,SAASuM,GAC1B,GAAKC,EAAYG,EAAQJ,GAAzB,CAMA,GAAIzd,EAEAA,GADS,WAATyd,EACQY,EAAO7C,OAAOC,EAAO9C,EAASyF,EAAW5C,WAAcqC,GAEvDO,EAAWX,OAGT7c,SAAVZ,GAAuBua,EAAAnZ,KAAKpB,GAAOb,OAAS,IAC9C0e,EAAOQ,OAASR,EAAOQ,WACvBR,EAAOQ,OAAOZ,IAASa,OAAQte,OAI5B6d,EAGT,QAAAK,GAAoCD,EAAwBM,EAAqB5F,EAAkB8C,EAAcmC,GAC/G,GAAMhC,GAAWH,EAAMG,SAASjD,EAEhC,QAAQsF,GACN,IAAK,SACH,OAAOL,GAAqBW,EAAcN,EAC5C,KAAK,SACH,MAAOO,GAAMC,OAAOR,EAAUM,EAAeX,EAAYjF,EAC3D,KAAK,QACH,MAAO6F,GAAME,MAAMT,EAAUM,EAAeX,EAAYjF,EAC1D,KAAK,SACH,MAAO6F,GAAMjC,OAAOgC,EAAe5F,EAASiD,EAAUH,EAAMK,OAC9D,KAAK,OACH,MAAO0C,GAAMpB,KAAK3B,EAAO9C,EAASiF,EACpC,KAAK,YACH,MAAOY,GAAML,UAAU1C,EAAO9C,EAASiF,EACzC,KAAK,SACH,MAAOY,GAAM5B,OAAO2B,EAAe5F,EACrC,KAAK,YACH,MAAO6F,GAAMG,UAAUJ,EAAe5F,EAASiD,EACjD,KAAK,QACH,MAAO4C,GAAMI,MAAML,EAAe3C,EAAUH,EAAMK,OAAQ8B,EAC5D,KAAK,SACH,MAAOY,GAAMK,OAAON,EACtB,KAAK,SACH,MAAOC,GAAMM,OAAOP,EAAeX,GAGvC,MAAOW,GAAcN,mDAhJvB,IAAAD,GAAAnf,EAAA,cAIAwf,EAAAxf,EAAA,YACA2f,EAAA3f,EAAA,WAGA0b,EAAA1b,EAAA,cAGM2e,GAA0B,SAAU,OAAQ,SAAU,QAAS,QAErE7f,GAAAmf,mBAAAA,EA+CAnf,EAAA0f,cAAAA,EAKA1f,EAAAuf,cAAAA,iGCpDA,SAAAX,GAAuBgC,EAAqB5F,EAAkBiD,EAAoBE,GAChF,MAAOM,GAAA2C,aAAanD,EAAU2C,EAAchC,OAAQT,EAAQnD,GAQ9D,QAAAqG,GAAyBvD,EAAc9C,GACrC,GAAMyE,GAAO3B,EAAMI,KAAKlD,GAASyE,IACjC,OAAaxc,UAATwc,EACKA,GAGD3B,EAAMwD,iBAAiBtG,KAAa8C,EAAMG,SAASjD,GAASvF,IAGtE,QAAAgK,GAAqB3B,EAAc9C,EAAkBiF,GACnD,GAAIjF,IAAYC,EAAAC,KAAOF,IAAYC,EAAAE,OAEjC,OAAO,CAGT,IAAK8E,EAIL,MAAOoB,GAASvD,EAAO9C,GAGzB,QAAAwF,GAA0B1C,EAAc9C,EAAkBiF,GACxD,GAAIA,EAAY,CACd,GAAMsB,GAAmC,MAAZvG,EAAkB,IAAM,GACrD,IAAI8C,EAAMqC,MAAMoB,GACd,MAAOzD,GAAMsC,UAAUmB,IAM7B,QAAAtC,GAAuB2B,EAAqB5F,GAC1C,GAAMiE,GAAS2B,EAAc3B,MAC7B,IAAIA,EACF,MAAOA,EAGT,QAAQjE,GACN,IAAKC,GAAAE,OAEH,MAAO,KACT,KAAKF,GAAAQ,EACH,MAAO,QACT,KAAKR,GAAAC,IACL,IAAKD,GAAAS,EACH,MAAO,OAGX,KAAM,IAAIta,OAAMqP,EAAIzL,QAAQwc,0BAG9B,QAAAR,GAA0BJ,EAAqB5F,EAAkBiD,GAC/D,GAAMpR,GAAQ+T,EAAcI,SAC5B,OAAc/d,UAAV4J,EACKA,EAILmO,IAAYC,EAAAQ,GAAMwC,EAASxI,IAA/B,OAES,EAMX,QAAAwL,GAAsBL,EAAqB3C,EAAoBE,EAAgB8B,GAC7E,IAAIA,EAAJ,CAGA,GAA4Bhd,SAAxB2d,EAAcK,MAChB,MAAOL,GAAcK,KAIvB,IAAMQ,GAAaC,EAAAT,MAAchD,EAAUE,GAEvCwD,EAAoBf,EAAcgB,cACtC,OAAOD,GAAY/E,EAAAhI,SAAS6M,EAAYE,GAAaF,GAGvD,QAAAP,GAAuBN,GACrB,GAAMiB,GAAOjB,EAAcM,MAC3B,OAAIN,GAAcM,QAAUY,EAAAC,WAAWF,EAAK,IAClCA,EAAoBhU,IAAI,SAACmU,GAE/B,MAAOF,GAAAG,UAAUD,GAAI,KAGlBH,EAGT,QAAAV,GAAuBP,EAAqBX,GAC1C,GAAMiC,GAAItB,EAAcO,MACxB,OAAUle,UAANif,EACKA,EAELjC,EAEK,EAEF,EAGT,QAAAkC,GAA+B7B,EAAwBM,EAAqBX,EAAqBjF,GAC/F,OAAIiF,GAAcjF,IAAYC,EAAAC,KAAOF,IAAYC,EAAAE,QAG1CyF,EAAcN,mDAnIvB,IAAA7P,GAAAvP,EAAA,aAIA+Z,EAAA/Z,EAAA,iBAEA4gB,EAAA5gB,EAAA,kBACAwgB,EAAAxgB,EAAA,kBACA0b,EAAA1b,EAAA,cAEAud,EAAAvd,EAAA,YAGAlB,GAAA4e,OAAAA,EASA5e,EAAAqhB,SAAAA,EASArhB,EAAAyf,KAAAA,EAaAzf,EAAAwgB,UAAAA,EAUAxgB,EAAAif,OAAAA,EAoBAjf,EAAAghB,UAAAA,EAeAhhB,EAAAihB,MAAAA,EAeAjhB,EAAAkhB,OAAAA,EAWAlhB,EAAAmhB,OAAAA,EAYAnhB,EAAAmiB,eAAAA,EAOaniB,EAAA8gB,OAASqB,EACTniB,EAAA+gB,MAAQoB,+ICrHrB,SAAAC,GAA2BC,EAAYzf,EAAe0f,GACpD,GAAIC,EAAAC,YAAYH,GACd,MAAO,IAAII,GAAAC,WAAWL,EAAMzf,EAAQ0f,EAGtC,IAAIC,EAAAI,YAAYN,GACd,MAAO,IAAIO,GAAAC,WAAWR,EAAMzf,EAAQ0f,EAGtC,IAAIC,EAAAO,WAAWT,GACb,MAAO,IAAIU,GAAAC,UAAUX,EAAMzf,EAAQ0f,EAGrC,MAAM,IAAIlhB,OAAMqP,EAAIzL,QAAQie;CAG9B,QAAAC,GAA4BxiB,EACxByd,EACAgF,GAOF,MANAA,GAAU5P,QAAQ,SAAC+M,GACjB,GAAMje,GAAQ8b,EAAOmC,EACPrd,UAAVZ,IACF3B,EAAE4f,IAAaje,MAAOA,MAGnB3B,EAGT,QAAA0iB,GAAgC1iB,EAAkBod,EAAkBqF,GAOlE,MANAA,GAAU5P,QAAQ,SAAC+M,GACjB,GAAMje,GAAQghB,EAAc/C,EAAUxC,EAAMvC,OAAQuC,EAAMK,OAC5Clb,UAAVZ,IACF3B,EAAE4f,IAAaje,MAAOA,MAGnB3B,EAOT,QAAA2iB,GAA0DC,EAAS/H,EAAY4C,GAC7E,GAAMoF,GAAqBpF,EAAO5C,EAClC,OAAiCtY,UAA7BsgB,EAAmBD,GACdC,EAAmBD,GAErBnF,EAAO5C,KAAK+H,GAQrB,QAAAlC,GAA6BnD,EAAoBW,EAAgBT,EAAgBnD,GAC/E,GAAIiD,EAASxP,OAAS2P,EAAAoF,eAAiBvF,EAASxI,IAG9C,MAAImJ,GACKA,EACyB,UAAvBX,EAASwF,WAAyBzI,IAAYC,EAAAyB,KAEhD,IAGFyB,EAAOiD,aAQlB,QAAA1C,GAAqCzN,EAAe0N,EAAoBC,EAAgBC,EAA0B6E,GAChH,IAAK/E,GAAYC,EAAQ,CAEvB,GAAM+E,GAAU/E,GAAU8E,CAC1B,OAAO,cAAczS,EAAK,MAAM0S,EAAO,KAEvC,MAAOC,GAAAC,iBAAiBlF,EAAU1N,EAAO4N,GAO7C,QAAAiF,GAA2BC,GACzB,OAAQnH,EAAAzZ,QAAQ4gB,GAAYA,GAAYA,IAAW1E,OAAO,SAACve,EAAGkjB,GAG5D,MAFAljB,GAAEmQ,MAAM3N,KAAKoe,EAAAzQ,MAAM+S,GAAkBC,UAAW,WAChDnjB,EAAEojB,MAAM5gB,KAAK0gB,EAAgBrgB,MAAQ,aAC9B7C,IACLmQ,SAAUiT,2DA9GhB,IAAAzT,GAAAvP,EAAA,UAEA+Z,EAAA/Z,EAAA,cAEAwgB,EAAAxgB,EAAA,eAGAkd,EAAAld,EAAA,WACA0b,EAAA1b,EAAA,WAEAuhB,EAAAvhB,EAAA,WACA0hB,EAAA1hB,EAAA,WAEA0iB,EAAA1iB,EAAA,eACA6hB,EAAA7hB,EAAA,UACAqhB,EAAArhB,EAAA,UAGAlB,GAAAoiB,WAAAA,EAgBApiB,EAAAkjB,YAAAA,EAYAljB,EAAAojB,gBAAAA,EAcApjB,EAAAqjB,cAAAA,EAaArjB,EAAAohB,aAAAA,EAmBAphB,EAAA0e,qBAAAA,EAaA1e,EAAA8jB,WAAAA,iLC7FA,SAAAK,GAAwBC,EAAyBtS,GAC3CA,GAEFrB,EAAI0C,IAAIrB,EAGV,KAGE,GAAMuQ,GAAOE,EAAA8B,UAAUD,GAGjBtG,EAAQW,EAAA2D,WAAWC,EAAM,KAAM,GASrC,OAHAvE,GAAMzZ,QAGCigB,EAASxG,WAGZhM,GACFrB,EAAI8T,SAKV,QAAAD,GAAkBxG,GAEhB,GAAM/Q,GAAS6P,EAAAjK,QAEX6R,QAAS,+CAEXC,EAAwB3G,IAGtB4G,UAEI3f,KAAM,QACN4b,OAAQ,4BAGR5b,KAAM,SACN4b,OAAQ,6BAEV1U,OAAO0Y,EAAAC,wBAAwB9G,MAEjCtH,QAASvK,OACP6R,EAAM+G,iBACN/G,EAAMgH,mBACNhH,EAAMiH,2BAERC,OAAQC,EAAkBnH,KAG9B,QACEuE,KAAMtV,GAKV,QAAA0X,GAAwC3G,GACtC,GAAMK,GAASL,EAAMK,MACrB,OAAOvB,GAAAjK,QAEJuS,QAASpH,EAAMoH,SAAW/G,EAAO+G,UACjCC,SAAU,OACXhH,EAAOiH,UAAYA,SAAUjH,EAAOiH,aACpCjH,EAAOkH,YAAcA,WAAYlH,EAAOkH,gBAI5C,QAAAJ,GAAkCnH,GAChC,GAAIwH,GAAgB1I,EAAAjK,QAEhB5N,KAAM+Y,EAAMyH,QAAQ,QACpB9W,KAAM,SAERqP,EAAMxI,aAAeA,YAAawI,EAAMxI,iBAEtCkQ,MAAOhP,KAAMsH,EAAMyH,QAAQE,EAAAC,OAAQ,KACnChF,QACEC,OAAQ/D,EAAAjK,QAEJgT,OAAQ1U,MAAO6M,EAAMyH,QAAQ,UAC7BK,QAAS3U,MAAO6M,EAAMyH,QAAQ,YAEhCzH,EAAM+H,8BAA8B/H,EAAMK,OAAO2H,SAKzD,OAAOlJ,GAAAjK,OAAO2S,EAAWxH,EAAMiI,iEAvGjC,IAAAN,GAAAvkB,EAAA,WACAuP,EAAAvP,EAAA,UAEAqhB,EAAArhB,EAAA,WACA0b,EAAA1b,EAAA,WACAyjB,EAAAzjB,EAAA,yBACAud,EAAAvd,EAAA,WAEAlB,GAAAmkB,QAAAA,EAgEAnkB,EAAAykB,wBAAAA,EAWAzkB,EAAAilB,kBAAAA,kICzEA,SAAAe,GAA0BC,EAAcrH,GACtC,MAAO,UAAUqH,EAAI,MAAMrH,EAAM,KAGnC,QAAAva,GAAeyZ,GACb,MAAOA,GAAMoI,eAAe,SAASC,EAAmClI,EAAoBjD,GAC1F,GAAMvF,GAAMqI,EAAMG,SAASjD,GAASvF,GACpC,IAAIA,EAAK,CAEP,GAAI2Q,GAAwBxJ,EAAAjK,QAC1BlE,KAAM,MACNwC,MAAOgN,EAAShN,MAChBoV,IAAK3E,EAAAzQ,MAAMgN,GAAWgG,UAAW,UAAWvC,EAAAzQ,MAAMgN,GAAWgG,UAAW,UAGzD,iBAARxO,MAAyBA,GAG5B6Q,IACN,KAAKF,EAASG,OAAQ,CACpB,GAAMC,GAAe1I,EAAMyH,QAAQtH,EAAShN,MAAQ,UACpDqV,GAAUhjB,MACRmL,KAAM,SACNwC,MAAOgN,EAAShN,MAChBsN,OAAQiI,IAGVJ,EAASG,QAAUhI,OAAQiI,GAGxBJ,EAASK,SAAYL,EAAStb,OAEjCsb,EAASK,QAAUC,EAAA3L,YAAYC,IAGjCsL,EAAUhjB,KAAK8iB,EAEf,IAAMO,GAA+BxJ,EAAAyJ,kBAAkB9I,EAAMqC,MAAMnF,GAASvM,OAASqP,EAAM+I,OAAO7L,EAClG,IAAI2L,EAA8B,CAEhC,GAAM/H,IAAUd,EAAMI,KAAKlD,IAAY8C,EAAM+I,OAAO7L,QAAgB4D,QAClEd,EAAMK,OAAOiD,aAET0F,EAAapF,EAAAzQ,MAAMgN,GAAW8I,OAAO,EAAM9C,UAAW,UACtD+C,EAAWtF,EAAAzQ,MAAMgN,GAAW8I,OAAO,EAAM9C,UAAW,OAE1DqC,GAAUhjB,MACRmL,KAAM,UACN4X,GAAI3E,EAAAzQ,MAAMgN,GAAWgG,UAAW,UAChCgC,KAASD,EAAiBc,EAAYlI,GAAO,cAAcoH,EAAiBgB,EAAUpI,KAI1F,GAAMxc,GAAMwa,EAAAqK,KAAKxR,GAAO,IAAMwI,EAAShN,MAAQ,MAAQ0V,CACvDR,GAAa/jB,GAAOkkB,EAEtB,MAAOH,wDApEX,IAAAO,GAAAxlB,EAAA,aAEAwgB,EAAAxgB,EAAA,kBACA0b,EAAA1b,EAAA,cAEAic,EAAAjc,EAAA,cAmEalB,GAAAyV,KACXyR,UAAW7iB,EAEX8iB,WAAY,SAASrJ,GACnB,GAAIqI,GAAe9hB,EAAMyZ,GAEnBsJ,EAAqBtJ,EAAMrK,MAAM4T,UAAU7Q,IAQjD,OALK4Q,GAAmBphB,SAEtB4W,EAAAjK,OAAOwT,EAAciB,EAAmB3R,WACjC2R,GAAmB3R,KAErB0Q,GAGTmB,WAAY,SAAUxJ,GACpB,GAAIqI,GAAe9hB,EAAMyZ,EAYzB,OAVAA,GAAMyJ,SAAShU,QAAQ,SAACE,GACtB,GAAM2T,GAAqB3T,EAAM4T,UAAU7Q,IAGtC4Q,GAAmBphB,SACtB4W,EAAAjK,OAAOwT,EAAciB,EAAmB3R,WACjC2R,GAAmB3R,OAIvB0Q,GAGT7B,SAAU,SAAU+C,GAClB,MAAOzK,GAAA4K,QAAQ5K,EAAAiF,KAAKwF,8GC7BxB,SAAAI,GAA8B3J,GAC5B,OACE4J,YAAaC,EAAAD,YAAYR,UAAUpJ,GACnC8J,WAAYC,EAAAD,WAAWV,UAAUpJ,GACjC9P,OAAQ8Z,EAAA9Z,OAAOkZ,UAAUpJ,GACzBiK,kBAAmBC,EAAAD,kBAAkBb,UAAUpJ,GAC/CmK,UAAWC,EAAAD,UAAUf,UAAUpJ,GAE/B9X,OAAQmiB,EAAAniB,OAAOkhB,UAAUpJ,GACzBrI,IAAKiR,EAAAjR,IAAIyR,UAAUpJ,GACnBsK,UAAWC,EAAAC,QAAQpB,UAAUpJ,GAC7Ba,SAAUiF,EAAAjF,SAASuI,UAAUpJ,GAC7ByK,QAASC,EAAAD,QAAQrB,UAAUpJ,GAC3B2K,MAAOC,EAAAD,MAAMvB,UAAUpJ,IAI3B,QAAA6K,GAA+B7K,GAC7B,OACE4J,YAAaC,EAAAD,YAAYP,WAAWrJ,GACpC8J,WAAYC,EAAAD,WAAWT,WAAWrJ,GAClC9P,OAAQ8Z,EAAA9Z,OAAOmZ,WAAWrJ,GAC1BiK,kBAAmBC,EAAAD,kBAAkBZ,WAAWrJ,GAChDmK,UAAWC,EAAAD,UAAUd,WAAWrJ,GAEhC9X,OAAQmiB,EAAAniB,OAAOmhB,WAAWrJ,GAC1BrI,IAAKiR,EAAAjR,IAAI0R,WAAWrJ,GACpBsK,UAAWC,EAAAC,QAAQnB,WAAWrJ,GAC9Ba,SAAUiF,EAAAjF,SAASwI,WAAWrJ,GAC9ByK,QAASC,EAAAD,QAAQpB,WAAWrJ,GAC5B2K,MAAOC,EAAAD,MAAMtB,WAAWrJ,IAI5B,QAAA8K,GAA+B9K,GAC7B,OAGE9P,OAAQ8Z,EAAA9Z,OAAOsZ,WAAWxJ,GAC1B4J,YAAaC,EAAAD,YAAYJ,WAAWxJ,GACpC8J,WAAYC,EAAAD,WAAWN,WAAWxJ,GAClCiK,kBAAmBC,EAAAD,kBAAkBT,WAAWxJ,GAChDmK,UAAWC,EAAAD,UAAUX,WAAWxJ,GAGhC9X,OAAQmiB,EAAAniB,OAAOshB,WAAWxJ,GAC1BrI,IAAKiR,EAAAjR,IAAI6R,WAAWxJ,GACpBsK,UAAWC,EAAAC,QAAQhB,WAAWxJ,GAC9Ba,SAAUiF,EAAAjF,SAAS2I,WAAWxJ,GAC9ByK,QAASC,EAAAD,QAAQjB,WAAWxJ,GAC5B2K,MAAOC,EAAAD,MAAMnB,WAAWxJ,IAa5B,QAAA+G,GAA6B/G,EAActH,GACzC,GAAMqS,GAAgB/K,EAAMuJ,UAAU7Q,KAEhCsS,EAAaX,EAAAniB,OAAOse,SAASuE,EAC/BC,IACFtS,EAAKlT,KAAKwlB,GAGZN,EAAAD,QAAQjE,SAASuE,EAAcN,YAAezK,EAAMiL,SAAStD,EAAAuD,SAASzV,QAAQ,SAAS0V,GACrFzS,EAAKlT,KAAK2lB,IAIZ,IAAMC,GAA6BlB,EAAAD,kBAAkBzD,SAASuE,EAAcd,kBAC5E,IAAImB,EAA2B1nB,OAAS,EAAG,CACzC,KAAIgV,EAAKhV,OAAS,GAIhB,KAAM,IAAIJ,OAAM,uCAHhB,IAAM+nB,GAAY3S,EAAKA,EAAKhV,OAAS,EACrC2nB,GAAU7C,WAAa6C,EAAU7C,eAAiBra,OAAOid,GAO7D,GAAME,GAAYV,EAAAD,MAAMnE,SAASuE,EAAcJ,MAC3CW,IACF5S,EAAKlT,KAAK8lB,EAIZ,IAAMC,GAA4BnB,EAAAD,UAAU3D,SAASuE,EAAcZ,UACnE,IAAIoB,EAA2B,CAC7B,GAAMF,GAAY3S,EAAKA,EAAKhV,OAAS,EACrC,MAAIgV,EAAKhV,OAAS,GAGhB,KAAM,IAAIJ,OAAM,iDAFhB+nB,GAAU7C,WAAa6C,EAAU7C,eAAiBra,QAAQod,IAM9D,MAAO7S,mDAtLT,IAAAiP,GAAAvkB,EAAA,cAWAinB,EAAAjnB,EAAA,YACAymB,EAAAzmB,EAAA,iBACA2mB,EAAA3mB,EAAA,gBACA4mB,EAAA5mB,EAAA,YACAwlB,EAAAxlB,EAAA,SACAmnB,EAAAnnB,EAAA,aACAgnB,EAAAhnB,EAAA,eACA8mB,EAAA9mB,EAAA,uBACAsnB,EAAAtnB,EAAA,aACAwnB,EAAAxnB,EAAA,WACA0iB,EAAA1iB,EAAA,aA0DAlB,GAAAynB,cAAAA,EAiBAznB,EAAA2oB,eAAAA,EAiBA3oB,EAAA4oB,eAAAA,EA6BA5oB,EAAA6kB,aAAAA,uOC5HA,SAAAxgB,GAAeyZ,GACb,GAAM9P,GAAS8P,EAAM9P,QACrB,OAAI4O,GAAAzZ,QAAQ6K,GACH,IACLA,EAAOH,IAAI,SAAC9N,GAAM,MAAA+nB,GAAAwB,WAAWvpB,KAC1BiO,OAAO,SAACjO,GAAM,MAAKkD,UAALlD,IACdkC,KAAK,UACR,IACO+L,EACF8Z,EAAAwB,WAAWtb,GADb,uDAxBT,IAAA8Z,GAAA5mB,EAAA,gBACA0b,EAAA1b,EAAA,aA6BalB,GAAAgO,QACXkZ,UAAW7iB,EAEX8iB,WAAY,SAASrJ,GACnB,GAAIyL,GAAkBllB,EAAMyZ,GAEtBsJ,EAAqBtJ,EAAMrK,MAAM4T,UAAU7Q,IAUjD,QAPK4Q,EAAmBphB,QAAUohB,EAAmBpZ,SAEnDub,GACGA,EAAkBA,EAAkB,OAAS,IAC9CnC,EAAmBpZ,aACdoZ,GAAmBpZ,QAErBub,GAGTjC,WAAY,SAASxJ,GAEnB,GAAIyL,GAAkBllB,EAAMyZ,EAQ5B,OAPAA,GAAMyJ,SAAShU,QAAQ,SAACE,GACtB,GAAM2T,GAAqB3T,EAAM4T,UAAU7Q,IACvCsH,GAAM0L,iBAAiB/V,IAAU2T,EAAmBpZ,QAAUoZ,EAAmBpZ,SAAWub,SAEvFnC,GAAmBpZ,SAGvBub,GAGTjF,SAAU,SAASiF,GACjB,MAAOA,KACL9a,KAAM,SACNwX,KAAMsD,+ECtDZ,SAAAllB,GAAeyZ,GACb,GAAM2L,IAAgB3L,EAAMsK,iBAAmB/I,OAAO,SAASqK,EAAUpB,GAEvE,MADAoB,GAASpB,EAAQjC,KAAM,EAChBqD,OAGLC,KAGA3b,EAAS8P,EAAM9P,QACd4O,GAAAzZ,QAAQ6K,KACXA,GAAUA,IAEZA,EAAOuF,QAAQ,SAAAxT,GACb,GAAI6pB,GAA4C,IAI5C9B,GAAA+B,cAAc9pB,GAChB6pB,EAAM7pB,EAAE+pB,MACChC,EAAAiC,cAAchqB,GACvB6pB,EAAM7pB,EAAEiqB,MAAM,GACLlC,EAAAmC,cAAclqB,KACvB6pB,GAAO7pB,EAAEmqB,OAASnqB,EAAM,IAAG,IAGvB6pB,IACA9H,EAAAC,WAAW6H,GACbD,EAAe5pB,EAAS,OAAK,OACpB6c,EAAAjJ,SAASiW,GAClBD,EAAe5pB,EAAS,OAAK,SACpB6c,EAAApM,SAASoZ,KAClBD,EAAe5pB,EAAS,OAAK,aAMnC+d,EAAMqM,gBAAgB,SAASlM,GAC7B,GAAIA,EAASxP,OAAS2P,EAAAI,SACpBmL,EAAe1L,EAAShN,OAAS,WAC5B,IAAIgN,EAASxP,OAAS2P,EAAAoF,aAAc,CACzC,GAAI9B,EAAA0I,QAAQnM,IAAawL,EAAaxL,EAAShN,OAC7C,MAEF0Y,GAAe1L,EAAShN,OAAS,WAKrC,IAAMuF,GAAOsH,EAAMtH,IACnB,IAAIA,GAAQiP,EAAA4E,UAAU7T,IAASA,EAAKoI,QAAUpI,EAAKoI,OAAOva,MAAO,CAC/D,GAAMimB,GAAQ9T,EAAKoI,OAAOva,KAC1BuY,GAAAnZ,KAAK6mB,GAAO/W,QAAQ,SAACtC,GACnB0Y,EAAe1Y,GAASqZ,EAAMrZ,KAIlC,MAAO0Y,mDArET,IAAA7H,GAAA5gB,EAAA,kBACAukB,EAAAvkB,EAAA,cACAwgB,EAAAxgB,EAAA,kBACA4mB,EAAA5mB,EAAA,gBACAkd,EAAAld,EAAA,cACA0b,EAAA1b,EAAA,aAmEalB,GAAA0nB,aACXR,UAAW7iB,EAEX8iB,WAAY,SAASrJ,GACnB,GAAI6L,GAAiBtlB,EAAMyZ,GAGrBsJ,EAAqBtJ,EAAMrK,MAAM4T,UAAU7Q,IAKjD,QAJK4Q,EAAmBphB,QAAUohB,EAAmBM,cACnD9K,EAAAjK,OAAOgX,EAAgBvC,EAAmBM,mBACnCN,GAAmBM,aAErBiC,GAGTrC,WAAY,SAASxJ,GAEnB,GAAI6L,GAAiBtlB,EAAMyZ,EAS3B,OARAA,GAAMyJ,SAAShU,QAAQ,SAACE,GACtB,GAAM2T,GAAqB3T,EAAM4T,UAAU7Q,IACvCsH,GAAM0L,iBAAiB/V,KAAWmJ,EAAA2N,OAAOnD,EAAmBM,YAAaiC,KAE3E/M,EAAAjK,OAAOgX,EAAgBvC,EAAmBM,mBACnCN,GAAmBM,eAGvBiC,GAITrF,SAAU,SAAUvgB,GAAI,MAAOA,mJC/FjC,SAAAM,GAAeyZ,GACb,OAAQA,EAAMsK,iBAAmB/I,OAAO,SAASmL,EAAkBlC,GAEjE,MADAkC,GAAiB5N,EAAAqK,KAAKqB,IAAYA,EAC3BkC,uDATX,IAAA5N,GAAA1b,EAAA,aAaalB,GAAAsoB,SACXpB,UAAW7iB,EAEX8iB,WAAY,SAASrJ,GACnB,GAAI0M,GAAmBnmB,EAAMyZ,GAEvBsJ,EAAqBtJ,EAAMrK,MAAM4T,UAAU7Q,IAOjD,OAJK4Q,GAAmBphB,SACtB4W,EAAAjK,OAAO6X,EAAkBpD,EAAmBgB,iBACrChB,GAAmBgB,WAErBoC,GAGTlD,WAAY,SAASxJ,GACnB,GAAI0M,GAAmBnmB,EAAMyZ,EAQ7B,OAPAA,GAAMyJ,SAAShU,QAAQ,SAACE,GACtB,GAAM2T,GAAqB3T,EAAM4T,UAAU7Q,MACtC4Q,EAAmBphB,QAAUohB,EAAmBgB,YACnDxL,EAAAjK,OAAO6X,MAAwBpD,EAAmBgB,iBAC3ChB,GAAmBgB,aAGvBoC,GAGTlG,SAAU,SAAS+C,GACjB,MAAOzK,GAAAiF,KAAKwF,GAAWhI,OAAO,SAASiH,EAAgBvmB,GAErD,MADAumB,GAAUhjB,KAAKsZ,EAAAjK,QAAQlE,KAAM,WAAY1O,IAClCumB,8GC7Cb,IAAAnJ,GAAAjc,EAAA,eACA0b,EAAA1b,EAAA,aAOalB,GAAA+nB,mBACXb,UAAW,SAASpJ,GAClB,MAAOA,GAAM2M,WAAWpL,OAAO,SAASqL,EAAsB1P,GAC5D,GAAMmF,GAAQrC,EAAMqC,MAAMnF,EAC1B,OAAK8C,GAAM7M,MAAM+J,IAAamF,GAI9BuK,EAAqB5M,EAAM7M,MAAM+J,IAAYmF,EAAM1R,OAAS0O,EAAAwN,UAAUC,IAC/DF,GAHEA,QAObvD,WAAY,SAASrJ,GACnB,GAAMsJ,GAAqBtJ,EAAMrK,MAAM4T,UAAU7Q,IAGjD,KAAK4Q,EAAmBphB,OAAQ,CAE9B,GAAM6kB,GAA6BzD,EAAmBW,iBAEtD,cADOX,GAAmBW,kBACnB8C,EAET,UAGFvD,WAAY,SAASxJ,GAEnB,GAAI+M,KAUJ,OARA/M,GAAMyJ,SAAShU,QAAQ,SAACE,GACtB,GAAM2T,GAAqB3T,EAAM4T,UAAU7Q,IACvCsH,GAAM0L,iBAAiB/V,KAAWmJ,EAAA2N,OAAOnD,EAAmBW,kBAAmB8C,KACjFjO,EAAAjK,OAAOkY,EAA4BzD,EAAmBW,yBAC/CX,GAAmBW,qBAIvB8C,GAGTvG,SAAU,SAASuG,GACjB,MAAIA,GACKjO,EAAAnZ,KAAKonB,GAA4B7c,OAAO,SAACiD,GAE9C,MAAO4Z,GAA2B5Z,KACjCpD,IAAI,SAASoD,GACd,OACExC,KAAM,SACNwX,KAAM,UAAYhV,EAAQ,sFCzCpC,SAAA5M,GAAeyZ,GACb,GAAMgN,GAAgBhN,EAAMgN,eAE5B,OAAOhN,GAAMoI,eAAe,SAAS6E,EAA4B9M,GAW/D,MAVuB,MAAnBA,EAAShN,QACP6Z,GACiB7nB,SAAlB6nB,GAA+B7M,EAAShN,OAAS+Z,EAAqB/M,EAASxP,MAChFsc,EAAW9M,EAAShN,OAASgN,EAI7B8M,EAAW9M,EAAShN,OAAS,MAG1B8Z,uDA7BX,IAAA3M,GAAAld,EAAA,cACA0b,EAAA1b,EAAA,cAMM8pB,GACJC,SAAS,EACTC,SAAS,EACTC,cAAc,EACdC,UAAU,EAsBCprB,GAAA4nB,YACXV,UAAW7iB,EAEX8iB,WAAY,SAASrJ,GACnB,GAAMuN,GAAsBhnB,EAAMyZ,GAE5BsJ,EAAqBtJ,EAAMrK,MAAM4T,UAAU7Q,IAOjD,OAJK4Q,GAAmBphB,SACtB4W,EAAAjK,OAAO0Y,EAAqBjE,EAAmBQ,kBACxCR,GAAmBQ,YAErByD,GAGT/D,WAAY,SAASxJ,GAInB,GAAIuN,GAAsBhnB,EAAMyZ,EAUhC,OARAA,GAAMyJ,SAAShU,QAAQ,SAACE,GACtB,GAAM2T,GAAqB3T,EAAM4T,UAAU7Q,IACvCsH,GAAM0L,iBAAiB/V,KAAWmJ,EAAA2N,OAAiBnD,EAAmBQ,WAAYyD,KACpFzO,EAAAjK,OAAO0Y,EAAqBjE,EAAmBQ,kBACxCR,GAAmBQ,cAIvByD,GAGT/G,SAAU,SAAS+C,GACjB,GAAMiE,GAAU1O,EAAAnZ,KAAK4jB,GAAWhI,OAAO,SAACkM,EAAUta,GAChD,GAAMgN,GAAWoJ,EAAUpW,EAU3B,OATiB,QAAbgN,IACFsN,EAASjoB,KAAK,UAAY2a,EAAShN,MAAQ,eACvC2L,EAAAC,UAAUuB,EAAAoF,aAAcpF,EAAAI,UAAWP,EAASxP,OAI9C8c,EAASjoB,KAAK,iBAAkB2a,EAAShN,MAAQ,QAG9Csa,MAGT,OAAOD,GAAQ9pB,OAAS,IAEpBiN,KAAM,SACNwX,KAAMqF,EAAQrpB,KAAK,oICvF3B,IAAAU,GAAAzB,EAAA,yBAIAsqB,EAAAtqB,EAAA,kBACAwgB,EAAAxgB,EAAA,kBACAuqB,EAAAvqB,EAAA,cAEA0b,EAAA1b,EAAA,cAEAud,EAAAvd,EAAA,YAKalB,GAAAioB,WACXf,UAAW,SAASpJ,GAClB,GAAIlB,EAAAC,UAAU,OAAQ,QAASiB,EAAMvC,QAAS,CAC5C,GAAqB,SAAjBuC,EAAMvC,QAAqBuC,EAAM4N,gBAAgB,SAEnD,MAAOjN,GAAAqF,WAAWhG,EAAM6N,SAASzH,MAGjC,IAAM0H,GAAuD,eAAzB9N,EAAM+N,QAAQ5M,OAA0B,IAAM,IAC5Etb,EAAOma,EAAMna,KAAKioB,GAClBE,EAAYL,EAAAM,YAAYpoB,GAC5B+d,EAAAzQ,OAGEwS,UAAW+H,EAAAQ,YAAYlO,EAAM6N,UAAYhoB,EAAKyH,GAAKnI,OACnDgO,MAAOtN,EAAKsN,QAEd6M,EAAM7M,MAAM2a,GAAmB3H,UAAW,SAE5C,QACEhT,MAAO6a,EACP5H,MAAO,cAKb,MAAO,OAGTiD,WAAY,SAASrJ,GACnB,GAAMsJ,GAAqBtJ,EAAMrK,MAAM4T,UAAU7Q,IAGjD,KAAK4Q,EAAmBphB,OAAQ,CAE9B,GAAMimB,GAAqB7E,EAAmBa,SAE9C,cADOb,GAAmBa,UACnBgE,EAET,MAAO,OAGT3E,WAAY,SAASxJ,GAKnB,IAAkB,GAHdmO,GAA6B,KAC7BC,EAA+B,KAEjBC,EAAA,EAAAC,EAAAtO,EAAMyJ,SAAN4E,EAAAC,EAAA5qB,OAAA2qB,IAAc,CAA3B,GAAI1Y,GAAK2Y,EAAAD,GACN/E,EAAqB3T,EAAM4T,UAAU7Q,IAC3C,IAAIsH,EAAM0L,iBAAiB/V,IAA2C,OAAjC2T,EAAmBa,UACtD,GAA2B,OAAvBgE,EACFA,EAAqB7E,EAAmBa,UACxCiE,EAAuBvpB,EAAUspB,OAC5B,IAAIC,IAAyBvpB,EAAUykB,EAAmBa,WAAY,CAC3EgE,EAAqB,IACrB,QAKN,GAA2B,OAAvBA,EAEF,IAAkB,GAAAI,GAAA,EAAAC,EAAAxO,EAAMyJ,SAAN8E,EAAAC,EAAA9qB,OAAA6qB,IAAc,CAA3B,GAAI5Y,GAAK6Y,EAAAD,SACL5Y,GAAM4T,UAAU7Q,KAAKyR,UAIhC,MAAOgE,IAGT3H,SAAU,SAAS2H,GACjB,MAAIA,IAEAxd,KAAM,UACN9K,KAAMsoB,GAGH,6MC5FX,IAeiBjmB,GAfjByf,EAAAvkB,EAAA,cACA0b,EAAA1b,EAAA,cAQA2mB,EAAA3mB,EAAA,gBACA4mB,EAAA5mB,EAAA,YACAwlB,EAAAxlB,EAAA,SACAmnB,EAAAnnB,EAAA,aACA0iB,EAAA1iB,EAAA,eAEA,SAAiB8E,GACf,QAAA3B,GAAeyZ,GACb,GAAItH,GAAOsH,EAAMtH,IAEjB,IAAIA,EAAM,CAGR,GAAIsS,IAAsB/jB,KAAM+Y,EAAMiL,SAAStD,EAAAuD,QAC/C,IAAIvD,EAAA8G,aAAa/V,GACfsS,EAAW5H,OAAS1K,EAAK0K,OACzB4H,EAAWlK,QAAUnQ,KAAM,YACtB,IAAIgX,EAAA4E,UAAU7T,GAAO,CAC1BsS,EAAW/Q,IAAMvB,EAAKuB,GAItB,IAAIyU,GAAmB,kBAAkBC,KAAK3D,EAAW/Q,KAAK,EACzD6E,GAAAC,UAAU,OAAQ,MAAO,MAAO,YAAa2P,KAChDA,EAAmB,OAErB,IAAME,GAAyBlW,EAAKoI,WAG9B+N,EAAyBD,EAAWje,MAAQ+H,EAAiB,UACnEsS,GAAWlK,OACThC,EAAAjK,QACGlE,KAAMke,EAAaA,EAAaH,GACjCE,EAAWpM,UAAYA,SAAUoM,EAAWpM,aAE5CoM,EAAWE,SACRA,QAAUF,EAAWE,SACxBF,EAAWG,MACRA,KAAOH,EAAWG,cAGpB,IAAIpH,EAAAqH,YAAYtW,GACrB,OAAQzR,KAAMyR,EAAKzR,KAGrB,OAAO+jB,GACF,IAAKhL,EAAMlb,OAGhB,OAAQmC,KAAM+Y,EAAMiL,SAAStD,EAAAuD,SAOjC,QAAA7B,GAA2BrJ,GACzB,GAAIgL,GAAazkB,EAAMyZ,EAMvB,OALKA,GAAMrK,MAAM4T,UAAU7Q,KAAKxQ,QAE9B8X,EAAMrK,MAAMsZ,WAAWjP,EAAMrK,MAAMsV,SAAStD,EAAAuD,QAASlL,EAAMiL,SAAStD,EAAAuD,SAG/DF,EAGT,QAAAxB,GAA2BxJ,GACzB,GAAIgL,GAAazkB,EAAMyZ,EAoBvB,OAnBAA,GAAMyJ,SAAShU,QAAQ,SAACE,GACtB,GAAMuZ,GAAYvZ,EAAM4T,UAAU7Q,IAElC,IAAIsH,EAAM0L,iBAAiB/V,GAAQ,CAEjC,GAAMwZ,IAAYD,EAAUhf,SAAWgf,EAAUtF,cAAgBsF,EAAUpF,UACvEqF,IAEFxZ,EAAMsZ,WAAWtZ,EAAMsV,SAAStD,EAAAuD,QAASlL,EAAMiL,SAAStD,EAAAuD,eACjDgE,GAAUhnB,QAGjBgnB,EAAUhnB,QACRjB,KAAM0O,EAAMsV,SAAStD,EAAAuD,QACrBhjB,OAAQ8X,EAAMiL,SAAStD,EAAAuD,YAKxBF,EAGT,QAAAxE,GAAyB+C,GACvB,GAAIA,EAAUrhB,OAAQ,CACpB,GAAI8iB,GAAqBzB,EAAUrhB,MAenC,OAbIqhB,GAAUK,cACZL,EAAUrhB,OAAO4Y,OAASyI,EAAUrhB,OAAO4Y,WAC3CyI,EAAUrhB,OAAO4Y,OAAOva,MAAQgjB,EAAUK,aAG5CoB,EAAWxC,aAAera,OACxBoc,EAAAC,QAAQhE,SAAS+C,EAAUe,WAC3BP,EAAAD,WAAWtD,SAAS+C,EAAUO,YAC9BE,EAAA9Z,OAAOsW,SAAS+C,EAAUrZ,QAC1B0Y,EAAAjR,IAAI6O,SAAS+C,EAAU5R,KACvBmO,EAAAjF,SAAS2F,SAAS+C,EAAU1I,WAGvBmK,EAET,MAAO,MAvDI9iB,EAAAkhB,UAAsC7iB,EAEnC2B,EAAAmhB,WAAUA,EAUVnhB,EAAAshB,WAAUA,EAwBVthB,EAAAse,SAAQA,GApFTte,EAAAhG,EAAAgG,SAAAhG,EAAAgG,0JCwCjB,SAAAknB,GAA0BpP,GACxB,MAAOA,GAAM2K,MAAM0E,QAAQ9N,OAAO,SAAChP,EAAQ+c,GACzC,GAAMpS,GAAUoS,EAAGpS,QACbiD,EAAWmP,EAAGnP,SAEdkC,EAAQrC,EAAMqC,MAAMnF,GACpB9J,EAASwQ,EAAAzQ,MAAMgN,GACnBgG,UAAW9D,GAAShD,EAAAyJ,kBAAkBzG,EAAM1R,MAAQ,QAAU,SAKhE,OAHMyC,IACJb,EAAO/M,KAAK4N,GAEPb,uDA7DX,IAAAoO,GAAAvd,EAAA,aACAukB,EAAAvkB,EAAA,cACAwgB,EAAAxgB,EAAA,kBACAic,EAAAjc,EAAA,eAEA0b,EAAA1b,EAAA,aA+DalB,GAAAyoB,OAEXvB,UAAW,SAASpJ,GAClB,GAAMuP,GAAkBvP,EAAM2K,KAC9B,IAAK4E,EAAL,CAIA,GAAMC,KACN,IAAID,EAAgBE,eAAgB,CAClC,GAAMC,GAAkB1P,EAAMG,SAASoP,EAAgBE,eACnDC,GAAgB/X,KAGlB6X,EAAQhqB,KAAKwa,EAAM7M,MAAMoc,EAAgBE,gBAAiBtJ,UAAW,WACrEqJ,EAAQhqB,KAAKwa,EAAM7M,MAAMoc,EAAgBE,gBAAiBtJ,UAAW,UAErEqJ,EAAQhqB,KAAKwa,EAAM7M,MAAMoc,EAAgBE,iBAI7C,GAGI5pB,GAHE8pB,EAAUP,EAAiBpP,GAC3BiG,EAAWjG,EAAM6N,SAASzH,KAehC,OAXEvgB,GADEogB,EACKtF,EAAAqF,WAAWC,GAIX0J,EAAQpO,OAAO,SAACve,EAAGmQ,GAGxB,MAFAnQ,GAAEmQ,MAAM3N,KAAK2N,GACbnQ,EAAEojB,MAAM5gB,KAAK,cACNxC,IACLmQ,SAAUiT,YAIdnf,KAAM+Y,EAAMiL,SAAStD,EAAAiI,SACrB1nB,OAAQ8X,EAAMiL,SAAStD,EAAAkI,SACvBL,QAASA,EACTrc,MAAO6M,EAAM7M,MAAMoc,EAAgBO,cACnCH,QAASA,EACT9pB,KAAMA,EACNkqB,OAAQR,EAAgBQ,OACxBC,OAAQlR,EAAAC,UAAU,OAAQ,QAASiB,EAAMvC,WAI7C+L,WAAY,SAASxJ,KAMrBqJ,WAAY,SAASrJ,GACnB,GAAMrK,GAAQqK,EAAMrK,MACd2T,EAAqB3T,EAAM4T,UAAU7Q,IAE3C,IAAI4Q,EAAmBqB,MAAO,CAC5B,GAAIsF,GAAiB3G,EAAmBqB,MAElCuF,EAAUlQ,EAAMiL,SAAStD,EAAAiI,QAiB/B,OAhBAja,GAAMsZ,WAAWgB,EAAehpB,KAAMipB,GACtCD,EAAehpB,KAAOipB,EAGtBD,EAAe/nB,OAAS8X,EAAMiL,SAAStD,EAAAkI,SAGvCI,EAAeT,QAAUxP,EAAMoI,eAAe,SAACoH,EAAmBrP,GAChE,GAAMgQ,GAAevM,EAAAzQ,MAAMgN,GAAWgG,UAAW,SAIjD,OAHKrH,GAAAC,SAASyQ,EAASW,IACrBX,EAAQhqB,KAAK2qB,GAERX,GACNS,EAAeT,eAEXlG,GAAmBqB,MACnBsF,IAIXzJ,SAAU,SAACyJ,GACT,GAAKA,EAAL,CAIA,GAAIzH,KA0BJ,OAxBIyH,GAAeD,QACjBxH,EAAUhjB,MACRmL,KAAM,SACNwC,MAAO8c,EAAe9c,MACtBqc,QAASS,EAAeN,QACxBS,QAASH,EAAeT,QACxB5c,OAAQ,QACRrO,MAAO,IAKXikB,EAAUhjB,MACRmL,KAAM,QACN6e,QAASS,EAAeT,QACxBrc,MAAO8c,EAAe9c,MACtBtN,KAAMoqB,EAAepqB,KACrB0iB,IACE0H,EAAe9c,MAAQ,SACvB8c,EAAe9c,MAAQ,QAEzB4c,OAAQE,EAAeF,UAIvB9oB,KAAMgpB,EAAehpB,KACrBiB,OAAQ+nB,EAAe/nB,OACvBsgB,UAAWA,+KC/LjB,IAYiBiC,GAZjB9C,EAAAvkB,EAAA,cACAwgB,EAAAxgB,EAAA,kBACA0b,EAAA1b,EAAA,eAUA,SAAiBqnB,GACf,QAAA4F,GAAsBC,EAAkCnQ,GAatD,MAZIA,GAASxI,KACX2Y,EAAK1M,EAAAzQ,MAAMgN,GAAWgG,UAAW,YAAa,EAC9CmK,EAAK1M,EAAAzQ,MAAMgN,GAAWgG,UAAW,UAAW,EAK5CmK,EAAK1M,EAAAzQ,MAAMgN,GAAWgG,UAAW,YAAa,GAG9CmK,EAAK1M,EAAAzQ,MAAMgN,KAAa,EAEnBmQ,EAGT,QAAAlH,GAA0BpJ,GAExB,GAAMsQ,MAGAC,IAyBN,OAvBAvQ,GAAMqM,gBAAgB,SAASlM,EAAUjD,GACvC,GAAIiD,EAASwF,UACX,GAA2B,UAAvBxF,EAASwF,UACX4K,EAAK,KAAOA,EAAK,SAEjBA,EAAK,KAAY,OAAI,MAEhB,CACLA,EAAKpQ,EAAShN,OAASod,EAAKpQ,EAAShN,WACrCod,EAAKpQ,EAAShN,OAAOgN,EAASwF,YAAa,CAG3C,IAAMtD,GAAQrC,EAAMqC,MAAMnF,EACtBmF,IAA0B,iBAAjBA,EAAMW,SACjBuN,EAAKpQ,EAAShN,OAAY,KAAI,EAC9Bod,EAAKpQ,EAAShN,OAAY,KAAI,OAIlCkd,GAAaC,EAAMnQ,OAKrBlZ,KAAM+Y,EAAMiL,SAAStD,EAAAkI,SACrBW,WAAYF,EACZG,SAAUF,IAId,QAAAlH,GAA2BrJ,GACzB,GAAMsJ,GAAqBtJ,EAAMrK,MAAM4T,UAAU7Q,IAKjD,KAAK4Q,EAAmBphB,QAAUohB,EAAmBmB,QAAS,CAC5D,GAAIiG,GAAoBpH,EAAmBmB,QAAQ1a,IAAI,SAAS4gB,GAE9DA,EAAiBH,WAAaxQ,EAAMoI,eAAeiI,EAAcM,EAAiBH,WAElF,IAAMI,GAA2BD,EAAiB1pB,KAAK4pB,OAAO7Q,EAAMrK,MAAM8R,QAAQ,IAAI/jB,OAGtF,OAFAsc,GAAMrK,MAAMsZ,WAAW0B,EAAiB1pB,KAAM2pB,GAC9CD,EAAiB1pB,KAAO2pB,EACjBD,GAIT,cADOrH,GAAmBmB,QACnBiG,EAET,SAGF,QAAAI,GAAuBC,EAAqCC,GAC1D,IAAK,GAAMC,KAASD,GAClB,GAAIA,EAAc1qB,eAAe2qB,GAAQ,CAEvC,GAAMvjB,GAAMsjB,EAAcC,EAC1B,KAAK,GAAM3jB,KAAMI,GACXA,EAAIpH,eAAegH,KACjB2jB,IAASF,GAEXA,EAAeE,GAAO3jB,IAAM,EAE5ByjB,EAAeE,IAAU3jB,IAAI,KAQzC,QAAAkc,GAA2BxJ,GAEzB,GAAIkR,KA6BJ,OAzBAlR,GAAMyJ,SAAShU,QAAQ,SAACE,GACtB,GAAM2T,GAAqB3T,EAAM4T,UAAU7Q,MACtC4Q,EAAmBphB,QAAUohB,EAAmBmB,SAEnDnB,EAAmBmB,QAAQhV,QAAQ,SAAC0b,GAGlC,GAAM7sB,GAAMwa,EAAAqK,KAAKgI,EAAaX,WAC1BlsB,KAAO4sB,GAGTJ,EAAcI,EAAU5sB,GAAKmsB,SAAUU,EAAaV,WAGpDU,EAAalqB,KAAO+Y,EAAMiL,SAAStD,EAAAkI,SAAW,IAAM/Q,EAAAnZ,KAAKurB,GAAWxtB,OACpEwtB,EAAU5sB,GAAO6sB,GAInBxb,EAAMsZ,WAAWtZ,EAAMsV,SAAStD,EAAAkI,SAAUqB,EAAU5sB,GAAK2C,YAClDqiB,GAAmBmB,YAKzB3L,EAAAiF,KAAKmN,GAOd,QAAA1K,GAAyB+C,EAA+B6H,GACtD,MAAO7H,GAAUhI,OAAO,SAAS4J,EAAawF,GAC5C,GAAML,GAAOK,EAAiBH,WACxBD,EAAOI,EAAiBF,QAE9B,IAAI3R,EAAAnZ,KAAK4qB,GAAM7sB,OAAS,EAAG,CACzB,GAAM8rB,GAAU1Q,EAAAnZ,KAAK2qB,GACf9H,EAAY1J,EAAAyC,OAAOgP,EAAM,SAAS1tB,EAAGwuB,EAAWle,GAEpD,IAAiB,GADXzF,GAAMoR,EAAAnZ,KAAK0rB,GACAhD,EAAA,EAAAiD,EAAA5jB,EAAA2gB,EAAAiD,EAAA5tB,OAAA2qB,IAAG,CAAf,GAAM/gB,GAAEgkB,EAAAjD,EACXxrB,GAAE0P,OAAO/M,KAAK2N,GACdtQ,EAAE6K,IAAIlI,KAAK8H,GAEb,MAAOzK,KAEP8N,KAAM,YACN6e,QAASA,EACTjd,UACA7E,QAGFyd,GAAY3lB,MACVyB,KAAM0pB,EAAiB1pB,KACvBiB,OAAQkpB,EACR5I,WAAYA,KAGhB,MAAO2C,QAhJKV,EAAArB,UAASA,EAqCTqB,EAAApB,WAAUA,EA0CVoB,EAAAjB,WAAUA,EAsCViB,EAAAjE,SAAQA,GAtITiE,EAAAvoB,EAAAuoB,UAAAvoB,EAAAuoB,qGCAjB,SAAAlkB,GAAeyZ,GACb,MAAOA,GAAMoI,eAAe,SAASmJ,EAA6CpR,GAChF,GAAIA,EAASxP,OAAS2P,EAAAI,UAAYP,EAASU,SAAU,CAEnD,GAAM5e,GAAI2hB,EAAAzQ,MAAMgN,EAChBoR,GAAkBtvB,IAChB0O,KAAM,UACN4X,GAAItmB,EACJkmB,KAAMrC,EAAA0L,UAAUrR,EAASU,SAAUV,EAAShN,QAGhD,MAAOoe,wDArBX,IAAA3N,GAAAxgB,EAAA,kBACA0iB,EAAA1iB,EAAA,kBACAkd,EAAAld,EAAA,cACA0b,EAAA1b,EAAA,aAsBalB,GAAA2e,UACXuI,UAAW7iB,EAEX8iB,WAAY,SAAUrJ,GACpB,GAAIuR,GAAoBhrB,EAAMyZ,GAExBsJ,EAAqBtJ,EAAMrK,MAAM4T,UAAU7Q,IAOjD,OAJK4Q,GAAmBphB,SACtB4W,EAAAjK,OAAO0c,EAAmBjI,EAAmBzI,gBACtCyI,GAAmBzI,UAErB0Q,GAGT/H,WAAY,SAASxJ,GACnB,GAAIuR,GAAoBhrB,EAAMyZ,EAQ9B,OAPAA,GAAMyJ,SAAShU,QAAQ,SAACE,GACtB,GAAM2T,GAAqB3T,EAAM4T,UAAU7Q,IACtC4Q,GAAmBphB,SACtB4W,EAAAjK,OAAO0c,EAAmBjI,EAAmBzI,gBACtCyI,GAAmBzI,YAGvB0Q,GAET/K,SAAU,SAAS+C,GAEjB,MAAOzK,GAAAiF,KAAKwF,iHC+ShB,SAAAkI,GAAiCzR,GAC/B,MAAOA,GAAM0R,gCAAgC,MAC3C1R,EAAM0R,gCAAgC,KAG1C,QAAAC,GAAwBtP,EAAcrC,EAAmBK,GACvD,MAAsBlb,UAAlBkd,EAAMsP,QACDtP,EAAMsP,QAGVF,EAAiBzR,GAIfK,EAAOgC,MAAMuP,aAFX,EAKX,QAAAC,GAAiC7R,GAC/B,GAAMrK,GAAQqK,EAAMrK,MACdmc,EAAmBhT,EAAAjK,UAAWc,EAAM0K,OAAO2H,KAAMrS,EAAM0K,OAAO0R,MAAM/J,KAE1E,OAAOlJ,GAAAjK,QACH5O,EAAG+Z,EAAM4N,gBAAgBzQ,EAAAE,SACrBgF,MAAOrC,EAAMsC,UAAUnF,EAAAE,QACvBlK,MAAO6M,EAAM7M,MAAMgK,EAAAE,QAEnB0S,OAAQ/P,EAAM2R,QAAQxU,EAAAE,QAAU,IAC7B9Y,MAAOyb,EAAMK,OAAOgC,MAAMuP,aAAe,GAEhDpkB,EAAGwS,EAAM4N,gBAAgBzQ,EAAAC,MACvBiF,MAAOrC,EAAMsC,UAAUnF,EAAAC,KACvBjK,MAAO6M,EAAM7M,MAAMgK,EAAAC,KAEnB2S,OAAQ/P,EAAM2R,QAAQxU,EAAAC,KAAO,IAC1B7Y,MAAOyb,EAAMK,OAAOgC,MAAMuP,aAAe,GAE9C/J,OAAQ1U,OAAQrO,OAAQkb,EAAMrK,MAAMqc,SAAS,WAC7ClK,QAAS3U,OAAQrO,OAAQkb,EAAMrK,MAAMqc,SAAS,aAEhDP,EAAiBzR,GAASrK,EAAMoS,8BAA8B+J,OAWlE,QAAAG,GAAsCjS,EAAmBtH,GAsBvD,MArBIsH,GAAM+R,MAAMG,QACdxZ,EAAKlT,MACHyB,KAAM/E,EAAAiwB,wBAA0BnS,EAAMqL,YACtCnjB,OAAQ8X,EAAMqL,YACd7C,YACE7X,KAAM,YACN6e,SAAUxP,EAAM7M,MAAMgK,EAAAE,aAKxB2C,EAAM+R,MAAMK,KACd1Z,EAAKlT,MACHyB,KAAM/E,EAAAmwB,qBAAuBrS,EAAMqL,YACnCnjB,OAAQ8X,EAAMqL,YACd7C,YACE7X,KAAM,YACN6e,SAAUxP,EAAM7M,MAAMgK,EAAAC,UAIrB1E,EAGT,QAAA4Z,GAAyBtS,EAAmB9C,GAE1C,GAAIqV,GAAiB,KAEf5c,EAAQqK,EAAMrK,KAoBpB,OAnBIA,GAAMiY,gBAAgB1Q,IACpBvH,EAAMyK,KAAKlD,KAIXqV,EAAYC,EAAmBxS,EAAO9C,GAElCvH,EAAMyK,KAAKlD,IAAYuV,EAAAlP,SAAS5N,EAAOuH,GAEzCvH,EAAM4T,UAAUmJ,KAAKxV,IAAYsP,EAAA5K,cAAc1E,EAASvH,UAGjDA,GAAM4T,UAAUmJ,KAAKxV,IAO7BqV,EAIT,QAAAC,GAAmCxS,EAAmB9C,GACpD,GAAMyV,GAAkB,MAAZzV,EACN0V,EAAeD,EAAM,SAAW,MAChCE,IAAa7S,EAAM+R,MAAMa,GACzBE,EAAaH,EAAMzwB,EAAAiwB,wBAA0BjwB,EAAAmwB,qBAE/CU,GACF9rB,KAAM+Y,EAAMyH,QAAQvK,EAAU,SAC9BvM,KAAM,QA+CR,OA5CIkiB,KAKFE,EAAUrL,MAAQhP,KAAMoa,EAAa9S,EAAMqL,cAGzCsH,EACFI,EAAUnQ,QACRC,QACEgF,OAAQ1U,OAAQrO,OAAQkb,EAAMrK,MAAMqc,SAAS,WAC7ClK,QAAS3U,OAAQ6f,MAAO,WACxB/sB,EAAG4sB,GACDxQ,MAAOrC,EAAMsC,UAAUnF,EAAAE,QACvBlK,MAAO6M,EAAM7M,MAAMgK,EAAAE,QAEnB0S,OAAQ/P,EAAM2R,QAAQxU,EAAAE,QAAU,IAIhC9Y,MAAOyb,EAAMK,OAAOgC,MAAMuP,aAAe,KAK/CmB,EAAUnQ,QACRC,QACEgF,OAAQ1U,OAAQ6f,MAAO,UACvBlL,QAAS3U,OAAQrO,OAAQkb,EAAMrK,MAAMqc,SAAS,YAC9CxkB,EAAGqlB,GACDxQ,MAAOrC,EAAMsC,UAAUnF,EAAAC,KACvBjK,MAAO6M,EAAM7M,MAAMgK,EAAAC,KAEnB2S,OAAQ/P,EAAM2R,QAAQxU,EAAAC,KAAO,IAG7B7Y,MAAOyb,EAAMK,OAAOgC,MAAMuP,aAAe,KAMjDmB,EAAUL,MAAQlG,EAAA/K,cAAcvE,EAAS8C,EAAMrK,QACxCod,EAIT,QAAAE,GAA0BjT,GACxB,GAAMkT,GAAkBlT,EAAMK,OAAO0R,MAAMpQ,KAErCwR,GACJlsB,KAAM+Y,EAAMyH,QAAQ,YACpB9W,KAAM,OACN+W,MACEhP,KAAMxW,EAAAmwB,qBAAuBrS,EAAMqL,aAErCzI,QACEC,QACErV,GACE6U,MAAOrC,EAAMsC,UAAUnF,EAAAC,KACvBjK,MAAO6M,EAAM7M,MAAMgK,EAAAC,MAErBnX,GAAI1B,MAAO,EAAGwrB,QAASmD,EAAgBnD,QACvCqD,IAAKjgB,OAAQ6f,MAAO,SAAUjD,OAAQmD,EAAgBnD,QACtDsD,QAAS9uB,MAAO2uB,EAAgBI,OAChCC,eAAgBhvB,MAAO2uB,EAAgBM,SACvCC,aAAclvB,MAAO,MAK3B,QAAQ4uB,GACNlsB,KAAM+Y,EAAMyH,QAAQ,gBACpB9W,KAAM,OACNiS,QACEC,QACErV,GAAI2F,OAAQ6f,MAAO,WACnB/sB,GAAI1B,MAAO,EAAGwrB,QAASmD,EAAgBnD,QACvCqD,IAAKjgB,OAAQ6f,MAAO,SAAUjD,OAAQmD,EAAgBnD,QACtDsD,QAAS9uB,MAAO2uB,EAAgBI,OAChCC,eAAgBhvB,MAAO2uB,EAAgBM,SACvCC,aAAclvB,MAAO,QAM7B,QAAAmvB,GAA6B1T,GAC3B,GAAMkT,GAAkBlT,EAAMK,OAAO0R,MAAMpQ,KAErCgS,GACJ1sB,KAAM+Y,EAAMyH,QAAQ,eACpB9W,KAAM,OACN+W,MACEhP,KAAMxW,EAAAiwB,wBAA0BnS,EAAMqL,aAExCzI,QACEC,QACE5c,GACEoc,MAAOrC,EAAMsC,UAAUnF,EAAAE,QACvBlK,MAAO6M,EAAM7M,MAAMgK,EAAAE,SAErB7P,GAAIjJ,MAAO,EAAGwrB,QAASmD,EAAgBnD,QACvC6D,IAAKzgB,OAAQ6f,MAAO,UAAWjD,OAAQmD,EAAgBnD,QACvDsD,QAAS9uB,MAAO2uB,EAAgBI,OAChCC,eAAgBhvB,MAAO2uB,EAAgBM,SACvCC,aAAclvB,MAAO,MAK3B,QAAQovB,GACN1sB,KAAM+Y,EAAMyH,QAAQ,mBACpB9W,KAAM,OACNiS,QACEC,QACE5c,GAAIkN,OAAQ6f,MAAO,UACnBxlB,GAAIjJ,MAAO,EAAGwrB,QAASmD,EAAgBnD,QACvC6D,IAAKzgB,OAAQ6f,MAAO,UAAWjD,OAAQmD,EAAgBnD,QACvDsD,QAAS9uB,MAAO2uB,EAAgBI,OAChCC,eAAgBhvB,MAAO2uB,EAAgBM,SACvCC,aAAclvB,MAAO,0EAnlB7BoO,EAAAvP,EAAA,UAEAmf,EAAAnf,EAAA,WACA+Z,EAAA/Z,EAAA,cACAywB,EAAAzwB,EAAA,aAEAsqB,EAAAtqB,EAAA,eACAwgB,EAAAxgB,EAAA,eAIA0b,EAAA1b,EAAA,WAIAopB,EAAAppB,EAAA,gBACAqvB,EAAArvB,EAAA,gBACAud,EAAAvd,EAAA,YACAukB,EAAAvkB,EAAA,eACA0wB,EAAA1wB,EAAA,YACA2wB,EAAA3wB,EAAA,WAEA4wB,EAAA5wB,EAAA,gBACA6wB,EAAA7wB,EAAA,gBAMalB,GAAAiwB,wBAA0B,UAK1BjwB,EAAAmwB,qBAAuB,MAEpC,IAAAzN,GAAA,SAAAsP,GAqBE,QAAAtP,GAAYL,EAAiBzf,EAAe0f,GAA5C,GAAA2P,GACED,EAAAzwB,KAAAf,KAAM6hB,EAAMzf,EAAQ0f,IAAgB9hB,IAhBnByxB,GAAAC,UAEAD,EAAAzB,QAEAyB,EAAAE,WAIHF,EAAAxJ,MAAyB,KAExBwJ,EAAAG,WASf,IAAMjU,GAAS8T,EAAK9T,OAAS8T,EAAKI,WAAWhQ,EAAKlE,OAAQvb,GAEpD6Q,EAASwe,EAAKxe,MAAQgL,EAAA2D,WAAWC,EAAKA,KAAM4P,EAAMA,EAAK1M,QAAQ,SACrE0M,GAAK1K,UAAY9T,EAEjB,IAAMoc,GAASoC,EAAKpC,MAAQoC,EAAKK,UAAUjQ,EAAKwN,aAChDoC,GAAKC,OAAUD,EAAKM,qBAAqB1C,EAAO1R,GAChD8T,EAAKzB,KAASyB,EAAKO,SAAS3C,EAAO1R,EAAQ1K,GAC3Cwe,EAAKE,aAgST,MAjUgCM,GAAA/qB,UAAAgb,EAAAsP,GAoCtBtP,EAAAve,UAAAkuB,WAAR,SAAmBK,EAAoB9vB,GACrC,MAAOga,GAAA+V,UAAU/V,EAAAgW,UAAUjB,EAAAkB,eAAgBjwB,EAASA,EAAOub,UAAauU,IAGlEhQ,EAAAve,UAAAmuB,UAAR,SAAkBzC,GAsBhB,MApBAA,GAAQjT,EAAAgW,UAAU/C,GAElBrE,EAAAjY,QAAQsc,EAAO,SAAS5R,EAAoBjD,GAC1C,MAAK4B,GAAAC,UAAU5B,EAAAC,IAAKD,EAAAE,QAASH,GAQN/X,SAAnBgb,EAAShN,OACXR,EAAIuB,KAAKvB,EAAIzL,QAAQ8tB,cAAc7U,EAAUjD,eACtC6U,GAAM7U,QAKf0G,GAAA2C,UAAUpG,EAAUjD,IAblBvK,EAAIuB,KAAKvB,EAAIzL,QAAQ+tB,oBAAoB/X,EAAS,qBAC3C6U,GAAM7U,MAcV6U,GAGDnN,EAAAve,UAAAouB,qBAAR,SAA6B1C,EAAc1R,GACzC,GAAML,GAAQtd,IACd,QAAQya,EAAAC,IAAKD,EAAAE,QAAQkE,OAAO,SAAS2T,EAAQhY,GAW3C,MAVI6U,GAAM7U,KACRgY,EAAOhY,GAAW8W,EAAAmB,QAChBjY,EAAS6U,EAAM7U,GAAUmD,EACzBlb,OACAA,WAIF6a,EAAMsU,SAASpX,GAAWyU,EAAQI,EAAM7U,GAASmF,UAAarC,EAAOK,IAEhE6U,QAIHtQ,EAAAve,UAAAquB,SAAR,SAAiB3C,EAAc1R,EAAgB1K,GAC7C,GAAMqK,GAAQtd,IACd,QAAQya,EAAAC,IAAKD,EAAAE,QAAQkE,OAAO,SAAS6T,EAAOlY,GAC1C,GAAI6U,EAAM7U,GAAU,CAClB,GAAMmY,GAAWtD,EAAM7U,GAASkD,IAChC,IAAIiV,KAAa,EAAO,CACtB,GAAIC,KACJ/S,GAAAvF,wBAAwBvH,QAAQ,SAAS+M,GACHrd,SAAhCkb,EAAO0R,MAAM3R,KAAKoC,KACpB8S,EAAqB9S,GAAYnC,EAAO0R,MAAM3R,KAAKoC,KAIvD,IAAM+S,GAAYH,EAAMlY,GAAQyX,EAAA9qB,YAC3ByrB,EACAD,EAGL,IAAInY,IAAYC,EAAAC,IAAK,CACnB,GAAMoY,GAAa7f,EAAMyK,KAAKjD,EAAAS,EAC1B4X,IAA0B,UAAjBA,EAAMrU,SAAuBoU,EAAUpU,SAClDoU,EAAUpU,OAAS,SAEjBnB,EAAM0R,gCAAgCvU,EAAAQ,KAAO4X,EAAUtU,aACzDsU,EAAUtU,WAAkC,UAArBsU,EAAUpU,OAAqB,GAAK,OAKnE,MAAOiU,SAIJxQ,EAAAve,UAAAunB,gBAAP,SAAuB1Q,GACrB,QAASxa,KAAKqvB,MAAM7U,IAGd0H,EAAAve,UAAAovB,WAAR,WAEE,IAAgB,GADVhL,GAAU/nB,KAAK6mB,UAAU7Q,KAAK+R,QACpB4D,EAAA,EAAA3D,EAAAD,EAAA4D,EAAA3D,EAAAhnB,OAAA2qB,IAAO,CAAlB,GAAMrrB,GAAC0nB,EAAA2D,EACV,IAAIvP,EAAAnZ,KAAK3C,EAAEytB,UAAU/sB,OAAS,EAC5B,OAAO,EAGX,OAAO,GAGFkhB,EAAAve,UAAAqvB,aAAP,WAEE,MAAO,WAAahzB,KAAK+kB,QAAQ,SAG5B7C,EAAAve,UAAAglB,UAAP,WAEE,MAAI3oB,MAAK6mB,UAAU7Q,KAAKiS,MACf,UAELjoB,KAAK+yB,aACA,UAEF,UAGF7Q,EAAAve,UAAA8Z,SAAP,SAAgBjD,GACd,MAAOxa,MAAKqvB,MAAM7U,IAGb0H,EAAAve,UAAAsvB,UAAP,WACEjzB,KAAKiT,MAAMggB,YACXjzB,KAAK6mB,UAAU7Q,KAAOiP,EAAAkD,eAAenoB,OAGhCkiB,EAAAve,UAAAuvB,eAAP,aAKOhR,EAAAve,UAAAwvB,gBAAP,WACEnzB,KAAKiT,MAAMkgB,kBACXnzB,KAAK6mB,UAAUuM,OAAShC,EAAAiC,iBAAiBrzB,OAGpCkiB,EAAAve,UAAA2vB,WAAP,WACE,GAAMrgB,GAAQjT,KAAKiT,MACbqK,EAAQtd,IAEdiT,GAAMqgB,YAKN,IAAIC,GAAiBvzB,KAAK6mB,UAAU6K,OAASH,EAAAkB,QAAoBzyB,KAGjEoc,GAAAnZ,KAAKgQ,EAAM4T,UAAU6K,QAAQ3e,QAAQ,SAASyH,GAG1C+Y,EAAe/Y,GAAWvH,EAAM4T,UAAU6K,OAAOlX,GAGjD4B,EAAAiF,KAAKkS,EAAe/Y,IAAUzH,QAAQ,SAAS4M,GAC7C,GAAM6T,GAAyB7T,EAAMpb,KAAK4pB,OAAOlb,EAAM8R,QAAQ,IAAI/jB,QAC7DwsB,EAAUlQ,EAAMsC,UAAU4T,GAAwB,EACxDvgB,GAAMwgB,YAAY9T,EAAMpb,KAAMipB,GAC9B7N,EAAMpb,KAAOipB,UAIRva,GAAM4T,UAAU6K,OAAOlX,MAK7B0H,EAAAve,UAAA+vB,UAAP,WACE1zB,KAAKiT,MAAMygB,YAEX1zB,KAAK6mB,UAAU9L,KAAOqB,EAAAjK,QAElB5N,KAAMvE,KAAK+kB,QAAQ,QACnB9W,KAAM,QACN+W,KAAM5I,EAAAjK,QAEFkd,OACE9qB,KAAMvE,KAAKgzB,eACXhd,KAAMhW,KAAK2oB,YACXmE,WAAYrhB,OACVzL,KAAKkrB,gBAAgBzQ,EAAAC,MAAQ1a,KAAKyQ,MAAMgK,EAAAC,SACxC1a,KAAKkrB,gBAAgBzQ,EAAAE,SAAW3a,KAAKyQ,MAAMgK,EAAAE,gBAKnDuF,QACEC,OAAQgP,EAAwBnvB,QAQpCA,KAAKiT,MAAMsS,kBAIRrD,EAAAve,UAAA6b,UAAP,WACExf,KAAKiT,MAAMuM,YACXxf,KAAK6mB,UAAUmJ,KAAOlG,EAAAnL,mBAAmB3e,MAAOya,EAAAC,IAAKD,EAAAE,UAGhDuH,EAAAve,UAAAgwB,eAAP,WAIE,GAAMC,GAAahE,EAAgB5vB,KAAMya,EAAAQ,GACnC4Y,EAAajE,EAAgB5vB,KAAMya,EAAAS,EAEzClb,MAAK6mB,UAAUiN,WAAa1X,EAAAjK,OAC1ByhB,GAAcrwB,EAAGqwB,MACjBC,GAAc/oB,EAAG+oB,QAId3R,EAAAve,UAAAowB,eAAP,WAIE,GAAM9gB,GAAQjT,KAAKiT,KAEnBjT,MAAK6mB,UAAUmN,WAAa5X,EAAAjK,QACzBc,EAAMiY,gBAAgBzQ,EAAAQ,IAAMjb,KAAKkrB,gBAAgBzQ,EAAAE,SAAW6U,OAAQwB,EAAoBhxB,WACxFiT,EAAMiY,gBAAgBzQ,EAAAS,IAAMlb,KAAKkrB,gBAAgBzQ,EAAAC,MAAQgV,IAAKa,EAAiBvwB,YAI7EkiB,EAAAve,UAAAswB,YAAP,WACEj0B,KAAKiT,MAAMghB,cAOXj0B,KAAK6mB,UAAU8K,QAAU3xB,KAAKiT,MAAM4T,UAAU8K,QAC9C3xB,KAAKiT,MAAM4T,UAAU8K,YAGhBzP,EAAAve,UAAA0hB,8BAAP,WACE,MAAO,OAGFnD,EAAAve,UAAAuwB,gBAAP,SAAuBhQ,GACrB,UAGKhC,EAAAve,UAAA4gB,sBAAP,SAA6BvO,GAC3B,UAGKkM,EAAAve,UAAA0gB,aAAP,SAAoBrO,GAMlB,MAJAiP,GAAAZ,aAAarkB,KAAMgW,GACnBhW,KAAKiT,MAAMoR,aAAarO,GACxBuZ,EAAsBvvB,KAAMgW,GAErBA,GAIFkM,EAAAve,UAAA2gB,eAAP,SAAsB6P,GAGpB,MADAn0B,MAAKiT,MAAMqR,eAAe6P,GACnB/C,EAAA9M,eAAetkB,KAAMm0B,IAGvBjS,EAAAve,UAAAywB,cAAP,WACE,SAAU3oB,OAER2Q,EAAAiF,KAAKrhB,KAAK6mB,UAAUiN,YACpB1X,EAAA4K,QAAQ5K,EAAAiF,KAAKrhB,KAAK6mB,UAAUmN,aAC5Bh0B,KAAK6mB,UAAU9L,OAIZmH,EAAAve,UAAAsmB,SAAP,WACE,OAAQxP,EAAAC,IAAKD,EAAAE,SAGLuH,EAAAve,UAAA0wB,WAAV,WACE,MAAOr0B,MAAKqvB,OAGPnN,EAAAve,UAAAsrB,QAAP,SAAezU,GACb,MAAOxa,MAAK4xB,SAASpX,IAGhB0H,EAAAve,UAAA2wB,QAAP,WACE,OAAO,GAEXpS,GAjUgCmP,EAAAkD,MAAnB/0B,GAAA0iB,WAAAA,EAmUb1iB,EAAAuvB,iBAAAA,EAKAvvB,EAAAyvB,QAAAA,EA6CAzvB,EAAA+vB,sBAAAA,EAqDA/vB,EAAAswB,mBAAAA,2VC7cAqB,EAAAzwB,EAAA,aAOA8zB,EAAA9zB,EAAA,WACA0b,EAAA1b,EAAA,WAEAukB,EAAAvkB,EAAA,WAEA+zB,EAAA/zB,EAAA,eACAud,EAAAvd,EAAA,YACA0wB,EAAA1wB,EAAA,YACA2wB,EAAA3wB,EAAA,WAIAg0B,EAAAh0B,EAAA,kBAGA2hB,EAAA,SAAAmP,GA2BE,QAAAnP,GAAYR,EAAiBzf,EAAe0f,GAA5C,GAAA2P,GACED,EAAAzwB,KAAAf,KAAM6hB,EAAMzf,EAAQ0f,IAAgB9hB,WAzBnByxB,GAAAC,UAEAD,EAAAzB,QAEAyB,EAAAE,WAIHF,EAAAxJ,MAAyB,KAmBvCwJ,EAAKtM,MAAQtD,EAAKsD,MAClBsM,EAAKrM,OAASvD,EAAKuD,OAEnBqM,EAAK9T,OAAS8T,EAAKI,WAAWhQ,EAAKlE,OAAQvb,GAC3CqvB,EAAK1K,SAAWlF,EAAK8S,MAAMtnB,IAAI,SAACsnB,EAAOh0B,GAErC,MAAOsd,GAAA2D,WAAW+S,EAAOlD,EAAMA,EAAK1M,QAAQ,SAAWpkB,QA2M7D,MA/OgCsxB,GAAA/qB,UAAAmb,EAAAmP,GAwCtBnP,EAAA1e,UAAAkuB,WAAR,SAAmBK,EAAoB9vB,GACrC,MAAOga,GAAA+V,UAAU/V,EAAAgW,UAAUjB,EAAAkB,eAAgBH,EAAY9vB,EAASA,EAAOub,YAGlE0E,EAAA1e,UAAAunB,gBAAP,SAAuB1Q,GAErB,OAAO,GAGF6H,EAAA1e,UAAAmd,iBAAP,SAAwBtG,GAEtB,MAAOxa,MAAK+mB,SAAS,GAAGjG,iBAAiBtG,IAGpC6H,EAAA1e,UAAAglB,UAAP,WAEE,MAAO3oB,MAAK+mB,SAAS,GAAG4B,aAGnBtG,EAAA1e,UAAA8Z,SAAP,SAAgBjD,GACd,MAAO,OAGF6H,EAAA1e,UAAAsvB,UAAP,WACEjzB,KAAK+mB,SAAShU,QAAQ,SAACE,GACrBA,EAAMggB,cAERjzB,KAAK6mB,UAAU7Q,KAAOye,EAAArM,eAAepoB,OAGhCqiB,EAAA1e,UAAAuvB,eAAP,aAKO7Q,EAAA1e,UAAAwvB,gBAAP,WAEEnzB,KAAK+mB,SAAShU,QAAQ,SAAAE,GACpBA,EAAMkgB,oBAERnzB,KAAK6mB,UAAUuM,OAAShC,EAAAwD,iBAAiB50B,OAGpCqiB,EAAA1e,UAAA2vB,WAAP,WACE,GAAMhW,GAAQtd,KAEVuzB,EAAiBvzB,KAAK6mB,UAAU6K,SAEpC1xB,MAAK+mB,SAAShU,QAAQ,SAASE,GAC7BA,EAAMqgB,aAKJlX,EAAAnZ,KAAKgQ,EAAM4T,UAAU6K,QAAQ3e,QAAQ,SAASyH,GAC5C,GAAIqa,GAA+B5hB,EAAM4T,UAAU6K,OAAOlX,EAC1D,IAAKqa,EAAL,CAKA,GAAMC,GAA+BvB,EAAe/Y,EAChDsa,IAAeA,EAAY/f,MAI7B+f,EAAY/f,KAAKuL,OAASoU,EAAAK,aAAaD,EAAY/f,KAAKuL,OAAQuU,EAAY9f,KAAKuL,QACjFwU,EAAYE,UAAYF,EAAYE,UAAYF,EAAYE,UAAYH,EAAYG,UACpFF,EAAYG,eAAiBH,EAAYG,eAAiBH,EAAYG,eAAiBJ,EAAYI,gBAEnG1B,EAAe/Y,GAAWqa,EAI5BzY,EAAAiF,KAAKwT,GAAa9hB,QAAQ,SAAS4M,GACjC,GAAM6T,GAAyB7T,EAAMpb,KAAK4pB,OAAOlb,EAAM8R,QAAQ,IAAI/jB,QAC7DwsB,EAAUlQ,EAAMsC,UAAU4T,GAAwB,EACxDvgB,GAAMwgB,YAAY9T,EAAMpb,KAAMipB,GAC9B7N,EAAMpb,KAAOipB,UAGRqH,GAAYra,SAMpB6H,EAAA1e,UAAA+vB,UAAP,WACE1zB,KAAK+mB,SAAShU,QAAQ,SAASE,GAC7BA,EAAMygB,eAIHrR,EAAA1e,UAAA6b,UAAP,WACE,GAAI0V,GAAgBl1B,KAAK6mB,UAAUmJ,OAEnChwB,MAAK+mB,SAAShU,QAAQ,SAASE,GAC7BA,EAAMuM,YAIJpD,EAAAnZ,KAAKgQ,EAAM4T,UAAUmJ,MAAMjd,QAAQ,SAASyH,GAIrC0a,EAAc1a,KACjB0a,EAAc1a,GAAWvH,EAAM4T,UAAUmJ,KAAKxV,SAOjD6H,EAAA1e,UAAAgwB,eAAP,WACE,MAAO,OAGFtR,EAAA1e,UAAAowB,eAAP,WACE,MAAO,OAGF1R,EAAA1e,UAAAswB,YAAP,WACE,GAAIkB,GAAkBn1B,KAAK6mB,UAAU8K,UAErC3xB,MAAK+mB,SAAShU,QAAQ,SAASE,GAC7BA,EAAMghB,cAIJ7X,EAAAnZ,KAAKgQ,EAAM4T,UAAU8K,SAAS5e,QAAQ,SAASyH,GAExC2a,EAAgB3a,KACnB2a,EAAgB3a,GAAWvH,EAAM4T,UAAU8K,QAAQnX,SAOtD6H,EAAA1e,UAAA0hB,8BAAP,SAAqC+P,GACnC,MAAOnX,GAAAyE,eAAgB0S,EAAYZ,EAAAa,mBAAmB5pB,QAAQ,WAGzD4W,EAAA1e,UAAAuwB,gBAAP,SAAuBhQ,GACrB,UAGK7B,EAAA1e,UAAA4gB,sBAAP,SAA6BvO,GAC3B,UAGKqM,EAAA1e,UAAA0gB,aAAP,SAAoBrO,GAMlB,MAJAye,GAAApQ,aAAarkB,KAAMgW,GACnBhW,KAAK+mB,SAAShU,QAAQ,SAACE,GACrBA,EAAMoR,aAAarO,KAEdA,GAGFqM,EAAA1e,UAAA2gB,eAAP,SAAsB6P,GAKpB,MAHAn0B,MAAK+mB,SAAShU,QAAQ,SAACE,GACrBA,EAAMqR,eAAe6P,KAEhB/C,EAAA9M,eAAetkB,KAAMm0B,IAGvB9R,EAAA1e,UAAAywB,cAAP,WAEE,MAAOhY,GAAA4K,QAAQhnB,KAAK+mB,SAAS1Z,IAAI,SAAC4F,GAChC,MAAOA,GAAMmhB,oBAIV/R,EAAA1e,UAAAsmB,SAAP,WACE,UAGQ5H,EAAA1e,UAAA0wB,WAAV,WACE,MAAO,OAGFhS,EAAA1e,UAAA2xB,QAAP,WACE,OAAO,GASFjT,EAAA1e,UAAAqlB,iBAAP,SAAwB/V,GACtB,GAAM+C,GAAOhW,KAAKgW,KACZwW,EAAYvZ,EAAM4T,UAAU7Q,KAC5Buf,GAAc/I,EAAUhnB,QAAWwQ,GAAQiP,EAAA4E,UAAU7T,IAASA,EAAKuB,MAAQiV,EAAUhnB,OAAO+R,GAClG,OAAOge,IAEXlT,GA/OgCgP,EAAAkD,MAAnB/0B,GAAA6iB,WAAAA,kLCKb,SAAAiC,GAA+BhH,EAAc6W,GAC3C,GAAMqB,GAAkBlY,EAAMuJ,UAAUuM,MACxC,KAAKoC,EAAgBrQ,QAAUqQ,EAAgBpQ,OAC7C,MAAO+O,EAIP,IAAMsB,GAAiBrZ,EAAAnZ,KAAKmZ,EAAAjK,OAAOqjB,EAAgBrQ,MAAMuQ,SAAUF,EAAgBpQ,OAAOsQ,WACpF5N,EAAU0N,EAAgBrQ,MAAM2C,QAAQrc,OAAO+pB,EAAgBpQ,OAAO0C,SACzEza,IAAI,SAAA9N,GAAK,MAAA6c,GAAAjK,QAAQlE,KAAM,WAAY1O,IAEtC,QACEk2B,EAAez0B,OAAS,GACtBuD,KAAM+Y,EAAMiL,SAAStD,EAAAC,QACrB1f,OAAQ8X,EAAMqL,YACd7C,YACE7X,KAAM,YACN4B,OAAQ4lB,EACRzqB,IAAKyqB,EAAepoB,IAAI,WAAM,MAAA,eACtB5B,OAAOqc,KAEjBvjB,KAAM+Y,EAAMiL,SAAStD,EAAAC,QACrBxE,YACAoF,UAAWgC,IAUnB,QAAA6N,GAAgCrY,GAC9B,OACE6H,MAAOyQ,EAAoBtY,EAAO7C,EAAAQ,GAClCmK,OAAQwQ,EAAoBtY,EAAO7C,EAAAS,IAIvC,QAAA0a,GAA6BtY,EAAkB9C,GAC7C,OACEkb,SAAUG,EAAYvY,EAAO9C,GAC7BsN,UACEjC,GAAIvI,EAAMwY,gBAAgBtb,GAC1BiL,KAAMsQ,EAAazY,EAAO9C,MAKhC,QAAAub,GAA6BzY,EAAkB9C,GAC7C,GAAMmF,GAAQrC,EAAMqC,MAAMnF,EAC1B,IAAImF,GAEEhD,EAAAyJ,kBAAkBzG,EAAM1R,OAAS0R,EAAMqW,UAAW,CAGpD,GAAMC,GAAcC,EAAgB5Y,EAAO9C,GACrC2b,EAAsC1zB,SAAvBkd,EAAMwW,aAA6BxW,EAAMwW,aAAexW,EAAM+E,QAC7E0R,EAA8B,SAAfzW,EAAM1R,KAEDxL,SAAvBkd,EAAMyW,aAA6BzW,EAAMyW,aAAezW,EAAM+E,QAG/D,EAEEnjB,EAAQ00B,GACTG,EAAe,MAAMA,EAAiB,KACtCD,EAAe,QAAQA,EAAiB,GAM3C,OAAO,OAAO50B,EAAK,UAAUoe,EAAMqW,UAGvC,OAAQxb,IAAYC,EAAAQ,EAAIqC,EAAM6H,MAAQ7H,EAAM8H,QAAU,GAGxD,QAAAiO,GAAiC/V,GAC/B,OACE6H,MAAOkR,EAAqB/Y,EAAO7C,EAAAE,QACnCyK,OAAQiR,EAAqB/Y,EAAO7C,EAAAC,MAIxC,QAAA2b,GAA8B/Y,EAAmB9C,GAC/C,GAAM8b,GAAuBhZ,EAAMrK,MAAM4T,UAAUuM,OAC7CmD,EAAW/b,IAAYC,EAAAC,IAAM,SAAW,QACxC8b,EAAoCF,EAAqBC,GAKvDb,EAAWtZ,EAAAjK,OAAO0jB,EAAYvY,EAAO9C,GAAUgc,EAAmBd,UAClE5N,EAAU0O,EAAmB1O,QAAQrc,SACzCoa,GAAIvI,EAAMwY,gBAAgBtb,GAC1BiL,KAAMgR,EAAiBnZ,EAAO9C,EAAS8C,EAAMrK,MAAM6iB,gBAAgBtb,MAIrE,cADO8b,GAAqBC,IAE1Bb,SAAUA,EACV5N,QAASA,GAOf,QAAA2O,GAA0BnZ,EAAmB9C,EAAkBkc,GAC7D,MAAIpZ,GAAM4N,gBAAgB1Q,GACjB,WAAakc,EAAY,QAAUpZ,EAAM2R,QAAQzU,GAAW,OAAc0b,EAAgB5Y,EAAO9C,GAEjG,UAAYkc,EAAY,QAAUpZ,EAAMK,OAAOgC,MAAMuP,aAIhE,QAAA0F,GAAiCtX,GAC/B,OACE6H,MAAOwR,EAAqBrZ,EAAO7C,EAAAQ,GACnCmK,OAAQuR,EAAqBrZ,EAAO7C,EAAAS,IAIxC,QAAAyb,GAA8BrZ,EAAmB9C,GAK7C,GAAM8b,GAAuBhZ,EAAMyJ,SAAS,GAAGF,UAAUuM,OACnDwD,EAAWpc,IAAYC,EAAAS,EAAI,SAAW,QACtCsb,EAAoCF,EAAqBM,GAEzDlB,EAAWc,EAAmBd,SAC9B5N,IACJjC,GAAIvI,EAAMwY,gBAAgBtb,GAC1BiL,KAAM+Q,EAAmB1O,QAAQ,GAAGrC,MAOtC,OAJAnI,GAAMyJ,SAAShU,QAAQ,SAACE,SACfA,GAAM4T,UAAUuM,OAAOwD,MAI9BlB,SAAUA,EACV5N,QAASA,GAKf,QAAA+N,GAAqBvY,EAAc9C,GACjC,GAAI8C,EAAM4N,gBAAgB1Q,IAAY8C,EAAMwD,iBAAiBtG,GAAU,CACrE,GAAMmF,GAAQrC,EAAMqC,MAAMnF,EAC1B,IAAImC,EAAAyJ,kBAAkBzG,EAAM1R,SAAW0R,EAAMW,iBAAkB9e,QAAQ,CAErE,GAAMq1B,GAAgBvZ,EAAM7M,MAAM+J,GAC9Bkb,IAEJ,OADAA,GAASmB,IAAiB,EACnBnB,GAGX,SAGF,QAAAQ,GAAgC5Y,EAAc9C,GAC5C,GAAMmF,GAAQrC,EAAMqC,MAAMnF,EAC1B,OAAImF,GAAMW,iBAAkB9e,OACnBme,EAAMW,OAAOtf,OAAS,GAGxBsc,EAAM7M,MAAM+J,GAAU+L,OAAO,EAAMuQ,OAAQ,6DAvMpD,IAAArc,GAAA/Z,EAAA,cACAukB,EAAAvkB,EAAA,WACAic,EAAAjc,EAAA,YAEA0b,EAAA1b,EAAA,UAuBAlB,GAAA8kB,eAAAA,EAiCA9kB,EAAAm2B,gBAAAA,EAiBAn2B,EAAAu2B,aAAAA,EA8BAv2B,EAAA6zB,iBAAAA,EAuCA7zB,EAAAo1B,iBAAAA,EA+CAp1B,EAAA02B,gBAAAA;YCrLA,SAAAa,GAAwBtZ,EAAoBuZ,EAAkB1Z,EAAkB9C,GAC9E,GAAIuc,MACEhc,EAAOuC,EAAMvC,MAEnB,QAAQA,GACN,IAAKyZ,GAAAyC,IACL,IAAKzC,GAAA0C,KACL,IAAK1C,GAAAtY,KACH6a,EAAQI,OAASt1B,MAAO,SACxB,MACF,KAAK2yB,GAAA4C,OACL,IAAK5C,GAAA6C,OACHN,EAAQI,OAASt1B,MAAOkZ,EACxB,MACF,KAAKyZ,GAAA8C,MACL,IAAK9C,GAAA+C,KACL,IAAK/C,GAAAgD,MAKP,GAAMC,GAAMna,EAAMK,OACZ+Z,EAASpa,EAAM+N,QAAQqM,OAEzB/Z,EAASnD,IAAYC,EAAAU,MAErBiB,EAAAe,QAAQqX,EAAAa,oBAAsBqC,EAAS,OAAS,SAAU,aAAc,qBAExElD,EAAAa,kBAEJ1X,GAASvB,EAAAe,QAAQQ,GAAS,aAAc,qBAExCM,EAAA2E,gBAAgBmU,EAASzZ,EAAOK,GAE5B+Z,IACFX,EAAQhG,aAAelvB,MAAO,IAI5B2Y,IAAYC,EAAAa,eACPyb,GAAQjG,OAGjB,IAAIjvB,GACE81B,EAAWra,EAAM6N,SAASyF,KAC5B1P,GAAA0W,WAAWD,KACb91B,GAASA,MAAO81B,EAAS91B,QAGbY,SAAVZ,EAEE61B,EACFX,EAAQc,KAAOh2B,EAEfk1B,EAAQpG,OAAS9uB,EAEV2Y,IAAYC,EAAAU,QAGrB4b,EAAQW,EAAS,OAAS,UAAYX,EAAQW,EAAS,OAAS,YAC7D71B,MAAO41B,EAAI1c,KAAK6V,QAGAnuB,SAAjBs0B,EAAQc,OAEYp1B,SAAlBg1B,EAAI1c,KAAK8c,KACXd,EAAQc,MAAQh2B,MAAO41B,EAAI1c,KAAK8c,MACHp1B,SAApBg1B,EAAI1c,KAAK4V,SAClBoG,EAAQpG,QAAU9uB,MAAO41B,EAAI1c,KAAK4V,SAItC,IAAMmH,GAAWxa,EAAM6N,SAASgM,KAOhC,IANI3c,IAAYC,EAAAI,OACVqG,EAAA0W,WAAWE,KACbf,EAAQI,OAASt1B,MAAOi2B,EAASj2B,QAIjC4b,EAASxI,KAAO0H,EAAAob,oBAAoBza,EAAMqC,MAAMnF,GAASvM,MAAO,CAClE,GAAMuP,IACJmC,MAAOrC,EAAMsC,UAAUpF,GACvB/J,MAAO,QAET,QAAQ+J,GACN,IAAKC,GAAAa,QACHyb,EAAQjG,QAAUtT,CAClB,MACF,KAAK/C,GAAAG,KACHmc,EAAQtkB,KAAO+K,CACf,MACF,KAAK/C,GAAAU,MACH4b,EAAQW,EAAS,OAAS,UAAYla,CACtC,MACF,SACE,KAAM5c,OAAM,sBAAsB4Z,EAAO,qBAM/C,MAFAuc,GAAU3a,EAAAjK,OAAO4kB,EAASC,OAEnB5a,EAAAnZ,KAAK8zB,GAAS/1B,OAAS,EAAI+1B,EAAUt0B,OAG9C,QAAA4a,GAAuBI,EAAoBF,EAAiBD,EAAkB9C,GAC5E,GAAM6L,GAAS/I,EAAM+I,OAAO7L,GACtBmD,EAASL,EAAMK,OAEjBN,IAoBJ,OAlBII,GAASxI,KAAO0H,EAAAob,oBAAoBza,EAAMqC,MAAMnF,GAASvM,MAE3DsP,EAAanB,EAAAjK,QACXnO,MACE2b,MAAOrC,EAAMsC,UAAUpF,GAAWwd,EAAAC,wBAClCxnB,MAAO,UAER8M,OACME,EAASxP,OAAS2P,EAAAI,WAC3BT,EAAanB,EAAAjK,QACXnO,MACE+Z,OAAQE,EAAAC,qBAAqB,cAAeT,EAASU,SAAUkI,EAAOjI,OAAQT,EAAO0I,OAAOhI,gBAAiBV,EAAOW,cAErHf,QAGLF,EAASjB,EAAAjK,OAAOkL,EAAQE,OAEjBnB,EAAAnZ,KAAKoa,GAAQrc,OAAS,EAAIqc,EAAS5a,uDA7I5C,IAAAgY,GAAA/Z,EAAA,iBACAwgB,EAAAxgB,EAAA,kBACA8zB,EAAA9zB,EAAA,cACAic,EAAAjc,EAAA,eACAkd,EAAAld,EAAA,cACA0b,EAAA1b,EAAA,cAIAud,EAAAvd,EAAA,aACAs3B,EAAAt3B,EAAA,iBAGAlB,GAAAu3B,QAAAA,EAwGAv3B,EAAA6d,OAAAA,iLCvGA,SAAA6a,GAAqC5a,GACnC,OAAQ7C,EAAAU,MAAOV,EAAAG,KAAMH,EAAAI,MAAOJ,EAAAa,SAASuD,OAAO,SAASsW,EAAiB3a,GAIpE,MAHI8C,GAAM+I,OAAO7L,KACf2a,EAAgB3a,GAAWyZ,EAAY3W,EAAO9C,IAEzC2a,OAIX,QAAAgD,GAA+B7a,EAAkB9C,GAE/C,GAAM4d,GAAS9a,EAAMG,SAASjD,GAASvF,KAAO0H,EAAAob,oBAAoBza,EAAMqC,MAAMnF,GAASvM,MAAQ+pB,EAAAK,kBAAoB,EACnH,QAAQ7d,GACN,IAAKC,GAAAU,MACH,GAAMwE,GAAQrC,EAAMsC,UAAUnF,EAAAU,OAASid,CACvC,OAAO9a,GAAM+N,QAAQqM,QAAUG,KAAMlY,IAAUgR,OAAQhR,EACzD,KAAKlF,GAAAG,KACH,OAAQnI,KAAM6K,EAAMsC,UAAUnF,EAAAG,MAAQwd,EACxC,KAAK3d,GAAAI,MACH,OAAQsc,MAAO7Z,EAAMsC,UAAUnF,EAAAI,OAASud,EAC1C,KAAK3d,GAAAa,QACH,OAAQwV,QAASxT,EAAMsC,UAAUnF,EAAAa,SAAW8c,GAEhD,MAAO,MAGT,QAAAnE,GAA4B3W,EAAkB9C,GAC5C,GAAMiD,GAAWH,EAAMG,SAASjD,GAC1B6L,EAAS/I,EAAM+I,OAAO7L,GAExBgD,EAAgB2a,EAAsB7a,EAAO9C,EAEjD8d,GAAAC,kBAAkBxlB,QAAQ,SAAS+M,GACjC,GAAMje,GAAQke,EAA2BD,EAAUuG,EAAQ7L,EAAS8C,EACtD7a,UAAVZ,IACF2b,EAAIsC,GAAYje,IAKpB,IAAMoe,GAAaoG,EAAOnG,UAW1B,QAVC,SAAU,SAAU,QAAS,WAAWnN,QAAQ,SAASuM,GACxD,GAAIzd,GAAQqe,EAAOZ,GACjBY,EAAOZ,GAAM7B,EAAUwC,EAAWX,GAAOhC,EAAO9C,GAChDyF,EAAWX,EACC7c,UAAVZ,GAAuBua,EAAAnZ,KAAKpB,GAAOb,OAAS,IAC9Cwc,EAAI0C,OAAS1C,EAAI0C,WACjB1C,EAAI0C,OAAOZ,IAASa,OAAQte,MAIzB2b,EAGT,QAAAuC,GAAoCD,EAA0B0Y,EAAyBhe,EAAkB8C,GACvG,GAAMG,GAAWH,EAAMG,SAASjD,EAEhC,QAAQsF,GACN,IAAK,SACH,MAAO7B,GAAA2C,aAAanD,EAAU+a,EAAgBpa,OAAQd,EAAMK,OAAQnD,EACtE,KAAK,QACH,MAAO6F,GAAMI,MAAM+X,EAAiB/a,EAAUH,EAAMK,OACtD,KAAK,SACH,MAAO0C,GAAMK,OAAO8X,EACtB,KAAK,OACHnY,EAAMpS,KAAKuqB,EAAiB/a,EAAUjD,GAI1C,MAAOge,GAAgB1Y,mDAnFzB,IAAArF,GAAA/Z,EAAA,iBACAic,EAAAjc,EAAA,eACA0b,EAAA1b,EAAA,cAEA43B,EAAA53B,EAAA,gBAGAud,EAAAvd,EAAA,aACAs3B,EAAAt3B,EAAA,kBAGAwf,EAAAxf,EAAA,YACA2f,EAAA3f,EAAA,UAEAlB,GAAA04B,qBAAAA,EA0BA14B,EAAAy0B,YAAAA,0KC/BA,SAAAxT,GAAsB4F,EAAgB5I,EAAoBE,GACxD,MAAqBlb,UAAjB4jB,EAAO5F,MACF4F,EAAO5F,MAGTS,EAAAT,MAAWhD,EAAUE,GAG9B,QAAA+C,GAAuB2F,GACrB,GAAMhF,GAAOgF,EAAO3F,MACpB,OAAIW,IAAQC,EAAAC,WAAWF,EAAK,IAClBA,EAAoBhU,IAAI,SAACmU,GAE/B,MAAOF,GAAAG,UAAUD,GAAI,KAGlBH,EAGT,QAAApT,GAAqBoY,EAAgB5I,EAAoBjD,GACvD,MAAI6L,GAAOpY,KACFoY,EAAOpY,KAGZuM,IAAYC,EAAAU,OAAUsC,EAASxI,KAAQwI,EAASU,WAAY/B,EAAAC,UAAUuB,EAAAoF,aAAcpF,EAAAI,UAAWP,EAASxP,MAA5G,OACS,2DAlCX,IAAAwM,GAAA/Z,EAAA,iBAEA4gB,EAAA5gB,EAAA,kBAGAwgB,EAAAxgB,EAAA,kBACAkd,EAAAld,EAAA,cACA0b,EAAA1b,EAAA,aAEAlB,GAAAihB,MAAAA,EAQAjhB,EAAAkhB,OAAAA,EAWAlhB,EAAAyO,KAAAA,oMC5BAwqB,EAAA/3B,EAAA,WAKalB,GAAAuc,MACX2c,OAAQ,OACRC,KAAMl2B,OACNm2B,YAAa,SAACtb,GACGA,EAAM+N,QAAQ5M,MAE7B,OAAMwT,GAAA9qB,YACDsxB,EAAOI,cAAc,IAAKvb,EAAO,aACjCmb,EAAOI,cAAc,IAAKvb,EAAO,aACjCmb,EAAOK,eAAexb,EAAO,aAE7Bmb,EAAO7H,MAAMtT,GACbmb,EAAOM,YAAY,UAAWzb,GAC9Bmb,EAAOO,kBAAkB1b,EAAM+N,SAAU,SAAU,cAAe,yECW3E,SAAA9nB,GAAW+Z,EAAkB2K,GACpB,GAAAtK,GAAAL,EAAAK,OACDc,EAASnB,EAAM+N,QAAQ5M,OACvBwa,EAAU3b,EAAM6N,SAAS1Y,KAEzBymB,EAAO5b,EAAM6N,SAAS5nB,EACtB41B,EAAa7b,EAAMsC,UAAUnF,EAAAQ,GAC7Bme,EAAS9b,EAAMqC,MAAMlF,EAAAQ,EAE3B,IAAe,eAAXwD,EACF,MAAMwT,GAAA9qB,YACDsxB,EAAOI,cAAc,IAAKvb,EAAO,aACjCmb,EAAOK,eAAexb,EAAO,aAGlC,IAAI4D,EAAAmY,WAAWH,GAAO,CACpB,GAAIA,EAAKjkB,MAAQgkB,EAEf,MAAOR,GAAOa,eAAe,IAAKhc,EAAOK,EAAO/B,IAAI2d,WAC/C,IAAIH,EAAOnrB,OAAS0O,EAAAwN,UAAUqP,KACnC,MAAOf,GAAOgB,aAAa,IAAKnc,GAKpC,MAAOmb,GAAOiB,qBAAqB,IAAKpc,EAAK2U,EAAA9qB,YACvCwyB,EAAIC,KAAKjc,IAAS0P,OAAQ,IAC9BwM,EAAeV,EAAY7b,EAAMqC,MAAMlF,EAAAQ,GAAI0C,IAKjD,QAAA7S,GAAWwS,EAAkB2K,GACpB,GAAAtK,GAAAL,EAAAK,OAAQwN,EAAA7N,EAAA6N,SACT1M,EAASnB,EAAM+N,QAAQ5M,OACvBwa,EAAU9N,EAAS1Y,KAEnBqnB,EAAO3O,EAASrgB,EAChBivB,EAAazc,EAAMsC,UAAUnF,EAAAS,GAC7B8e,EAAS1c,EAAMqC,MAAMlF,EAAAS,EAE3B,IAAe,aAAXuD,EACF,MAAMwT,GAAA9qB,YACDsxB,EAAOI,cAAc,IAAKvb,EAAO,aACjCmb,EAAOK,eAAexb,EAAO,aAGlC,IAAI4D,EAAAmY,WAAWS,GAAO,CACpB,GAAIA,EAAK7kB,MAAQgkB,EACf,MAAOR,GAAOa,eAAe,IAAKhc,EAAOK,EAAO/B,IAAI2d,WAC/C,IAAIS,EAAO/rB,OAAS0O,EAAAwN,UAAUqP,KACnC,MAAOf,GAAOgB,aAAa,IAAKnc,GAGpC,MAAOmb,GAAOiB,qBAAqB,IAAKpc,EAAOqc,EAAIM,KAAKtc,GAASkc,EAAeE,EAAYzc,EAAMqC,MAAMlF,EAAAS,GAAIyC,IAIhH,QAAAkc,GAAwBja,EAAmBD,EAAchC,GACvD,GAAIA,EAAO/B,IAAIse,iBACb,OAAQr4B,MAAO8b,EAAO/B,IAAIse,iBAG5B,IAAIva,EAAO,CACT,GAAIA,EAAM1R,OAAS0O,EAAAwN,UAAUmN,MAKtB,MAAI3X,GAAM1R,OAAS0O,EAAAwN,UAAUqP,KAC3BG,EAAIQ,KAAKva,IAER/d,MAAO8b,EAAO/B,IAAIwe,mBAP1B,IAAwB,OAApBza,EAAMqW,UACR,OAAQn0B,MAAO8d,EAAMqW,UAAY,EAEnC/lB,GAAIuB,KAAKvB,EAAIzL,QAAQ61B,yCAOzB,MAAI1c,GAAOgC,MAAMqW,WAAwC,OAA3BrY,EAAOgC,MAAMqW,WACjCn0B,MAAO8b,EAAOgC,MAAMqW,UAAY,IAGlCn0B,MAAO,sEA5GjB4Y,EAAA/Z,EAAA,iBAEAwgB,EAAAxgB,EAAA,kBACAic,EAAAjc,EAAA,eAEAuP,EAAAvP,EAAA,aAGA+3B,EAAA/3B,EAAA,YAKAi5B,EAAAj5B,EAAA,aAEalB,GAAAoc,KACX8c,OAAQ,OACRC,KAAM,MACNC,YAAa,SAACtb,GACZ,GAAM2K,GAAQ3K,EAAM2K,KACpB,OAAMgK,GAAA9qB,YACD5D,EAAE+Z,EAAO2K,GACTnd,EAAEwS,EAAO2K,GACTwQ,EAAO7H,MAAMtT,GACbmb,EAAOM,YAAY,UAAWzb,uJCbvC,SAAAgd,GAA4Bvf,EAAsBoQ,EAAoBxL,EAAoBhC,GACxF,GAAM0N,GAAUmJ,EAAA+F,UAAUxf,GAAQA,GAAQ9M,KAAM8M,GAE1Cyf,EAAkBnP,EAAQ5M,QAAUR,EAAA4E,cAAc,SAAUwI,EAAQpd,KAAM0P,EAMhF,OALA0N,GAAQ5M,OAASA,EAAO4M,EAAQpd,KAAMkd,EAAUxL,EAAO6a,GAC/B/3B,SAApB+3B,GAAiCA,IAAoBnP,EAAQ5M,QAC/DxO,EAAIuB,KAAKvB,EAAIzL,QAAQi2B,iBAAiBpP,EAAQ5M,OAAO+b,IAGjDvI,EAAA9qB,YACDkkB,GAIHqM,OAAQA,EAAOrM,EAAQpd,KAAM0P,KAOjC,QAAA+c,GAA6B3f,EAAYoQ,EAAoBwP,EAA0Bhd,GACrF,GAAMid,GAAgB3c,EAAA4E,cAAc,UAAW9H,EAAM4C,EACrD,KAAKwN,EAAS2F,SAA6BruB,SAAlBm4B,EAA6B,CACpD,GAAM9J,GAAU+J,EAAe9f,EAAMoQ,EAAUwP,EAC/Bl4B,UAAZquB,IACF3F,EAAS2F,SAAWjvB,MAAOivB,IAG/B,MAAO3F,GAIT,QAAA0P,GAAwB9f,EAAYoQ,EAAoBwP,GACtD,OAAIve,EAAAC,UAAUmY,EAAA8C,MAAO9C,EAAA0C,KAAM1C,EAAA4C,OAAQ5C,EAAA6C,QAAStc,IAErCiQ,EAAAQ,YAAYL,KAAaH,EAAAE,gBAAgBC,EAAU,UAItDpQ,IAASyZ,EAAAyC,MAAQ0D,IACf3P,EAAAE,gBAAgBC,EAAU,UAAYH,EAAAE,gBAAgBC,EAAU,WAAaH,EAAAE,gBAAgBC,EAAU,SAClG,GAGPpQ,IAASyZ,EAAAgD,KACJ,GADT,OARW,GAcb,QAAAE,GAAgB3c,EAAY4C,GAC1B,GAAMmd,GAAe7c,EAAA4E,cAAc,SAAU9H,EAAM4C,EACnD,OAAwBlb,UAAjBq4B,EAA6BA,EAAe/f,IAASyZ,EAAA8C,OAASvc,IAASyZ,EAAA+C,MAAQxc,IAASyZ,EAAAuG,KAGjG,QAAAtc,GAAgB1D,EAAYoQ,EAAoBxL,EAAoB6a,GAClE,OAAQzf,GACN,IAAKyZ,GAAA8C,MACL,IAAK9C,GAAA4C,OACL,IAAK5C,GAAA6C,OACL,IAAK7C,GAAAtY,KACL,IAAKsY,GAAAwG,KAEH,OAGJ,GAAMC,GAAW9P,EAASrgB,GAAKqgB,EAAS+F,GAClCgK,EAAW/P,EAAS5nB,GAAK4nB,EAASuF,EAExC,QAAQ3V,GACN,IAAKyZ,GAAA0C,KACH,GAAMiE,GAAaxb,EAAS,EAAIA,EAAS,EAAE1R,KAAO,KAC5CmtB,EAAazb,EAAS,EAAIA,EAAS,EAAE1R,KAAO,IAGlD,QAAK0O,EAAAyJ,kBAAkB+U,MAChBhQ,EAASrgB,GACV6R,EAAAyJ,kBAAkBgV,IACjBla,EAAAmY,WAAWlO,EAASrgB,IAAMqgB,EAASrgB,EAAEmK,KAEnC,WAGF,YAET,KAAKuf,GAAAuG,KACL,IAAKvG,GAAAyC,IACL,IAAKzC,GAAAgD,KAEH,GAAIyD,EACF,MAAO,UACF,IAAIC,EACT,MAAO,YACF,IAAIngB,IAASyZ,EAAAuG,KAAM,CACxB,GAAI5P,EAAS5nB,IAAM4nB,EAASrgB,EAC1B,MAAO,UACF,IAAIqgB,EAASrgB,IAAMqgB,EAAS5nB,EACjC,MAAO,aAKb,IAAKixB,GAAA+C,KAEH,GAAM8D,GAAgBna,EAAAmY,WAAWlO,EAAS5nB,IAAM2d,EAAAoa,aAAanQ,EAAS5nB,GAChEg4B,EAAgBra,EAAAmY,WAAWlO,EAASrgB,IAAMoW,EAAAoa,aAAanQ,EAASrgB,EACtE,IAAIuwB,IAAkBE,EACpB,MAAO,YACF,KAAKF,GAAiBE,EAC3B,MAAO,UACF,IAAIF,GAAiBE,EAAe,CACzC,GAAMrC,GAAO/N,EAAS5nB,EAChBu2B,EAAO3O,EAASrgB,EAEhB0wB,EAActC,EAAKjrB,OAAS2P,EAAAI,SAC5Byd,EAAc3B,EAAK7rB,OAAS2P,EAAAI,QAGlC,OAAIwd,KAAgBC,EACX,YACGD,GAAeC,EAClB,cAGJvC,EAAKjW,WAAe6W,EAAK7W,UACrB,WACIiW,EAAKjW,YAAc6W,EAAK7W,UAC5B,aAGLuX,EAEKA,GAGHzf,IAASyZ,EAAA+C,MAAQpM,EAASzH,OAE9BzT,EAAIuB,KAAKvB,EAAIzL,QAAQk3B,wBAAwB3gB,IAExC,YAIP,WADA9K,GAAIuB,KAAKvB,EAAIzL,QAAQm3B,6BAA6B5gB,IAIxD,MAAO,6EA9JTyZ,EAAA9zB,EAAA,cACAsqB,EAAAtqB,EAAA,kBACAuP,EAAAvP,EAAA,aACA0b,EAAA1b,EAAA,cACAic,EAAAjc,EAAA,eACAwgB,EAAAxgB,EAAA,kBACAkd,EAAAld,EAAA,cAEAud,EAAAvd,EAAA,YAGAlB,GAAA86B,YAAAA,EAqBA96B,EAAAk7B,aAAAA,wPChCAjC,EAAA/3B,EAAA,WAKalB,GAAAsc,MACX4c,OAAQ,OACRC,KAAMl2B,OACNm2B,YAAa,SAACtb,GACZ,MAAM2U,GAAA9qB,YACDsxB,EAAOI,cAAc,IAAKvb,EAAO,aACjCmb,EAAOI,cAAc,IAAKvb,EAAO,aACjCmb,EAAO7H,MAAMtT,GACbmb,EAAOM,YAAY,UAAWzb,GAC9Bmb,EAAOM,YAAY,OAAQzb,GAC5Bse,UAAW,gBAEVnD,EAAOO,kBAAkB1b,EAAM+N,SAAU,cAAe,yECajE,SAAAqI,GAA0BpW,GACxB,MAAIlB,GAAAC,UAAUmY,EAAA+C,KAAM/C,EAAAgD,MAAOla,EAAMvC,QACxB8gB,EAAcve,GAEdwe,EAAiBxe,GAK5B,QAAAye,GAAkBze,GAChB,GAAMlb,GAASkb,EAAMlb,MACrB,OAAIA,IAAUA,EAAOkyB,UACXlyB,EAAsB4wB,eAE5B1V,EAAM2K,MACD3K,EAAMiL,SAAS,WAEjBjL,EAAMqL,YAKf,QAAAkT,GAAuBve,GACrB,GAAMvC,GAAOuC,EAAMvC,OAEbihB,EAAUC,EAAa3e,GAEzB4e,IAEA33B,KAAM+Y,EAAMyH,QAAQ,SACpB9W,KAAMkuB,EAAaphB,GAAM2d,OAGzB1T,MAAOhP,MAAOgmB,EAAQh7B,OAAS,EAAIo7B,EAAsB,IAAML,EAASze,IACxE4C,QAASC,OAAQgc,EAAaphB,GAAM6d,YAAYtb,KAIpD,OAAI0e,GAAQh7B,OAAS,IAIjBuD,KAAM+Y,EAAMyH,QAAQ,aACpB9W,KAAM,QACN+W,MACEqK,OACE9qB,KAAM63B,EAAsBL,EAASze,GACrCtH,KAAM+lB,EAASze,GACfwP,QAASkP,IAGb9b,QACEC,QACEgF,OAAQ1U,OAAQ6f,MAAO,UACvBlL,QAAS3U,OAAQ6f,MAAO,aAG5B9L,MAAO0X,IAGFA,EAIX,QAAAJ,GAA0Bxe,GACxB,GAAMvC,GAAOuC,EAAMvC,OAEb4d,EAAOwD,EAAaphB,GAAM4d,KAE5BnU,IAYJ,OARAA,GAAM1hB,KAAImvB,EAAA9qB,UACR5C,KAAM+Y,EAAMyH,QAAQ,SACpB9W,KAAMkuB,EAAaphB,GAAM2d,QACrBC,GAAOA,KAAIA,OACf3T,MAAOhP,KAAM+lB,EAASze,IACtB4C,QAASC,OAAQgc,EAAaphB,GAAM6d,YAAYtb,OAG3CkH,EAST,QAAAyX,GAAsB3e,GACpB,MAAO+e,GAAiCxd,OAAO,SAASmd,EAASxhB,GAI/D,MAHI8C,GAAM4N,gBAAgB1Q,KAAa8C,EAAMG,SAASjD,GAASyI,WAC7D+Y,EAAQl5B,KAAKwa,EAAM7M,MAAM+J,IAEpBwhB,yEA7HXvhB,EAAA/Z,EAAA,iBACA8zB,EAAA9zB,EAAA,cACA0b,EAAA1b,EAAA,cAGA47B,EAAA57B,EAAA,UACA67B,EAAA77B,EAAA,SACA87B,EAAA97B,EAAA,UACA+7B,EAAA/7B,EAAA,WACAg8B,EAAAh8B,EAAA,UACAi8B,EAAAj8B,EAAA,UACAk8B,EAAAl8B,EAAA,UACAm8B,EAAAn8B,EAAA,UAKMy7B,GACJpgB,KAAMugB,EAAAvgB,KACNH,IAAK2gB,EAAA3gB,IACLE,KAAM0gB,EAAA1gB,KACNP,MAAOkhB,EAAAlhB,MACPvX,KAAM44B,EAAA54B,KACNwX,KAAMqhB,EAAArhB,KACNK,KAAM6gB,EAAA7gB,KACNJ,KAAMkhB,EAAAlhB,KACNC,OAAQ+gB,EAAA/gB,OACRC,OAAQ8gB,EAAA9gB,OAGVnc,GAAAk0B,UAAAA,CAoBA,IAAM0I,GAAsB,gBAgEtBC,EAAmCjgB,EAAAe,QAAQ1C,EAAAuC,qBAAsB,yMCtGvE,SAAA4T,GAAsBtT,GACpB,GAAMK,GAASL,EAAMK,OACf+Z,EAASpa,EAAM+N,QAAQqM,OAEzBx3B,EAAI64B,EAAY,QAASzb,GAC3Bse,UAAWlE,EAAS,OAAS,SAC7BoF,aAAc7e,EAAA4E,cAAc,QAASvF,EAAMvC,OAAQ4C,IAQrD,QAHKzd,EAAE23B,MAAQkF,EAAK1gB,UAAU,MAAO,QAAS,SAAU,UAAWiB,EAAMvC,UACvE7a,EAAE23B,MAAQh2B,MAAO,gBAEZ3B,EAGT,QAAA84B,GAAkCje,EAAeiiB,GAC/C,MAAOA,GAAMne,OAAO,SAACva,EAAGwe,GAItB,MAHI/H,GAAK+H,KACPxe,EAAEwe,IAASjhB,MAAOkZ,EAAK+H,KAElBxe,OAIX,QAAA24B,GAA+Bna,EAAcjhB,GAC3C,GAAcY,SAAVZ,EACF,MAAM+pB,MAAEA,EAAC9I,IAAQjhB,MAAOA,GAAM+pB,CAEhC,cAMF,QAAAmN,GAA4Bve,EAA8C8C,EAAkB4f,GAAA,SAAAA,IAAAA,KAGnF,IAAAJ,GAAAI,EAAAJ,aAAclB,EAAAsB,EAAAtB,UACfuB,EAAaD,EAAIC,aAAgC16B,SAAjBq6B,GAA8Bj7B,MAAOi7B,GAAgBr6B,QAErF26B,EAAa9f,EAAM6N,SAAS3Q,GAC5B6iB,EAAW1D,EAAI2D,SAAS9iB,EAAS4iB,EAAY9f,EAAMsC,UAAUpF,GAAU8C,EAAMqC,MAAMnF,GAAU2iB,EAEnG,OAAOI,GAAcjgB,EAAO8f,GAAcA,EAAWI,UAAW5B,GAAaphB,EAAS6iB,GAOxF,QAAAE,GAAuBjgB,EAAkBkgB,EAA2B5B,EAAmByB,GACrF,GAAIG,EAAW,CACN,GAAAC,GAAAD,EAAAC,UAAW57B,EAAA27B,EAAA37B,KAClB,OAAM+pB,MACJA,EAACgQ,KACE11B,KAAMw3B,EAAcpgB,EAAOmgB,GAAY57B,MAAKA,WAC5BY,SAAb46B,GAA0BA,SAIlC,MAAoB56B,UAAb46B,GAAsBxR,KAAIA,EAAC+P,GAAYyB,EAAQxR,cAI1D,QAAA6R,GAAuBpgB,EAAkBqgB,GACvC,GAAMC,GAAqC,MAA5BD,EAAch5B,OAAO,GAClCJ,EAAOq5B,EAASD,EAAcr3B,MAAM,GAAKq3B,CAC3C,QAAQC,EAAS,IAAM,IAAMzZ,EAAA0Z,UAAUvgB,EAAMuJ,UAAU4W,UAAUl5B,IAGnE,QAAAP,GAAqBsZ,GACnB,GAAM8f,GAAa9f,EAAM6N,SAASnnB,IAClC,OAAOu5B,GAAcjgB,EAAO8f,GAAcA,EAAWI,UAAW,OAAQ7D,EAAI31B,KAAKo5B,EAAY9f,EAAMK,SAGrG,QAAA8b,GAA6Bjf,EAAkB8C,GAE7C,GAAMG,GAAWH,EAAM6N,SAAS3Q,GAC1BoF,EAAYtC,EAAMsC,UAAUpF,GAC5BsjB,EAA0B,MAAZtjB,EAAkB,QAAU,QAChD,OAAMoR,MACJA,EAACpR,GAAUmf,EAAIoE,SAAStgB,EAAUmC,MAClCgM,EAACkS,GAAcnE,EAAIQ,KAAKva,WAI5B,QAAA8Z,GAAqClf,EAAoB8C,EAAkB0gB,EAA2BnE,GACpG,GAAMoE,GAAyC,MAAZzjB,EAAkB,KAAO,KACtDsjB,EAA0B,MAAZtjB,EAAkB,QAAU,QAChD,OAAMyX,GAAA9qB,YACD0xB,EAAcre,EAAS8C,EAAO0gB,EAAeC,GAC7ClF,EAAY,OAAQzb,GAAQ6f,WAAYtD,EAAgB+B,UAAWkC,KAI1E,QAAAxE,GAA+B9e,EAAkB8C,EAAkB2R,GACjE,GAAMxR,GAAWH,EAAM6N,SAAS3Q,GAC1BoF,EAAYtC,EAAMsC,UAAUpF,EAClC,OAAgB,MAAZA,GAEAkW,GAAIiJ,EAAI1kB,IAAIwI,EAAUmC,EAAW,QAASqP,GAC1C1rB,EAAGo2B,EAAI1kB,IAAIwI,EAAUmC,EAAW,SAIhCsR,GAAIyI,EAAI1kB,IAAIwI,EAAUmC,EAAW,SACjC9U,EAAG6uB,EAAI1kB,IAAIwI,EAAUmC,EAAW,MAAOqP,IAQ7C,QAAA4J,GAA8Bre,EAAkB8C,EAAkB6f,EAAoDvB,GAG7G,GAAAzQ,GAAA7N,EAAA6N,SAAUlD,EAAA3K,EAAA2K,MACXoV,EAAW1D,EAAIuE,UAAU1jB,EAAS2Q,EAAS3Q,GAAU8C,EAAMsC,UAAUpF,GAAU8C,EAAMqC,MAAMnF,GAAUyN,EAAOkV,EAElH,OAAMvR,MACJA,EAACgQ,GAAaphB,GAAU6iB,UAQ5B,QAAAvE,GAA+Bxb,EAAkB6f,EAAuC3iB,GAC/E,GAAA2Q,GAAA7N,EAAA6N,SAAUE,EAAA/N,EAAA+N,QAASpD,EAAA3K,EAAA2K,KAC1BzN,GAAUA,IAA+B,eAAnB6Q,EAAQ5M,OAA0B,KAAO,KAC/D,IAAM0f,GAA0B,OAAZ3jB,EAAmB,IAAM,IAEvC6iB,EAAW1D,EAAIyE,WAAW5jB,EAAS2Q,EAASgT,GAAchT,EAAS3Q,GAAU8C,EAAMsC,UAAUue,GAAc7gB,EAAMqC,MAAMwe,GAAclW,EAAOkV,EAClJ,OAAMvR,MAAEA,EAACpR,GAAU6iB,EAAQzR,0EApJ7BmR,EAAAr8B,EAAA,cAEAud,EAAAvd,EAAA,aAGAi5B,EAAAj5B,EAAA,cAIAyjB,EAAAzjB,EAAA,yBAEAlB,GAAAoxB,MAAAA,EAiBApxB,EAAAw5B,kBAAAA,EASAx5B,EAAAy9B,eAAAA,EAUAz9B,EAAAu5B,YAAAA,EAoCAv5B,EAAAwE,KAAAA,EAKAxE,EAAAi6B,aAAAA,EAWAj6B,EAAAk6B,qBAAAA,EASAl6B,EAAA85B,eAAAA,EAmBA95B,EAAAq5B,cAAAA,EAeAr5B,EAAAs5B,eAAAA,yHCrIA,SAAAF,GAAqBtb,EAAkB+gB,GAC9B,GAAA1gB,GAAAL,EAAAK,MAEP,OAAMsU,GAAA9qB,YACDsxB,EAAOI,cAAc,IAAKvb,EAAOqc,EAAIC,KAAKjc,IAC1C8a,EAAOI,cAAc,IAAKvb,EAAOqc,EAAIM,KAAKtc,IAE1C8a,EAAO7H,MAAMtT,GACbmb,EAAOM,YAAY,OAAQzb,GAC3BghB,EAAYhhB,EAAOK,EAAQ0gB,GAC3B5F,EAAOM,YAAY,UAAWzb,IAIrC,QAAAghB,GAA4BhhB,EAAkBK,EAAgB0gB,GAC5D,MAAIA,IACMlH,OAAQt1B,MAAOw8B,IAElB5F,EAAOM,YAAY,QAASzb,GAAQwf,aAAc7e,EAAA4E,cAAc,QAAS,QAASlF,uEA1B3F8a,EAAA/3B,EAAA,YAIAi5B,EAAAj5B,EAAA,cACAud,EAAAvd,EAAA,YAiBAlB,GAAA8+B,YAAAA,EAOa9+B,EAAA+b,OACXmd,OAAQ,SACRC,KAAM,QACNC,YAAa,SAACtb,GACZ,MAAOsb,GAAYtb,KAIV9d,EAAAkc,QACXgd,OAAQ,SACRC,KAAM,SACNC,YAAa,SAACtb,GACZ,MAAOsb,GAAYtb,EAAO,YAIjB9d,EAAAmc,QACX+c,OAAQ,SACRC,KAAM,SACNC,YAAa,SAACtb,GACZ,MAAOsb,GAAYtb,EAAO,qGC3B9B,SAAA/Z,GAAW+Z,GACT,GAAM4b,GAAO5b,EAAM6N,SAAS5nB,EACtBg7B,EAAQjhB,EAAM6N,SAASuF,GACvB0I,EAAS9b,EAAMqC,MAAMlF,EAAAQ,EAE3B,IAAIiG,EAAAmY,WAAWH,IAASA,EAAKjkB,MAAQspB,EACnC,MAAO9F,GAAOa,eAAe,IAAKhc,EAAO,EACpC,IAAI8b,GAAUzc,EAAAyJ,kBAAkBgT,EAAOnrB,MAAO,CAEnD,GAAImrB,EAAOnrB,OAAS0O,EAAAwN,UAAUqP,KAC5B,MAAOf,GAAOgB,aAAa,IAAKnc,EAGhC,MAAM,IAAI1c,OAAMqP,EAAIzL,QAAQg6B,yBAAyBhK,EAAAwG,KAAM5B,EAAOnrB,OAGpE,MAAMgkB,GAAA9qB,YACDsxB,EAAOI,cAAc,IAAKvb,EAAO,aACjCmb,EAAOK,eAAexb,EAAO,YAAa,OAKnD,QAAAxS,GAAWwS,GACT,GAAMwc,GAAOxc,EAAM6N,SAASrgB,EACtB2zB,EAAQnhB,EAAM6N,SAAS+F,GACvB8I,EAAS1c,EAAMqC,MAAMlF,EAAAS,EAE3B,IAAIgG,EAAAmY,WAAWS,IAASA,EAAK7kB,MAAQwpB,EACnC,MAAOhG,GAAOa,eAAe,IAAKhc,EAAO,EACpC,IAAI0c,GAAUrd,EAAAyJ,kBAAkB4T,EAAO/rB,MAAO,CAEnD,GAAI+rB,EAAO/rB,OAAS0O,EAAAwN,UAAUqP,KAC5B,MAAOf,GAAOgB,aAAa,IAAKnc,EAGhC,MAAM,IAAI1c,OAAMqP,EAAIzL,QAAQg6B,yBAAyBhK,EAAAwG,KAAMhB,EAAO/rB,OAGpE,MAAMgkB,GAAA9qB,YACDsxB,EAAOI,cAAc,IAAKvb,EAAO,aACjCmb,EAAOK,eAAexb,EAAO,YAAa,yEAjEnD7C,EAAA/Z,EAAA,iBACAwgB,EAAAxgB,EAAA,kBACAic,EAAAjc,EAAA,eACA8zB,EAAA9zB,EAAA,cACAuP,EAAAvP,EAAA,aAEA+3B,EAAA/3B,EAAA,WAKalB,GAAAqc,MACX6c,OAAQ,OACRC,KAAMl2B,OACNm2B,YAAa,SAACtb,GACZ,MAAM2U,GAAA9qB,YACD5D,EAAE+Z,GACFxS,EAAEwS,GACFmb,EAAO7H,MAAMtT,GACbmb,EAAOM,YAAY,UAAWzb,0NCjBvCmb,EAAA/3B,EAAA,WAEalB,GAAAic,MACXid,OAAQ,OACRC,KAAMl2B,OACNm2B,YAAa,SAACtb,GACZ,MAAM2U,GAAA9qB,YACDsxB,EAAOI,cAAc,IAAKvb,EAAO,aACjCmb,EAAOI,cAAc,IAAKvb,EAAO,aACjCmb,EAAOK,eAAexb,EAAO,aAE7Bmb,EAAO7H,MAAMtT,GACbmb,EAAOM,YAAY,UAAWzb,GAC9Bmb,EAAOM,YAAY,OAAQzb,GAC5Bse,UAAW,6ECoBnB,SAAA8C,GAAkB/gB,EAAgBghB,GAChC,MAAIzd,GAAAmY,WAAWsF,IAAYA,EAAQ1wB,OAAS2P,EAAAoF,cAClCvS,OAAQ6f,MAAO,SAAUjD,QAAQ,IAGnCxrB,MAAO8b,EAAOgC,MAAMif,eAAiB,GAG/C,QAAA5qB,GAAemX,EAAoBxN,GACjC,GAAMkhB,GAAc5gB,EAAA4E,cAAc,QAAS,OAAQlF,EACnD,IAAoBlb,SAAhBo8B,EACF,MAAO7T,GAAAE,gBAAgBC,EAAU1Q,EAAAQ,GAAK,SAAW,0EA/CrDR,EAAA/Z,EAAA,iBACAud,EAAAvd,EAAA,aAEA+3B,EAAA/3B,EAAA,YAEAwgB,EAAAxgB,EAAA,kBACAkd,EAAAld,EAAA,cAKAi5B,EAAAj5B,EAAA,cACAsqB,EAAAtqB,EAAA,iBAEalB,GAAAwE,MACX00B,OAAQ,OACRC,KAAMl2B,OAENm2B,YAAa,SAACtb,GACL,GAAAK,GAAAL,EAAAK,OAAQwN,EAAA7N,EAAA6N,SACTwT,EAAUxT,EAASnnB,IAEzB,OAAMiuB,GAAA9qB,YACDsxB,EAAOI,cAAc,IAAKvb,EAAOohB,EAAS/gB,EAAQghB,IAClDlG,EAAOI,cAAc,IAAKvb,EAAOqc,EAAIM,KAAKtc,IAC1C8a,EAAOz0B,KAAKsZ,GACZmb,EAAO7H,MAAMtT,GACbmb,EAAOM,YAAY,UAAWzb,GAC9Bmb,EAAOM,YAAY,OAAQzb,GAC5Bse,UAAW,aAEVnD,EAAOwE,eAAe,QAASjpB,EAAMmX,EAAUxN,2KCKxD,SAAAmhB,GAAqBxhB,GACZ,GAAAK,GAAAL,EAAAK,OACDc,EAASnB,EAAM+N,QAAQ5M,OAEvBsgB,GAAiCzhB,EAAMqC,MAAiB,eAAXlB,EAA0B,IAAM,UAAYuX,SAE/F,IAA6BvzB,SAAzBkb,EAAOnC,KAAKwjB,SACd,MAAOrhB,GAAOnC,KAAKwjB,QAEnB,IAAMhJ,GAA+BvzB,SAAnBs8B,EAChBA,EACAphB,EAAOgC,MAAMqW,SACf,IAAyB,gBAAdA,GAET,KAAM,IAAIp1B,OAAM,iDAElB,OAAOo1B,GAAY,sEAlDvByC,EAAA/3B,EAAA,YAIAi5B,EAAAj5B,EAAA,aAEalB,GAAAgc,MACXkd,OAAQ,OACRC,KAAM,OAENC,YAAa,SAACtb,GACL,GAAAK,GAAAL,EAAAK,OAAQ0N,EAAA/N,EAAA+N,QACT5M,EAAS4M,EAAQ5M,OAEjBwgB,EAA2B,eAAXxgB,EAA0B,QAAU,SACpDygB,EAAgC,eAAXzgB,EAA0B,SAAW,OAEhE,OAAMwT,GAAA9qB,YACDsxB,EAAOI,cAAc,IAAKvb,EAAOqc,EAAIC,KAAKjc,GAAS,MACnD8a,EAAOI,cAAc,IAAKvb,EAAOqc,EAAIM,KAAKtc,GAAS,MAGnD8a,EAAOM,YAAY,OAAQzb,GAC5Bwf,aAAcgC,EAAYxhB,GAC1Bse,UAAWqD,KACXrT,KAAAA,EACDsT,IAAsBr9B,MAAO8b,EAAOnC,KAAK2jB,WAAUvT,GAEjD6M,EAAO7H,MAAMtT,GACbmb,EAAOM,YAAY,UAAWzb,sFCZvC,SAAA4gB,GAA0B1jB,EAAoB4iB,EAAwBxd,EAAmBD,EACrFsI,EAAwBkV,GAC1B,MAAIC,IAAcnV,GAASzN,IAAYyN,EAAMmF,aAEpC2Q,EAASX,EAAYxd,GAAYwY,OAAQ,QAE3CkF,EAAS9iB,EAAS4iB,EAAYxd,EAAWD,EAAOwd,GAMzD,QAAAiB,GAA2B5jB,EAAsB4kB,EAAqBC,EAAsBzf,EAAmBD,EAC3GsI,EAAwBkV,GAC1B,MAAIiC,IAAanX,GAEbzN,EAAQ7V,OAAO,KAAOsjB,EAAMmF,aAAazoB,OAAO,GAE3Co5B,EAASqB,EAAWxf,GAAYwY,OAAQ,UAE1CkF,EAAS9iB,EAAS6kB,EAAYzf,EAAWD,EAAOwd,GAMzD,QAAAloB,GAAoBwI,EAAoBmC,EAAmB0f,EAAwBjS,GACjF,MAAO0Q,GAAStgB,EAAUmC,GAAY6D,UAAW6b,GAAOjS,GAG1D,QAAA0Q,GAAyBtgB,EAAoBmC,EAAmBsd,EAAqB7P,GACnF,GAAIsM,IACFha,MAAOC,EACPnP,MAAOyQ,EAAAzQ,MAAMgN,EAAUyf,GAKzB,OAHI7P,KACFsM,EAAItM,OAASA,GAERsM,EAGT,QAAAQ,GAAqBva,EAAmBua,GACtC,MADsC,UAAAA,IAAAA,GAAA,IAEpCxa,MAAOC,EACPua,KAAMA,GAIV,QAAAoF,GAA6B9hB,EAAoBmC,GAC/C,OACED,MAAOC,EACP7B,OAAQ,IAAMmD,EAAAzQ,MAAMgN,GAAWgG,UAAW,QAAS8C,OAAO,IAAS,IACjErF,EAAAzQ,MAAMgN,GAAWgG,UAAW,MAAO8C,OAAO,IAAS,OAOzD,QAAA+W,GAAyB9iB,EAAkB4iB,EAAwBxd,EAAmBD,EACpFwd,GAGA,GAAIC,EAAY,CAEd,GAAIlc,EAAAmY,WAAW+D,GACb,MAAIzgB,GAAAyJ,kBAAkBzG,EAAM1R,MACP,SAAf0R,EAAM1R,KAED8vB,EAASX,EAAYxd,GAAY6D,UAAW,SAAU0W,EAAKva,EAAW,KAExEme,EAASX,EAAYxd,GAAY6D,UAAW,UAE/C2Z,EAAWnoB,IACNsqB,EAAanC,EAAYxd,GAEzBme,EAASX,EAAYxd,KAG3B,IAAIwd,EAAWv7B,MACpB,OACEA,MAAOu7B,EAAWv7B,MAGpB,MAAM,IAAIjB,OAAM,oCAIpB,GAAmB,cAAfu8B,EAA4B,CAE9B,GAAI3iB,IAAYC,EAAAQ,GAAKT,IAAYC,EAAAuB,GAC/B,MAAOwjB,GAAW5f,EAAWD,EACxB,IAAInF,IAAYC,EAAAS,GAAKV,IAAYC,EAAAwB,GACtC,MAAOwjB,GAAW7f,EAAWD,EAE7B,MAAM,IAAI/e,OAAM,uBAAuB4Z,EAAO,sBAE3C,GAAmB,cAAf2iB,EAA4B,CAErC,GAAI3iB,IAAYC,EAAAQ,GAAKT,IAAYC,EAAAuB,GAC/B,MAAO0jB,GAAW9f,EAAWD,EACxB,IAAInF,IAAYC,EAAAS,GAAKV,IAAYC,EAAAwB,GACtC,MAAO0jB,GAAW/f,EAAWD,EAE7B,MAAM,IAAI/e,OAAM,uBAAuB4Z,EAAO,sBAGlD,MAAO2iB,GAGT,QAAAn5B,GAAqB26B,EAAuChhB,GAE1D,GAAIghB,EAAS,CACX,GAAIzd,EAAAmY,WAAWsF,GAAU,CACvB,GAAqB,iBAAjBA,EAAQ1wB,KAAyB,CAEnC,GAAMmQ,GAASH,EAAA2C,aAAa+d,EAASA,EAAQvgB,OAAQT,EAAQ,OAC7D,QACEI,OAAQ,UAAUmD,EAAAzQ,MAAMkuB,GAAUpY,OAAO,IAAM,MAAMnI,EAAM,MAExD,MAAqB,aAAjBugB,EAAQ1wB,MAEf8P,OAAQE,EAAAC,qBAAqBgD,EAAAzQ,MAAMkuB,GAAUpY,OAAO,IAAQoY,EAAQxgB,SAAUwgB,EAAQvgB,OAAQT,EAAO3Z,KAAKqa,gBAAiBV,EAAOW,cAG5H7N,MAAOkuB,EAAQluB,OAEpB,GAAIkuB,EAAQ98B,MACjB,OAAQA,MAAO88B,EAAQ98B,OAG3B,OAAQA,MAAO8b,EAAO3Z,KAAKA,MAG7B,QAAA41B,GAAqBjc,GAEnB,GAAsC,gBAA3BA,GAAOgC,MAAMqW,UAEtB,KAAM,IAAIp1B,OAAM,wCAElB,QAAQiB,MAAO8b,EAAOgC,MAAMqW,UAAY,GAG1C,QAAAiE,GAAqBtc,GACnB,GAAsC,gBAA3BA,GAAOgC,MAAMqW,UAEtB,KAAM,IAAIp1B,OAAM,wCAElB,QAAQiB,MAAO8b,EAAOgC,MAAMqW,UAAY,GAG1C,QAAAwJ,GAAoB5f,EAAmBD,GACrC,MAAIC,KAEGxD,EAAAC,UAAUM,EAAAwN,UAAUC,IAAKzN,EAAAwN,UAAUyV,KAAMjjB,EAAAwN,UAAU0V,KAAMlgB,EAAM1R,OAClE0R,EAAM7O,QAAS,GAGb6O,MAAOC,EACP/d,MAAO,IAKLA,MAAO,GAMjB,QAAA69B,GAAoB9f,EAAmBD,GACrC,MAAIC,KAEGxD,EAAAC,UAAUM,EAAAwN,UAAUC,IAAKzN,EAAAwN,UAAUyV,KAAMjjB,EAAAwN,UAAU0V,KAAMlgB,EAAM1R,OAClE0R,EAAM7O,QAAS,GAGb6O,MAAOC,EACP/d,MAAO,IAIL4O,OAAQ6f,MAAO,UAGzB,QAAAmP,GAAoB7f,EAAmBD,GACrC,MAAIC,KAEGxD,EAAAC,UAAUM,EAAAwN,UAAUC,IAAKzN,EAAAwN,UAAUyV,KAAMjjB,EAAAwN,UAAU0V,KAAMlgB,EAAM1R,OAClE0R,EAAM7O,QAAS,GAGb6O,MAAOC,EACP/d,MAAO,IAKL4O,OAAQ6f,MAAO,WAMzB,QAAAqP,GAAoB/f,EAAmBD,GACrC,MAAIC,KAEGxD,EAAAC,UAAUM,EAAAwN,UAAUC,IAAKzN,EAAAwN,UAAUyV,KAAMjjB,EAAAwN,UAAU0V,KAAMlgB,EAAM1R,OAClE0R,EAAM7O,QAAS,GAGb6O,MAAOC,EACP/d,MAAO,IAKLA,MAAO,mDAxOjB,IAAA4Y,GAAA/Z,EAAA,iBAEAwgB,EAAAxgB,EAAA,kBACAic,EAAAjc,EAAA,eAEA0b,EAAA1b,EAAA,cAEAud,EAAAvd,EAAA,YAQAlB,GAAA0+B,UAAAA,EAYA1+B,EAAA4+B,WAAAA,EAcA5+B,EAAAyV,IAAAA,EAIAzV,EAAAu+B,SAAAA,EAWAv+B,EAAA26B,KAAAA,EAOA36B,EAAA+/B,aAAAA,EAWA//B,EAAA89B,SAAAA,EAmDA99B,EAAAwE,KAAAA,EAwBAxE,EAAAo6B,KAAAA,EASAp6B,EAAAy6B,KAAAA,8KClKA,IAAAhqB,GAAAvP,EAAA,UAGA+Z,EAAA/Z,EAAA,cAEAukB,EAAAvkB,EAAA,WACAsqB,EAAAtqB,EAAA,eACAwgB,EAAAxgB,EAAA,eAEAic,EAAAjc,EAAA,YAIA0b,EAAA1b,EAAA,WAOAs3B,EAAAt3B,EAAA,iBA+BAo/B,EAAA,WAGE,QAAAA,KACE9/B,KAAK+/B,WAqBT,MAlBSD,GAAAn8B,UAAAq8B,OAAP,SAAcC,EAAiBzS,GAC7BxtB,KAAK+/B,QAAQE,GAAWzS,GAInBsS,EAAAn8B,UAAAD,IAAP,SAAWa,GACT,MAA8B9B,UAAvBzC,KAAK+/B,QAAQx7B,IAGfu7B,EAAAn8B,UAAA+O,IAAP,SAAWnO,GAGT,KAAOvE,KAAK+/B,QAAQx7B,IAClBA,EAAOvE,KAAK+/B,QAAQx7B,EAGtB,OAAOA,IAEXu7B,IAzBatgC,GAAAsgC,QAAAA,CAiCb,IAAAvL,GAAA,WAgCE,QAAAA,GAAY1S,EAAgBzf,EAAe0f,GAdf9hB,KAAA0xB,UAEA1xB,KAAAgwB,QAEAhwB,KAAA2xB,WAMH3xB,KAAA+mB,YAKvB/mB,KAAKoC,OAASA,EAGdpC,KAAKuE,KAAOsd,EAAKtd,MAAQud,EAGzB9hB,KAAKkgC,YAAc99B,EAASA,EAAO89B,YAAc,GAAIJ,GACrD9/B,KAAKmgC,aAAe/9B,EAASA,EAAO+9B,aAAe,GAAIL,GACvD9/B,KAAKogC,YAAch+B,EAASA,EAAOg+B,YAAc,GAAIN,GAErD9/B,KAAKgW,KAAO6L,EAAK7L,KAEjBhW,KAAK8U,YAAc+M,EAAK/M,YACxB9U,KAAK0kB,QAAU7C,EAAK6C,QACpB1kB,KAAK8lB,UAAYjE,EAAKiE,UAElBjE,EAAKiE,WAC8BrjB,SAAjCof,EAAKiE,UAAUwE,eACkB7nB,SAAjCof,EAAKiE,UAAsB,aAC7BjE,EAAKiE,UAAUwE,cAAgBzI,EAAKiE,UAAsB,WAC1D7V,EAAIuB,KAAKvB,EAAIzL,QAAQ67B,yBAIzBrgC,KAAK6mB,WAAa7Q,KAAM,KAAMod,OAAQ,KAAMrY,KAAM,KAAM2W,OAAQ,KAAM1B,KAAM,KAAM8D,WAAY,KAAME,WAAY,KAAMrC,QAAS,KAAM8L,UAAW,MAuQpJ,MAnQSlJ,GAAA5wB,UAAAE,MAAP,WACE7D,KAAKizB,YACLjzB,KAAKmzB,kBACLnzB,KAAKszB,aACLtzB,KAAKkzB,iBACLlzB,KAAKwf,YACLxf,KAAKi0B,cACLj0B,KAAK2zB,iBACL3zB,KAAK+zB,iBACL/zB,KAAK0zB,aA4BAa,EAAA5wB,UAAA28B,eAAP,WAGE,MAAOlkB,GAAA4K,QAAQ5K,EAAAiF,KAAKrhB,KAAK6mB,UAAU6K,QAAQrkB,IAAI,SAACqkB,GAC9C,GAAI6O,IAAO7O,EAAO3c,KAOlB,OANI2c,GAAOsD,WACTuL,EAAIz9B,KAAK4uB,EAAOsD,WAEdtD,EAAOuD,gBACTsL,EAAIz9B,KAAK4uB,EAAOuD,gBAEXsL,MAMJhM,EAAA5wB,UAAA68B,aAAP,WACE,SAAU/0B,OAAO7E,SAAUwV,EAAAiF,KAAKrhB,KAAK6mB,UAAUmJ,QAG1CuE,EAAA5wB,UAAA88B,gBAAP,WACE,MAAOrkB,GAAAiF,KAAKrhB,KAAK6mB,UAAU8K,UAGtB4C,EAAA5wB,UAAA4hB,cAAP,WACE,GAAI+K,MAEEpM,EAAUlkB,KAAKk0B,gBAAgB5D,EAAMpM,YACvCA,GAAQljB,OAAS,IACnBsvB,EAAMpM,QAAUA,GAIlBoM,EAAM9L,MAAQxkB,KAAKo0B,eACnB,IAAM1C,GAAS1xB,KAAKsgC,gBAChB5O,GAAO1wB,OAAS,IAClBsvB,EAAMoB,OAASA,EAGjB,IAAM1B,GAAOhwB,KAAKwgC,cACdxQ,GAAKhvB,OAAS,IAChBsvB,EAAMN,KAAOA,EAGf,IAAM2B,GAAU3xB,KAAKygC,iBAKrB,OAJI9O,GAAQ3wB,OAAS,IACnBsvB,EAAMqB,QAAUA,GAGXrB,GASFiE,EAAA5wB,UAAA+hB,eAAP,SAA4BnmB,EAA4CmhC,EAASvgC,GAC/E,MAAO6qB,GAAAnM,OAAO7e,KAAKq0B,aAAc,SAACsM,EAAQC,EAAgBl8B,GACxD,MAAOwc,GAAAmY,WAAWuH,GAAMrhC,EAAEohC,EAAKC,EAAIl8B,GAAKi8B,GACvCD,EAAMvgC,IAGJo0B,EAAA5wB,UAAAgmB,gBAAP,SAAuBpqB,EAAuCY,GAC5D6qB,EAAAjY,QAAQ/S,KAAKq0B,aAAc,SAACuM,EAAgBl8B,GACtCwc,EAAAmY,WAAWuH,IACbrhC,EAAEqhC,EAAIl8B,IAEPvE,IAGEo0B,EAAA5wB,UAAAqrB,gCAAP,SAAuCxU,GACrC,IAAkB,GAAAmR,GAAA,EAAAC,EAAA5rB,KAAK+mB,SAAL4E,EAAAC,EAAA5qB,OAAA2qB,IAAa,CAA1B,GAAI1Y,GAAK2Y,EAAAD,EACZ,IAAI1Y,EAAM4tB,UACR,GAAI5tB,EAAMiY,gBAAgB1Q,GACxB,OAAO,MAGT,IAAIvH,EAAM+b,gCAAgCxU,GACxC,OAAO,EAIb,OAAO,GAKF+Z,EAAA5wB,UAAAohB,QAAP,SAAe/gB,EAAc88B,GAC3B,MAD2B,UAAAA,IAAAA,EAAA,KACvB9gC,KAAKgW,MAAQhS,IAASihB,EAAAuD,QAAUvD,EAAAqH,YAAYtsB,KAAKgW,MAC5ChW,KAAKgW,KAAKzR,MAEXvE,KAAKuE,KAAOvE,KAAKuE,KAAOu8B,EAAY,IAAM98B,GAG7CuwB,EAAA5wB,UAAA4oB,WAAP,SAAkB0T,EAAiBzS,GAChCxtB,KAAKkgC,YAAYF,OAAOC,EAASzS,IAS7B+G,EAAA5wB,UAAA4kB,SAAP,SAAgBwY,GACd,MAAO/gC,MAAKkgC,YAAYxtB,IAAI1S,KAAK+kB,QAAQ7f,OAAO67B,MAG3CxM,EAAA5wB,UAAAq9B,WAAP,SAAkBf,EAAiBzS,GACjCxtB,KAAKogC,YAAYJ,OAAOC,EAASzS,IAG5B+G,EAAA5wB,UAAAmyB,gBAAP,SAAuBtb,GACrB,MAAOxa,MAAKsvB,SAAS9U,IAAYC,EAAAQ,GAAKT,IAAYC,EAAAE,OAAS,QAAU,WAGhE4Z,EAAA5wB,UAAA2rB,SAAP,SAAgB7c,GACb,MAAOzS,MAAKogC,YAAY1tB,IAAI1S,KAAK+kB,QAAQtS,EAAM,OAM3C8hB,EAAA5wB,UAAAikB,UAAP,WACE,MAAO5nB,MAAK8lB,UAAY9lB,KAAK8lB,UAAU8B,UAAYnlB,QAG9C8xB,EAAA5wB,UAAA2mB,cAAP,WACE,GAAMxE,GAAY9lB,KAAK8lB,aACvB,OAAgCrjB,UAA5BqjB,EAAUwE,cACLtqB,KAAKoC,OAASpC,KAAKoC,OAAOkoB,gBAAkB7nB,OAE9CqjB,EAAUwE,eAGZiK,EAAA5wB,UAAA6J,OAAP,WACE,MAAOxN,MAAK8lB,UAAY9lB,KAAK8lB,UAAUtY,OAAS/K,QAI3C8xB,EAAA5wB,UAAA8M,MAAP,SAAa+J,EAAkB0iB,GAAA,SAAAA,IAAAA,KAC7B,IAAMzf,GAAWzd,KAAKyd,SAASjD,EAQ/B,OANIiD,GAASxI,MACXioB,EAAM9gB,EAAAjK,QACJsR,UAAW9G,EAAAyJ,kBAAkBpmB,KAAK2f,MAAMnF,GAASvM,MAAQ,QAAU,SAClEivB,IAGEhc,EAAAzQ,MAAMgN,EAAUyf,IAKlB3I,EAAA5wB,UAAAgc,MAAP,SAAanF,GACX,MAAOxa,MAAK0xB,OAAOlX,IAGd+Z,EAAA5wB,UAAAmd,iBAAP,SAAwBtG,GACtB,GAAMmF,GAAQ3f,KAAK2f,MAAMnF,EACzB,OAAOmF,IAAShD,EAAAyJ,kBAAkBzG,EAAM1R,OAGnCsmB,EAAA5wB,UAAA8vB,YAAP,SAAmBwM,EAAiBzS,GAClCxtB,KAAKmgC,aAAaH,OAAOC,EAASzS,IAQ7B+G,EAAA5wB,UAAAic,UAAP,SAA8BqhB,EAAmCp9B,GAC/D,GAAM2W,GAAUymB,EAAkB96B,QAAQ6xB,EAAAK,kBAAmB,IAAIlyB,QAAQ6xB,EAAAC,wBAAyB,GAElG,OAAIp0B,GAIK7D,KAAK+kB,QAAQkc,EAAoB,IAOrCjhC,KAAK2f,OAAS3f,KAAK0xB,OAAOlX,IAE3Bxa,KAAKmgC,aAAaz8B,IAAI1D,KAAK+kB,QAAQkc,EAAoB,KAElDjhC,KAAKmgC,aAAaztB,IAAI1S,KAAK+kB,QAAQkc,EAAoB,KANhE,QAWK1M,EAAA5wB,UAAAR,KAAP,SAAYqX,GACV,OAAQxa,KAAKq0B,aAAa7Z,QAAgBrX,MAGrCoxB,EAAA5wB,UAAA+Z,KAAP,SAAYlD,GACV,MAAOxa,MAAKgwB,KAAKxV,IAGZ+Z,EAAA5wB,UAAA0iB,OAAP,SAAc7L,GACZ,MAAOxa,MAAK2xB,QAAQnX,IAMf+Z,EAAA5wB,UAAAk9B,OAAP,WACE,OAAO,GAEFtM,EAAA5wB,UAAA2wB,QAAP,WACE,OAAO,GAEFC,EAAA5wB,UAAA2xB,QAAP,WACE,OAAO,GAEXf,IAhUsB/0B,GAAA+0B,MAAAA,+JCpEtB,SAAA2M,GAA2B5gB,EAAgB7C,EAAoBkC,EAAkBwhB,GAC/E,GAAe,iBAAX7gB,EAA2B,CACvB,GAAAsL,GAAAwV,EAAA3jB,EAAAkC,GAAC0hB,EAAAzV,EAAAyV,MAAOC,EAAA1V,EAAA0V,MACd,KAAID,EAEF,WADApxB,GAAIuB,KAAK8vB,OAGN,IAAe7+B,SAAX6d,GAAwB6gB,EAAYI,sBAAuB,CAE7D,GAAAF,GAAAD,EAAA3jB,EAAAkC,GAAA0hB,KACP,IAAIA,EACF,MAAO,eAIX,MAAO/gB,GAIT,QAAAkhB,GAA4BlkB,EAAc9C,GACxC,GAAMmF,GAAQrC,EAAMqC,MAAMnF,EAI1B,OAAgB,MAAZA,GAAmB8C,EAAM4N,gBAAgB,MACvC5N,EAAM4N,gBAAgB,KACjB6J,EAAa0M,EAAyB9hB,EAAOrC,EAAO,KAAMmkB,EAAyB9hB,EAAOrC,EAAO,OAEjGmkB,EAAyB9hB,EAAOrC,EAAO,MAE3B,MAAZ9C,GAAmB8C,EAAM4N,gBAAgB,MAC9C5N,EAAM4N,gBAAgB,KACjB6J,EAAa0M,EAAyB9hB,EAAOrC,EAAO,KAAMmkB,EAAyB9hB,EAAOrC,EAAO,OAEjGmkB,EAAyB9hB,EAAOrC,EAAO,MAG3CmkB,EAAyB9hB,EAAOrC,EAAO9C,GAGhD,QAAAinB,GAAkC9hB,EAAcrC,EAAc9C,GAC5D,GAAMiD,GAAWH,EAAMG,SAASjD,EAEhC,IAAImF,EAAMW,QAA2B,iBAAjBX,EAAMW,OACxB,MAAIgB,GAAAC,WAAW5B,EAAMW,OAAO,IAClBX,EAAMW,OAAsBjT,IAAI,SAACmU,GACvC,MAAOF,GAAAG,UAAUD,GAAI,KAGlB7B,EAAMW,MAIf,IAAsB,aAAlB7C,EAASxP,KACX,OACE+H,KAAMsH,EAAMqL,YACZlY,MAAO6M,EAAM7M,MAAM+J,GACnBrX,MACEsN,MAAO6M,EAAM7M,MAAM+J,GACnB5P,GAAI,OAMV,IAAMqd,GAAQ3K,EAAM2K,KACpB,IAAIA,GAASzN,IAAYyN,EAAMmF,aAC7B,MAAoB,cAAjBnF,EAAMoF,QACC,EAAG,IAGXrX,KAAMsH,EAAMiL,SAAS,WACrB1Y,QACEyN,EAAM7M,MAAM+J,GAAU4d,OAAQ,UAC9B9a,EAAM7M,MAAM+J,GAAU4d,OAAQ,SAKpC,IAAMj1B,GAAOu+B,EAAWpkB,EAAO9C,EAASmF,EAAM1R,KAE9C,OAAqB,iBAAjB0R,EAAMW,QAENtK,KAAMsH,EAAMqL,YACZ9Y,QACEyN,EAAM7M,MAAM+J,GAAUyI,UAAW,QACjC3F,EAAM7M,MAAM+J,GAAUyI,UAAW,UAG5BxF,EAASxI,IACd0H,EAAAyJ,kBAAkBzG,EAAM1R,OAIxB+H,KAAMsH,EAAMqL,YACZlY,MAAO6M,EAAM7M,MAAM+J,GAAUiJ,UAAW,UACxCtgB,MACEsN,MAAO6M,EAAM7M,MAAM+J,GAAUiJ,UAAW,UACxC7Y,GAAI,QAIQ,MAAZ4P,GAA+B,MAAZA,GAGnBxE,KAAMsH,EAAMqL,YACZ9Y,QACEyN,EAAM7M,MAAM+J,GAAUiJ,UAAW,UACjCnG,EAAM7M,MAAM+J,GAAUiJ,UAAW,WAMnCzN,KAAMsH,EAAMqL,YACZlY,MAAO6M,EAAM7M,MAAM+J,GAAUiJ,UAAW,WAIrCtgB,GAIP6S,KAAM+mB,EAAK4E,UAAUx+B,GAAQma,EAAMqL,YAAa1D,EAAAuD,OAChD/X,MAAO6M,EAAM7M,MAAM+J,GACnBrX,KAAMA,IAIN6S,KAAMsH,EAAMqL,YACZlY,MAAO6M,EAAM7M,MAAM+J,IAKzB,QAAAknB,GAA2BpkB,EAAc9C,EAAkB+B,GACzD,GAAKI,EAAAyJ,kBAAkB7J,GAAvB,CAIA,GAAMpZ,GAAOma,EAAMna,KAAKqX,EAGxB,OAAIyQ,GAAAM,YAAYpoB,IAEZyH,GAAIzH,EAAKyH,GACT6F,MAAOtN,EAAKsN,SAIZssB,EAAK1gB,UAAU,YAAa,aAAc5Z,QAAoCU,IAAlF,QAiBF,QAAAi+B,GAAyC3jB,EAAoBlB,GAC3D,MAAKkB,GAASwF,UAOV2e,EAAA1nB,kBAAkBnX,QAAQ0a,EAASwF,cAAe,GAElDoe,OAAO,EACPC,OAAQrxB,EAAIzL,QAAQq9B,uCAAuCpkB,EAASwF,YAIlD,iBAAlBxF,EAASxP,MACO,QAAdsO,GAEA8kB,OAAO,EACPC,OAAQrxB,EAAIzL,QAAQs9B,+BAA+BrkB,KAKjD4jB,OAAO,IArBXA,OAAO,EACPC,OAAQrxB,EAAIzL,QAAQu9B,wCAAwCtkB,IA4BlE,QAAAukB,GAAyB1hB,GACvB,GAAIyc,EAAKp6B,QAAQ2d,GACf,OAAQA,EACH,IAAI2hB,EAAAC,gBAAgB5hB,GAEzB,aADOA,GAAOnd,MACNmd,EACH,IAAG2hB,EAAAE,sBAAsB7hB,GAC9B,MAAOA,GAAOzQ,OAAOxC,IAAI,SAAA3E,GACvB,OACEsN,KAAMsK,EAAOtK,KACbvF,MAAO/H,IAGN,IAAIu5B,EAAAG,uBAAuB9hB,GAChC,MAAOA,GAAOzQ,OAAOxC,IAAI,SAAA3E,GACvB,MAAIq0B,GAAKp6B,QAAQ+F,GACRA,GAGP+H,MAAO/H,EAAE+H,MACTuF,KAAMtN,EAAEsN,OAKd,MAAM,IAAIpV,OAAMqP,EAAIzL,QAAQ69B,eAM9B,QAAAtN,GAA6BuN,EAAmBC,GAC9C,GAAMC,GAAoBR,EAAgBM,GACpCG,EAAoBT,EAAgBO,GAEtCG,EAAUF,EAAkB/2B,OAAOg3B,EAGvC,IAFAC,EAAU3F,EAAK4F,OAAOD,EAAS3F,EAAKtW,MAEhCic,EAAQ1hC,OAAS,EAAG,CACtB,GAAM4hC,GAAUF,EAAQr1B,IAAI,SAAA3E,GAC1B,MAAIu5B,GAAAC,gBAAgBx5B,GACXA,EAAEsN,KAEJ,MAGT,OAA4C,KAAxC+mB,EAAK4F,OAAOC,EAAS,SAAAr/B,GAAK,MAAAA,KAAGvC,QAA+B,OAAf4hC,EAAQ,IAErD5sB,KAAM4sB,EAAQ,GACd/yB,OAAQ6yB,EAAQr1B,IAAI,SAAA3E,GAAK,MAACA,GAAgB+H,UAItCZ,OAAQ6yB,EAASv/B,MAAM,GAE/B,MAAOu/B,GAAQ,mDA9QnB,IAAAzyB,GAAAvP,EAAA,aAEAkhC,EAAAlhC,EAAA,mBAEAukB,EAAAvkB,EAAA,cACA4gB,EAAA5gB,EAAA,kBACAic,EAAAjc,EAAA,eACAuqB,EAAAvqB,EAAA,cACAuhC,EAAAvhC,EAAA,qBAEAq8B,EAAAr8B,EAAA,aAMAlB,GAAA0hC,WAAAA,EAmBA1hC,EAAAgiC,YAAAA,EAoHAhiC,EAAAkiC,WAAAA,EAgCAliC,EAAA4hC,yBAAAA,EA+DA5hC,EAAAu1B,aAAAA,sLChNA,SAAA2L,GACIlmB,EAAkBiD,EAAyBE,EAC3C5C,EAAwB8nB,EAAkCC,GAC5D,GAAMC,IAAkBtlB,OAAgBkC,UAElCA,GACJ1R,KAAM2P,EAAA6U,QACJsQ,EAAe90B,KAAMwP,EAASxP,KAAMuM,EAASiD,EAASU,SAAUpD,EAC/CtY,SAAjBogC,EAA4BE,EAAe/M,UAAWrY,EAAOgC,OA2BjE,OAtBAngB,GAAAwjC,gCAAgCjwB,QAAQ,SAAS+M,GAC/C,GAAMmjB,GAAiBF,EAAejjB,GAEhCojB,EAAuBvmB,EAAAwmB,yBAAyBxjB,EAAM1R,KAAM6R,GAC5DsjB,EAAyBzmB,EAAA0mB,oCAAoC7oB,EAASsF,EAU5E,IARuBrd,SAAnBwgC,IAEGC,EAEME,GACTnzB,EAAIuB,KAAK4xB,GAFTnzB,EAAIuB,KAAKvB,EAAIzL,QAAQ8+B,kCAAkC3jB,EAAM1R,KAAM6R,EAAUtF,KAK7E0oB,GAAmDzgC,SAA3B2gC,EAAsC,CAChE,GAAMvhC,GAAQ0hC,EAASN,EAAgBnjB,EAAUH,EAAOnF,EAASiD,EAAUE,EAAOgC,MACpEld,UAAVZ,IACF8d,EAAMG,GAAYje,MAKjBk7B,EAAK5qB,OACVwN,EACA6jB,EAAA/Q,QACEjY,EAASmF,EAAM1R,KAAMwP,EAASxP,KAAM80B,EAAgBplB,EACpDgC,EAAM7O,KAAMiK,EAAM8nB,EAAcC,IAKtC,QAAAS,GAAkBN,EAAqBnjB,EAAuBH,EAAcnF,EAAkBiD,EAAoB0jB,GAEhH,MAAiB,WAAbrhB,EACK4U,EAAAwM,WAAW+B,EAAgBxlB,EAAUkC,EAAM1R,KAAMkzB,GAInC1+B,SAAnBwgC,EACKA,EAEFQ,EAAgB3jB,EAAUH,EAAOnF,EAASiD,EAAU0jB,GAG7D,QAAAsC,GAAyB3jB,EAAuBH,EAAcnF,EAAkBiD,EAAoB0jB,GAGlG,OAAQrhB,GACN,IAAK,OACH,MAAOO,GAAMqjB,KAAK/jB,EAAM1R,KAAMuM,EAASiD,EACzC,KAAK,UACH,MAAO4C,GAAMqE,QAAQlK,EAASmF,EAAM1R,KAAMkzB,EAC5C,KAAK,eACH,MAAO9gB,GAAM+V,aAAazW,EAAM+E,QAASlK,EAAS2mB,EACpD,KAAK,eACH,MAAO9gB,GAAM8V,aAAaxW,EAAM+E,QAASlK,EAASmF,EAAM1R,KAAM0R,EAAMyW,aAAc+K,EACpF,KAAK,QACH,MAAO9gB,GAAMsjB,MAAMnpB,EAAS2mB,EAC9B,KAAK,OACH,MAAO9gB,GAAMvP,KAAK6O,EAAOnF,EAASiD,GAGtC,MAAO0jB,GAAYrhB,mDAjHrB,IAAA7P,GAAAvP,EAAA,aAMAic,EAAAjc,EAAA,eAEAg0B,EAAAh0B,EAAA,YACA8iC,EAAA9iC,EAAA,WACA2f,EAAA3f,EAAA,WACAkd,EAAAld,EAAA,UACAq8B,EAAAr8B,EAAA,aAKalB,GAAAwjC,iCAEX,SACA,QAEA,QAAS,OAET,WAAY,OACZ,cAEA,UAAW,eAAgB,gBAW7BxjC,EAAAizB,QAAAiO,0ICtBA,SAAAkD,GAA4CtmB,GAE1C,MAAOA,GAAM2M,WAAWpL,OAAO,SAASglB,EAA6CrpB,GACnF,GAAMspB,GAAkBxQ,EAAWhW,EAAO9C,EAI1C,OAHIspB,KACFD,EAAqBrpB,GAAWspB,GAE3BD,OAOX,QAAAvQ,GAA2BhW,EAAc9C,GACtC,GAAI8C,EAAMqC,MAAMnF,GAAU,CACzB,GAAMiD,GAAWH,EAAMG,SAASjD,GAC1BkX,GACJ3c,KAAMgvB,EAAezmB,EAAO9C,GAS9B,OALI8C,GAAM+I,OAAO7L,IAAYiD,EAASxI,KAAO0H,EAAAob,oBAAoBza,EAAMqC,MAAMnF,GAASvM,QACpFyjB,EAAOsD,UAAYgP,EAAexpB,EAAS8C,GAC3CoU,EAAOuD,eAAiBgP,EAAoBzpB,EAAS8C,EAAOG,IAGvDiU,EAET,MAAO,MAkBT,QAAAqS,GAAwBzmB,EAAc9C,GACpC,GAAMmF,GAAQrC,EAAMqC,MAAMnF,GACpBrX,EAAOma,EAAMna,KAAKqX,GAEpB+Y,GACFhvB,KAAM+Y,EAAMsC,UAAUpF,EAAU,IAAI,GACpCvM,KAAM0R,EAAM1R,KACZqS,OAAQoU,EAAA8M,YAAYlkB,EAAO9C,GAC3BgP,MAAOga,EAAAU,WAAWvkB,GAWpB,OARAngB,GAAA2kC,4CAA4CpxB,QAAQ,SAAC+M,GACnDyT,EAAezT,GAAYH,EAAMG,KAG/B3c,GAAoD,gBAA3C8nB,EAAAM,YAAYpoB,GAAQA,EAAKugB,MAAQvgB,KAC5CowB,EAAe6Q,SAAU,GAGpB7Q,EAOT,QAAAyQ,GAAwBxpB,EAAkB8C,GACxC,OACE/Y,KAAM+Y,EAAMsC,UAAUpF,GAAS,GAAQwd,EAAAK,kBACvCpqB,KAAM0O,EAAAwN,UAAUmN,MAChBhX,QACEtK,KAAMsH,EAAMqL,YACZlY,MAAO6M,EAAM7M,MAAM+J,GACnBrX,MAAM,GAERqmB,OAAQ,EAAE,IAOd,QAAAya,GAA6BzpB,EAAkB8C,EAAcG,GAC3D,OACElZ,KAAM+Y,EAAMsC,UAAUpF,GAAS,GAAQwd,EAAAC,wBACvChqB,KAAM0O,EAAAwN,UAAUrM,QAChBwC,QACEtK,KAAMsH,EAAMqL,YACZlY,MAAO6M,EAAM7M,MAAM+J,GACnBrX,MAAM,GAERqmB,OACExT,KAAMsH,EAAMqL,YACZlY,MAAOyQ,EAAAzQ,MAAMgN,GAAWgG,UAAW,UACnCtgB,MACEsN,MAAO6M,EAAM7M,MAAM+J,GAAUiJ,UAAW,UACxC7Y,GAAI,yDAtHZ,IAAAsW,GAAAxgB,EAAA,kBACAic,EAAAjc,EAAA,eACAuqB,EAAAvqB,EAAA,cAKAs3B,EAAAt3B,EAAA,WACAg0B,EAAAh0B,EAAA,YACA8iC,EAAA9iC,EAAA,UAMAlB,GAAAizB,QAAAmR,EAcApkC,EAAA8zB,WAAAA,EAkBa9zB,EAAA2kC,6CACX,QAEA,QAAS,OAET,WAAY,cAAe,OAE3B,UAAW,eAAgB,iJC3C7B,SAAAD,GAA2BvkB,GACzB,GAAIA,EAAMqW,UACR,OAAQ1rB,KAAMqV,EAAMqW,UACf,IAAIrW,EAAM0kB,OAAQ,CACvB,GAAMA,GAAS1kB,EAAM0kB,MACrB,IAAI1nB,EAAA2nB,iBAAiBD,GAAS,CAC5B,GAAIhkC,IAAoBgkC,OAAQA,EAAO9/B,KAOvC,OANI8/B,GAAOh4B,QACThM,EAAEgM,MAAQg4B,EAAOh4B,OAEfg4B,EAAOte,SACT1lB,EAAE0lB,OAASse,EAAOte,QAEb1lB,EAEP,OAAQgkC,OAAMA,GAGlB,MAAO1kB,GAAM6J,MAQf,QAAA+a,GACE/pB,EAAkB+B,EAAsBtO,EAAY80B,EAAuBplB,EAC3E7M,EAAeiK,EAAY8nB,EAAkCC,GAM7D,IAAqB,GAJjB0B,IAA2B,EAIV7Y,EAAA,EAAA8Y,EAAAjlC,EAAAklC,iBAAA/Y,EAAA8Y,EAAAzjC,OAAA2qB,IAAgB,CAAhC,GAAI7L,GAAQ2kB,EAAA9Y,EACf,IAAiClpB,SAA7BsgC,EAAejjB,GAAyB,CAC1C,GAAIojB,GAAuBvmB,EAAAwmB,yBAAyB5mB,EAAWuD,GACzDsjB,EAAyBzmB,EAAA0mB,oCAAoC7oB,EAASsF,EAC5E,IAAKojB,EAEE,GAAIE,EACTnzB,EAAIuB,KAAK4xB,OAET,QAAQtjB,GACN,IAAK,QACH,OAAQ0J,MAAOuZ,EAAejjB,GAChC,KAAK,SACH,OAAQukB,OAAQtB,EAAejjB,GACjC,KAAK,YACH,GAAqBrd,SAAjBogC,EAA4B,CAC9B,GAAM8B,GAAW5B,EAAejjB,EAChC,IAAiB,OAAb6kB,EACF,OAAQ3O,UAAW2O,EAEnBH,IAA2B,MAI7Bv0B,GAAIuB,KAAKvB,EAAIzL,QAAQogC,iBAAiBpqB,QAnB5CvK,GAAIuB,KAAKvB,EAAIzL,QAAQ8+B,kCAAkC/mB,EAAWuD,EAAUtF,KA0BlF,OAAQA,GAEN,IAAKC,GAAAC,IACH,OAAQ8O,MAAO,SACjB,KAAK/O,GAAAE,OACH,OAAQ6O,MAAO,QACjB,KAAK/O,GAAAQ,EACL,IAAKR,GAAAS,EACH,GAAqBzY,SAAjBogC,EAA4B,CAC9B,GAAI9F,EAAK1gB,UAAU,QAAS,QAASE,KAAeioB,EAClD,GAAIhqB,IAAYC,EAAAQ,GAAc,SAATF,GACnB,GAAI4C,EAAOgC,MAAMif,eACf,OAAQ5I,UAAWrY,EAAOgC,MAAMif,oBAGlC,IAAIjhB,EAAOgC,MAAMqW,UACf,OAAQA,UAAWrY,EAAOgC,MAAMqW,UAMtC6M,GAAeroB,IAAYC,EAAAQ,EAAI0C,EAAO2H,KAAKH,MAAQxH,EAAO2H,KAAKF,OAEjE,OAAQoE,MAAOhP,IAAYC,EAAAQ,GAAK,EAAG4nB,IAAiBA,EAAc,GAEpE,KAAKpoB,GAAAG,KAEH,GAAMiqB,GAAWC,EAAa/pB,EAAMjK,EAAM6M,GACpConB,EAAWC,EAAajqB,EAAM+nB,EAAcnlB,EAClD,QAAQ6L,OAAQqb,EAAUE,GAC5B,KAAKtqB,GAAAI,MACL,IAAKJ,GAAAU,MACH,OAAQqO,MAAOyb,EAAazqB,EAAS+B,EAAWtO,EAAM8M,GAGxD,KAAKN,GAAAa,QAEH,OAAQkO,OAAQ7L,EAAOgC,MAAMulB,WAAYvnB,EAAOgC,MAAMwlB,aAG1D,KAAM,IAAIvkC,OAAM,qCAAqC4Z,GAGvD,QAAAyqB,GAAsBzqB,EAA4B+B,EAAsBtO,EAAY8M,GAClF,OAAQP,GACN,IAAKC,GAAAI,MACH,MAAO,QACT,KAAKJ,GAAAU,MACH,MAAkB,YAAdoB,EAEc,YAATtO,EAAqB,WAAa,UAE3B,SAAT8M,EAAkB,UAAY,QAI3C,QAAA+pB,GAAsB/pB,EAAYjK,EAAe6M,GAC/C,GAAI7M,EACF,MAAO,EAET,QAAQiK,GACN,IAAK,MACH,MAAoCtY,UAA7Bkb,EAAOgC,MAAMylB,YAA4BznB,EAAOgC,MAAMylB,YAAcznB,EAAO/B,IAAIwe,kBACxF,KAAK,OACH,MAAOzc,GAAOgC,MAAMylB,WACtB,KAAK,OACL,IAAK,OACH,MAAOznB,GAAOgC,MAAM0lB,cACtB,KAAK,OACH,MAAO1nB,GAAOgC,MAAM2lB,WACtB,KAAK,QACL,IAAK,SACL,IAAK,SACH,GAAI3nB,EAAOgC,MAAM4lB,QACf,MAAO5nB,GAAOgC,MAAM4lB,QAK1B,KAAM,IAAI3kC,OAAMqP,EAAIzL,QAAQ+tB,oBAAoB,OAAQxX,IAG1D,QAAAiqB,GAAsBjqB,EAAY+nB,EAAwBnlB,GACxD,GAAMwjB,GAAcxjB,EAAOgC,KAE3B,QAAQ5E,GACN,IAAK,MACL,IAAK,OACH,MAAiCtY,UAA7Bkb,EAAOgC,MAAM6lB,YACR7nB,EAAOgC,MAAM6lB,YAEfC,EAAe3C,EAAcnlB,EAAOgC,OAAS,CACtD,KAAK,OACL,IAAK,OACH,MAAOhC,GAAOgC,MAAM+lB,cACtB,KAAK,OACH,MAAO/nB,GAAOgC,MAAMgmB,WACtB,KAAK;AACL,IAAK,SACL,IAAK,SACH,GAAIhoB,EAAOgC,MAAMimB,QACf,MAAOjoB,GAAOgC,MAAMimB,OAItB,IAAMC,GAAYJ,EAAe3C,EAAc3B,EAC/C,QAAQ0E,EAAY,IAAMA,EAAY,GAI1C,KAAM,IAAIjlC,OAAMqP,EAAIzL,QAAQ+tB,oBAAoB,OAAQxX,IAM1D,QAAA0qB,GAAwB3C,EAAwB3B,GAC9C,MAAI2B,GAAa9hC,OAAS,EACjBiT,KAAK6xB,IAAIl/B,MAAM,KAAMk8B,GAE1B3B,EAAYnL,UACPmL,EAAYnL,UAEd,mDAzMT,IAAA/lB,GAAAvP,EAAA,aAEA+Z,EAAA/Z,EAAA,iBAGAic,EAAAjc,EAAA,eAGAq8B,EAAAr8B,EAAA,aAIAlB,GAAA0kC,WAAAA,EAqBa1kC,EAAAklC,kBAAqC,QAAS,YAAa,UAKxEllC,EAAAizB,QAAA8R,yGC/BA,SAAAb,GAAqBnnB,EAAsB/B,EAAkBiD,GAC3D,MAAIsf,GAAK1gB,UAAUM,EAAAwN,UAAUyV,KAAMjjB,EAAAwN,UAAU0V,KAAMtjB,GAC1C6G,EAAA2iB,aAAatoB,EAASU,UAExB4e,EAAK1gB,UAAU5B,EAAAQ,EAAGR,EAAAS,GAAIV,GAG/B,QAAAkK,GAAwBlK,EAAkB+B,EAAsB4kB,GAC9D,GAAIpE,EAAK1gB,UAAU5B,EAAAQ,EAAGR,EAAAS,GAAIV,IACpB+B,IAAcI,EAAAwN,UAAUmN,MAC1B,MAAO6J,GAAY6E,aAMzB,QAAA5P,GAA6B1R,EAAiBlK,EAAmB2mB,GAC/D,GAAgB1+B,SAAZiiB,EAKJ,MAAIqY,GAAK1gB,UAAU5B,EAAAQ,EAAGR,EAAAS,GAAIV,GAKjB2mB,EAAY8E,iBALrB,OAUF,QAAA9P,GAA6BzR,EAAiBlK,EAAkB+B,EAAsB6Z,EAAsB+K,GAC1G,GAAgB1+B,SAAZiiB,EAKJ,MAAIqY,GAAK1gB,UAAU5B,EAAAQ,EAAGR,EAAAS,GAAIV,IAGpB+B,IAAcI,EAAAwN,UAAUqP,KACW/2B,SAAjC0+B,EAAY+E,iBACP/E,EAAY+E,iBAMd9P,EAAe,EAX1B,OAiBF,QAAAuN,GAAsBnpB,EAAkB2mB,GACtC,GAAIpE,EAAK1gB,UAAU,IAAK,IAAK,MAAO,UAAW7B,GAC7C,MAAO2mB,GAAYwC,MAKvB,QAAA7yB,GAAqBiyB,EAAuBvoB,EAAkBiD,GAM5D,MAAgB,SAAZjD,GAAwC,iBAAlBiD,EAASxP,QAO9B80B,EAAeziB,QAAW7C,EAASxI,MAAO8nB,EAAK1gB,UAAU5B,EAAAQ,EAAGR,EAAAS,GAAIV,oDAjFvE,IAAAC,GAAA/Z,EAAA,iBAEAic,EAAAjc,EAAA,eACA0iB,EAAA1iB,EAAA,kBACAq8B,EAAAr8B,EAAA,aAEAlB,GAAAkkC,KAAAA,EAOAlkC,EAAAklB,QAAAA,EASAllB,EAAA42B,aAAAA,EAgBA52B,EAAA22B,aAAAA,EAuBA32B,EAAAmkC,MAAAA,EAOAnkC,EAAAsR,KAAAA,gKClEatR,EAAA64B,kBAAoB,cAEpB74B,EAAAy4B,wBAA0B,yDCYvC,SAAAhqB,GACEk4B,EAA0Bl4B,EAAYuM,EAAkB2D,EAAoBpD,EAC5EqrB,EAA0BC,EAA4BlF,GAEtD,IAAK1mB,EAAA0B,SAAS3B,GAEZ,MAAO,KAET,IAAsB/X,SAAlB0jC,EAA6B,CAE/B,GAAI1rB,EAAA6B,iBAAiB9B,EAAS2rB,GAC5B,MAAOA,EAEP,IAAMG,GAAeC,EACnBt4B,EAAMuM,EAAS2D,EAAUpD,EACzBqrB,EAAiBC,EAAqBlF,EAGxC,OADAlxB,GAAIuB,KAAKvB,EAAIzL,QAAQgiC,4BAA4BhsB,EAAS2rB,EAAeG,IAClEA,EAIX,MAAOC,GACLt4B,EAAMuM,EAAS2D,EAAUpD,EACzBqrB,EAAiBC,EAAoBlF,GAOzC,QAAAoF,GAAqBt4B,EAAYuM,EAAkB2D,EAAoBpD,EACrEqrB,EAA0BC,EAA4BlF,GAEtD,GAAIpE,EAAK1gB,UAAU,MAAO,UAAW7B,GACnC,MAAOmC,GAAAwN,UAAUqP,IAGnB,QAAQvrB,GACN,IAAK,UACH,MAAgB,UAAZuM,GAA8C,aAAvBC,EAAAgC,UAAUjC,GAC5BmC,EAAAwN,UAAUrM,QAEZ2oB,EAAyBjsB,EAASO,EAAMqrB,EAAiBC,EAAoBlF,EAEtF,KAAK,UACH,MAAgB,UAAZ3mB,EACKmC,EAAAwN,UAAUrM,QACe,aAAvBrD,EAAAgC,UAAUjC,IACnBvK,EAAIuB,KAAKvB,EAAIzL,QAAQkiC,4BAA4BlsB,EAAS,YACnDmC,EAAAwN,UAAUrM,SAEZ2oB,EAAyBjsB,EAASO,EAAMqrB,EAAiBC,EAAoBlF,EAEtF,KAAK,WACH,MAAgB,UAAZ3mB,EAGK,aACyB,aAAvBC,EAAAgC,UAAUjC,IACnBvK,EAAIuB,KAAKvB,EAAIzL,QAAQkiC,4BAA4BlsB,EAAS,aAEnDmC,EAAAwN,UAAUrM,SAEfsF,EAAAujB,oBAAoBxoB,GACfsoB,EAAyBjsB,EAASO,EAAMqrB,EAAiBC,EAAoBlF,GAE/ExkB,EAAAwN,UAAUyV,IAEnB,KAAK,eACH,MAAgB,UAAZplB,EAGK,aACyB,aAAvBC,EAAAgC,UAAUjC,IACnBvK,EAAIuB,KAAKvB,EAAIzL,QAAQkiC,4BAA4BlsB,EAAS,iBAEnDmC,EAAAwN,UAAUrM,SAEZnB,EAAAwN,UAAUyc,OAIrB,KAAM,IAAIhmC,OAAMqP,EAAIzL,QAAQqiC,iBAAiB54B,IAO/C,QAAAw4B,GACIjsB,EAAkBO,EAAYqrB,EAC9BC,EAA4BlF,GAE9B,GAAIpE,EAAK1gB,UAAU,IAAK,KAAM7B,GAAU,CACtC,GAAa,SAATO,EAEF,MAAO4B,GAAAwN,UAAUqP,IAEnB,IAAa,QAATze,EAGF,MAAI+rB,GAAcV,EAAiBC,EAAoBlF,GAC9CxkB,EAAAwN,UAAUmN,MAEZ3a,EAAAwN,UAAUqP,KAIrB,MAAO7c,GAAAwN,UAAUmN,MAGnB,QAAAwP,GAAuBV,EAA0BC,EAA4BlF,GAC3E,OAAIiF,IAIuB3jC,SAAvB4jC,EAC4B,OAAvBA,IAEAlF,EAAYnL,2DAzIvB,IAAA/lB,GAAAvP,EAAA,aAEA+Z,EAAA/Z,EAAA,iBAEAic,EAAAjc,EAAA,eACA0iB,EAAA1iB,EAAA,kBAGAq8B,EAAAr8B,EAAA,aASAlB,GAAAizB,QAAAxkB,6HCqGA,SAAA84B,GAA4BC,GAC1B,GAAIzjC,GAAW,KAAMuH,EAAW,IAQhC,OAPAk8B,GAAQC,QAAQl0B,QAAQ,SAASpK,EAAGhI,GAC9BgI,EAAEwiB,WAAa1Q,EAAAQ,EACjB1X,EAAI5C,EACKgI,EAAEwiB,WAAa1Q,EAAAS,IACxBpQ,EAAInK,MAGA4C,EAAGA,EAAGuH,EAAGA,GAGnB,QAAAo8B,GAAuB5pB,EAAkB0pB,EAA6BxsB,GACpE,GAAIjW,GAAQ4f,EAAAgjB,kBAAkBH,EAASxsB,GACnC/H,EAAS+H,IAAYC,EAAAQ,EAAI,QAAU,SACnCmsB,EAAW5sB,EAAO,SAClB6sB,EAASljB,EAAAkjB,OAASC,KAAK,KAAMhqB,EAAO0pB,EAASxsB,EAEjD,QACEjW,KAAMA,EACN1C,SACA0lC,GAAIC,EAAA/U,QAAO/uB,IAAIsjC,MAAgBS,EAAOT,EAAS,SAASO,EAAWG,GAWjE,MAVAH,GAAGzkC,MACD2kC,OAAQC,EAAIp6B,QAAQ,GACpB6S,OAAQknB,EAAO,IAAID,EAAK,KAAKA,EAAK,OAGpCG,EAAGzkC,MACD2kC,OAAQC,EACRvnB,OAAQ,IAAI5b,EAAI,QAAU8iC,EAAO,SAASD,EAAK,QAAQ30B,EAAI,KAAO,MAG7D80B,KAKb,QAAAE,GAAgBT,EAA6BW,GAC3C,MAAOX,GAAQS,OAAO5oB,OAAO,SAAS0oB,EAAWG,GAC/C,MAAKA,GAAIp6B,QAIFq6B,EAAGJ,EAAIG,IAHZE,EAAAp2B,KAAQk2B,EAAG,2DACJH,wDA/Jb,IAAApjB,GAAAzjB,EAAA,eACA+Z,EAAA/Z,EAAA,iBAEA0b,EAAA1b,EAAA,cACAknC,EAAAlnC,EAAA,aACA8mC,EAAA9mC,EAAA,sBAEalB,GAAAqoC,MAAQ,SACnBroC,EAAAob,KAAO,OAET,IAAMktB,IACJjK,UAAW,aAEX3Z,QAAS,SAAS5G,EAAO0pB,GACvB,GAAI9iB,MACA6jB,KACAxjC,EAAOyiC,EAAQziC,KACfkO,EAAOlO,EAAO/E,EAAAob,IA2ClB,OAzCIosB,GAAQgB,YAAeR,EAAA/U,QAAO/uB,IAAIsjC,IACpCS,EAAOT,EAAS,SAASn8B,EAAU68B,GACjC,GAAI5c,GAAU4c,EAAIp6B,QAAQ,GAAGE,SAAWk6B,EAAIp6B,QAAQ,GAAGE,UACvDsd,GAAQhoB,KAAK,kCACX,4BAA4BsZ,EAAA3H,YAAYlQ,EAAO/E,EAAAqoC,OAAM,QAI3Db,EAAQC,QAAQl0B,QAAQ,SAASpK,GAC/B,GAAIA,EAAEwiB,WAAa1Q,EAAAQ,GAAKtS,EAAEwiB,WAAa1Q,EAAAS,EAErC,WADA0sB,GAAAp2B,KAAK,8DAIP,IAAIy2B,GAAKf,EAAc5pB,EAAO0pB,EAASr+B,EAAEwiB,SACzCjH,GAAQphB,KAAKmlC,GACbF,EAAUjlC,KAAK,WAAWsZ,EAAA3H,YAAY9L,EAAE8H,OAAM,aAAaw3B,EAAG1jC,KAAI,OAGpE2f,EAAQphB,MACNyB,KAAMkO,EACN5Q,SACA0lC,GAAIE,EAAOT,EAAS,SAASO,EAAWG,GAYtC,MAXAH,GAAGzkC,MACD2kC,OAAQC,EAAIp6B,QAAQ,GACpB6S,OAAQ,kDAGVonB,EAAGzkC,MACD2kC,OAAQC,EACRvnB,OAAQ,OAAO1N,EAAI,UAAUA,EAAI,QAChC,wBAAwBA,EAAI,8BAA8BA,EAAI,UAG1D80B,MAGThjC,KAAMA,EACN4b,OAAQ,IAAI4nB,EAAUtmC,KAAK,MAAK,MAG3ByiB,GAGTgkB,UAAW,SAAS5qB,EAAO0pB,GACzB,MAAO,cAAcA,EAAQziC,MAG/B4jC,WAAY,SAAS7qB,EAAO0pB,GAC1B,GAAIoB,GAAMpB,EAAQziC,KAAO4f,EAAAkkB,KACzB,OAAUD,GAAG,YAAYA,EAAG,UAG9B5jB,MAAO,SAASlH,EAAO0pB,EAASxiB,GAC1B,GAAAjgB,GAAOyiC,EAAQziC,KACfqnB,EAAAmb,EAAAC,GAACzjC,EAAAqoB,EAAAroB,EAAGuH,EAAA8gB,EAAA9gB,CAGR,IAAI08B,EAAA/U,QAAO/uB,IAAIsjC,GACb,MAAOxiB,EAGT,IAAIrE,IACF5c,EAAG6Y,EAAAjK,UAAiB,OAAN5O,GACXoc,MAAOrC,EAAMsC,UAAUnF,EAAAQ,GAAI8C,OAAWxZ,EAAI,IAAIhB,EAAC,gBAC/C1B,MAAO,IAEV6uB,GAAItU,EAAAjK,UAAiB,OAAN5O,GACZoc,MAAOrC,EAAMsC,UAAUnF,EAAAQ,GAAI8C,OAAWxZ,EAAI,IAAIhB,EAAC,gBAC/CkN,OAAQ6f,MAAO,WAElBxlB,EAAGsR,EAAAjK,UAAiB,OAANrH,GACX6U,MAAOrC,EAAMsC,UAAUnF,EAAAS,GAAI6C,OAAWxZ,EAAI,IAAIuG,EAAC,gBAC/CjJ,MAAO,IAEVqvB,GAAI9U,EAAAjK,UAAiB,OAANrH,GACZ6U,MAAOrC,EAAMsC,UAAUnF,EAAAS,GAAI6C,OAAWxZ,EAAI,IAAIuG,EAAC,gBAC/C2F,OAAQ6f,MAAO,YAGpB,SACE/rB,KAAM9B,OACNwL,KAAM,OACNiS,QACEooB,OAAQzQ,MAAOh2B,MAAO,SACtBse,OAAQA,KAET1U,OAAO+Y,GACRjgB,KAAMA,EAAO/E,EAAAqoC,MACb55B,KAAM,OACNiS,QACEooB,OAAQzQ,MAAOh2B,MAAO,gBACtBse,OAAQA,MAKI3gB,GAAAizB,QAAAqV,EAEpBtoC,EAAAunC,YAAAA,mLCtHA,IAAA5iB,GAAAzjB,EAAA,eACA0b,EAAA1b,EAAA,cAEM6nC,GACJ1K,UAAW,UAEX3Z,QAAS,SAAS5G,EAAO0pB,GACvB,GAAIwB,GAAOxB,EAAQC,QACf1gB,EAAS,2CACT1W,EAAS24B,EAAKn7B,IAAI,SAAC1E,GAAM,MAAAyT,GAAA3H,YAAY9L,EAAE8H,SAAQhP,KAAK,MACpDif,EAAS8nB,EAAKn7B,IAAI,SAAC1E,GAAM,MAAG4d,GAAK,IAAInK,EAAA3H,YAAY9L,EAAE8H,OAAM,MAAKhP,KAAK,KACvE,SACE8C,KAAMyiC,EAAQziC,KACd1C,SACA0lC,KACEE,OAAQT,EAAQS,OAChBtnB,OAAQ,aAAatQ,EAAM,eAAe6Q,EAAM,UAKtDwnB,UAAW,SAAS5qB,EAAO0pB,GACzB,GAAIziC,GAAOyiC,EAAQziC,IACnB,OAAO,WAAWA,EAAI,oBAAoBA,EAAI,WAGhD4jC,WAAY,SAAS7qB,EAAO0pB,GAC1B,MAAOA,GAAQziC,KAAO4f,EAAAkkB,OAIT7oC,GAAAizB,QAAA8V,uECkBjB,SAAAE,GAAmCnrB,EAAkBorB,GACnD,GAAIC,MACAC,EAAkBtrB,EAAMK,OAAO8f,qBAE1BoL,GACP,IAAKH,EAAQ9kC,eAAeilC,mBAI5B,IAAIC,GAASJ,EAAQG,GACjBpR,EAAMmR,EAAgBE,EAAO76B,KAMjC,KAAK,GAAIrM,KAAO61B,GAGD,cAAR71B,GAAuBknC,EAAOj5B,QAAoB,WAARjO,GAAoBknC,EAAOC,WAItDtmC,SAAhBqmC,EAAOlnC,IAAsBknC,EAAOlnC,MAAS,IAC/CknC,EAAOlnC,GAAO61B,EAAI71B,IAAQknC,EAAOlnC,GAIrC,IAAIolC,GAAU2B,EAASE,GAAQzsB,EAAAjK,UAAW22B,GACxCvkC,KAAM+Y,EAAMyH,QAAQ8jB,GACpBpB,OAAQrrB,EAAApM,SAAS84B,EAAOvB,IAAMyB,EAAAvW,QAAcqW,EAAOvB,GAAI,SAAWuB,EAAOvB,GACzEjnB,OAAQ,OACRnW,QAAS,SAGX8+B,GAAAC,iBAAiBlC,EAAS,SAASmC,GAC7BA,EAAWtlC,OACbslC,EAAWtlC,MAAMyZ,EAAOwrB,EAAQ9B,KAjCtC,KAAK,GAAI6B,KAAQH,KAARG,EAsCT,OAAOF,GAGT,QAAAS,GAAoC9rB,EAAkB4G,GAgCpD,MA/BAmlB,GAAiB/rB,EAAO,SAAS0pB,EAASsC,GACxC,GAAI/kC,GAAOyiC,EAAQziC,KACf2jC,EAAYoB,EAAYpB,UAAU5qB,EAAO0pB,GACzCmB,EAAamB,EAAYnB,WAAW7qB,EAAO0pB,EAE/C9iB,GAAQphB,KAAK8D,MAAMsd,EAASolB,EAAYplB,QAAQ5G,EAAO0pB,IAEvDiC,EAAAC,iBAAiBlC,EAAS,SAASmC,GAC7BA,EAAWjlB,UACbA,EAAUilB,EAAWjlB,QAAQ5G,EAAO0pB,EAAS9iB,IAE3CilB,EAAWhB,aACbA,EAAagB,EAAWhB,WAAW7qB,EAAO0pB,EAASmB,MAIvDjkB,EAAQphB,MACNyB,KAAMA,EAAO/E,EAAA6oC,MACbd,KACEE,QAAS1pB,OAAQxZ,GACjB4b,OAAQ,wCAAwC+nB,EAAS,QAG3D3jC,KAAMA,EAAO/E,EAAA+pC,OACbhC,KACEE,QAAS1pB,OAAQxZ,GACjB4b,OAAQ,UAAU/D,EAAA3H,YAAYlQ,EAAO/E,EAAAgqC,OAAM,KAAKrB,EAAU,UAKzDjkB,EAGT,QAAAE,GAAwC9G,GACtC,GAAI4G,KACF3f,KAAM,OACN1C,SACA0lC,KAAME,OAAQ,YAAatnB,OAAQ,kCAerC,OAZAkpB,GAAiB/rB,EAAO,SAAS0pB,EAASsC,GACpCA,EAAYG,iBACdvlB,EAAQphB,KAAK8D,MAAMsd,EAASolB,EAAYG,gBAAgBnsB,EAAO0pB,IAGjEiC,EAAAC,iBAAiBlC,EAAS,SAASmC,GAC7BA,EAAWM,kBACbvlB,EAAUilB,EAAWM,gBAAgBnsB,EAAO0pB,EAAS9iB,QAKpDA,EAGT,QAAAwlB,GAAiCpsB,EAAkBtH,GACjD,MAAOA,GACJvK,OAAOhI,OAAOR,KAAKqa,EAAMuJ,UAAU4W,WACjCpwB,IAAI,SAASxH,GACZ,OAAQtB,KAAMsB,EAAIrG,EAAAgqC,UAI1B,QAAAG,GAAkCrsB,EAAkBkH,GAClD,GAAIolB,IAAe,EACfC,EAAWrlB,CA0Bf,OAzBA6kB,GAAiB/rB,EAAO,SAAS0pB,EAASsC,GACxCO,EAAWP,EAAY9kB,MAAQ8kB,EAAY9kB,MAAMlH,EAAO0pB,EAAS6C,GAAYA,EAC7EZ,EAAAC,iBAAiBlC,EAAS,SAASmC,GACjCS,EAAeA,GAAgBT,EAAWS,aACtCT,EAAW3kB,QACbqlB,EAAWV,EAAW3kB,MAAMlH,EAAO0pB,EAASxiB,EAAOqlB,QAKrDD,IACFC,IACE57B,KAAM,QACNiS,QACEooB,OACEnjB,OAAQ1U,OAAQ6f,MAAO,UACvBlL,QAAS3U,OAAQ6f,MAAO,WACxBuH,MAAOh2B,MAAO,eACdioC,MAAOjoC,OAAO,KAGlB2iB,MAAOqlB,KAIJA,EAYT,QAAAhM,GAA0BmJ,EAA6BzgB,GACrD,GAAMwjB,GAAQ3tB,EAAA3H,YAAYuyB,EAAQziC,KAAO/E,EAAAgqC,OACnC5+B,EAAKo/B,EAAehD,EAAQ78B,QAElC,OADAoc,GAAQA,GAAS,QACV0jB,EAASjD,GAASnJ,WAAY,IAAIkM,EAAK,iBAAiBxjB,EAAK,KAAK3b,EAAE,KAK7E,QAAAy+B,GAA0B/rB,EAAcqqB,GACtC,GAAIuC,GAAa5sB,EAAMuJ,UAAU4W,SACjC,KAAK,GAAI0M,KAAQD,GACf,GAAIA,EAAWtmC,eAAeumC,GAAO,CACnC,GAAIC,GAAMF,EAAWC,EACrBxC,GAAGyC,EAAKH,EAASG,KAKvB,QAAAH,GAAkBjD,GAChB,OAAQA,EAAQ/4B,MACd,IAAK,SACH,MAAOo8B,GAAA5X,OACT,KAAK,QACH,MAAO6X,GAAA7X,OACT,KAAK,WACH,MAAO8X,GAAA9X,QAEX,MAAO,MAGT,QAAA4U,GAAuB/pB,EAAkB0pB,EAA6BxsB,EAAkBiL,GACtF,GAAI9F,GAAQvD,EAAA3H,YAAY6I,EAAMsC,UAAUpF,GACxC,OAA0B,SAAnBwsB,EAAQ1mB,OAAoB,UAAUX,EAAK,KAAK8F,EAAI,IAAMA,EAGnE,QAAA0hB,GAAkCH,EAA6BxsB,GAC7D,MAAOwsB,GAAQziC,KAAO,IAAMiW,kDAvO9B,IAAA4B,GAAA1b,EAAA,cACAuoC,EAAAvoC,EAAA,2BACAsoC,EAAAtoC,EAAA,0CAEA2pC,EAAA3pC,EAAA,YACA4pC,EAAA5pC,EAAA,WACA6pC,EAAA7pC,EAAA,aAEalB,GAAAgqC,MAAQ,SACnBhqC,EAAA6oC,MAAS,SACT7oC,EAAA+pC,OAAS,UAkCX/pC,EAAAipC,mBAAAA,EA6CAjpC,EAAA4pC,oBAAAA,EAmCA5pC,EAAA4kB,wBAAAA,EAsBA5kB,EAAAkqC,iBAAAA,EAQAlqC,EAAAmqC,kBAAAA,CA+BA,IAAIK,IACFQ,OAAU,qBACVC,YAAe,sBACfC,MAAS,iBACTC,aAAgB,oBAChBC,UAAa,qBACbC,iBAAoB,uBAGtBrrC,GAAAq+B,UAAAA,EA+BAr+B,EAAA6nC,OAAAA,EAKA7nC,EAAA2nC,kBAAAA,0NC3OA,IAAAhjB,GAAAzjB,EAAA,eACA4pC,EAAA5pC,EAAA,WACA0b,EAAA1b,EAAA,cAEM8pC,GACJ3M,UAAWyM,EAAA7X,QAAMoL,UAEjB3Z,QAASomB,EAAA7X,QAAMvO,QAEfulB,gBAAiB,SAASnsB,EAAO0pB,GAC/B,GAAIziC,GAAOyiC,EAAQziC,IACnB,SACEA,KAAMA,EACN4b,OAAQ,QAAQ/D,EAAA3H,YAAYlQ,EAAO4f,EAAAqlB,OAAM,UAI7CtB,UAAW,SAAS5qB,EAAO0pB,GACzB,GAAIziC,GAAOyiC,EAAQziC,KAAMmc,EAAYnc,EAAI,SACzC,OAAO,WAAWA,EAAI,oBAAoBmc,EAAM,KAC9CsmB,EAAQC,QAAQ55B,IAAI,SAAS1E,EAAGhI,GAC9B,MAAUgI,GAAE8H,MAAK,KAAKiQ,EAAM,IAAI/f,EAAC,MAChCc,KAAK,OAGZ0mC,WAAY,SAAS7qB,EAAO0pB,GAC1B,MAAOA,GAAQziC,KAAO4f,EAAAkkB,MAAQ,UAIhB7oC,GAAAizB,QAAA+X,oFCelB,SAAApiC,GAAY7B,GACV,MAAO,IAAMA,EAAIJ,QAAQ,MAAO,qDA7ClC,IAAAiW,GAAA1b,EAAA,iBAEMoqC,GACJpnC,IAAK,SAASsjC,GACZ,MAAwB,WAAjBA,EAAQ/4B,MAAqB+4B,EAAQM,MAAyB,WAAjBN,EAAQM,MAG9DmC,gBAAiB,SAASnsB,EAAO0pB,EAAS9iB,GACxC,GAAI3f,GAAOyiC,EAAQziC,KACfikC,EAAOxB,EAAQC,QACfK,EAAON,EAAQM,KACf/gB,EAAQ,0CAcZ,OAZAiiB,GAAKz1B,QAAQ,SAASpK,GACpBub,EAAQ6mB,SACNxmC,KAAMA,EAAO6D,EAAGO,EAAE8H,OAClB5O,MAAO,GACP0lC,KACEE,OAAQT,EAAQS,OAChBtnB,OAAWoG,EAAK,IAAInK,EAAA3H,YAAY9L,EAAE8H,OAAM,MAE1C62B,KAAMA,EAAK3+B,EAAE8H,QAAU62B,EAAK3+B,EAAEwiB,WAAamc,MAIxCpjB,GAGTA,QAAS,SAAS5G,EAAO0pB,EAAS9iB,GAChC,GAAI3f,GAAOyiC,EAAQziC,KAAMikC,EAAOxB,EAAQC,QACpClpB,EAASmG,EAAQ1W,OAAO,SAAClN,GAAM,MAAAA,GAAEiE,OAASA,IAAM,GAChDsL,EAAS24B,EAAKn7B,IAAI,SAAC1E,GAAM,MAAAyT,GAAA3H,YAAY9L,EAAE8H,SAAQhP,KAAK,MACpDif,EAAS8nB,EAAKn7B,IAAI,SAAC1E,GAAM,MAAApE,GAAO6D,EAAGO,EAAE8H,SAAQhP,KAAK,KAMtD,OAJAsc,GAAOoC,OAAS,aAAatQ,EAAM,eAAe6Q,EAAM,WACjD3C,GAAOlc,YACPkc,GAAOwpB,GAEPrjB,GAIc1kB,GAAAizB,QAAAqY,0GCzCzB,IAAME,GAAU,UAEVC,GACJvnC,IAAK,SAASsjC,GACZ,MAA2BvkC,UAApBukC,EAAQiE,SAAyBjE,EAAQiE,WAAY,GAG9DzmB,MAAO,SAASlH,EAAO0pB,EAASxiB,EAAOqlB,GACrC,GAAI9uB,GAAOyJ,EAAM,GACb0mB,EAAQrB,EAAS9mC,QAAQgY,GACzBowB,EAAcpwB,EAAKxW,OAAS+Y,EAAMyH,QAAQ,aAC1CqmB,EAAS,SAAE9mC,GAAW,MAAAA,GAAEC,MAAQD,EAAEC,KAAKxB,QAAQioC,IAAY,GAC3DK,GACE9mC,KAAM+Y,EAAMyH,QAAQimB,GACpB/8B,KAAM,OACN+W,MAAOhP,KAAMsH,EAAMyH,QAAQ,UAC3B7E,QACEooB,OACEzQ,MAAOh2B,MAAO,eACdkvB,aAAclvB,MAAO,KACrB8uB,QAAS9uB,MAAO,eAChBypC,WAAYzpC,OAAO,KAGvBikB,YACE7X,KAAM,UACN1K,EAAG,UACHuH,EAAG,UACH2H,OAAQsL,OAAQ,UAAWA,OAAQ,aAW3C,OAPIotB,KAAgBpwB,EAAKyJ,MAAMhX,OAAO49B,GAAQpqC,QAC5C+Z,EAAKyJ,MAAM1hB,KAAKuoC,GAChBxB,EAASxmC,OAAO6nC,EAAO,EAAGnwB,IAChBowB,GAAgBtB,EAASr8B,OAAO49B,GAAQpqC,QAClD6oC,EAASxmC,OAAO6nC,EAAQ,EAAG,EAAGG,GAGzBxB,GAIQrqC,GAAAizB,QAAAwY,wFCzCnB,IAAMhE,IACJvjC,IAAK,SAASolC,GACZ,MAAyBrmC,UAAlBqmC,EAAOj5B,QAA6CpN,SAArBqmC,EAAOC,WAG/CllC,MAAO,SAASyZ,EAAOwrB,EAAQ9B,GAC7B,GAAIn3B,OAEHi5B,EAAOj5B,YAAckD,QAAQ,SAACxT,GAAM,MAAAsQ,GAAOtQ,GAAK,QAChDupC,EAAOC,eAAiBh2B,QAAQ,SAAC7S,GAAe,MAAA2P,GAAOyN,EAAM7M,MAAMvQ,IAAMA,GAE1E,IAAIqrC,GAAavE,EAAQC,UAAYD,EAAQC,WAC7C,KAAK,GAAIx2B,KAASZ,GACZA,EAAOjM,eAAe6M,IACxB86B,EAAWzoC,MAAM2N,MAAOA,EAAO0a,SAAUtb,EAAOY,MAMrCjR,GAAAizB,QAAAwU,uCCoCnB,SAAA3mB,GAAuBhD,EAAkB9C,GACvC,GAAImF,GAAQvD,EAAA3H,YAAY6I,EAAMsC,UAAUpF,GACxC,OAAO,UAAUmF,EAAK,oDA7DxB,IAAAioB,GAAAlnC,EAAA,gBACAic,EAAAjc,EAAA,kBAEAyjB,EAAAzjB,EAAA,gBAEA6pC,EAAA7pC,EAAA,eACA0b,EAAA1b,EAAA,iBAEM8qC,GACJ5B,cAAc,EAEdlmC,IAAK,SAASsjC,GACZ,MAAwB,aAAjBA,EAAQ/4B,MAAuB+4B,EAAQM,MAAyB,WAAjBN,EAAQM,MAGhEzjC,MAAO,SAASyZ,EAAOwrB,EAAQ9B,GAC7B,GAAItV,GAASpU,EAAMuJ,UAAU6K,OACzB+Z,EAAkBzE,EAAQtV,SAE9BsV,GAAQC,QAAQl0B,QAAQ,SAASpK,GAC/B,GAAI6R,GAAU7R,EAAEwiB,SACZxL,EAAQ+R,EAAOlX,IAAYkX,EAAOlX,GAASzF,IAE/C,OAAK4K,IAAUhD,EAAAob,oBAAoBpY,EAAM1R,OAKzC0R,EAAM+rB,WAAa3tB,OAAQoG,EAAAgjB,kBAAkBH,EAASxsB,QACtDixB,GAAM3oC,KAAK0X,QALTotB,GAAAp2B,KAAK,sFASXi4B,gBAAiB,SAASnsB,EAAO0pB,EAAS9iB,GACxC,MAAOA,GAAQzY,OAAOu7B,EAAQtV,OAAOrkB,IAAI,SAACmN,GACxC,OAAQjW,KAAM4f,EAAAgjB,kBAAkBH,EAASxsB,QAI7C0J,QAAS,SAAS5G,EAAO0pB,EAAS9iB,GAChC,GAAI3f,GAAOyiC,EAAQziC,IAanB,OAZA2f,GAAUA,EAAQ1W,OAAO,SAASlN,GAChC,MAAOA,GAAEiE,OAASA,EAAOgmC,EAAA3vB,MACvBta,EAAEiE,OAASA,EAAO4f,EAAAkkB,OAAS/nC,EAAEiE,OAAS4f,EAAAolB,SAG1CvC,EAAQtV,OAAO3e,QAAQ,SAASyH,GAC9B,GAAIuD,GAASmG,EAAQ1W,OAAO,SAAClN,GAAM,MAAAA,GAAEiE,OAASA,EAAO,IAAMiW,IAAS,EACpEuD,GAAOjb,KAAO,cACPib,GAAOlc,YACPkc,GAAOoC,SAGT+D,GAIc1kB,GAAAizB,QAAA+Y,EAEzBhsC,EAAA8gB,OAAAA,mLC3DA,IAAA6D,GAAAzjB,EAAA,gBAEMirC,EAAS,UAETC,GACJloC,IAAK,SAASsjC,GACZ,MAA0BvkC,UAAnBukC,EAAQ4E,QAAwB5E,EAAQ4E,UAAW,GAG5D1nB,QAAS,SAAS5G,EAAO0pB,EAAS9iB,GAChC,MAAOA,GAAQzY,QACblH,KAAMyiC,EAAQziC,KAAOonC,EACrB9pC,OAAO,EACP0lC,KAAME,OAAQT,EAAQS,OAAQtnB,OAAQ6mB,EAAQ4E,YAIlDzD,WAAY,SAAS7qB,EAAO0pB,EAASvhB,GACnC,GAAI2iB,GAAMpB,EAAQziC,KAAO4f,EAAAkkB,MACrBtqB,EAASipB,EAAQziC,KAAOonC,CAE5B,OAAU5tB,GAAM,aAAaqqB,EAAG,MAC3BrqB,EAAM,qBACNA,EAAM,MAAMqqB,EAAG,YAIN5oC,GAAAizB,QAAAmZ,wDCDlB,SAAA1C,GAAiClC,EAA6BW,GAC5D,IAAK,GAAIxnC,KAAK0rC,GACRA,EAAU1rC,GAAGuD,IAAIsjC,IACnBW,EAAGkE,EAAU1rC,oDAbnB,IAAA2rC,GAAAprC,EAAA,aACAqrC,EAAArrC,EAAA,YACAsrC,EAAAtrC,EAAA,eACAurC,EAAAvrC,EAAA,UACA8mC,EAAA9mC,EAAA,YACAwrC,EAAAxrC,EAAA,YACAyrC,EAAAzrC,EAAA,aACMmrC,GAAsC5E,QAAO6E,EAAArZ,QAAEmZ,OAAMG,EAAAtZ,QAAEf,OAAM8V,EAAA/U,QACjEuV,UAASgE,EAAAvZ,QAAE2Z,KAAIH,EAAAxZ,QAAE4Z,OAAMH,EAAAzZ,QAAEwY,QAAOkB,EAAA1Z,QAElCjzB,GAAA0pC,iBAAAA,2ICuCA,SAAAoD,GAAiBtF,EAA6BxsB,GAC5C,GAAIla,GAAIka,IAAYC,EAAAQ,EAAI,IAAM,GAI9B,OAHIusB,GAAA/U,QAAe/uB,IAAIsjC,KACrB1mC,EAAU,MAANA,EAAY,IAAM,KAEjBA,EAGT,QAAAisC,GAAiBjvB,EAAkB0pB,EAA6BxsB,EAAkB/H,EAAcyR,GAC9F,GAAI3f,GAAOyiC,EAAQziC,KACfwZ,EAAamG,EAAQ1W,OAAO,SAAClN,GAAU,MAAAA,GAAEiE,OAASA,EAAO,IAAMiW,IAAS,GACxEgyB,EAASjoC,EAAOkoC,EAChBC,EAASnoC,EAAOooC,EAChBhtB,EAASvD,EAAA3H,YAAY6I,EAAMsC,UAAUpF,IACrCuL,EAAS,WAAWvL,EACpBoyB,EAAON,EAAQtF,EAASxsB,GACxB6S,EAAYuf,EAAI,aAAaJ,EAASzmB,EAAM,SACvC2mB,EAAK,IAAIlyB,EAAO,MAAMgyB,EAAM,IAAI/5B,GACrC+W,EAAQ,IAAIgjB,EAASzmB,EAAM,OAAOsH,EAAM,MACtC,GAAGmf,EAASzmB,EAAM,OAAOsH,EAAM,KACjCwf,EAAK,UAAUltB,GAAWnF,IAAYC,EAAAQ,EAAI,MAAQ,UAAUxI,GAAU,IACtEq6B,EAAK,UAAUntB,GAAWnF,IAAYC,EAAAQ,EAAI,UAAUxI,EAAS,OAAS,GAE1EsL,GAAOwpB,GAAGzkC,MACR2kC,QAAS1pB,OAAQ2uB,GACjBvsB,OAAQqnB,EAAA/U,QAAe/uB,IAAIsjC,GAAWxd,EAAQ,cAAcA,EAAK,KAAKqjB,EAAE,KAAKC,EAAE,sDA3FnF,IAAA9D,GAAAtoC,EAAA,0CAGA+Z,EAAA/Z,EAAA,oBACA0b,EAAA1b,EAAA,iBAEA8mC,EAAA9mC,EAAA,YACA6pC,EAAA7pC,EAAA,eAEM+rC,EAAS,oBACTE,EAAS,mBAET3E,GACJtkC,IAAK,SAASsjC,GACZ,MAAwB,aAAjBA,EAAQ/4B,MAA6CxL,SAAtBukC,EAAQgB,WAA2BhB,EAAQgB,aAAc,GAGjG9jB,QAAS,SAAS5G,EAAO0pB,EAAS9iB,GAC5B,GAAA3f,GAAOyiC,EAAQziC,KACfmtB,EAAS8V,EAAA/U,QAAe/uB,IAAIsjC,GAC5Bv0B,EAAOif,EAAS,OAASntB,EAAOgmC,EAAA3vB,KAChC4xB,EAASjoC,EAAOkoC,EAChBhF,EAASuB,EAAAvW,QAAcuU,EAAQgB,UAAW,SAC1Cpc,EAAA2e,EAAAxD,YAAAC,GAACzjC,EAAAqoB,EAAAroB,EAAGuH,EAAA8gB,EAAA9gB,CAqCR,OAnCK4mB,KACH+V,EAASA,EAAOp6B,IAAI,SAACnN,GAAM,MAACA,GAAEoN,QAAQ,GAAGK,SAAWpJ,EAAOgmC,EAAA1C,MAAgB3nC,KAG7EgkB,EAAQphB,MACNyB,KAAMioC,EACN3qC,SACA0lC,KACEE,OAAQA,EAAOp6B,IAAI,SAACnN,GAAM,MAAAA,GAAEoN,QAAQ,KACpC6S,OAAQ,6BACN,UAAU1N,EAAI,mBAAmBA,EAAI,cAE9B,OAANlP,EAAa,cAAgBmuB,EAAS8V,EAAAlnB,OAAOhD,EAAO7C,EAAAQ,GACjD,SAAS1W,EAAI,OAAS,KAAO,KAE1B,OAANuG,EAAa,cAAgB4mB,EAAS8V,EAAAlnB,OAAOhD,EAAO7C,EAAAS,GACjD,SAAS3W,EAAI,OAAS,KAAO,IAAM,QAG3CA,KAAMA,EAAOooC,EACb9qC,SACA0lC,KACEE,OAAQA,EACRtnB,OAAQ,iBAAiBqsB,EAAM,oBAAoBA,EAAM,UAInD,OAANjpC,GACFgpC,EAAQjvB,EAAO0pB,EAASvsB,EAAAQ,EAAG,QAASiJ,GAG5B,OAANpZ,GACFyhC,EAAQjvB,EAAO0pB,EAASvsB,EAAAS,EAAG,SAAUgJ,GAGhCA,GAIU1kB,GAAAizB,QAAAuV,yJCKrB,SAAAuE,GAAiBjvB,EAAkB0pB,EAA6BxsB,EAAkB/H,EAAcyR,GAC9F,GAAI3f,GAAOyiC,EAAQziC,KACfwZ,EAAamG,EAAQ1W,OAAO,SAAClN,GAAU,MAAAA,GAAEiE,OAASA,EAAO,IAAMiW,IAAS,GACxEkX,EAAS8V,EAAA/U,QAAe/uB,IAAIsjC,GAC5B+F,EAAOrb,EAAS8V,EAAAlnB,OAAOhD,EAAO9C,GAAWuD,EAAOxZ,KAChDioC,EAAS,GAAGjoC,EAAOkoC,EAAM,IAAIjyB,EAC7BkyB,EAASnoC,EAAOooC,EAChBhtB,EAASvD,EAAA3H,YAAY6I,EAAMsC,UAAUpF,IACrCgP,EAAS,IAAIgjB,EAAM,OAAOO,EAAI,SAASP,EAAM,OAAOE,EAAK,MACpDF,EAAM,OAAOO,EAAI,SAASP,EAAM,OAAOE,EAAK,KACjDG,EAAK,UAAUltB,GAAWnF,IAAYC,EAAAQ,EAAI,MAAQ,UAAUxI,GAAU,IACtEq6B,EAAK,UAAUntB,GAAWnF,IAAYC,EAAAQ,EAAI,UAAUxI,EAAS,OAAS,GAE1EsL,GAAOwpB,GAAGzkC,MACR2kC,QAAS1pB,OAAQ2uB,GACjBvsB,OAAQuR,EAASlI,EAAQ,cAAcA,EAAK,KAAKqjB,EAAE,KAAKC,EAAE,sDApF9D,IAAA9D,GAAAtoC,EAAA,0CAGA+Z,EAAA/Z,EAAA,oBACA0b,EAAA1b,EAAA,iBAEA8mC,EAAA9mC,EAAA,YACA6pC,EAAA7pC,EAAA,eAEM+rC,EAAS,eACTE,EAAS,cAETP,GACJ1oC,IAAK,SAASsjC,GACZ,MAAwB,aAAjBA,EAAQ/4B,MAAwCxL,SAAjBukC,EAAQoF,MAAsBpF,EAAQoF,QAAS,GAGvFloB,QAAS,SAAS5G,EAAO0pB,EAAS9iB,GAChC,GAAI3f,GAAOyiC,EAAQziC,KACfmoC,EAAQnoC,EAAOooC,EACflF,EAASuB,EAAAvW,QAAcuU,EAAQoF,KAAM,SACrCxgB,EAAA2e,EAAAxD,YAAAC,GAACzjC,EAAAqoB,EAAAroB,EAAGuH,EAAA8gB,EAAA9gB,EACJkiC,EAAK5wB,EAAA3H,YAAY6I,EAAMsC,UAAUnF,EAAAQ,IACjCgyB,EAAK7wB,EAAA3H,YAAY6I,EAAMsC,UAAUnF,EAAAS,GAEhCssB,GAAA/U,QAAe/uB,IAAIsjC,KACtBS,EAASA,EAAOp6B,IAAI,SAACnN,GAAM,MAACA,GAAEyN,SAAWpJ,EAAOgmC,EAAA1C,MAAgB3nC,KAGlEgkB,EAAQphB,MACNyB,KAAMA,EAAOkoC,EACblF,KACEE,OAAQA,EACRtnB,OAAQ,cAAc6sB,EAAE,yBAAyBC,EAAE,kBAGrD1oC,KAAMmoC,EACNnF,KACEE,OAAQA,EACRyF,OAAO,EACP/sB,OAAQ,0DAIF,OAAN5c,GACFgpC,EAAQjvB,EAAO0pB,EAAS,IAAK,QAAS9iB,GAG9B,OAANpZ,GACFyhC,EAAQjvB,EAAO0pB,EAAS,IAAK,SAAU9iB,EAGzC,IAAIzR,GAAOyR,EAAQ1W,OAAO,SAAClN,GAAU,MAAAA,GAAEiE,OAASA,EAAOgmC,EAAA3vB,MACvD,IAAInI,EAAKzR,OAAQ,CACf,GAAImsC,GAAQ16B,EAAK,GAAGlO,IACpBkO,GAAK,GAAG80B,GAAGzkC,MACT2kC,QAAS1pB,OAAQ2uB,GACjBvsB,OAAQ,OAAOgtB,EAAK,UAAUA,EAAK,QACjC,UAAUA,EAAK,YAAYT,EAAK,QAChC,WAAWS,EAAK,aAAaT,EAAK,OAIxC,MAAOxoB,IAIK1kB,GAAAizB,QAAA2Z,4NCjEhBvsB,EAAAnf,EAAA,WACA+Z,EAAA/Z,EAAA,cACAywB,EAAAzwB,EAAA,aACAukB,EAAAvkB,EAAA,WACAsqB,EAAAtqB,EAAA,eACA0sC,EAAA1sC,EAAA,eACAwgB,EAAAxgB,EAAA,eAEA8zB,EAAA9zB,EAAA,WACAic,EAAAjc,EAAA,YAEA0b,EAAA1b,EAAA,WAGAopB,EAAAppB,EAAA,gBACAud,EAAAvd,EAAA,YACA+zB,EAAA/zB,EAAA,eACA6wB,EAAA7wB,EAAA,kBACA0wB,EAAA1wB,EAAA,YACA2wB,EAAA3wB,EAAA,WACA2sC,EAAA3sC,EAAA,eACA4wB,EAAA5wB,EAAA,gBACA4sC,EAAA5sC,EAAA,iBACAwnB,EAAAxnB,EAAA,YAEAyjB,EAAAzjB,EAAA,yBACA6sC,EAAA7sC,EAAA,eAKA8hB,EAAA,SAAAgP,GA0BE,QAAAhP,GAAYX,EAAgBzf,EAAe0f,GAA3C,GAAA2P,GACED,EAAAzwB,KAAAf,KAAM6hB,EAAMzf,EAAQ0f,IAAgB9hB,IATnByxB,GAAAgM,aACAhM,EAAAC,UACAD,EAAAzB,QACAyB,EAAAE,WAGZF,EAAA1K,WAQL,IAAMymB,GAA+B/qC,SAAfof,EAAKsD,MAAsBtD,EAAKsD,MACpD/iB,EAASA,EAAc,MAAIK,OACvBgrC,EAAiChrC,SAAhBof,EAAKuD,OAAuBvD,EAAKuD,OACtDhjB,EAASA,EAAe,OAAIK,OAExBsY,EAAOyZ,EAAA+F,UAAU1Y,EAAK9G,MAAQ8G,EAAK9G,KAAK9M,KAAO4T,EAAK9G,KACpDoQ,EAAWsG,EAAKtG,SAAWH,EAAA0iB,qBAAqB3yB,EAAM8G,EAAKsJ,cAG3DxN,EAAS8T,EAAK9T,OAAS8T,EAAKI,WAAWhQ,EAAKlE,OAAQvb,EAG1DqvB,GAAKxJ,MAAQC,EAAAD,MAAMlN,EAAMoQ,EAAUxN,EAAOsK,OAC1CwJ,EAAKC,OAASD,EAAKkc,WAAW5yB,EAAMoQ,EAAUxN,EAAQ6vB,EAAeC,GAErEhc,EAAKpG,QAAUkiB,EAAAjT,YAAYzY,EAAK9G,KAAMoQ,EAAUsG,EAAKC,OAAQ/T,GAC7D8T,EAAKtG,SAAWoiB,EAAA7S,aAAa3f,EAAMoQ,EAAUsG,EAAKxJ,MAAOtK,GAEzD8T,EAAKzB,KAAOyB,EAAKmc,SAASziB,EAAUxN,GACpC8T,EAAKE,QAAUF,EAAKoc,WAAW1iB,EAAUxN,GAGzC8T,EAAKgM,UAAY5b,EAAK4b,SAGhB,IAAA7R,GAAA6F,EAAAqc,SAAA/yB,EAAA0W,EAAAC,OAAA8b,EAAAC,EAAA9vB,EAAA2H,KAAA3H,EAAAgC,OAACkM,EAAAD,EAAAzG,MAAAA,EAAA,SAAA0G,EAAA4F,EAAAtM,MAAA0G,EAAoBC,EAAAF,EAAAxG,OAAAA,EAAA,SAAA0G,EAAA2F,EAAArM,OAAA0G,QAK3B2F,GAAKtM,MAAQA,EACbsM,EAAKrM,OAASA,IA2PlB,MA1T+B6M,GAAA/qB,UAAAsb,EAAAgP,GAsErBhP,EAAA7e,UAAAkuB,WAAR,SAAmBK,EAAoB9vB,GAGrC,IAFA,GAAIub,GAASvB,EAAA+V,UAAU/V,EAAAgW,UAAUjB,EAAAkB,eAAgBjwB,EAASA,EAAOub,UAAauU,GAC1E6b,GAAiB,EACH,OAAX3rC,GAAiB,CACtB,GAAIA,EAAOkyB,UAAW,CACpByZ,GAAiB,CACjB,OAEF3rC,EAASA,EAAOA,OAMlB,MAHI2rC,KACFpwB,EAAO2H,KAAOlJ,EAAAjK,UAAWwL,EAAO2H,KAAM3H,EAAO0R,MAAM/J,OAE9C3H,GAGD6E,EAAA7e,UAAAgqC,WAAR,SAAmB5yB,EAAYoQ,EAAoBxN,EAAgBqwB,EAAsBC,GACvF,GAAMnL,KAEN,OAAOroB,GAAAqC,oBAAoB+B,OAAO,SAAC6S,EAAQlX,GACzC,GAAI4yB,EAAWliB,gBAAgBC,EAAU3Q,IACpCA,IAAYC,EAAAQ,GAAKmyB,EAAWliB,gBAAgBC,EAAU1Q,EAAAuB,KACtDxB,IAAYC,EAAAS,GAAKkyB,EAAWliB,gBAAgBC,EAAU1Q,EAAAwB,IACvD,CACF,GAAM0D,GAAQ+R,EAAOlX,GAAW8W,EAAAmB,QAC9BjY,EAAS2Q,EAAS3Q,GAAUmD,EAAQ5C,EACpCP,IAAYC,EAAAQ,EAAI+yB,EAAgBxzB,IAAYC,EAAAS,EAAI+yB,EAAiBxrC,OACjEqgC,EAGEtoB,KAAYC,EAAAQ,GAAKT,IAAYC,EAAAS,GAC3ByE,EAAMqW,WACR8M,EAAahgC,KAAK6c,EAAMqW,WAI9B,MAAOtE,SAOHlP,EAAA7e,UAAAmqC,SAAR,SAAiB/yB,EAAY4E,EAAoBwF,EAAeC,EAAgBgQ,EAAwB+L,GACtG,GAAc1+B,SAAV0iB,EACF,GAAIxF,EAAMlF,EAAAQ,GACH0B,EAAAyJ,kBAAkBzG,EAAMlF,EAAAQ,GAAGhN,OAAU0R,EAAMlF,EAAAQ,GAAG+a,YACjD7Q,EAAQiQ,EAAWjQ,WAGrB,IAAIpK,IAASyZ,EAAAtY,KAEXiJ,EAAQgc,EAAYvC,mBACf,CACL,GAAqC,gBAA1BuC,GAAYnL,UACrB,KAAM,IAAIp1B,OAAM,8CAElBukB,GAAQgc,EAAYnL,UAK1B,GAAevzB,SAAX2iB,EACF,GAAIzF,EAAMlF,EAAAS,GACHyB,EAAAyJ,kBAAkBzG,EAAMlF,EAAAS,GAAGjN,OAAU0R,EAAMlF,EAAAS,GAAG8a,YACjD5Q,EAASgQ,EAAWhQ,YAEjB,CACL,GAAqC,gBAA1B+b,GAAYnL,UACrB,KAAM,IAAIp1B,OAAM,8CAElBwkB,GAAS+b,EAAYnL,UAIzB,OAAQ7Q,MAAKA,EAAEC,OAAMA,IAGf5C,EAAA7e,UAAAiqC,SAAR,SAAiBziB,EAAoBxN,GACnC,OAAQlD,EAAAQ,EAAGR,EAAAS,GAAG2D,OAAO,SAAS6T,EAAOlY,GAGnC,GAAM4iB,GAAajS,EAAS3Q,EAC5B,IAAI0G,EAAAmY,WAAW+D,IACV5iB,IAAYC,EAAAQ,GAAKiG,EAAAmY,WAAWlO,EAASuF,KACrClW,IAAYC,EAAAS,GAAKgG,EAAAmY,WAAWlO,EAAS+F,IAAM,CAE9C,GAAMyB,GAAWzR,EAAAmY,WAAW+D,GAAcA,EAAW1f,KAAO,IAG5D,IAAiB,OAAbiV,GAAqBA,KAAa,EAAO,CAC3C,GAAIC,KACJ/S,GAAAvF,wBAAwBvH,QAAQ,SAAS+M,GACTrd,SAA1Bkb,EAAOD,KAAKoC,KACd8S,EAAqB9S,GAAYnC,EAAOD,KAAKoC,MAGjD4S,EAAMlY,GAAQyX,EAAA9qB,YACTyrB,EACAD,IAIT,MAAOD,SAIHlQ,EAAA7e,UAAAkqC,WAAR,SAAmB1iB,EAAoBxN,GACrC,MAAOlD,GAAAwC,0BAA0B4B,OAAO,SAASqvB,EAAS1zB,GACxD,GAAM4iB,GAAajS,EAAS3Q,EAC5B,IAAI0G,EAAAmY,WAAW+D,GAAa,CAC1B,GAAM+Q,GAAa/Q,EAAW/W,MACX,QAAf8nB,GAAuBA,KAAe,IACxCD,EAAQ1zB,GAAQyX,EAAA9qB,YAAOgnC,IAG3B,MAAOD,SAIJ1rB,EAAA7e,UAAAsvB,UAAP,WACEjzB,KAAK6mB,UAAU7Q,KAAOye,EAAAxN,cAAcjnB,OAG/BwiB,EAAA7e,UAAAuvB,eAAP,WACElzB,KAAK6mB,UAAU4W,UAAYtZ,EAAAskB,mBAAmBzoC,KAAMA,KAAKy9B,YAGpDjb,EAAA7e,UAAAwvB,gBAAP,WACEnzB,KAAK6mB,UAAUuM,OAAShC,EAAAuE,gBAAgB31B,OAGnCwiB,EAAA7e,UAAA2vB,WAAP,WACEtzB,KAAK6mB,UAAU6K,OAAS4b,EAAA7a,QAAoBzyB,OAGvCwiB,EAAA7e,UAAA+vB,UAAP,WACE1zB,KAAK6mB,UAAU9L,KAAOsyB,EAAA3Z,UAAU1zB,OAG3BwiB,EAAA7e,UAAA6b,UAAP,WACExf,KAAK6mB,UAAUmJ,KAAOlG,EAAAnL,mBAAmB3e,MAAOya,EAAAQ,EAAGR,EAAAS,KAG9CsH,EAAA7e,UAAAgwB,eAAP,WACE,MAAO,OAGFnR,EAAA7e,UAAAowB,eAAP,WACE,MAAO,OAGFvR,EAAA7e,UAAAswB,YAAP,WACEj0B,KAAK6mB,UAAU8K,QAAUJ,EAAA2G,qBAAqBl4B,OAGzCwiB,EAAA7e,UAAAuwB,gBAAP,SAAuBhQ,GACrB,MAAOC,GAAAilB,oBAAoBppC,KAAMkkB,IAG5B1B,EAAA7e,UAAA4gB,sBAAP,SAA6BvO,GAC3B,MAAOmO,GAAAulB,iBAAsB1pC,KAAMgW,IAG9BwM,EAAA7e,UAAA0gB,aAAP,SAAoBrO,GAClB,MAAOye,GAAApQ,aAAarkB,KAAMgW,IAGrBwM,EAAA7e,UAAA2gB,eAAP,SAAsB6P,GACpB,MAAO/C,GAAA9M,eAAetkB,KAAMm0B,IAGvB3R,EAAA7e,UAAAywB,cAAP,WACE,MAAOjQ,GAAAwlB,kBAAuB3pC,KAAMA,KAAK6mB,UAAU9L,OAG9CyH,EAAA7e,UAAA0hB,8BAAP,SAAqC+P,GACnC,MAAOnX,GAAAyE,eAAgB0S,EAAYZ,EAAAa,mBAAmB5pB,QAAQ,WAGzD+W,EAAA7e,UAAAsmB,SAAP,WACE,MAAOxP,GAAAoC,eAGC2F,EAAA7e,UAAA0wB,WAAV,WACE,MAAOr0B,MAAKmrB,UAGP3I,EAAA7e,UAAAyqC,OAAP,SAAcC,EAAqBC,GACjC,GACIzsB,GADEsJ,EAAW/O,EAAAgW,UAAUpyB,KAAKmrB,SAiBhC,OAdAtJ,IACE9G,KAAM/a,KAAKqrB,QACXF,SAAUA,GAGPkjB,IACHxsB,EAAKlE,OAASvB,EAAAgW,UAAUpyB,KAAK2d,SAG1B2wB,IACHzsB,EAAK7L,KAAOoG,EAAAgW,UAAUpyB,KAAKgW,OAItB6L,GAGFW,EAAA7e,UAAAoX,KAAP,WACE,MAAO/a,MAAKqrB,QAAQpd,MAGfuU,EAAA7e,UAAAunB,gBAAP,SAAuB1Q,GACrB,MAAO4yB,GAAWliB,gBAAgBlrB,KAAKmrB,SAAU3Q,IAG5CgI,EAAA7e,UAAA8Z,SAAP,SAAgBjD,GAGd,MAAOxa,MAAKmrB,SAAS3Q,QAIhBgI,EAAA7e,UAAA8M,MAAP,SAAa+J,EAAkB0iB,GAAA,SAAAA,IAAAA,KAC7B,IAAMzf,GAAWzd,KAAKyd,SAASjD,EAQ/B,OANIiD,GAASxI,MACXioB,EAAM9gB,EAAAjK,QACJsR,UAAW9G,EAAAyJ,kBAAkBpmB,KAAK2f,MAAMnF,GAASvM,MAAQ,QAAU,SAClEivB,IAGEhc,EAAAzQ,MAAMgN,EAAUyf,IAGlB1a,EAAA7e,UAAAglB,UAAP,WACE,MAAO3oB,MAAKuoB,SAAS6kB,EAAW5hB,YAAYxrB,KAAKmrB,UAAYlG,EAAAkI,QAAUlI,EAAAuD,SAGlEhG,EAAA7e,UAAAk9B,OAAP,WACE,OAAO,GAEXre,GA1T+B6O,EAAAkD,MAAlB/0B,GAAAgjB,UAAAA,iYCnBb,SAAA+rB,GAAoBxzB,EAAcyzB,GAChCC,EAAmB1zB,GAAQyzB,EAG7B,QAAAE,GAAuB3zB,SACd0zB,GAAmB1zB,GAM5B,QAAA8I,GAEIhC,GAGF,GAAM9G,GAAOyZ,EAAA+F,UAAU1Y,EAAK9G,MAAQ8G,EAAK9G,KAAK9M,KAAO4T,EAAK9G,KACpDyzB,EAAaC,EAAmB1zB,EACtC,IAAIyzB,EACF,MAAOA,GAAW3sB,EAGpB,MAAM,IAAIjhB,OAAM,+BAA+Bma,qEAnCjDyZ,EAAA9zB,EAAA,SAGalB,GAAAmvC,SAAwB,WAQrC,IAAMF,KAENjvC,GAAA+uC,IAAAA,EAIA/uC,EAAAkvC,OAAAA,EAOAlvC,EAAAqkB,UAAAA,EAeA0qB,EAAI/uC,EAAAmvC,SAAU,SAAC9sB,GACN,GAAUsJ,IAAVtJ,EAAA9G,KAAU8G,EAAAsJ,UAAoByjB,EAAA3c,EAAA7qB,OAAAya,GAAA,OAAA,aACpBgtB,GAAV1jB,EAAA1Y,KAAUwf,EAAA7qB,OAAA+jB,GAAA,UACQ2jB,GAAlB3jB,EAAAuF,GAASvF,EAAA+F,GAASe,EAAA7qB,OAAA+jB,GAAA,KAAA,OAEzB,OAAM8G,GAAA9qB,YACDynC,GACHja,QAEI5Z,KAAM,OACNoQ,SAAU0jB,IAEV9zB,KAAM,OACNoQ,SAAU2jB,IAEV/zB,KAAM,OACNoQ,SAAQ8G,EAAA9qB,YACH2nC,EACC3jB,EAASuF,IAAMntB,EAAG4nB,EAASuF,OAC3BvF,EAAS+F,IAAMpmB,EAAGqgB,EAAS+F,uHC3DzC,IAAArR,GAAAnf,EAAA,UACA43B,EAAA53B,EAAA,YAEAqa,EAAAra,EAAA,UACAic,EAAAjc,EAAA,WAIAyjB,EAAAzjB,EAAA,cAiCalB,GAAAuvC,mBACX5pB,MAAO,IACPC,OAAQ,IACRyS,KAAM,eAGKr4B,EAAAwvC,wBACXre,OAAQ,OACRI,YAAa,EAoBf,IAAMke,IACJre,MAAO,UACPE,QAAS,GACTzD,OAAQ,EAGG7tB,GAAA0vC,oBACXxxB,QACAuB,KAAMgwB,EACN3pB,KAAM9lB,EAAAwvC,wBA2BKxvC,EAAA2vC,sBACXrzB,MAAM,EACNszB,YAAa1X,QAAQ,GACrB2X,cAkHW7vC,EAAA6yB,eACX3N,QAAS,EACT9D,aAAc,IACdtC,WAAY,YACZgxB,WAAY,oBAEZhqB,KAAM9lB,EAAAuvC,kBAENh0B,KAAMA,EAAKw0B,kBACXxzB,QACAH,IAAKb,EAAKy0B,iBACV9zB,UACAI,QACAP,SACAM,QACAJ,QACAE,UACA3X,KAAM+W,EAAK00B,kBACXj0B,KAAMT,EAAK20B,kBAEXC,QAASnwC,EAAA2vC,qBACTxvB,MAAOhD,EAAAizB,mBACPlyB,KAAMmC,EAAA1F,kBACNkM,OAAQiS,EAAAuX,oBAERxgB,MAAO7vB,EAAA0vC,mBAEPzR,UAAWtZ,EAAAkO,uHClLb,SAAAxI,GAA0B7T,GACxB,QAASA,EAAU,IAGrB,QAAA+V,GAA6B/V,GAC3B,QAASA,EAAa,OAGxB,QAAAsW,GAA4BtW,GAC1B,QAASA,EAAW,sDATtBxW,EAAAqqB,UAAAA,EAIArqB,EAAAusB,aAAAA,EAIAvsB,EAAA8sB,YAAAA,EAMa9sB,EAAA2tB,QAAqB,UACrB3tB,EAAAgpB,OAAmB,SACnBhpB,EAAA0tB,QAAqB,UACrB1tB,EAAA0lB,OAAmB,8CCwBhC,SAAA3D,GAA2BhhB,GACzB,SAASA,IAAQA,EAAEuvC,MAAUvvC,EAAEwvC,SAAaxvC,EAAEyvC,OAAWzvC,EAAE0vC,MAAU1vC,EAAE2vC,KACnE3vC,EAAE4vC,OAAW5vC,EAAE6vC,SAAa7vC,EAAE8vC,SAAa9vC,EAAE+vC,eASnD,QAAAC,GAA0B7kC,GACxB,GAAI0Q,EAAAjJ,SAASzH,GAKX,MAJIA,GAAI,GACNuE,EAAIuB,KAAKvB,EAAIzL,QAAQgsC,gBAAgB,UAAW9kC,IAG1CA,EAAI,EAAK,EAGjB,MAAM,IAAI9K,OAAMqP,EAAIzL,QAAQgsC,gBAAgB,UAAW9kC,IAI3D,QAAA+kC,GAAwBnsC,GACtB,GAAI8X,EAAAjJ,SAAS7O,GAEX,MAAQA,GAAI,EAAK,EAEjB,IAAMosC,GAASpsC,EAAEqsC,cACXC,EAAapxC,EAAAqxC,OAAO9tC,QAAQ2tC,EAClC,IAAIE,KAAe,EACjB,MAAOA,GAAa,EAEtB,IAAME,GAASJ,EAAOviB,OAAO,EAAG,GAC1B4iB,EAAkBvxC,EAAAwxC,aAAajuC,QAAQ+tC,EAC7C,IAAIC,KAAoB,EACtB,MAAOA,GAAkB,EAG3B,MAAM,IAAInwC,OAAMqP,EAAIzL,QAAQgsC,gBAAgB,QAASlsC,IAIzD,QAAA2sC,GAAsBvoC,GACpB,GAAI0T,EAAAjJ,SAASzK,GAGX,MAAQA,GAAI,EAAK,EAEjB,IAAMwoC,GAASxoC,EAAEioC,cACXQ,EAAW3xC,EAAA4xC,KAAKruC,QAAQmuC,EAC9B,IAAIC,KAAa,EACf,MAAOA,GAAW,EAEpB,IAAME,GAASH,EAAO/iB,OAAO,EAAG,GAC1BmjB,EAAgB9xC,EAAA+xC,WAAWxuC,QAAQsuC,EACzC,IAAIC,KAAkB,EACpB,MAAOA,GAAgB,EAGzB,MAAM,IAAI1wC,OAAMqP,EAAIzL,QAAQgsC,gBAAgB,MAAO9nC,IAIvD,QAAA+Y,GAA0B/Y,EAAamb,GACrC,GAAMosB,GAAO,GAAIuB,MAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAIxC,IAAc/uC,SAAViG,EAAEwnC,IACJ,GAAI9zB,EAAAnZ,KAAKyF,GAAG1H,OAAS,EACnBiP,EAAIuB,KAAKvB,EAAIzL,QAAQitC,WAAW/oC,IAChCA,EAAI0T,EAAAgW,UAAU1pB,SACPA,GAAEwnC,QACJ,CAELD,EAAKyB,YAAYC,EAEjB,IAAMzB,GAAMrsB,EAAYotB,EAAavoC,EAAEwnC,KAAOxnC,EAAEwnC,GAChDD,GAAK2B,SAAS1B,EAAM,GAQxB,GAJeztC,SAAXiG,EAAEonC,MACJG,EAAKyB,YAAYhpC,EAAEonC,MAGHrtC,SAAdiG,EAAEqnC,QAAuB,CAC3B,GAAMA,GAAUlsB,EAAY0sB,EAAiB7nC,EAAEqnC,SAAWrnC,EAAEqnC,OAC5DE,GAAK4B,SAAoB,GAAV9B,GAGjB,GAAgBttC,SAAZiG,EAAEsnC,MAAqB,CACzB,GAAMA,GAAQnsB,EAAY4sB,EAAe/nC,EAAEsnC,OAAStnC,EAAEsnC,KACtDC,GAAK4B,UAAU7B,GAuBjB,MApBevtC,UAAXiG,EAAEunC,MACJA,EAAK2B,QAAQlpC,EAAEunC,MAGDxtC,SAAZiG,EAAEynC,OACJF,EAAK6B,SAASppC,EAAEynC,OAGA1tC,SAAdiG,EAAE0nC,SACJH,EAAK8B,WAAWrpC,EAAE0nC,SAGF3tC,SAAdiG,EAAE2nC,SACJJ,EAAK+B,WAAWtpC,EAAE2nC,SAGG5tC,SAAnBiG,EAAE4nC,cACJL,EAAKgC,gBAAgBvpC,EAAE4nC,cAGlBL,EAAKiC,UAQd,QAAAC,GAA6BzpC,EAA4Bmb,GAAA,SAAAA,IAAAA,GAAA,EACvD,IAAMuuB,KAmBN,IAjBIvuB,GAAuBphB,SAAViG,EAAEwnC,KACb9zB,EAAAnZ,KAAKyF,GAAG1H,OAAS,IACnBiP,EAAIuB,KAAKvB,EAAIzL,QAAQitC,WAAW/oC,IAChCA,EAAI0T,EAAAgW,UAAU1pB,SACPA,GAAEwnC,KAIEztC,SAAXiG,EAAEonC,KACJsC,EAAMtvC,KAAK4F,EAAEonC,MACMrtC,SAAViG,EAAEwnC,IAEXkC,EAAMtvC,KAAK6uC,GAEXS,EAAMtvC,KAAK,GAGGL,SAAZiG,EAAEsnC,MAAqB,CACzB,GAAMA,GAAQnsB,EAAY4sB,EAAe/nC,EAAEsnC,OAAStnC,EAAEsnC,KACtDoC,GAAMtvC,KAAKktC,OACN,IAAkBvtC,SAAdiG,EAAEqnC,QAAuB,CAClC,GAAMA,GAAUlsB,EAAY0sB,EAAiB7nC,EAAEqnC,SAAWrnC,EAAEqnC,OAC5DqC,GAAMtvC,KAAKitC,EAAU,UAErBqC,GAAMtvC,KAAK,EAGb,IAAeL,SAAXiG,EAAEunC,KACJmC,EAAMtvC,KAAK4F,EAAEunC,UACR,IAAcxtC,SAAViG,EAAEwnC,IAAmB,CAG9B,GAAMA,GAAMrsB,EAAYotB,EAAavoC,EAAEwnC,KAAOxnC,EAAEwnC,GAChDkC,GAAMtvC,KAAKotC,EAAM,UAEjBkC,GAAMtvC,KAAK,EAKb,KAAqB,GAAA6oB,GAAA,EAAAC,GAAC,QAAS,UAAW,UAAW,gBAAhCD,EAAAC,EAAA5qB,OAAA2qB,IAA+C,CAA/D,GAAIxN,GAAQyN,EAAAD,EACKlpB,UAAhBiG,EAAEyV,GACJi0B,EAAMtvC,KAAK4F,EAAEyV,IAEbi0B,EAAMtvC,KAAK,GAIf,MAAO,YAAcsvC,EAAM3wC,KAAK,MAAQ,oDA/R1C,IAAA2a,GAAA1b,EAAA,UACAuP,EAAAvP,EAAA,SAKMixC,EAAc,IAwGpBnyC,GAAA+hB,WAAAA,EAKa/hB,EAAAqxC,QAAU,UAAW,WAAY,QAAS,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YACxHrxC,EAAAwxC,aAAexxC,EAAAqxC,OAAOxjC,IAAI,SAAC/I,GAAM,MAAAA,GAAE6pB,OAAO,EAAG,KAE7C3uB,EAAA4xC,MAAQ,SAAU,SAAU,UAAW,YAAa,WAAY,SAAU,YAC1E5xC,EAAA+xC,WAAa/xC,EAAA4xC,KAAK/jC,IAAI,SAAC3E,GAAM,MAAAA,GAAEylB,OAAO,EAAE,KAwDrD3uB,EAAAiiB,UAAAA,EA6DAjiB,EAAA2yC,aAAAA,6DC7JA,SAAAjnB,GAAgCC,EAA6B3Q,GAC3D,GAAM4iB,GAAajS,GAAYA,EAAS3Q,EACxC,SAAI4iB,IACEhhB,EAAAzZ,QAAQy6B,GACHhhB,EAAAgD,KAAKge,EAAY,SAAC3f,GAAa,QAAEA,EAAShN,QAE1CyQ,EAAAmY,WAAW+D,IAMxB,QAAA5R,GAA4BL,GAC1B,MAAO/O,GAAAgD,KAAK3E,EAAAmC,SAAU,SAACpC,GACrB,GAAI0Q,EAAgBC,EAAU3Q,GAAU,CACtC,GAAM4iB,GAAajS,EAAS3Q,EAC5B,OAAI4B,GAAAzZ,QAAQy6B,GACHhhB,EAAAgD,KAAKge,EAAY,SAAC3f,GAAa,QAAEA,EAASwF,YAE1C/B,EAAAmY,WAAW+D,MAAiBA,EAAWna,UAGlD,OAAO,IAIX,QAAAyqB,GAAqC3yB,EAAYoQ,GA4C/C,MAzCAA,GAAW/O,EAAAgW,UAAUjH,GAErB1nB,OAAOR,KAAKkoB,GAAUpY,QAAQ,SAACyH,GAC7B,IAAKC,EAAAK,YAAYN,EAASO,GAKxB,MAFA9K,GAAIuB,KAAKvB,EAAIzL,QAAQ+tB,oBAAoB/X,EAASO,eAC3CoQ,GAAS3Q,EAKlB,IAAgB,SAAZA,GAA+B,SAATO,EAAiB,CACzC,GAAMqiB,GAAajS,EAAS3Q,EAK5B,aAJI0G,EAAAmY,WAAW+D,IAAeA,EAAWna,YACvChT,EAAIuB,KAAKvB,EAAIzL,QAAQ+tB,oBAAoB/X,EAASO,EAAM,wCACjDoQ,GAAS3Q,KAKpB,GAAI4B,EAAAzZ,QAAQwoB,EAAS3Q,IAEnB2Q,EAAS3Q,GAAW2Q,EAAS3Q,GAASqE,OAAO,SAACwzB,EAA2BjV,GAMvE,MALKlc,GAAAmY,WAAW+D,IAAgBlc,EAAA0W,WAAWwF,GAGzCiV,EAAYvvC,KAAKoe,EAAA2C,UAAUuZ,EAAY5iB,IAFvCvK,EAAIuB,KAAKvB,EAAIzL,QAAQ8tB,cAAc8K,EAAY5iB,IAI1C63B,WAEJ,CACL,GAAMjV,GAAajS,EAAS3Q,EAC5B,IAAyB/X,SAArB26B,EAAW3sB,OAA4ChO,SAArB26B,EAAWv7B,MAG/C,MAFAoO,GAAIuB,KAAKvB,EAAIzL,QAAQ8tB,cAAc8K,EAAY5iB,eACxC2Q,GAAS3Q,EAGlB0G,GAAA2C,UAAUuZ,EAAY5iB,MAGnB2Q,EAIT,QAAAmnB,GAAyBnnB,GACvB,MAAOA,OAAgBA,EAAS5nB,KAAO4nB,EAASuF,MAAUvF,EAASrgB,KAAOqgB,EAAS+F,IAGrF,QAAAqhB,GAA0BpnB,GACxB,GAAIoV,KASJ,OARA9lB,GAAAmC,SAAS7J,QAAQ,SAASyH,GACxB,GAAI0Q,EAAgBC,EAAU3Q,GAAU,CACtC,GAAM4iB,GAAajS,EAAS3Q,IAC3B4B,EAAAzZ,QAAQy6B,GAAcA,GAAcA,IAAarqB,QAAQ,SAAC0K,GACzD8iB,EAAIz9B,KAAK2a,QAIR8iB,EAGT,QAAAxtB,GAAwBy/B,EACpBjzC,EACAuK,GACG0oC,GAIL/uC,OAAOR,KAAKuvC,GAASz/B,QAAQ,SAACrO,GAC5B,GAAM8V,GAAmB9V,CACrB0X,GAAAzZ,QAAQ6vC,EAAQh4B,IAClBg4B,EAAQh4B,GAASzH,QAAQ,SAASqqB,GAChC79B,EAAEwB,KAAK+I,EAASszB,EAAY5iB,KAG9Bjb,EAAEwB,KAAK+I,EAAS0oC,EAAQh4B,GAAUA,KAKxC,QAAAqE,GAA6B2zB,EACzBjzC,EACAmhC,EAAS52B,GACX,MAAK0oC,GAIE/uC,OAAOR,KAAKuvC,GAAS3zB,OAAO,SAACxe,EAAMqE,GACxC,GAAM8V,GAAmB9V,CACzB,OAAI0X,GAAAzZ,QAAQ6vC,EAAQh4B,IACXg4B,EAAQh4B,GAASqE,OAAO,SAAS4zB,EAAOrV,GAC7C,MAAO79B,GAAEwB,KAAK+I,EAAS2oC,EAAIrV,EAAY5iB,IACtCna,GAEId,EAAEwB,KAAK+I,EAASzJ,EAAGmyC,EAAQh4B,GAAUA,IAE7CkmB,GAZMA,kDAlMX,IAAAxf,GAAAxgB,EAAA,cACA+Z,EAAA/Z,EAAA,aAEA0b,EAAA1b,EAAA,UAEAuP,EAAAvP,EAAA,QA2EAlB,GAAA0rB,gBAAAA,EAYA1rB,EAAAgsB,YAAAA,EAcAhsB,EAAAkuC,qBAAAA,EAgDAluC,EAAA8yC,SAAAA,EAIA9yC,EAAA+yC,UAAAA,EAaA/yC,EAAAuT,QAAAA,EAmBAvT,EAAAqf,OAAAA,mLCpEA,SAAAwa,GAA2B+D,GACzB,MAAOA,MAAgBA,EAAkB,MAG3C,QAAAxF,GAA2BwF,GACzB,MAAOA,IAAc,SAAWA,IAAsC36B,SAAxB26B,EAAkB,MAqBlE,QAAA3sB,GAAsBgN,EAAoByf,GAAA,SAAAA,IAAAA,KACxC,IAAIzsB,GAAQgN,EAAShN,MACjBqmB,EAASoG,EAAIpG,OACbsB,EAAS8E,EAAI9E,MAEjB,IAAIxO,EAAQnM,GACVhN,EAAQ,cACH,CACL,GAAIf,GAAajN,MAEZy6B,GAAIwV,OACHj1B,EAASxI,KACXvF,EAAK,MACL0oB,EAAS8E,EAAIzZ,WACJhG,EAASwF,UAClBvT,EAAKxK,OAAOg4B,EAAIja,WAAaxF,EAASwF,WAC7BxF,EAASU,WAClBzO,EAAKxK,OAAOuY,EAASU,YAInBzO,IACJe,EAAWf,EAAE,IAAIe,GAgBrB,MAZM2nB,KACJ3nB,EAAWA,EAAK,IAAI2nB,GAGhBtB,IACJrmB,EAAWqmB,EAAM,IAAIrmB,GAGnBysB,EAAI3W,QACN9V,EAAQ,UAAUA,EAAK,MAGlBA,EAGT,QAAAkiC,GAA2Bl1B,GACzB,OAAQA,EAASxP,MACf,IAAK,UACL,IAAK,UACH,OAAO,CACT,KAAK,eACH,QAASwP,EAASxI,GACpB,KAAK,WAEH,MAAOmO,GAAAujB,oBAAoBlpB,EAASU,UAExC,KAAM,IAAIvd,OAAMqP,EAAIzL,QAAQqiC,iBAAiBppB,EAASxP,OAGxD,QAAAqtB,GAA6B7d,GAC3B,OAAQk1B,EAAWl1B,GAGrB,QAAAmM,GAAwBnM,GACtB,MAA8B,UAAvBA,EAASwF,UAGlB,QAAAxC,GAAsBhD,EAAoBE,GACxC,GAAsB,MAAlBF,EAASgD,MACX,MAAOhD,GAASgD,KAElB,IAAImJ,EAAQnM,GACV,MAAOE,GAAO2xB,UAEhB,IAAM5/B,GAAK+N,EAASwF,WAAaxF,EAASU,UAAaV,EAASxI,KAAO,KACvE,OAAIvF,GACKA,EAAGlM,WAAWovC,cAAgB,IAAMn1B,EAAShN,MAAQ,IAErDgN,EAAShN,MAIpB,QAAA81B,GAA4B9oB,EAAoBjD,GAC9C,GAAMiD,EAASU,SACb,MAAO,UAET,IAAMV,EAASxI,IACb,MAAO,cAET,QAAQwF,EAAAgC,UAAUjC,IAChB,IAAK,aACH,MAAO,cACT,KAAK,WACH,MAAO,SACT,KAAK,WACH,MAAO,SACT,SACE,MAAO,gBAOb,QAAAqJ,GAA0BpG,EAAsBjD,GAE9C,GAAI6e,EAAW5b,GAAW,CAExB,GAAMo1B,GAAWj1B,EAAAk1B,YAAYr1B,EAASxP,KACtC,IAAI4kC,EACFp1B,EAASxP,KAAO4kC,MACX,CAEL,GAAME,GAAUxM,EAAY9oB,EAAUjD,EACtCvK,GAAIuB,KAAKvB,EAAIzL,QAAQwuC,wBAAwBv1B,EAASxP,KAAMuM,EAASu4B,IACrEt1B,EAASxP,KAAO8kC,EAGZ,GAAAnnB,GAAAqnB,EAAAx1B,EAAAjD,GAAC+a,EAAA3J,EAAA2J,WAAY2d,EAAAtnB,EAAAsnB,OACd3d,IACHtlB,EAAIuB,KAAK0hC,GAGb,MAAOz1B,GAIT,QAAAw1B,GAAqCx1B,EAAoBjD,GACvD,OAAQA,GACN,IAAK,MACL,IAAK,SACH,MAAI8gB,GAAa7d,KAAcA,EAASU,UAIpCoX,YAAY,EACZ2d,QAASjjC,EAAIzL,QAAQ2uC,6BAA6B34B,IAG/C44B,CAET,KAAK,IACL,IAAK,IACL,IAAK,QACL,IAAK,OACL,IAAK,SACH,MAAOA,EAET,KAAK,UACL,IAAK,OACL,IAAK,KACL,IAAK,KACH,MAAIT,GAAWl1B,IAEX8X,YAAY,EACZ2d,QAAS,WAAW14B,EAAO,4CAGxB44B,CAET,KAAK,QACH,MAAsB,YAAlB31B,EAASxP,MAETsnB,YAAY,EACZ2d,QAAS,uDAGJE,CAGX,KAAK,QACH,MAAsB,YAAlB31B,EAASxP,MAETsnB,YAAY,EACZ2d,QAAS,kFAGNE,EAEX,KAAM,IAAIxyC,OAAM,oDAAsD4Z,mDA/TxE,IAAAC,GAAA/Z,EAAA,aAGAuP,EAAAvP,EAAA,SAIA0iB,EAAA1iB,EAAA,cACAkd,EAAAld,EAAA,SA8GAlB,GAAA65B,WAAAA,EAIA75B,EAAAo4B,WAAAA,EAsBAp4B,EAAAiR,MAAAA,EAyCAjR,EAAAmzC,WAAAA,EAcAnzC,EAAA87B,aAAAA,EAIA97B,EAAAoqB,QAAAA,EAIApqB,EAAAihB,MAAAA,EAeAjhB,EAAA+mC,YAAAA,EAsBA/mC,EAAAqkB,UAAAA,CAsBA,IAAMuvB,IAAc7d,YAAY,EAChC/1B,GAAAyzC,qBAAAA,4FCpPA,SAAA5pB,GAA8B7b,GAC5B,MAAOA,MAAYA,EAAOiD,OAAwBhO,SAAf+K,EAAO8b,MA0B5C,QAAAC,GAA8B/b,GAC5B,SAAIA,GAAYA,EAAOiD,OACjB2L,EAAAzZ,QAAQ6K,EAAOgc,QAAkC,IAAxBhc,EAAOgc,MAAMxoB,QA4B9C,QAAAyoB,GAA8Bjc,GAC5B,MAAOA,MAAYA,EAAOiD,QACxB2L,EAAAzZ,QAAQ6K,EAAOkc,QACftN,EAAAzZ,QAAQ6K,EAAO6lC,KAInB,QAAAvqB,GAA2Btb,GACzB,GAAI4O,EAAApM,SAASxC,GACX,MAAOA,EAEP,IAAMshB,GAAYthB,EAAO2Q,SAItB,QAAUiF,EAAA0L,UAAkBthB,EAAO2Q,SAAU3Q,EAAOiD,OAAS,IAC9DyQ,EAAAzQ,MAAMjD,GAAS+Y,OAAO,GAExB,IAAI8C,EAAc7b,GAChB,MAAOshB,GAAY,MAAQwkB,EAAU9lC,EAAO8b,MAAO9b,EAAO2Q,SACrD,IAAIsL,EAAcjc,GAAS,CAEhC,GAAMkc,GAAuBlc,EAAOkc,OAASlc,EAAW,EACxD,OAAO,YACLkc,EAAMrc,IAAI,SAACvH,GAAM,MAAAwtC,GAAUxtC,EAAG0H,EAAO2Q,YAAW1c,KAAK,KACrD,MAAQqtB,EAAY,WACjB,GAAIvF,EAAc/b,GAAS,CAChC,GAAM+lC,GAAQ/lC,EAAOgc,MAAM,GACrBgqB,EAAQhmC,EAAOgc,MAAM,EAE3B,IAAc,OAAV+pB,GAA6B,OAAVC,EACrB,MAAO,WAAa1kB,EAAY,KAC9BwkB,EAAUC,EAAO/lC,EAAO2Q,UAAY,KACpCm1B,EAAUE,EAAOhmC,EAAO2Q,UAAY,GACjC,IAAc,OAAVo1B,EACT,MAAOzkB,GAAY,OAASykB,CACvB,IAAc,OAAVC,EACT,MAAO1kB,GAAY,OAAS0kB,GAOpC,QAAAF,GAAmBxtC,EAAQqY,GACzB,GAAImD,EAAAC,WAAWzb,GAAI,CACjB,GAAM2f,GAAOnE,EAAA6wB,aAAarsC,GAAG,EAC7B,OAAO,QAAU2f,EAAO,IAE1B,GAAIrC,EAAAqwB,iBAAiBt1B,GAAW;AAC9B,GAAMu1B,KACNA,GAASv1B,GAAYrY,CACrB,IAAM2f,GAAOnE,EAAA6wB,aAAauB,GAAU,EACpC,OAAO,QAAUjuB,EAAO,IAE1B,MAAOtkB,MAAKgB,UAAU2D,mDA5IxB,IAAAwb,GAAA5gB,EAAA,cACAwgB,EAAAxgB,EAAA,cACA0iB,EAAA1iB,EAAA,cACA0b,EAAA1b,EAAA,SAyBAlB,GAAA6pB,cAAAA,EA2BA7pB,EAAA+pB,cAAAA,EA8BA/pB,EAAAiqB,cAAAA,EAOAjqB,EAAAspB,WAAAA,oJClCatpB,EAAAqwC,qBACXpxB,OAAQhc,QAGGjD,EAAA+4B,mBAAsC,eAAgB,SAAU,SAAU,SAAU,YAAa,QAAS,OAAQ,SAAU,+CCTzI,SAAAob,GAA+Bp0C,GAC7B,GAAMq0C,GAAcC,EAAU,GAAIC,EAClCv0C,GAAEq0C,GACF7vB,IAGF,QAAAgwB,GAAqBx0C,GACnB,MAAO,YACL,GAAM+R,GAASuiC,EAAU,GAAIC,EAC7Bv0C,GAAE+R,GACFyS,KAOJ,QAAApR,GAAoBrB,GAElB,MADAuiC,GAAUviC,EAOZ,QAAAyS,KAEE,MADA8vB,GAAU9+B,EAIZ,QAAAvD,SAAqB,GAAA3G,MAAA8gB,EAAA,EAAAA,EAAA3iB,UAAAhI,OAAA2qB,IAAA9gB,EAAA8gB,GAAA3iB,UAAA2iB,EACnBkoB,GAAQriC,KAAK5K,MAAMitC,EAAS7qC,WAG9B,QAAAyI,SAAqB,GAAA5G,MAAA8gB,EAAA,EAAAA,EAAA3iB,UAAAhI,OAAA2qB,IAAA9gB,EAAA8gB,GAAA3iB,UAAA2iB,EACnBkoB,GAAQpiC,KAAK7K,MAAMitC,EAAS7qC,WAG9B,QAAA0I,SAAsB,GAAA7G,MAAA8gB,EAAA,EAAAA,EAAA3iB,UAAAhI,OAAA2qB,IAAA9gB,EAAA8gB,GAAA3iB,UAAA2iB,EACpBkoB,GAAQniC,MAAM9K,MAAMitC,EAAS7qC,2DAtF/B,IAAAgrC,GAAAtzC,EAAA,aAgBMqU,EAAOi/B,EAAA1iC,OAAO0iC,EAAA7iC,MAChB0iC,EAA2B9+B,EAK/B++B,EAAA,WAAA,QAAAA,KACS9zC,KAAAi0C,SACAj0C,KAAAk0C,SACAl0C,KAAAm0C,UAoBT,MAlBSL,GAAAnwC,UAAAtB,MAAP,WACE,MAAOrC,OAGF8zC,EAAAnwC,UAAA6N,KAAP,eAAY,GAAApB,MAAAub,EAAA,EAAAA,EAAA3iB,UAAAhI,OAAA2qB,IAAAvb,EAAAub,GAAA3iB,UAAA2iB,EAEV,QADAC,EAAA5rB,KAAKi0C,OAAMnxC,KAAI8D,MAAAglB,EAAIxb,GACZpQ,YAGF8zC,EAAAnwC,UAAA8N,KAAP,eAAY,GAAArB,MAAAub,EAAA,EAAAA,EAAA3iB,UAAAhI,OAAA2qB,IAAAvb,EAAAub,GAAA3iB,UAAA2iB,EAEV,QADAC,EAAA5rB,KAAKk0C,OAAMpxC,KAAI8D,MAAAglB,EAAIxb,GACZpQ,YAGF8zC,EAAAnwC,UAAA+N,MAAP,eAAa,GAAAtB,MAAAub,EAAA,EAAAA,EAAA3iB,UAAAhI,OAAA2qB,IAAAvb,EAAAub,GAAA3iB,UAAA2iB,EAEX,QADAC,EAAA5rB,KAAKm0C,QAAOrxC,KAAI8D,MAAAglB,EAAIxb,GACbpQ,YAEX8zC,IAvBat0C,GAAAs0C,YAAAA,EAyBbt0C,EAAAm0C,eAAAA,EAMAn0C,EAAAu0C,KAAAA,EAWAv0C,EAAAmT,IAAAA,EAQAnT,EAAAukB,MAAAA,EAKAvkB,EAAAgS,KAAAA,EAIAhS,EAAAiS,KAAAA,EAIAjS,EAAAkS,MAAAA,CAOA,IAAiBlN,IAAjB,SAAiBA,GAOf,QAAAqiC,GAAiC54B,GAC/B,MAAO,uBAAuBA,EAAI,IAGpC,QAAA+kC,GAAwC/kC,EAAqBuM,EAAkBu4B,GAC7E,MAAO,uBAAuB9kC,EAAI,iBAAiBuM,EAAO,WAAWu4B,EAAO,YAG9E,QAAAzgB,GAA8B7U,EAAoBjD,GAChD,MAAO,YAAYrZ,KAAKgB,UAAUsb,GAAS,iBAAiBjD,EAAO,kDAGrE,QAAA+X,GAAoC/X,EAAkB45B,EAA6BC,GACjF,MAAU75B,GAAO,uCAAuC45B,EACtDC,EAAO,QAAQA,EAAS,GAG5B,QAAAlB,GAA6C34B,GAC3C,MAAUA,GAAO,6DAGnB,QAAAksB,GAA4ClsB,EAAkBvM,GAC5D,MAAO,0BAA0BuM,EAAO,cAAcvM,EAAI,mDAA2D,YAATA,EAAqB,QAAU,aAAW,IAMxJ,QAAAytB,GAAwC3gB,GACtC,MAAO,4CAA8CA,EAAO,gGAG9D,QAAA4gB,GAA6C5gB,GAC3C,MAAO,4CAA8CA,EAAO,+DAG9D,QAAA0f,GAAiC6Z,EAAkBC,GACjD,MAAO,oBAAoBD,EAAQ,oBAAoBC,EAMzD,QAAAC,GAAmD1xB,GACjD,MAAO,cAAcA,EAAI,2BAG3B,QAAAif,GAAwDtkB,GACtD,MAAO,2DAA2Dtc,KAAKgB,UAAUsb,GAAS,KAG5F,QAAAokB,GAAuD5e,GACrD,MAAO,0CAA0CA,EAAS,0EAG5D,QAAA6e,GAA+CrkB,GAC7C,MAAO,+DAA+Dtc,KAAKgB,UAAUsb,GAAS,KAQhG,QAAAg3B,GAAgDC,GAC9C,MAAO,qBAAqBA,EAAQ,6EAGtC,QAAA9P,GAAiCpqB,GAC/B,MAAO,iBAAiBA,EAAO,6BACjB,MAAZA,EAAkB,QAAU,UAAQ,gBAGxC,QAAAgsB,GAA4ChsB,EAAkB+B,EAAsB+pB,GAClF,MAAO,WAAW9rB,EAAO,uBAAuB+B,EAAS,wBAAwB+pB,EAAY,kBAG/F,QAAAhD,GAAkD/mB,EAAsBm4B,EAAkBl6B,GACxF,MAAUA,GAAO,cAAak6B,EAAQ,yCAAyCn4B,EAAS,UAG1F,QAAAiiB,GAAyCzjB,EAAYwB,GACnD,MAAO,eAAeA,EAAS,6BAA6BxB,EAAI,IAUlE,QAAA45B,GAAsCn6B,GACpC,MAAO,gBAAgBA,EAAO,wBAAwBA,EAAO,IAG/D,QAAAo6B,GAA0Cr4B,GACxC,MAAO,kCAAkCA,EAAS,IAGpD,QAAAs4B,GAAiD5xB,GAC/C,MAAO,8DAA8DA,EAAS,IAIhF,QAAAutB,GAAgCsE,EAAkBjzC,GAChD,MAAO,WAAWizC,EAAQ,KAAKjzC,EAGjC,QAAAkzC,GAAoCC,GAClC,MAAO,cAAcA,EAAY,iDAC9BA,EAAa,IAAI7uC,QAAQ,MAAO,QAAU,IAG/C,QAAAsrC,GAA2B/oC,GACzB,MAAO,8BAAgCvH,KAAKgB,UAAUuG,GAChD,+CA1HKlE,EAAAie,aAAe,eAGfje,EAAA67B,uBAAyB,8DAGtB77B,EAAAqiC,iBAAgBA,EAIhBriC,EAAAwuC,wBAAuBA,EAIvBxuC,EAAA8tB,cAAaA,EAIb9tB,EAAA+tB,oBAAmBA,EAKnB/tB,EAAA2uC,6BAA4BA,EAI5B3uC,EAAAkiC,4BAA2BA,EAK9BliC,EAAA61B,wCAA0C,sGAEvC71B,EAAAk3B,wBAAuBA,EAIvBl3B,EAAAm3B,6BAA4BA,EAI5Bn3B,EAAAi2B,iBAAgBA,EAKnBj2B,EAAAywC,6CAA+C,wEAE5CzwC,EAAAgwC,mCAAkCA,EAIlChwC,EAAAu9B,wCAAuCA,EAIvCv9B,EAAAq9B,uCAAsCA,EAItCr9B,EAAAs9B,+BAA8BA,EAIjCt9B,EAAA0wC,+BACX,+GAEa1wC,EAAA2wC,8BAAgC,sEAE/B3wC,EAAAiwC,gCAA+BA,EAI/BjwC,EAAAogC,iBAAgBA,EAKhBpgC,EAAAgiC,4BAA2BA,EAI3BhiC,EAAA8+B,kCAAiCA,EAIjC9+B,EAAAg6B,yBAAwBA,EAI3Bh6B,EAAA69B,cAAgB,uBAIhB79B,EAAAwc,yBAA2B,4BAGxBxc,EAAAmwC,sBAAqBA,EAIrBnwC,EAAAowC,0BAAyBA,EAIzBpwC,EAAAqwC,iCAAgCA,EAKhCrwC,EAAAgsC,gBAAeA,EAIfhsC,EAAAuwC,oBAAmBA,EAKnBvwC,EAAAitC,WAAUA,GAzHXjtC,EAAAhF,EAAAgF,UAAAhF,EAAAgF,+DCdjB,SAAA+1B,GAA0Bxf,GACxB,MAAOA,GAAW,KAKpB,QAAAq6B,GAAgCr6B,GAC9B,GAAMs6B,GAAW9a,EAAUxf,GAAQA,EAAK9M,KAAO8M,CAC/C,OAAOs6B,KAAYC,mDA5FrB,IAIiBC,GAJjBn5B,EAAA1b,EAAA,WAIA,SAAiB60C,GACFA,EAAA/d,KAAe,OACf+d,EAAAte,IAAa,MACbse,EAAAhe,KAAe,OACfge,EAAAje,MAAiB,QACjBie,EAAAva,KAAe,OACfua,EAAAxa,KAAe,OACfwa,EAAAr5B,KAAe,OACfq5B,EAAAre,KAAe,OACfqe,EAAAne,OAAmB,SACnBme,EAAAle,OAAmB,UAVjBke,EAAA/1C,EAAA+1C,OAAA/1C,EAAA+1C,UAmBJ/1C,EAAAg4B,KAAO+d,EAAK/d,KACZh4B,EAAAy3B,IAAMse,EAAKte,IACXz3B,EAAA+3B,KAAOge,EAAKhe,KACZ/3B,EAAA83B,MAAQie,EAAKje,MACb93B,EAAA0c,KAAOq5B,EAAKr5B,KACZ1c,EAAA03B,KAAOqe,EAAKre,KACZ13B,EAAAw7B,KAAOua,EAAKva,KACZx7B,EAAAu7B,KAAOwa,EAAKxa,KAEZv7B,EAAA43B,OAASme,EAAKne,OACd53B,EAAA63B,OAASke,EAAKle,OAEd73B,EAAAg2C,iBAAmBh2C,EAAAg4B,KAAMh4B,EAAAy3B,IAAKz3B,EAAA+3B,KAAM/3B,EAAA83B,MAAO93B,EAAA0c,KAAM1c,EAAA03B,KAAM13B,EAAAw7B,KAAMx7B,EAAAu7B,KAAMv7B,EAAA43B,OAAQ53B,EAAA63B,QAiDxF73B,EAAA+6B,UAAAA,CAIA,IAAM+a,GAAuBl5B,EAAA7M,MAAM/P,EAAAg2C,gBAEnCh2C,GAAA41C,gBAAAA,EAKa51C,EAAAi2C,eAAiB,SAAU,cACtC,aAAc,mBAAoB,iBAEvBj2C,EAAAk2C,aAAe,OAAQ,eAEvBl2C,EAAA61B,sBAAwB5pB,OAAOjM,EAAAi2C,cAAej2C,EAAAk2C,aAmB9Cl2C,EAAA+vC,mBACX3e,MAAO,WAuBIpxB,EAAAgwC,kBACXjW,WAAY,EACZa,mBAAoB,GAUT56B,EAAAiwC,mBACX/wB,SAAU,UAkBClf,EAAAkwC,mBACXvQ,UAAW,mDCtHb,SAAA/Y,GAAkCnY,GAChC,MAAOA,KAAQ0nC,GAGjB,QAAA5d,GAAoC9pB,GAGlC,MAAOA,KAAQ2nC,GAGjB,QAAAC,GAAyC5nC,GACvC,MAAOA,KAAQ6nC,GA0LjB,QAAAxR,GAAiCD,GAC/B,MAAOA,MAAYA,EAAa,KAoGlC,QAAAlB,GAAyC5mB,EAAsBm4B,GAC7D,OAAQA,GACN,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,SACH,OAAO,CACT,KAAK,cACH,MAAqB,WAAdn4B,CACT,KAAK,QACH,MAAOs5B,GAAyBt5B,IAA4B,SAAdA,GAAsC,UAAdA,CACxE,KAAK,YACL,IAAK,UACL,IAAK,eACH,MAAOH,GAAAC,UAAU,QAAS,QAASE,EACrC,KAAK,eACH,MAAqB,SAAdA,CACT,KAAK,QACH,MAAOs5B,GAAyBt5B,IAA4B,eAAdA,CAChD,KAAK,OACH,MAAOs5B,GAAyBt5B,IAA4B,eAAdA,GAAmD,aAArBA,CAC9E,KAAK,WACH,MAAqB,QAAdA,GAAqC,QAAdA,CAChC,KAAK,OAEH,OAAQ6J,EAAkB7J,KAAeH,EAAAC,UAAU,MAAO,OAAQ,OAAQE,GAG9E,KAAM,IAAI3b,OAAM,0BAA0B8zC,EAAQ,KAMpD,QAAArR,GAAoD7oB,EAAkBk6B,GACpE,OAAQA,GACN,IAAK,QAEH,GAAgB,MAAZl6B,GAA+B,MAAZA,EACrB,MAAOvK,GAAIzL,QAAQ0wC,8BAErB,IAAgB,QAAZ16B,GAAiC,WAAZA,EACvB,MAAOvK,GAAIzL,QAAQiwC,gCAAgC,QAErD,OAEF,KAAK,YACH,GAAgB,QAAZj6B,GAAiC,WAAZA,EACvB,MAAOvK,GAAIzL,QAAQiwC,gCAAgC,YAErD,OACF,KAAK,UACL,IAAK,eACL,IAAK,eACH,GAAgB,QAAZj6B,GAAiC,WAAZA,EAMvB,MAAOvK,GAAIzL,QAAQ2wC,6BAErB,OACF,KAAK,cACL,IAAK,SACH,GAAgB,UAAZ36B,EACF,MAAOvK,GAAIzL,QAAQgwC,mCAAmCh6B,EAExD,OACF,KAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,QACL,IAAK,WACL,IAAK,OACL,IAAK,OAEH,OAGJ,KAAM,IAAI5Z,OAAM,yFAnblB,IAKiBupB,GALjBla,EAAAvP,EAAA,SAGA0b,EAAA1b,EAAA,WAEA,SAAiBypB,GAEFA,EAAAyc,OAAmB,SACnBzc,EAAAC,IAAa,MACbD,EAAA4rB,IAAa,MACb5rB,EAAA6rB,KAAe,OAEf7rB,EAAAyV,KAAe,OACfzV,EAAA0V,IAAc,MAEd1V,EAAA8rB,WAA2B,aAG3B9rB,EAAA+rB,SAAuB,WACvB/rB,EAAAgsB,SAAuB,WACvBhsB,EAAAisB,UAAyB,YAEzBjsB,EAAArM,QAAqB,UACrBqM,EAAAmN,MAAiB,QACjBnN,EAAAqP,KAAe,QAnBbrP,EAAA3qB,EAAA2qB,YAAA3qB,EAAA2qB,eA8BJ3qB,EAAA4d,aAEX,SAAU,MAAO,MAAO,OAExB,OAAQ,MAER,aAEA,UAAW,QAAS,QAGT5d,EAAA62C,iCAAgD,SAAU,MAAO,MAAO,OAAQ,OAAQ,MACrG,IAAMP,GAAiC15B,EAAA7M,MAAM/P,EAAA62C,gCAEhC72C,GAAA82C,yBAAwC92C,EAAA62C,gCAAgC5qC,QAAQ,cAC7F,IAAMmqC,GAA0Bx5B,EAAA7M,MAAM/P,EAAA82C,yBAEzB92C,GAAA+2C,wBAAuC,UAAW,QAAS,OACxE,IAAMZ,GAAwBv5B,EAAA7M,MAAM/P,EAAA+2C,uBAEvB/2C,GAAAg3C,kBAAiC,OAAQ,OAEtDh3C,EAAA4mB,kBAAAA,EAIA5mB,EAAAu4B,oBAAAA,EAMAv4B,EAAAq2C,yBAAAA,EAkJar2C,EAAAowC,oBACXjM,OAAO,EACP/E,eAAgB,GAChB5I,UAAW,GACXgQ,aAAc,GACdC,iBAAkB,GAClB/W,aAAc,GAEdoW,YAAa,EACbK,YAAa,GAEbT,WAAY,GACZC,WAAY,GAGZI,QAAS,EAETF,eAAgB,EAChBK,eAAgB,EAEhB+Q,QAAS,SAAU,SAAU,QAAS,UAAW,cAAe,kBAqBlEj3C,EAAA8kC,iBAAAA,EAgGa9kC,EAAAk3C,kBACX,OAAQ,SAAU,QAAS,QAAS,YAAa,SAAU,UAAW,eAAgB,eAAgB,QAAS,OAC/G,WAAY,OAAQ,eAGtBl3C,EAAA2jC,yBAAAA,EAkCA3jC,EAAA6jC,oCAAAA,+GCrWa7jC,EAAA6yB,eACXmY,QAASjD,GAAI,QAAS13B,QAAS,QAC/B04B,OAAQhB,GAAI,QAAS13B,QAAS,OAAQ+7B,OAAQ,kBAC9C9D,UACEP,GAAI,kDACJwB,WAAY,IAAK,KACjBf,UAAW,kDACXoE,KAAM,+CCtBV,SAAA7gB,GAA4BpoB,GAC1B,QAASA,KAAUA,EAAY,SAAOA,EAAS,oDADjD3D,EAAA+rB,YAAAA,uCCgHA,SAAAvJ,GAA4BH,GAC1B,MAAyBpf,UAAlBof,EAAY,MAGrB,QAAA80B,GAAkC90B,GAChC,GAAIS,EAAWT,GAAO,CACpB,GAAM+0B,GAAS5rB,EAAAE,gBAAgBrJ,EAAKsJ,SAAU1Q,EAAAC,KACxCm8B,EAAY7rB,EAAAE,gBAAgBrJ,EAAKsJ,SAAU1Q,EAAAE,OAEjD,OAAOi8B,IAAUC,EAGnB,OAAO,EAGT,QAAAv0B,GAA2BT,GACzB,QAASA,EAAW,KAGtB,QAAAM,GAA4BN,GAC1B,MAAyBpf,UAAlBof,EAAY,MAOrB,QAAAgC,GAA0BhC,GACxB,GAAIG,EAAYH,GACd,MAAOi1B,GAAej1B,EAExB,IAAIM,EAAYN,GACd,MAAOk1B,GAAel1B,EAExB,IAAI80B,EAAkB90B,GACpB,MAAOm1B,GAAqBn1B,EAE9B,IAAIS,EAAWT,GACb,MAAOo1B,GAAsBp1B,EAE/B,MAAM,IAAIjhB,OAAMqP,EAAIzL,QAAQie,cAG9B,QAAAy0B,GAA2Br1B,GACzB,MAAIM,GAAYN,GACPk1B,EAAel1B,GAEjBo1B,EAAsBp1B,GAG/B,QAAAi1B,GAAwBj1B,GACf,GAAAs1B,GAAAt1B,EAAAA,KAAeu1B,EAAAnlB,EAAA7qB,OAAAya,GAAA,QACtB,OAAMoQ,GAAA9qB,YACDiwC,GACHv1B,KAAMq1B,EAAkBC,KAI5B,QAAAJ,GAAwBl1B,GACf,GAAA8S,GAAA9S,EAAA8S,MAAcyiB,EAAAnlB,EAAA7qB,OAAAya,GAAA,SACrB,OAAMoQ,GAAA9qB,YACDiwC,GACHziB,MAAOA,EAAMtnB,IAAI6pC,KAIrB,QAAAF,GAA8Bn1B,GAG5B,GAAM+J,GAAA/J,EAAAsJ,SAACuE,EAAA9D,EAAA8D,IAAUF,EAAA5D,EAAA4D,OAAgBrE,EAAA8G,EAAA7qB,OAAAwkB,GAAA,MAAA,WAG1B7Q,EAAA8G,EAAA9G,KAAyB6zB,GAAb/sB,EAAAsJ,SAAa8G,EAAA7qB,OAAAya,GAAA,OAAA,aAEhC,OAAMoQ,GAAA9qB,YACDynC,GACHvf,MAAK4C,EAAA9qB,YACCuoB,GAAOA,IAAGA,MACVF,GAAUA,OAAMA,OAEtB3N,KAAMo1B,GACJl8B,KAAIA,EACJoQ,SAAQA,MAKd,QAAAksB,GAA6Cx1B,GAEzC,MAAO2S,GAAA4gB,gBAAgBvzB,EAAK9G,MAGhC,QAAAk8B,GAA+Bp1B,GAC7B,GAAMlE,GAASkE,EAAKlE,OACd25B,EAAgB35B,GAAUA,EAAOgyB,QACjC4H,EAAkBD,GAAkBz1B,EAAK9G,OAASyZ,EAAAgD,MACtDpb,EAAAC,UAAU,YAAa,QAASi7B,EAAcv7B,MAC1Cy7B,EAAmBF,IACtBA,EAAcx7B,MAAQ+F,EAAK9G,OAASyZ,EAAA+C,MACb,cAAvB+f,EAAcv7B,MAAwB8F,EAAK9G,OAASyZ,EAAAgD,KAGvD,OAAI6f,GAAoCx1B,GAElCmJ,EAAAsnB,SAASzwB,EAAKsJ,UACTssB,EAAoB51B,GAIzB21B,GAAoBD,EACfG,EAAiB71B,EAAM21B,EAAkBD,GAG3C11B,EAEA81B,EAAc9zB,UAAUhC,GAInC,QAAA41B,GAA6B51B,GAC3B,GAAM+1B,GAAO5sB,EAAAE,gBAAgBrJ,EAAKsJ,SAAU1Q,EAAAQ,GACtC48B,EAAO7sB,EAAAE,gBAAgBrJ,EAAKsJ,SAAU1Q,EAAAS,GACtC48B,EAAQ9sB,EAAAE,gBAAgBrJ,EAAKsJ,SAAU1Q,EAAAuB,IACvC+7B,EAAQ/sB,EAAAE,gBAAgBrJ,EAAKsJ,SAAU1Q,EAAAwB,GAC7C,IAAK67B,IAAUF,GAAUG,IAAUF,EAAO,CACxC,GAAIG,GAAiB57B,EAAAgW,UAAUvQ,EAU/B,OATIi2B,KAAUF,IACZI,EAAe7sB,SAAS5nB,EAAIy0C,EAAe7sB,SAASuF,SAC7CsnB,GAAe7sB,SAASuF,IAE7BqnB,IAAUF,IACZG,EAAe7sB,SAASrgB,EAAIktC,EAAe7sB,SAAS+F,SAC7C8mB,GAAe7sB,SAAS+F,IAG1B8mB,EAET,MAAOn2B,GAKT,QAAA61B,GAA0B71B,EAAgB21B,EAA2BD,GACnE,GAAIU,IAAc,OAAQ,cAAe,OAAQ,aAC7CC,EAAW97B,EAAA+7B,KAAKt2B,EAAMo2B,EAAWxsC,OAAO,WAExC2sC,EAAah8B,EAAAgW,UAAUvQ,EAAKlE,cACzBy6B,GAAWzI,OAIlB,IAAMhV,GAAUzS,EAAAD,MAAMpG,EAAK9G,KACzB8G,EAAKsJ,SACLtJ,EAAKlE,OAASkE,EAAKlE,OAAOsK,MAAQxlB,QAG9B41C,EAASpmB,EAAA9qB,YACViV,EAAAk8B,KAAKz2B,EAAMo2B,IACdtjB,OAAQujB,IACJ97B,EAAAnZ,KAAKm1C,GAAYp3C,OAAS,GAAK2c,OAAQy6B,MAG7C,IAAIb,EAAiB,CAEnB,GAAIgB,GAAWn8B,EAAAgW,UAAU8lB,EACzBK,GAASx9B,KAAOyZ,EAAA+C,IAEhB,IAAIihB,GAAap8B,EAAAjK,UACfgf,EAAAge,qBAAqBE,UACrBxtB,EAAKlE,OAAOgyB,QAAQN,UACpB1U,GAAWA,QAASA,EAAQtN,QAAU,KAEpCjR,GAAAnZ,KAAKu1C,GAAYx3C,OAAS,IAC5Bu3C,EAAS56B,QAAU5C,KAAMy9B,IAG3BH,EAAU1jB,MAAM7xB,KAAKy1C,GAGvB,GAAIf,EAAkB,CAEpB,GAAIiB,GAAYr8B,EAAAgW,UAAU8lB,EAC1BO,GAAU19B,KAAOyZ,EAAA8C,KAEjB,IAAIkhB,GAAap8B,EAAAjK,UACfgf,EAAAge,qBAAqBC,WACrBvtB,EAAKlE,OAAOgyB,QAAQP,WACpBzU,GAAWA,QAASA,EAAQtN,QAAU,KAEpCjR,GAAAnZ,KAAKu1C,GAAYx3C,OAAS,IAC5By3C,EAAU96B,QAAU5C,KAAMy9B,IAE5BH,EAAU1jB,MAAM7xB,KAAK21C,GAEvB,MAAOJ,GAMT,QAAAK,GAAoBC,EAAWpG,GAY7B,MAXAA,GAAUx/B,QAAQ,SAAS0K,GAEzB,GAAMm7B,IAAgB,QAAS,OAAQ,QAAS,WAAY,MAAO,aAAa/5B,OAAO,SAACtf,EAAGqC,GAIzF,MAHsBa,UAAlBgb,EAAS7b,KACXrC,EAAEqC,GAAO6b,EAAS7b,IAEbrC,OAELqC,EAAMwa,EAAAqK,KAAKmyB,EACfD,GAAK/2C,GAAO+2C,EAAK/2C,IAAQ6b,IAEpBk7B,EAIT,QAAAE,GAAuBh3B,EAAwC82B,GAgB7D,MAhB6D,UAAAA,IAAAA,MAEzDx2B,EAAYN,GACdA,EAAK8S,MAAM5hB,QAAQ,SAAS4hB,GACtBrS,EAAWqS,GACb+jB,EAAWC,EAAMvL,EAAWmF,UAAU5d,EAAMxJ,WAE5C0tB,EAAclkB,EAAOgkB,KAGhB32B,EAAYH,IACrB62B,EAAWC,EAAMvL,EAAWmF,UAAU1wB,EAAKwN,QAC3CwpB,EAAch3B,EAAKA,KAAM82B,IAEzBD,EAAWC,EAAMvL,EAAWmF,UAAU1wB,EAAKsJ,WAEtCwtB,EAIT,QAAApG,GAA0B1wB,GACxB,MAAOzF,GAAAiF,KAAKw3B,EAAch3B,IAG5B,QAAAi3B,GAA0Bj3B,GACxB,QAAI2S,EAAA4gB,gBAAgBvzB,EAAK9G,OAGX,OAFLmN,EAAAD,MAAMpG,EAAK9G,KAAM8G,EAAKsJ,SACrBtJ,EAAKlE,OAASkE,EAAKlE,OAAOsK,MAAQxlB,0EAlX9C0uB,EAAAzwB,EAAA,YACAi3C,EAAAj3C,EAAA,mBAEAsqB,EAAAtqB,EAAA,cAIAuP,EAAAvP,EAAA,SACA8zB,EAAA9zB,EAAA,UACAwnB,EAAAxnB,EAAA,WAEA+Z,EAAA/Z,EAAA,aACA0sC,EAAA1sC,EAAA,cACA0b,EAAA1b,EAAA,SAkHAlB,GAAAwiB,YAAAA,EAIAxiB,EAAAm3C,kBAAAA,EAWAn3C,EAAA8iB,WAAAA,EAIA9iB,EAAA2iB,YAAAA,EAQA3iB,EAAAqkB,UAAAA,EAiNArkB,EAAA+yC,UAAAA,EAIA/yC,EAAAs5C,UAAAA,gKCpUA,SAAA7wB,GAAsB3jB,EAAmB6mB,EAAoB4tB,GAC3D,GAAMh+B,GAAOyZ,EAAA+F,UAAUj2B,GAAKA,EAAE2J,KAAO3J,CAErC,KAAK8X,EAAAC,SAAS7c,EAAAw5C,gBAAiBj+B,GAC7B,MAAO,KAIT,KAAKiQ,EAAAQ,YAAYL,GACf,MAAO,KAIT,IAAMwB,GAAUlS,EAAAyC,qBAAqB2B,OAAO,SAACo6B,EAAIz+B,GAC/C,GAAIwQ,EAAAE,gBAAgBC,EAAU3Q,GAAU,CACtC,GAAM4iB,GAAajS,EAAS3Q,IAC3B4B,EAAAzZ,QAAQy6B,GAAcA,GAAcA,IAAarqB,QAAQ,SAAC0K,GACrDyD,EAAAmY,WAAW5b,KAAcA,EAASwF,WACpCg2B,EAAGn2C,MACD0X,QAASA,EACTiD,SAAUA,MAKlB,MAAOw7B,OAGT,IAAuB,IAAnBtsB,EAAQ3rB,OACV,MAAO,KAIT,IAAMk4C,GAAYh4B,EAAAmY,WAAWlO,EAAS5nB,GAChC41C,EAAYj4B,EAAAmY,WAAWlO,EAASrgB,GAChCsuC,EAAel4B,EAAAmY,WAAWlO,EAAS5nB,MAAQ4nB,EAAS5nB,EAAE0f,UACtDo2B,EAAen4B,EAAAmY,WAAWlO,EAASrgB,MAAQqgB,EAASrgB,EAAEmY,SAE5D,IAAIm2B,IAAiBC,EAAc,CACjC,GAAMjsB,GAAegsB,EAAe3+B,EAAAQ,EAAIR,EAAAS,EAClCuC,EAAW0N,EAASiC,GACpBksB,EAAwB77B,EAASwF,UACjCs2B,EAAoB97B,EAASkC,MAE/B65B,EAA2B,IAU/B,OAREA,GADqB/2C,SAAnBgb,EAASwK,MACGxK,EAASwK,MACd7L,EAAAC,SAAS7c,EAAAi6C,uBAAwB1+B,IAEZtY,SAAhBs2C,EAA4B,OAE5BA,EAGXS,GAA+B,SAAhBA,EAKhBD,GAAqBA,EAAkBtrC,MAAQsrC,EAAkBtrC,OAAS0O,EAAAwN,UAAUyc,QACtF32B,EAAIuB,KAAKvB,EAAIzL,QAAQowC,0BAA0B2E,EAAkBtrC,OAC1D,MAGL+c,EAAAE,gBAAgBC,EAAUiC,IAAiB3S,EAAAQ,EAAIR,EAAAuB,GAAKvB,EAAAwB,KACtDhM,EAAIuB,KAAKvB,EAAIzL,QAAQmwC,sBAAsBvnB,IACpC,MAGJhR,EAAAC,SAASulB,EAAA3nB,QAASq/B,IAMrBvsB,eAAgBqsB,EAAgBD,EAAY1+B,EAAAS,EAAI,KAASg+B,EAAYz+B,EAAAQ,EAAI,KACzEmS,aAAcA,EACdT,QAASA,EACTU,OAAQmsB,IARRvpC,EAAIuB,KAAKvB,EAAIzL,QAAQqwC,iCAAiCyE,IAC/C,MAhBA,KA0BX,MAAO,sDA9HT,IAAArpC,GAAAvP,EAAA,SAEAkhC,EAAAlhC,EAAA,eACA+Z,EAAA/Z,EAAA,aACAsqB,EAAAtqB,EAAA,cACAwgB,EAAAxgB,EAAA,cACA8zB,EAAA9zB,EAAA,UACAic,EAAAjc,EAAA,WACA0b,EAAA1b,EAAA,SA+BalB,GAAAw5C,iBAAmBxkB,EAAAyC,IAAKzC,EAAAgD,KAAMhD,EAAAuG,KAAMvG,EAAA8C,MAAO9C,EAAA4C,OAAQ5C,EAAA6C,OAAQ7C,EAAA+C,KAAM/C,EAAAtY,KAAMsY,EAAA0C,MACvE13B,EAAAi6C,wBAA0BjlB,EAAAyC,IAAKzC,EAAAgD,MAK5Ch4B,EAAAyoB,MAAAA,sJCWA,SAAAwrB,GAAiCt1B,GAC/B,QAASu7B,EAAsBv7B,GAQjC,QAAAw7B,GAAwBC,EAAgB3J,GACtC,GAAMvqC,GAAe,GAAI8rC,MAAK,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAmChD,OAlCAhyC,GAAAq6C,iBAAiB9mC,QAAQ,SAAS+mC,GAChC,GAAIC,EAAiBH,EAAME,GACzB,OAAQA,GACN,IAAKE,GAASC,IACZ,KAAM,IAAIr5C,OAAM,+CAClB,KAAKo5C,GAASE,KACZx0C,EAAOgsC,YAAYzB,EAAKkK,cACxB,MACF,KAAKH,GAASI,QAEZ10C,EAAOmsC,SAA6C,EAAnC59B,KAAKomC,MAAMpK,EAAKqK,WAAa,GAC9C,MACF,KAAKN,GAASO,MACZ70C,EAAOmsC,SAAS5B,EAAKqK,WACrB,MACF,KAAKN,GAASQ,KACZ90C,EAAOksC,QAAQ3B,EAAKwK,UACpB,MACF,KAAKT,GAASU,MACZh1C,EAAOosC,SAAS7B,EAAK0K,WACrB,MACF,KAAKX,GAASY,QACZl1C,EAAOqsC,WAAW9B,EAAK4K,aACvB,MACF,KAAKb,GAASc,QACZp1C,EAAOssC,WAAW/B,EAAK8K,aACvB,MACF,KAAKf,GAASgB,aACZt1C,EAAOusC,gBAAgBhC,EAAKgL,sBAM7Bv1C,EAuBT,QAAAw1C,GAAgC/8B,GAC9B,QAASg9B,EAAqBh9B,GA4BhC,QAAA47B,GAAiC/E,EAAwB72B,GACvD,GAAIi9B,GAAkBpG,EAAaxxC,WAC/B63C,EAAcl9B,EAAS3a,WACrB0nC,EAAQkQ,EAAgBr4C,QAAQs4C,EACtC,OAAOnQ,IAAQ,IAEX/sB,IAAa67B,EAASc,SACZ,IAAV5P,GACoC,MAApCkQ,EAAgBz2C,OAAOumC,EAAM,IAOnC,QAAApc,GAA0BkmB,EAAwBvkC,GAGhD,QAAA6qC,GAAcn9B,GACZ,MAAIA,KAAa67B,EAASI,QAEjB,YAAYrc,EAAQ,OAEjB5f,EAAQ,IAAI4f,EAAQ,IAPlC,GAAMA,GAAY,UAAUttB,EAAK,KAW7B/H,EAAIlJ,EAAAq6C,iBAAiBh7B,OAAO,SAAC08B,EAAkBC,GAIjD,MAHIzB,GAAiB/E,EAAcwG,KACjCD,EAAGC,GAAMF,EAAKE,IAETD,MAST,OANI7yC,GAAEwnC,KAAO9zB,EAAAnZ,KAAKyF,GAAG1H,OAAS,IAC5BiP,EAAIuB,KAAKvB,EAAIzL,QAAQuwC,oBAAoBC,UAClCtsC,GAAEwnC,IACTxnC,EAAEunC,KAAOqL,EAAKtB,EAASQ,OAGlBl5B,EAAA6wB,aAAazpC,GAItB,QAAAq9B,GAA6B5nB,GAC3B,GAAKA,EAIL,MAAI47B,GAAiB57B,EAAU67B,EAASc,SAC/B,SAGLf,EAAiB57B,EAAU67B,EAASY,SAC/B,SAGLb,EAAiB57B,EAAU67B,EAASU,OAC/B,OAGLX,EAAiB57B,EAAU67B,EAASC,MACpCF,EAAiB57B,EAAU67B,EAASQ,MAC/B,MAGLT,EAAiB57B,EAAU67B,EAASO,OAC/B,QAGLR,EAAiB57B,EAAU67B,EAASE,MAC/B,OADT,OAOF,QAAA72B,GAAiClF,EAAoB1N,EAAe4N,GAClE,GAAKF,EAAL,CAIA,GAAIs9B,MACA3yB,EAAa,GACX4yB,EAAU3B,EAAiB57B,EAAU67B,EAASE,KAEhDH,GAAiB57B,EAAU67B,EAASI,WAEtCtxB,EAAa,iBAAiBrY,EAAK,KAGjCspC,EAAiB57B,EAAU67B,EAASO,QAEtCkB,EAAe34C,KAAKub,KAAoB,EAAQ,KAAO,MAGrD07B,EAAiB57B,EAAU67B,EAASC,KACtCwB,EAAe34C,KAAKub,EAAkB,KAAO,MACpC07B,EAAiB57B,EAAU67B,EAASQ,OAC7CiB,EAAe34C,KAAK,MAAQ44C,EAAU,IAAM,KAG1CA,GACFD,EAAe34C,KAAKub,EAAkB,KAAO,KAG/C,IAAIs9B,KAEA5B,GAAiB57B,EAAU67B,EAASU,QACtCiB,EAAe74C,KAAK,MAElBi3C,EAAiB57B,EAAU67B,EAASY,UACtCe,EAAe74C,KAAK,MAElBi3C,EAAiB57B,EAAU67B,EAASc,UACtCa,EAAe74C,KAAK,MAElBi3C,EAAiB57B,EAAU67B,EAASgB,eACtCW,EAAe74C,KAAK,KAGtB,IAAI84C,KAiBJ,OAhBIH,GAAez6C,OAAS,GAC1B46C,EAAmB94C,KAAK24C,EAAeh6C,KAAK,MAE1Ck6C,EAAe36C,OAAS,GAC1B46C,EAAmB94C,KAAK64C,EAAel6C,KAAK,MAG1Cm6C,EAAmB56C,OAAS,IAC1B8nB,IAEFA,GAAc,aAEhBA,GAAc,cAAcrY,EAAK,MAAMmrC,EAAmBn6C,KAAK,KAAI,MAI9DqnB,GAAcrmB,QAGvB,QAAAkkC,GAAoCxoB,GAClC,OAAQA,GAEN,IAAK,QACL,IAAK,MACL,IAAK,QACL,IAAK,UACH,OAAO,EAEX,OAAO,kDA/ST,IAIiB67B,GAJjB14B,EAAA5gB,EAAA,cACA0b,EAAA1b,EAAA,UACAuP,EAAAvP,EAAA,UAEA,SAAiBs5C,GACFA,EAAAE,KAAe,OACfF,EAAAO,MAAiB,QACjBP,EAAAC,IAAa,MACbD,EAAAQ,KAAe,OACfR,EAAAU,MAAiB,QACjBV,EAAAY,QAAqB,UACrBZ,EAAAc,QAAqB,UACrBd,EAAAgB,aAA+B,eAC/BhB,EAAA6B,UAAyB,YACzB7B,EAAA8B,cAAiC,gBACjC9B,EAAA+B,mBAA2C,qBAC3C/B,EAAAgC,0BAAyD,4BACzDhC,EAAAiC,iCAAuE,mCAGvEjC,EAAAkC,UAAyB,YACzBlC,EAAAmC,aAA+B,eAC/BnC,EAAAoC,oBAA6C,sBAC7CpC,EAAAqC,eAAmC,iBACnCrC,EAAAsC,oBAA6C,sBAC7CtC,EAAAI,QAAqB,UACrBJ,EAAAuC,YAA6B,cAC7BvC,EAAAwC,aAA+B,eAC/BxC,EAAAyC,iBAAuC,oBAxBrCzC,EAAAx6C,EAAAw6C,WAAAx6C,EAAAw6C,cAmCJx6C,EAAAq6C,kBACXG,EAASE,KACTF,EAASI,QACTJ,EAASO,MACTP,EAASC,IACTD,EAASQ,KACTR,EAASU,MACTV,EAASY,QACTZ,EAASc,QACTd,EAASgB,aAGX,IAAMtB,GAAuCl6C,EAAAq6C,iBAAiBh7B,OAAO,SAACnW,EAAGyV,GAEvE,MADAzV,GAAEyV,IAAY,EACPzV,MAGTlJ,GAAAi0C,iBAAAA,EASAj0C,EAAAm6C,QAAAA,EAuCan6C,EAAAk9C,iBACX1C,EAASuC,YACTvC,EAASyC,iBACTzC,EAAS6B,UACT7B,EAAS8B,cACT9B,EAAS+B,mBACT/B,EAASgC,0BACThC,EAASiC,iCACTjC,EAASwC,aACTxC,EAASmC,aACTnC,EAASoC,oBACTpC,EAASqC,eACTrC,EAASsC,oBAGX,IAAMnB,GAAsC37C,EAAAk9C,gBAAgB79B,OAAO,SAACnW,EAAGyV,GAErE,MADAzV,GAAEyV,IAAY,EACPzV,MAGTlJ,GAAA07C,gBAAAA,EAIa17C,EAAAm9C,WACX3C,EAASE,KACTF,EAASI,QACTJ,EAASO,MACTP,EAASC,IACTD,EAASQ,KACTR,EAASU,MACTV,EAASY,QACTZ,EAASc,QACTd,EAASgB,aACThB,EAASuC,YACTvC,EAASyC,iBACTzC,EAAS6B,UACT7B,EAAS8B,cACT9B,EAAS+B,mBACT/B,EAASgC,0BACThC,EAASiC,iCACTjC,EAASwC,aACTxC,EAASmC,aACTnC,EAASoC,oBACTpC,EAASqC,eACTrC,EAASsC,qBAIX98C,EAAAu6C,iBAAAA,EAeAv6C,EAAAsvB,UAAAA,EA6BAtvB,EAAAumC,aAAAA,EAiCAvmC,EAAA6jB,iBAAAA,EAgEA7jB,EAAAmnC,oBAAAA,oKCjRA,SAAAmM,GAA4B7kC,GAC1B,GAAIA,EAEF,OADAA,EAAOA,EAAK0iC,eAEV,IAAK,IACL,IAAKnxC,GAAAwjB,aACH,MAAO,cACT,KAAK,IACL,IAAKxjB,GAAAwe,SACH,MAAO,UACT,KAAK,IACL,IAAKxe,GAAAse,QACH,MAAO,SACT,KAAK,IACL,IAAKte,GAAAqe,QACH,MAAO,2DAjCf,IAAiB++B,IAAjB,SAAiBA,GACFA,EAAA55B,aAA+B,eAC/B45B,EAAA9+B,QAAqB,UACrB8+B,EAAA5+B,SAAuB,WACvB4+B,EAAA/+B,QAAqB,WAJnB++B,EAAAp9C,EAAAo9C,OAAAp9C,EAAAo9C,UAQJp9C,EAAAwjB,aAAe45B,EAAK55B,aACpBxjB,EAAAse,QAAU8+B,EAAK9+B,QACfte,EAAAwe,SAAW4+B,EAAK5+B,SAChBxe,EAAAqe,QAAU++B,EAAK/+B,QAO5Bre,EAAAszC,YAAAA,uCCPA,SAAAwF,GAAqBl3C,EAAU47B,GAC7B,GAAM6f,KAMN,OALA7f,GAAMjqB,QAAQ,SAAC+P,GACT1hB,EAAIwC,eAAekf,KACrB+5B,EAAK/5B,GAAQ1hB,EAAI0hB,MAGd+5B,EAOT,QAAA1E,GAAqB/2C,EAAU47B,GAC7B,GAAM6f,GAAOzqB,EAAUhxB,EAIvB,OAHA47B,GAAMjqB,QAAQ,SAAC+P,SACN+5B,GAAK/5B,KAEP+5B,EAGT,QAAAp2B,GAAqBhmB,GACnB,MAAIq8C,GAAA9sC,SAASvP,IAAMq8C,EAAA3pC,SAAS1S,IAAMkhC,EAAUlhC,GACnCyE,OAAOzE,GAET0B,EAAU1B,GAGnB,QAAA4b,GAA4B/W,EAAiBzC,GAC3C,MAAOyC,GAAMvC,QAAQF,IAAQ,EAI/B,QAAAsa,GAA2B7X,EAAiBy3C,GAC1C,MAAOz3C,GAAMkI,OAAO,SAAA3K,GAAQ,OAACwZ,EAAS0gC,EAAel6C,KAGvD,QAAA6nC,GAAyBplC,EAAiB03C,GACxC,MAAO13C,GAAMmG,OAAO0R,EAAQ6/B,EAAO13C,IAGrC,QAAAuZ,GAAuBzd,EAAU7B,EAAoDmhC,EAAW52B,GAC9F,GAAI1I,EAAIyd,OACN,MAAOzd,GAAIyd,OAAO9d,KAAK+I,EAASvK,EAAGmhC,EAEnC,KAAK,GAAM76B,KAAKzE,GACVA,EAAIwC,eAAeiC,KACrB66B,EAAOnhC,EAAEwB,KAAK+I,EAAS42B,EAAMt/B,EAAIyE,GAAIA,EAAGzE,GAG5C,OAAOs/B,GAOX,QAAAthB,GAAwBmhB,EAAehhC,GAErC,IAAK,GADDoB,GAAI,EACCkF,EAAI,EAAGA,EAAE06B,EAAIv/B,OAAQ6E,IAC5B,GAAItG,EAAEghC,EAAI16B,GAAIA,EAAGlF,KACf,OAAO,CAGX,QAAO,EAMR,QAAAs8C,GAAyB1c,EAAehhC,GAEvC,IAAK,GADDoB,GAAI,EACCkF,EAAI,EAAGA,EAAE06B,EAAIv/B,OAAQ6E,IAC5B,IAAKtG,EAAEghC,EAAI16B,GAAIA,EAAGlF,KAChB,OAAO,CAGX,QAAO,EAGT,QAAAqmB,GAAwBk2B,GACtB,SAAUzxC,OAAO7E,SAAUs2C,GAM7B,QAAA/qB,GAA0BgrB,OAAW,GAAAC,MAAAzxB,EAAA,EAAAA,EAAA3iB,UAAAhI,OAAA2qB,IAAAyxB,EAAAzxB,EAAA,GAAA3iB,UAAA2iB,EACnC,KAAgB,GAAAC,GAAA,EAAAyxB,EAAAD,EAAAxxB,EAAAyxB,EAAAr8C,OAAA4qB,IAAG,CAAd,GAAMtrB,GAAC+8C,EAAAzxB,EACVuxB,GAAOG,EAAWH,EAAM78C,GAE1B,MAAO68C,GAIT,QAAAG,GAAoBH,EAAWC,GAC7B,GAAmB,gBAARA,IAA4B,OAARA,EAC7B,MAAOD,EAGT,KAAK,GAAMx0C,KAAKy0C,GACTA,EAAIx5C,eAAe+E,IAGTlG,SAAX26C,EAAIz0C,KAGc,gBAAXy0C,GAAIz0C,IAAmBm0C,EAAAn6C,QAAQy6C,EAAIz0C,KAAkB,OAAXy0C,EAAIz0C,GACvDw0C,EAAKx0C,GAAKy0C,EAAIz0C,GACc,gBAAZw0C,GAAKx0C,IAA+B,OAAZw0C,EAAKx0C,GAC7Cw0C,EAAKx0C,GAAKwpB,EAAUirB,EAAIz0C,GAAGE,cAAgBrH,YAAiB47C,EAAIz0C,IAEhEwpB,EAAUgrB,EAAKx0C,GAAIy0C,EAAIz0C,IAG3B,OAAOw0C,GAGT,QAAAxa,GAA0BjiB,EAAanhB,GAIrC,IAAkB,GADduG,GAFEy3C,KACA/8C,KAEYmrB,EAAA,EAAA6xB,EAAA98B,EAAAiL,EAAA6xB,EAAAx8C,OAAA2qB,IAAM,CAAnB,GAAMvC,GAAGo0B,EAAA7xB,EACZ7lB,GAAIvG,EAAE6pB,GACFtjB,IAAKtF,KAGTA,EAAEsF,GAAK,EACPy3C,EAAQz6C,KAAKsmB,IAEf,MAAOm0B,GAYT,QAAAxzB,GAA0B4uB,EAAeqE,GACvC,IAAK,GAAMp7C,KAAO+2C,GAChB,GAAIA,EAAK/0C,eAAehC,IAClBo7C,EAAMp7C,IAAQ+2C,EAAK/2C,IAAQo7C,EAAMp7C,KAAS+2C,EAAK/2C,GACjD,OAAO,CAIb,QAAO,EAKT,QAAAyf,GAAqB9d,GACnB,GAAMk6C,KACN,KAAK,GAAM53C,KAAKtC,GACVA,EAAEK,eAAeiC,IACnB43C,EAAM36C,KAAKS,EAAEsC,GAGjB,OAAO43C,GAGT,QAAArrB,GAA6BhxB,GAC3B,MAAOD,MAAK0C,MAAM1C,KAAKgB,UAAUf,IAGnC,QAAAugC,GAA0B5/B,GACxB,MAAOA,MAAM,GAAQA,KAAM,kDAzL7B,IAAAI,GAAAzB,EAAA,yBACAszC,EAAAtzC,EAAA,YAAQlB,GAAA2S,OAAA6hC,EAAA7hC,OAAQ3S,EAAAmD,QAAAqxC,EAAArxC,QAASnD,EAAAuQ,SAAAikC,EAAAjkC,SAAUvQ,EAAA2T,SAAA6gC,EAAA7gC,SAAU3T,EAAAwQ,SAAAgkC,EAAAhkC,SAAUxQ,EAAA4U,SAAA4/B,EAAA5/B,SAAU5U,EAAA+P,MAAAykC,EAAAzkC,MAAO/P,EAAAiV,YAAAu/B,EAAAv/B,WACxE,IAAAqoC,GAAAp8C,EAAA,YAYAlB,GAAA84C,KAAAA,EAcA94C,EAAA24C,KAAAA,EAQA34C,EAAAinB,KAAAA,EAOAjnB,EAAA6c,SAAAA,EAKA7c,EAAA2d,QAAAA,EAIA3d,EAAAkrC,MAAAA,EAIAlrC,EAAAqf,OAAAA,EAgBArf,EAAA4f,KAAAA,EAaC5f,EAAAy9C,MAAAA,EAUDz9C,EAAAwnB,QAAAA,EAOAxnB,EAAA2yB,UAAAA,EA+BA3yB,EAAAmjC,OAAAA,EAwBAnjC,EAAAuqB,OAAAA,EAWavqB,EAAAyD,KAAOQ,OAAOR,KAE3BzD,EAAA6hB,KAAAA,EAUA7hB,EAAA4yB,UAAAA,EAIA5yB,EAAAmiC,UAAAA,8EC9HA,SAAA+b,GAAwC77B,EACtC87B,EACAC,GADA,SAAAD,IAAAA,EAAAn+C,EAAAq+C,8BACA,SAAAD,IAAAA,EAAAp+C,EAAAs+C,+BAEA,IAAI/iC,GAAOyZ,EAAA+F,UAAU1Y,EAAK9G,MAAQ8G,EAAK9G,KAAK9M,KAAO4T,EAAK9G,KACpDoQ,EAAWtJ,EAAKsJ,SAChB4yB,EAAmBJ,EAAmB5iC,GACtCijC,EAAoBJ,EAAoB7iC,EAE5C,KAAK,GAAIpa,KAAKo9C,GACZ,KAAMA,EAAiBp9C,IAAMwqB,IAC3B,MAAO,6BAAgC4yB,EAAiBp9C,GACtD,eAAmBoa,EAAO,GAIhC,KAAK,GAAIP,KAAW2Q,GAClB,IAAK6yB,EAAkBxjC,GACrB,MAAO,qBAAwBA,EAC7B,oCAAwCO,EAAO,GAIrD,OAAIA,KAASsyB,EAAApW,KAAQ9L,EAAS5nB,GAAM4nB,EAASrgB,EAItC,KAHE,+EAjFX,IAAA0pB,GAAA9zB,EAAA,UAIA0b,EAAA1b,EAAA,UACA2sC,EAAA3sC,EAAA,SAUalB,GAAAq+C,8BACX75C,MAAO,QACP8X,MAAO,IAAK,KACZC,MAAO,IAAK,MAYDvc,EAAAs+C,gCACXliC,IAAKQ,EAAA7M,OAAO,MAAO,SAAU,IAAK,IAAK,OAAQ,QAAS,WACxDuM,KAAMM,EAAA7M,OAAO,MAAO,SAAU,IAAK,IAAK,QAAS,WACjDwM,KAAMK,EAAA7M,OAAO,MAAO,SAAU,IAAK,IAAK,QAAS,WACjDiM,KAAMY,EAAA7M,OAAO,MAAO,SAAU,IAAK,IAAK,QAAS,WACjDmM,OAAQU,EAAA7M,OAAO,MAAO,SAAU,IAAK,IAAK,QAAS,OAAQ,WAC3DoM,OAAQS,EAAA7M,OAAO,MAAO,SAAU,IAAK,IAAK,QAAS,OAAQ,WAC3DgM,MAAOa,EAAA7M,OAAO,MAAO,SAAU,IAAK,IAAK,QAAS,OAAQ,SAAU,UACpEvL,KAAMoY,EAAA7M,OAAO,MAAO,SAAU,OAAQ,QAAS,UAmBjD/P,EAAAk+C,wBAAAA,8DCgCA,SAAAtb,GAAuC9hB,GACrC,OAAKlE,EAAAzZ,QAAQ2d,KACJ,UAAYA,MAAY,QAAUA,KAK7C,QAAA6hB,GAAsC7hB,GACpC,OAAKlE,EAAAzZ,QAAQ2d,KACJ,UAAYA,IAAU,QAAUA,IAK3C,QAAA4hB,GAAgC5hB,GAC9B,OAAKlE,EAAAzZ,QAAQ2d,MACF,UAAYA,oDAxGzB,IAAAlE,GAAA1b,EAAA,SAwFAlB,GAAA4iC,uBAAAA,EAOA5iC,EAAA2iC,sBAAAA,EAOA3iC,EAAA0iC,gBAAAA,oGCxGA1iC,EAAAke,KAAAhd,EAAA,UACAlB,EAAAyjB,UAAAviB,EAAA,eACAlB,EAAAyV,IAAAvU,EAAA,SACAlB,EAAAgb,QAAA9Z,EAAA,aACAlB,EAAAm4C,cAAAj3C,EAAA,kBACA,IAAAu9C,GAAAv9C,EAAA,oBAAQlB,GAAAmkB,QAAAs6B,EAAAt6B,QACRnkB,EAAAme,OAAAjd,EAAA,YACAlB,EAAAwW,KAAAtV,EAAA,UACAlB,EAAAk0C,SAAAhzC,EAAA,cACAlB,EAAA2rB,SAAAzqB,EAAA,cACAlB,EAAA6vB,MAAA3uB,EAAA,WACAlB,EAAAie,SAAA/c,EAAA,cACAlB,EAAA6mB,OAAA3lB,EAAA,YACAlB,EAAAub,KAAAra,EAAA,UACAlB,EAAAmgB,MAAAjf,EAAA,WACAlB,EAAA2D,KAAAzC,EAAA,UACAlB,EAAAqiB,KAAAnhB,EAAA,UACAlB,EAAAyoB,MAAAvnB,EAAA,WACAlB,EAAA2e,SAAAzd,EAAA,cACAlB,EAAAsmB,UAAAplB,EAAA,eACAlB,EAAAyO,KAAAvN,EAAA,UACAlB,EAAAu9B,KAAAr8B,EAAA,UACAlB,EAAA0+C,SAAAx9C,EAAA,cAEalB,EAAAmV,QAAkBjU,EAAQ,mBAAmBiU","sourceRoot":"","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var json = typeof JSON !== 'undefined' ? JSON : require('jsonify');\n\nmodule.exports = function (obj, opts) {\n    if (!opts) opts = {};\n    if (typeof opts === 'function') opts = { cmp: opts };\n    var space = opts.space || '';\n    if (typeof space === 'number') space = Array(space+1).join(' ');\n    var cycles = (typeof opts.cycles === 'boolean') ? opts.cycles : false;\n    var replacer = opts.replacer || function(key, value) { return value; };\n\n    var cmp = opts.cmp && (function (f) {\n        return function (node) {\n            return function (a, b) {\n                var aobj = { key: a, value: node[a] };\n                var bobj = { key: b, value: node[b] };\n                return f(aobj, bobj);\n            };\n        };\n    })(opts.cmp);\n\n    var seen = [];\n    return (function stringify (parent, key, node, level) {\n        var indent = space ? ('\\n' + new Array(level + 1).join(space)) : '';\n        var colonSeparator = space ? ': ' : ':';\n\n        if (node && node.toJSON && typeof node.toJSON === 'function') {\n            node = node.toJSON();\n        }\n\n        node = replacer.call(parent, key, node);\n\n        if (node === undefined) {\n            return;\n        }\n        if (typeof node !== 'object' || node === null) {\n            return json.stringify(node);\n        }\n        if (isArray(node)) {\n            var out = [];\n            for (var i = 0; i < node.length; i++) {\n                var item = stringify(node, i, node[i], level+1) || json.stringify(null);\n                out.push(indent + space + item);\n            }\n            return '[' + out.join(',') + indent + ']';\n        }\n        else {\n            if (seen.indexOf(node) !== -1) {\n                if (cycles) return json.stringify('__cycle__');\n                throw new TypeError('Converting circular structure to JSON');\n            }\n            else seen.push(node);\n\n            var keys = objectKeys(node).sort(cmp && cmp(node));\n            var out = [];\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                var value = stringify(node, key, node[key], level+1);\n\n                if(!value) continue;\n\n                var keyValue = json.stringify(key)\n                    + colonSeparator\n                    + value;\n                ;\n                out.push(indent + space + keyValue);\n            }\n            seen.splice(seen.indexOf(node), 1);\n            return '{' + out.join(',') + indent + '}';\n        }\n    })({ '': obj }, '', obj, 0);\n};\n\nvar isArray = Array.isArray || function (x) {\n    return {}.toString.call(x) === '[object Array]';\n};\n\nvar objectKeys = Object.keys || function (obj) {\n    var has = Object.prototype.hasOwnProperty || function () { return true };\n    var keys = [];\n    for (var key in obj) {\n        if (has.call(obj, key)) keys.push(key);\n    }\n    return keys;\n};\n","exports.parse = require('./lib/parse');\nexports.stringify = require('./lib/stringify');\n","var at, // The index of the current character\n    ch, // The current character\n    escapee = {\n        '\"':  '\"',\n        '\\\\': '\\\\',\n        '/':  '/',\n        b:    '\\b',\n        f:    '\\f',\n        n:    '\\n',\n        r:    '\\r',\n        t:    '\\t'\n    },\n    text,\n\n    error = function (m) {\n        // Call error when something is wrong.\n        throw {\n            name:    'SyntaxError',\n            message: m,\n            at:      at,\n            text:    text\n        };\n    },\n    \n    next = function (c) {\n        // If a c parameter is provided, verify that it matches the current character.\n        if (c && c !== ch) {\n            error(\"Expected '\" + c + \"' instead of '\" + ch + \"'\");\n        }\n        \n        // Get the next character. When there are no more characters,\n        // return the empty string.\n        \n        ch = text.charAt(at);\n        at += 1;\n        return ch;\n    },\n    \n    number = function () {\n        // Parse a number value.\n        var number,\n            string = '';\n        \n        if (ch === '-') {\n            string = '-';\n            next('-');\n        }\n        while (ch >= '0' && ch <= '9') {\n            string += ch;\n            next();\n        }\n        if (ch === '.') {\n            string += '.';\n            while (next() && ch >= '0' && ch <= '9') {\n                string += ch;\n            }\n        }\n        if (ch === 'e' || ch === 'E') {\n            string += ch;\n            next();\n            if (ch === '-' || ch === '+') {\n                string += ch;\n                next();\n            }\n            while (ch >= '0' && ch <= '9') {\n                string += ch;\n                next();\n            }\n        }\n        number = +string;\n        if (!isFinite(number)) {\n            error(\"Bad number\");\n        } else {\n            return number;\n        }\n    },\n    \n    string = function () {\n        // Parse a string value.\n        var hex,\n            i,\n            string = '',\n            uffff;\n        \n        // When parsing for string values, we must look for \" and \\ characters.\n        if (ch === '\"') {\n            while (next()) {\n                if (ch === '\"') {\n                    next();\n                    return string;\n                } else if (ch === '\\\\') {\n                    next();\n                    if (ch === 'u') {\n                        uffff = 0;\n                        for (i = 0; i < 4; i += 1) {\n                            hex = parseInt(next(), 16);\n                            if (!isFinite(hex)) {\n                                break;\n                            }\n                            uffff = uffff * 16 + hex;\n                        }\n                        string += String.fromCharCode(uffff);\n                    } else if (typeof escapee[ch] === 'string') {\n                        string += escapee[ch];\n                    } else {\n                        break;\n                    }\n                } else {\n                    string += ch;\n                }\n            }\n        }\n        error(\"Bad string\");\n    },\n\n    white = function () {\n\n// Skip whitespace.\n\n        while (ch && ch <= ' ') {\n            next();\n        }\n    },\n\n    word = function () {\n\n// true, false, or null.\n\n        switch (ch) {\n        case 't':\n            next('t');\n            next('r');\n            next('u');\n            next('e');\n            return true;\n        case 'f':\n            next('f');\n            next('a');\n            next('l');\n            next('s');\n            next('e');\n            return false;\n        case 'n':\n            next('n');\n            next('u');\n            next('l');\n            next('l');\n            return null;\n        }\n        error(\"Unexpected '\" + ch + \"'\");\n    },\n\n    value,  // Place holder for the value function.\n\n    array = function () {\n\n// Parse an array value.\n\n        var array = [];\n\n        if (ch === '[') {\n            next('[');\n            white();\n            if (ch === ']') {\n                next(']');\n                return array;   // empty array\n            }\n            while (ch) {\n                array.push(value());\n                white();\n                if (ch === ']') {\n                    next(']');\n                    return array;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad array\");\n    },\n\n    object = function () {\n\n// Parse an object value.\n\n        var key,\n            object = {};\n\n        if (ch === '{') {\n            next('{');\n            white();\n            if (ch === '}') {\n                next('}');\n                return object;   // empty object\n            }\n            while (ch) {\n                key = string();\n                white();\n                next(':');\n                if (Object.hasOwnProperty.call(object, key)) {\n                    error('Duplicate key \"' + key + '\"');\n                }\n                object[key] = value();\n                white();\n                if (ch === '}') {\n                    next('}');\n                    return object;\n                }\n                next(',');\n                white();\n            }\n        }\n        error(\"Bad object\");\n    };\n\nvalue = function () {\n\n// Parse a JSON value. It could be an object, an array, a string, a number,\n// or a word.\n\n    white();\n    switch (ch) {\n    case '{':\n        return object();\n    case '[':\n        return array();\n    case '\"':\n        return string();\n    case '-':\n        return number();\n    default:\n        return ch >= '0' && ch <= '9' ? number() : word();\n    }\n};\n\n// Return the json_parse function. It will have access to all of the above\n// functions and variables.\n\nmodule.exports = function (source, reviver) {\n    var result;\n    \n    text = source;\n    at = 0;\n    ch = ' ';\n    result = value();\n    white();\n    if (ch) {\n        error(\"Syntax error\");\n    }\n\n    // If there is a reviver function, we recursively walk the new structure,\n    // passing each name/value pair to the reviver function for possible\n    // transformation, starting with a temporary root object that holds the result\n    // in an empty key. If there is not a reviver function, we simply return the\n    // result.\n\n    return typeof reviver === 'function' ? (function walk(holder, key) {\n        var k, v, value = holder[key];\n        if (value && typeof value === 'object') {\n            for (k in value) {\n                if (Object.prototype.hasOwnProperty.call(value, k)) {\n                    v = walk(value, k);\n                    if (v !== undefined) {\n                        value[k] = v;\n                    } else {\n                        delete value[k];\n                    }\n                }\n            }\n        }\n        return reviver.call(holder, key, value);\n    }({'': result}, '')) : result;\n};\n","var cx = /[\\u0000\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    escapable = /[\\\\\\\"\\x00-\\x1f\\x7f-\\x9f\\u00ad\\u0600-\\u0604\\u070f\\u17b4\\u17b5\\u200c-\\u200f\\u2028-\\u202f\\u2060-\\u206f\\ufeff\\ufff0-\\uffff]/g,\n    gap,\n    indent,\n    meta = {    // table of character substitutions\n        '\\b': '\\\\b',\n        '\\t': '\\\\t',\n        '\\n': '\\\\n',\n        '\\f': '\\\\f',\n        '\\r': '\\\\r',\n        '\"' : '\\\\\"',\n        '\\\\': '\\\\\\\\'\n    },\n    rep;\n\nfunction quote(string) {\n    // If the string contains no control characters, no quote characters, and no\n    // backslash characters, then we can safely slap some quotes around it.\n    // Otherwise we must also replace the offending characters with safe escape\n    // sequences.\n    \n    escapable.lastIndex = 0;\n    return escapable.test(string) ? '\"' + string.replace(escapable, function (a) {\n        var c = meta[a];\n        return typeof c === 'string' ? c :\n            '\\\\u' + ('0000' + a.charCodeAt(0).toString(16)).slice(-4);\n    }) + '\"' : '\"' + string + '\"';\n}\n\nfunction str(key, holder) {\n    // Produce a string from holder[key].\n    var i,          // The loop counter.\n        k,          // The member key.\n        v,          // The member value.\n        length,\n        mind = gap,\n        partial,\n        value = holder[key];\n    \n    // If the value has a toJSON method, call it to obtain a replacement value.\n    if (value && typeof value === 'object' &&\n            typeof value.toJSON === 'function') {\n        value = value.toJSON(key);\n    }\n    \n    // If we were called with a replacer function, then call the replacer to\n    // obtain a replacement value.\n    if (typeof rep === 'function') {\n        value = rep.call(holder, key, value);\n    }\n    \n    // What happens next depends on the value's type.\n    switch (typeof value) {\n        case 'string':\n            return quote(value);\n        \n        case 'number':\n            // JSON numbers must be finite. Encode non-finite numbers as null.\n            return isFinite(value) ? String(value) : 'null';\n        \n        case 'boolean':\n        case 'null':\n            // If the value is a boolean or null, convert it to a string. Note:\n            // typeof null does not produce 'null'. The case is included here in\n            // the remote chance that this gets fixed someday.\n            return String(value);\n            \n        case 'object':\n            if (!value) return 'null';\n            gap += indent;\n            partial = [];\n            \n            // Array.isArray\n            if (Object.prototype.toString.apply(value) === '[object Array]') {\n                length = value.length;\n                for (i = 0; i < length; i += 1) {\n                    partial[i] = str(i, value) || 'null';\n                }\n                \n                // Join all of the elements together, separated with commas, and\n                // wrap them in brackets.\n                v = partial.length === 0 ? '[]' : gap ?\n                    '[\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + ']' :\n                    '[' + partial.join(',') + ']';\n                gap = mind;\n                return v;\n            }\n            \n            // If the replacer is an array, use it to select the members to be\n            // stringified.\n            if (rep && typeof rep === 'object') {\n                length = rep.length;\n                for (i = 0; i < length; i += 1) {\n                    k = rep[i];\n                    if (typeof k === 'string') {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            else {\n                // Otherwise, iterate through all of the keys in the object.\n                for (k in value) {\n                    if (Object.prototype.hasOwnProperty.call(value, k)) {\n                        v = str(k, value);\n                        if (v) {\n                            partial.push(quote(k) + (gap ? ': ' : ':') + v);\n                        }\n                    }\n                }\n            }\n            \n        // Join all of the member texts together, separated with commas,\n        // and wrap them in braces.\n\n        v = partial.length === 0 ? '{}' : gap ?\n            '{\\n' + gap + partial.join(',\\n' + gap) + '\\n' + mind + '}' :\n            '{' + partial.join(',') + '}';\n        gap = mind;\n        return v;\n    }\n}\n\nmodule.exports = function (value, replacer, space) {\n    var i;\n    gap = '';\n    indent = '';\n    \n    // If the space parameter is a number, make an indent string containing that\n    // many spaces.\n    if (typeof space === 'number') {\n        for (i = 0; i < space; i += 1) {\n            indent += ' ';\n        }\n    }\n    // If the space parameter is a string, it will be used as the indent string.\n    else if (typeof space === 'string') {\n        indent = space;\n    }\n\n    // If there is a replacer, it must be a function or an array.\n    // Otherwise, throw an error.\n    rep = replacer;\n    if (replacer && typeof replacer !== 'function'\n    && (typeof replacer !== 'object' || typeof replacer.length !== 'number')) {\n        throw new Error('JSON.stringify');\n    }\n    \n    // Make a fake root object containing our value under the key of ''.\n    // Return the result of stringifying the value.\n    return str('', {'': value});\n};\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n                t[p[i]] = s[p[i]];\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [0, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function (m, exports) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    };\r\n\r\n    __values = function (o) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n        if (m) return m.call(o);\r\n        return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), q = [], c, i;\r\n        return i = { next: verb(\"next\"), \"throw\": verb(\"throw\"), \"return\": verb(\"return\") }, i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { return function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]), next(); }); }; }\r\n        function next() { if (!c && q.length) resume((c = q.shift())[0], c[1]); }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(c[3], e); } }\r\n        function step(r) { r.done ? settle(c[2], r) : r.value[0] === \"yield\" ? settle(c[2], { value: r.value[1], done: false }) : Promise.resolve(r.value[1]).then(r.value[0] === \"delegate\" ? delegate : fulfill, reject); }\r\n        function delegate(r) { step(r.done ? r : { value: [\"yield\", r.value], done: false }); }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { c = void 0, f(v), next(); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i = { next: verb(\"next\"), \"throw\": verb(\"throw\", function (e) { throw e; }), \"return\": verb(\"return\", function (v) { return { value: v, done: true }; }) };\r\n        return o = __asyncValues(o), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { return function (v) { return { value: [\"delegate\", (o[n] || f).call(o, v)], done: false }; }; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator];\r\n        return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n});","import {isMarkType} from './marks/marktypes';\n\n/**\n * Parse an event selector string.\n * Returns an array of event stream definitions.\n */\nexport default function(selector, source) {\n  DEFAULT_SOURCE = source || VIEW;\n  return parseMerge(selector.trim()).map(parseSelector);\n}\n\nvar VIEW   = 'view',\n    LBRACK = '[',\n    RBRACK = ']',\n    LBRACE = '{',\n    RBRACE = '}',\n    COLON  = ':',\n    COMMA  = ',',\n    NAME   = '@',\n    GT     = '>';\n\nvar ILLEGAL = /[\\[\\]\\{\\}]/,\n    DEFAULT_SOURCE;\n\nfunction find(s, i, endChar, pushChar, popChar) {\n  var count = 0,\n      n = s.length,\n      c;\n  for (; i<n; ++i) {\n    c = s[i];\n    if (!count && c === endChar) return i;\n    else if (popChar && popChar.indexOf(c) >= 0) --count;\n    else if (pushChar && pushChar.indexOf(c) >= 0) ++count;\n  }\n  return i;\n}\n\nfunction parseMerge(s) {\n  var output = [],\n      start = 0,\n      n = s.length,\n      i = 0;\n\n  while (i < n) {\n    i = find(s, i, COMMA, LBRACK + LBRACE, RBRACK + RBRACE);\n    output.push(s.substring(start, i).trim());\n    start = ++i;\n  }\n\n  if (output.length === 0) {\n    throw 'Empty event selector: ' + s;\n  }\n  return output;\n}\n\nfunction parseSelector(s) {\n  return s[0] === '['\n    ? parseBetween(s)\n    : parseStream(s);\n}\n\nfunction parseBetween(s) {\n  var start = 1,\n      n = s.length,\n      i = 1,\n      b, stream;\n\n  i = find(s, i, RBRACK, LBRACK, RBRACK);\n  if (i === n) {\n    throw 'Empty between selector: ' + s;\n  }\n\n  b = parseMerge(s.substring(start, i));\n  if (b.length !== 2) {\n    throw 'Between selector must have two elements: ' + s;\n  }\n\n  s = s.slice(i + 1).trim();\n  if (s[0] !== GT) {\n    throw 'Expected \\'>\\' after between selector: ' + s;\n  }\n\n  b = b.map(parseSelector);\n\n  stream = parseSelector(s.slice(1).trim());\n  if (stream.between) {\n    return {\n      between: b,\n      stream: stream\n    };\n  } else {\n    stream.between = b;\n  }\n\n  return stream;\n}\n\nfunction parseStream(s) {\n  var stream = {source: DEFAULT_SOURCE},\n      source = [],\n      throttle = [0, 0],\n      markname = 0,\n      start = 0,\n      n = s.length,\n      i = 0, j,\n      filter;\n\n  // extract throttle from end\n  if (s[n-1] === RBRACE) {\n    i = s.lastIndexOf(LBRACE);\n    if (i >= 0) {\n      try {\n        throttle = parseThrottle(s.substring(i+1, n-1));\n      } catch (e) {\n        throw 'Invalid throttle specification: ' + s;\n      }\n      s = s.slice(0, i).trim();\n      n = s.length;\n    } else throw 'Unmatched right brace: ' + s;\n    i = 0;\n  }\n\n  if (!n) throw s;\n\n  // set name flag based on first char\n  if (s[0] === NAME) markname = ++i;\n\n  // extract first part of multi-part stream selector\n  j = find(s, i, COLON);\n  if (j < n) {\n    source.push(s.substring(start, j).trim());\n    start = i = ++j;\n  }\n\n  // extract remaining part of stream selector\n  i = find(s, i, LBRACK);\n  if (i === n) {\n    source.push(s.substring(start, n).trim());\n  } else {\n    source.push(s.substring(start, i).trim());\n    filter = [];\n    start = ++i;\n    if (start === n) throw 'Unmatched left bracket: ' + s;\n  }\n\n  // extract filters\n  while (i < n) {\n    i = find(s, i, RBRACK);\n    if (i === n) throw 'Unmatched left bracket: ' + s;\n    filter.push(s.substring(start, i).trim());\n    if (i < n-1 && s[++i] !== LBRACK) throw 'Expected left bracket: ' + s;\n    start = ++i;\n  }\n\n  // marshall event stream specification\n  if (!(n = source.length) || ILLEGAL.test(source[n-1])) {\n    throw 'Invalid event selector: ' + s;\n  }\n\n  if (n > 1) {\n    stream.type = source[1];\n    if (markname) {\n      stream.markname = source[0].slice(1);\n    } else if (isMarkType(source[0])) {\n      stream.marktype = source[0];\n    } else {\n      stream.source = source[0];\n    }\n  } else {\n    stream.type = source[0];\n  }\n  if (stream.type.slice(-1) === '!') {\n    stream.consume = true;\n    stream.type = stream.type.slice(0, -1)\n  }\n  if (filter != null) stream.filter = filter;\n  if (throttle[0]) stream.throttle = throttle[0];\n  if (throttle[1]) stream.debounce = throttle[1];\n\n  return stream;\n}\n\nfunction parseThrottle(s) {\n  var a = s.split(COMMA);\n  if (!s.length || a.length > 2) throw s;\n  return a.map(function(_) {\n    var x = +_;\n    if (x !== x) throw s;\n    return x;\n  });\n}\n","import {toSet} from 'vega-util';\n\nexport var ArcMark = 'arc';\nexport var AreaMark = 'area';\nexport var GroupMark = 'group';\nexport var ImageMark = 'image';\nexport var LineMark = 'line';\nexport var PathMark = 'path';\nexport var RectMark = 'rect';\nexport var RuleMark = 'rule';\nexport var ShapeMark = 'shape';\nexport var SymbolMark = 'symbol';\nexport var TextMark = 'text';\n\nexport var marktypes = toSet([\n  '*',\n  'arc',\n  'area',\n  'group',\n  'image',\n  'line',\n  'path',\n  'rect',\n  'rule',\n  'shape',\n  'symbol',\n  'text'\n]);\n\nexport function isMarkType(type) {\n  return marktypes.hasOwnProperty(type);\n}\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.vega = global.vega || {})));\n}(this, (function (exports) { 'use strict';\n\nvar accessor = function(fn, fields, name) {\n  return (\n    fn.fields = fields || [],\n    fn.fname = name,\n    fn\n  );\n}\n\nfunction accessorName(fn) {\n  return fn == null ? null : fn.fname;\n}\n\nfunction accessorFields(fn) {\n  return fn == null ? null : fn.fields;\n}\n\nvar error = function(message) {\n  throw Error(message);\n}\n\nvar splitAccessPath = function(p) {\n  var path = [],\n      q = null,\n      b = 0,\n      n = p.length,\n      s = '',\n      i, j, c;\n\n  p = p + '';\n\n  function push() {\n    path.push(s + p.substring(i, j));\n    s = '';\n    i = j + 1;\n  }\n\n  for (i=j=0; j<n; ++j) {\n    c = p[j];\n    if (c === '\\\\') s += p.substring(i, j), i = ++j;\n    else if (c === q) push(), q = null, b = -1;\n    else if (q) continue;\n    else if (i === b && c === '\"') i = j + 1, q = c;\n    else if (i === b && c === \"'\") i = j + 1, q = c;\n    else if (c === '.' && !b) (j > i) ? push() : (i = j + 1);\n    else if (c === '[') {\n      if (j > i) push();\n      b = i = j + 1;\n    }\n    else if (c === ']') {\n      if (!b) error('Access path missing open bracket: ' + p);\n      if (b > 0) push();\n      b = 0;\n      i = j + 1;\n    }\n  }\n\n  if (b) error('Access path missing closing bracket: ' + p);\n  if (q) error('Access path missing closing quote: ' + p);\n  if (j > i) ++j, push();\n  return path;\n}\n\nvar isArray = Array.isArray;\n\nvar isObject = function(_) {\n  return _ === Object(_);\n}\n\nvar isString = function(_) {\n  return typeof _ === 'string';\n}\n\nfunction $(x) {\n  return isArray(x) ? '[' + x.map($) + ']'\n    : isObject(x) || isString(x) ?\n      // Output valid JSON and JS source strings.\n      // See http://timelessrepo.com/json-isnt-a-javascript-subset\n      JSON.stringify(x).replace('\\u2028','\\\\u2028').replace('\\u2029', '\\\\u2029')\n    : x;\n}\n\nvar field = function(field, name) {\n  var path = splitAccessPath(field),\n      code = 'return _[' + path.map($).join('][') + '];';\n\n  return accessor(\n    Function('_', code),\n    [(field = path.length===1 ? path[0] : field)],\n    name || field\n  );\n}\n\nvar empty = [];\n\nvar id = field('id');\n\nvar identity = accessor(function(_) { return _; }, empty, 'identity');\n\nvar zero = accessor(function() { return 0; }, empty, 'zero');\n\nvar one = accessor(function() { return 1; }, empty, 'one');\n\nvar truthy = accessor(function() { return true; }, empty, 'true');\n\nvar falsy = accessor(function() { return false; }, empty, 'false');\n\nfunction log(method, level, input) {\n  var args = [level].concat([].slice.call(input));\n  console[method].apply(console, args); // eslint-disable-line no-console\n}\n\nvar None  = 0;\nvar Warn  = 1;\nvar Info  = 2;\nvar Debug = 3;\n\nvar logger = function(_) {\n  var level = _ || None;\n  return {\n    level: function(_) {\n      return arguments.length ? (level = +_, this) : level;\n    },\n    warn: function() {\n      if (level >= Warn) log('warn', 'WARN', arguments);\n      return this;\n    },\n    info: function() {\n      if (level >= Info) log('log', 'INFO', arguments);\n      return this;\n    },\n    debug: function() {\n      if (level >= Debug) log('log', 'DEBUG', arguments);\n      return this;\n    }\n  }\n}\n\nvar array = function(_) {\n  return _ != null ? (isArray(_) ? _ : [_]) : [];\n}\n\nvar compare = function(fields, orders) {\n  var idx = [],\n      cmp = (fields = array(fields)).map(function(f, i) {\n        return f == null ? null\n          : (idx.push(i), splitAccessPath(f).map($).join(']['));\n      }),\n      n = idx.length - 1,\n      ord = array(orders),\n      code = 'var u,v;return ',\n      i, j, f, u, v, d, lt, gt;\n\n  if (n < 0) return null;\n\n  for (j=0; j<=n; ++j) {\n    i = idx[j];\n    f = cmp[i];\n    u = '(u=a['+f+'])';\n    v = '(v=b['+f+'])';\n    d = '((v=v instanceof Date?+v:v),(u=u instanceof Date?+u:u))';\n    lt = ord[i] !== 'descending' ? (gt=1, -1) : (gt=-1, 1);\n    code += '(' + u+'<'+v+'||u==null)&&v!=null?' + lt\n      + ':(u>v||v==null)&&u!=null?' + gt\n      + ':'+d+'!==u&&v===v?' + lt\n      + ':v!==v&&u===u?' + gt\n      + (i < n ? ':' : ':0');\n  }\n\n  return accessor(\n    Function('a', 'b', code + ';'),\n    fields.filter(function(_) { return _ != null; })\n  );\n}\n\nvar isFunction = function(_) {\n  return typeof _ === 'function';\n}\n\nvar constant = function(_) {\n  return isFunction(_) ? _ : function() { return _; };\n}\n\nvar extend = function(_) {\n  for (var x, k, i=1, len=arguments.length; i<len; ++i) {\n    x = arguments[i];\n    for (k in x) { _[k] = x[k]; }\n  }\n  return _;\n}\n\nvar extentIndex = function(array, f) {\n  var i = -1,\n      n = array.length,\n      a, b, c, u, v;\n\n  if (f == null) {\n    while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n    u = v = i;\n    while (++i < n) if ((b = array[i]) != null) {\n      if (a > b) a = b, u = i;\n      if (c < b) c = b, v = i;\n    }\n  } else {\n    while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n    u = v = i;\n    while (++i < n) if ((b = f(array[i], i, array)) != null) {\n      if (a > b) a = b, u = i;\n      if (c < b) c = b, v = i;\n    }\n  }\n\n  return [u, v];\n}\n\nvar NULL = {};\n\nvar fastmap = function(input) {\n  var obj = {},\n      map,\n      test;\n\n  function has(key) {\n    return obj.hasOwnProperty(key) && obj[key] !== NULL;\n  }\n\n  map = {\n    size: 0,\n    empty: 0,\n    object: obj,\n    has: has,\n    get: function(key) {\n      return has(key) ? obj[key] : undefined;\n    },\n    set: function(key, value) {\n      if (!has(key)) {\n        ++map.size;\n        if (obj[key] === NULL) --map.empty;\n      }\n      obj[key] = value;\n      return this;\n    },\n    delete: function(key) {\n      if (has(key)) {\n        --map.size;\n        ++map.empty;\n        obj[key] = NULL;\n      }\n      return this;\n    },\n    clear: function() {\n      map.size = map.empty = 0;\n      map.object = obj = {};\n    },\n    test: function(_) {\n      return arguments.length ? (test = _, map) : test;\n    },\n    clean: function() {\n      var next = {},\n          size = 0,\n          key, value;\n      for (key in obj) {\n        value = obj[key];\n        if (value !== NULL && (!test || !test(value))) {\n          next[key] = value;\n          ++size;\n        }\n      }\n      map.size = size;\n      map.empty = 0;\n      map.object = (obj = next);\n    }\n  };\n\n  if (input) Object.keys(input).forEach(function(key) {\n    map.set(key, input[key]);\n  });\n\n  return map;\n}\n\nvar inherits = function(child, parent) {\n  var proto = (child.prototype = Object.create(parent.prototype));\n  proto.constructor = child;\n  return proto;\n}\n\nvar isNumber = function(_) {\n  return typeof _ === 'number';\n}\n\nvar key = function(fields) {\n  fields = fields ? array(fields) : fields;\n  var fn = !(fields && fields.length)\n    ? function() { return ''; }\n    : Function('_', 'return \\'\\'+' +\n        fields.map(function(f) {\n          return '_[' + splitAccessPath(f).map($).join('][') + ']';\n        }).join('+\\'|\\'+') + ';');\n  return accessor(fn, fields, 'key');\n}\n\nvar merge = function(compare, array0, array1, output) {\n  var n0 = array0.length,\n      n1 = array1.length;\n\n  if (!n1) return array0;\n  if (!n0) return array1;\n\n  var merged = output || new array0.constructor(n0 + n1),\n      i0 = 0, i1 = 0, i = 0;\n\n  for (; i0<n0 && i1<n1; ++i) {\n    merged[i] = compare(array0[i0], array1[i1]) > 0\n       ? array1[i1++]\n       : array0[i0++];\n  }\n\n  for (; i0<n0; ++i0, ++i) {\n    merged[i] = array0[i0];\n  }\n\n  for (; i1<n1; ++i1, ++i) {\n    merged[i] = array1[i1];\n  }\n\n  return merged;\n}\n\nvar repeat = function(str, reps) {\n  var s = '';\n  while (--reps >= 0) s += str;\n  return s;\n}\n\nvar pad = function(str, length, padchar, align) {\n  var c = padchar || ' ',\n      s = str + '',\n      n = length - s.length;\n\n  return n <= 0 ? s\n    : align === 'left' ? repeat(c, n) + s\n    : align === 'center' ? repeat(c, ~~(n/2)) + s + repeat(c, Math.ceil(n/2))\n    : s + repeat(c, n);\n}\n\nvar peek = function(array) {\n  return array[array.length - 1];\n}\n\nvar toSet = function(_) {\n  for (var s={}, i=0, n=_.length; i<n; ++i) s[_[i]] = 1;\n  return s;\n}\n\nvar truncate = function(str, length, align, ellipsis) {\n  var e = ellipsis != null ? ellipsis : '\\u2026',\n      s = str + '',\n      n = s.length,\n      l = Math.max(0, length - e.length);\n\n  return n <= length ? s\n    : align === 'left' ? e + s.slice(n - l)\n    : align === 'center' ? s.slice(0, Math.ceil(l/2)) + e + s.slice(n - ~~(l/2))\n    : s.slice(0, l) + e;\n}\n\nvar visitArray = function(array, filter, visitor) {\n  if (array) {\n    var i = 0, n = array.length, t;\n    if (filter) {\n      for (; i<n; ++i) {\n        if (t = filter(array[i])) visitor(t, i, array);\n      }\n    } else {\n      array.forEach(visitor);\n    }\n  }\n}\n\nexports.accessor = accessor;\nexports.accessorName = accessorName;\nexports.accessorFields = accessorFields;\nexports.id = id;\nexports.identity = identity;\nexports.zero = zero;\nexports.one = one;\nexports.truthy = truthy;\nexports.falsy = falsy;\nexports.logger = logger;\nexports.None = None;\nexports.Warn = Warn;\nexports.Info = Info;\nexports.Debug = Debug;\nexports.array = array;\nexports.compare = compare;\nexports.constant = constant;\nexports.error = error;\nexports.extend = extend;\nexports.extentIndex = extentIndex;\nexports.fastmap = fastmap;\nexports.field = field;\nexports.inherits = inherits;\nexports.isArray = isArray;\nexports.isFunction = isFunction;\nexports.isNumber = isNumber;\nexports.isObject = isObject;\nexports.isString = isString;\nexports.key = key;\nexports.merge = merge;\nexports.pad = pad;\nexports.peek = peek;\nexports.repeat = repeat;\nexports.splitAccessPath = splitAccessPath;\nexports.stringValue = $;\nexports.toSet = toSet;\nexports.truncate = truncate;\nexports.visitArray = visitArray;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n","module.exports={\n  \"name\": \"vega-lite\",\n  \"author\": \"Jeffrey Heer, Dominik Moritz, Kanit \\\"Ham\\\" Wongsuphasawat\",\n  \"version\": \"2.0.0-alpha.5\",\n  \"collaborators\": [\n    \"Kanit Wongsuphasawat <kanitw@gmail.com> (http://kanitw.yellowpigz.com)\",\n    \"Dominik Moritz <domoritz@cs.washington.edu> (https://www.domoritz.de)\",\n    \"Jeffrey Heer <jheer@uw.edu> (http://jheer.org)\"\n  ],\n  \"homepage\": \"https://vega.github.io/vega-lite/\",\n  \"description\": \"Vega-lite provides a higher-level grammar for visual analysis, comparable to ggplot or Tableau, that generates complete Vega specifications.\",\n  \"main\": \"build/src/vl.js\",\n  \"types\": \"build/src/vl.d.ts\",\n  \"bin\": {\n    \"vl2png\": \"./bin/vl2png\",\n    \"vl2svg\": \"./bin/vl2svg\",\n    \"vl2vg\": \"./bin/vl2vg\"\n  },\n  \"directories\": {\n    \"test\": \"test\"\n  },\n  \"scripts\": {\n    \"prebuild\": \"mkdir -p build/site build/examples/images build/test-gallery\",\n    \"build\": \"tsc && cp package.json build && browserify src/vl.ts -p tsify -g [ babelify ] -d -s vl | exorcist build/vega-lite.js.map > build/vega-lite.js\",\n    \"postbuild\": \"uglifyjs build/vega-lite.js -cm --in-source-map build/vega-lite.js.map --source-map build/vega-lite.min.js.map > build/vega-lite.min.js && npm run schema\",\n    \"build:images\": \"npm run data && scripts/generate-images.sh\",\n    \"build:toc\": \"bundle exec jekyll build -q && scripts/generate-toc\",\n    \"build:site\": \"browserify site/static/main.ts -p [tsify -p site] -d > build/site/main.js\",\n    \"build:versions\": \"scripts/update-version.sh\",\n    \"build:test-gallery\": \"browserify test-gallery/main.ts -p [tsify -p test-gallery] -d > build/test-gallery/main.js\",\n    \"checkschema\": \"scripts/check-schema.sh\",\n    \"clean\": \"rm -rf build && rm -f vega-lite.* & find -E src test site examples -regex '.*\\\\.(js|js.map|d.ts)' -delete & rm -rf examples/_diff examples/_original examples/_output examples/images && rm -rf data\",\n    \"data\": \"rsync -r node_modules/vega-datasets/data/* data\",\n\n    \"deploy\": \"scripts/deploy.sh\",\n    \"deploy:gh\": \"scripts/deploy-gh.sh\",\n    \"deploy:schema\": \"scripts/deploy-schema.sh\",\n\n    \"prestart\": \"npm run data && npm run build && scripts/index-examples\",\n    \"start\": \"nodemon -x 'npm run build:test-gallery' & browser-sync start --server --files 'build/test-gallery/main.js' --index 'test-gallery/index.html'\",\n    \"poststart\": \"rm examples/all-examples.json\",\n\n    \"preschema\": \"npm run prebuild\",\n    \"schema\": \"typescript-json-schema --required true --noExtraProps true src/spec.ts ExtendedSpec > build/vega-lite-schema.json\",\n\n    \"presite\": \"npm run build && npm run data && npm run build:site && npm run build:toc && npm run build:versions\",\n    \"site\": \"bundle exec jekyll serve\",\n\n    \"lint\": \"tslint -c tslint.json 'src/**/*.ts' 'test/**/*.ts'\",\n\n    \"test\": \"tsc && npm run schema && npm run data && npm run test:nocompile\",\n    \"test:nocompile\": \"npm run test:only && npm run lint && npm run mocha:examples\",\n    \"test:only\": \"nyc --reporter=html --reporter=text-summary npm run mocha:test\",\n    \"test:debug\": \"tsc && npm run schema && npm run data && mocha --recursive --require ./test/babel.ts --debug-brk build/test build/examples\",\n    \"mocha:test\": \"mocha --reporter dot --recursive build/test\",\n    \"mocha:examples\": \"mocha --require ./test/babel.ts --reporter dot --recursive build/examples\",\n\n    \"codecov\": \"nyc report --reporter=json && codecov -f coverage/*.json\",\n    \"watch:build\": \"watchify src/vl.ts -p tsify -g [ babelify ] -v -d -s vl -o 'exorcist build/vega-lite.js.map > build/vega-lite.js'\",\n    \"watch:test\": \"nodemon -x 'npm test'\",\n    \"watch\": \"nodemon -x 'npm run build && npm run test:nocompile' # already ran schema in build\",\n    \"x-compile\": \"./scripts/examples-compile.sh\",\n    \"x-diff\": \"./scripts/examples-diff.sh\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/vega/vega-lite.git\"\n  },\n  \"license\": \"BSD-3-Clause\",\n  \"bugs\": {\n    \"url\": \"https://github.com/vega/vega-lite/issues\"\n  },\n  \"devDependencies\": {\n    \"@types/chai\": \"^3.4.35\",\n    \"@types/highlight.js\": \"^9.1.9\",\n    \"@types/d3\": \"^4.5.0\",\n    \"@types/json-stable-stringify\": \"^1.0.30\",\n    \"@types/mocha\": \"^2.2.39\",\n    \"@types/node\": \"^7.0.5\",\n    \"ajv\": \"5.0.1-beta.1\",\n    \"babel-preset-es2015\": \"^6.22.0\",\n    \"babelify\": \"^7.3.0\",\n    \"browser-sync\": \"~2.18.8\",\n    \"browserify\": \"~14.1.0\",\n    \"browserify-shim\": \"^3.8.13\",\n    \"chai\": \"~3.5.0\",\n    \"cheerio\": \"~0.22.0\",\n    \"codecov\": \"~1.0.1\",\n    \"d3\": \"^4.7.0\",\n    \"exorcist\": \"~0.4.0\",\n    \"highlight.js\": \"^9.9.0\",\n    \"mocha\": \"~3.2.0\",\n    \"nodemon\": \"~1.11.0\",\n    \"nyc\": \"~10.1.2\",\n    \"source-map-support\": \"~0.4.11\",\n    \"tsify\": \"~3.0.1\",\n    \"tslint\": \"~4.5.1\",\n    \"tslint-eslint-rules\": \"^3.4.0\",\n    \"typescript\": \"^2.2.1\",\n    \"typescript-json-schema\": \"^0.10.0\",\n    \"uglify-js\": \"~2.8.4\",\n    \"vega\": \"3.0.0-beta.25\",\n    \"vega-datasets\": \"vega/vega-datasets#gh-pages\",\n    \"vega-embed\": \"3.0.0-beta.5\",\n    \"vega-parser\": \"^1.0.0-beta.38\",\n    \"watchify\": \"~3.9.0\",\n    \"yaml-front-matter\": \"~3.4.0\"\n  },\n  \"dependencies\": {\n    \"json-stable-stringify\": \"~1.0.1\",\n    \"tslib\": \"^1.6.0\",\n    \"vega-util\": \"~1.1.4\",\n    \"yargs\": \"~6.6.0\"\n  }\n}\n","\nexport type AggregateOp = 'argmax' | 'argmin' | 'average' | 'count'\n  | 'distinct' | 'max' | 'mean' | 'median' | 'min' | 'missing' | 'modeskew'\n  | 'q1' | 'q3' | 'stdev' | 'stdevp' | 'sum' | 'valid' | 'values' | 'variance'\n  | 'variancep';\n\nexport const AGGREGATE_OPS: AggregateOp[] = [\n    'values',\n    'count',\n    'valid',\n    'missing',\n    'distinct',\n    'sum',\n    'mean',\n    'average',\n    'variance',\n    'variancep',\n    'stdev',\n    'stdevp',\n    'median',\n    'q1',\n    'q3',\n    'modeskew',\n    'min',\n    'max',\n    'argmin',\n    'argmax',\n];\n\n/** Additive-based aggregation operations.  These can be applied to stack. */\nexport const SUM_OPS: AggregateOp[] = [\n    'count',\n    'sum',\n    'distinct',\n    'valid',\n    'missing'\n];\n\n/**\n * Aggregation operators that always produce values within the range [domainMin, domainMax].\n */\nexport const SHARED_DOMAIN_OPS: AggregateOp[] = [\n    'mean',\n    'average',\n    'median',\n    'q1',\n    'q3',\n    'min',\n    'max',\n];\n","import {DateTime} from './datetime';\nimport {VgAxisEncode, VgAxisBase, VgAxisConfig} from './vega.schema';\n\nexport type AxisOrient = 'top' | 'right' | 'left' | 'bottom';\n\nexport interface AxisConfig extends VgAxisConfig, VlOnlyAxisBase {\n  /**\n   * Whether month names and weekday names should be abbreviated.\n   */\n  shortTimeLabels?: boolean;\n}\n\nexport const defaultAxisConfig: AxisConfig = {\n  labelMaxLength: 25,\n};\n\nexport interface Axis extends VgAxisBase, VlOnlyAxisBase {\n  /**\n   * The padding, in pixels, between axis and text labels.\n   */\n  labelPadding?: number;\n\n  /**\n   * The formatting pattern for axis labels.\n   */\n  format?: string; // default value determined by config.format anyway\n\n  /**\n   * The orientation of the axis. One of top, bottom, left or right. The orientation can be used to further specialize the axis type (e.g., a y axis oriented for the right edge of the chart).\n   */\n  orient?: AxisOrient;\n\n  /**\n   * The offset, in pixels, by which to displace the axis from the edge of the enclosing group or data rectangle.\n   */\n  offset?: number;\n\n  /**\n   * The anchor position of the axis in pixels. For x-axis with top or bottom orientation, this sets the axis group x coordinate. For y-axis with left or right orientation, this sets the axis group y coordinate.\n   *\n   * __Default value__: `0`\n   */\n  position?: number;\n\n  /**\n   * A desired number of ticks, for axes visualizing quantitative scales. The resulting number may be different so that values are \"nice\" (multiples of 2, 5, 10) and lie within the underlying scale's range.\n   * @minimum 0\n   * @TJS-type integer\n   */\n  tickCount?: number;\n\n  /**\n   * A title for the axis. Shows field name and its function by default.\n   */\n  title?: string;\n\n  values?: number[] | DateTime[];\n\n  /**\n   * A non-positive integer indicating z-index of the axis.\n   * If zindex is 0, axes should be drawn behind all chart elements.\n   * To put them in front, use zindex = 1.\n   * @TJS-type integer\n   * @minimum 0\n   */\n  zindex?: number;\n\n  /**\n   * Optional mark definitions for custom axis encoding.\n   */\n  encode?: VgAxisEncode;\n}\n\n\n/**\n * Base object for properties that are shared between Axis and Axis Config.\n * These properties are not in Vega Axis and Axis Config.\n */\nexport interface VlOnlyAxisBase {\n  /**\n   * Truncate labels that are too long.\n   * @minimum 1\n   * @TJS-type integer\n   */\n  labelMaxLength?: number;\n}\n\nexport const AXIS_PROPERTIES:(keyof Axis)[] = [\n  'domain', 'format', 'grid', 'labelPadding', 'labels', 'maxExtent', 'minExtent', 'offset', 'orient', 'position', 'tickCount', 'ticks', 'tickSize', 'title', 'titlePadding', 'values', 'zindex'\n];\n\nexport const VL_ONLY_AXIS_PROPERTIES:(keyof VlOnlyAxisBase)[] = ['labelMaxLength'];\n","import {Channel, ROW, COLUMN, SHAPE, SIZE} from './channel';\n\n/**\n * Binning properties or boolean flag for determining whether to bin data or not.\n */\nexport interface Bin {\n  /**\n   * A two-element (`[min, max]`) array indicating the range of desired bin values.\n   * @minItems 2\n   * @maxItems 2\n   */\n  extent?: number[];\n\n  /**\n   * The number base to use for automatic bin determination (default is base 10).\n   */\n  base?: number;\n  /**\n   * An exact step size to use between bins. If provided, options such as maxbins will be ignored.\n   */\n  step?: number;\n  /**\n   * An array of allowable step sizes to choose from.\n   * @minItems 1\n   */\n  steps?: number[];\n  /**\n   * A minimum allowable step size (particularly useful for integer values).\n   */\n  minstep?: number;\n  /**\n   * Scale factors indicating allowable subdivisions. The default value is [5, 2], which indicates that for base 10 numbers (the default base), the method may consider dividing bin sizes by 5 and/or 2. For example, for an initial step size of 10, the method can check if bin sizes of 2 (= 10/5), 5 (= 10/2), or 1 (= 10/(5*2)) might also satisfy the given constraints.\n   * @minItems 1\n   */\n  divide?: number[];\n  /**\n   * Maximum number of bins.\n   * @minimum 2\n   */\n  maxbins?: number;\n}\n\nexport function autoMaxBins(channel: Channel): number {\n  switch (channel) {\n    case ROW:\n    case COLUMN:\n    case SIZE:\n      // Facets and Size shouldn't have too many bins\n      // We choose 6 like shape to simplify the rule\n    case SHAPE:\n      return 6; // Vega's \"shape\" has 6 distinct values\n    default:\n      return 10;\n  }\n}\n","/*\n * Constants and utilities for encoding channels (Visual variables)\n * such as 'x', 'y', 'color'.\n */\n\nimport {Encoding} from './encoding';\nimport {Facet} from './facet';\nimport {Mark} from './mark';\nimport {RangeType} from './compile/scale/type';\nimport {ScaleType, SCALE_TYPES} from './scale';\nimport {contains, toSet, without} from './util';\n\nexport namespace Channel {\n  // Facet\n  export const ROW: 'row' = 'row';\n  export const COLUMN: 'column' = 'column';\n\n  // Position\n  export const X: 'x' = 'x';\n  export const Y: 'y' = 'y';\n  export const X2: 'x2' = 'x2';\n  export const Y2: 'y2' = 'y2';\n\n  // Mark property with scale\n  export const COLOR: 'color' = 'color';\n  export const SHAPE: 'shape' = 'shape';\n  export const SIZE: 'size' = 'size';\n  export const OPACITY: 'opacity' = 'opacity';\n\n  // Non-scale channel\n  export const TEXT: 'text' = 'text';\n  export const ORDER: 'order' = 'order';\n  export const DETAIL: 'detail' = 'detail';\n}\n\nexport type Channel = keyof Encoding | keyof Facet;\n\nexport const X = Channel.X;\nexport const Y = Channel.Y;\nexport const X2 = Channel.X2;\nexport const Y2 = Channel.Y2;\nexport const ROW = Channel.ROW;\nexport const COLUMN = Channel.COLUMN;\nexport const SHAPE = Channel.SHAPE;\nexport const SIZE = Channel.SIZE;\nexport const COLOR = Channel.COLOR;\nexport const TEXT = Channel.TEXT;\nexport const DETAIL = Channel.DETAIL;\nexport const ORDER = Channel.ORDER;\nexport const OPACITY = Channel.OPACITY;\n\n\nexport const CHANNELS = [X, Y, X2, Y2, ROW, COLUMN, SIZE, SHAPE, COLOR, ORDER, OPACITY, TEXT, DETAIL];\n\n// CHANNELS without COLUMN, ROW\nexport const UNIT_CHANNELS = [X, Y, X2, Y2, SIZE, SHAPE, COLOR, ORDER, OPACITY, TEXT, DETAIL];\n\n// UNIT_CHANNELS without X2, Y2, ORDER, DETAIL, TEXT\nexport const UNIT_SCALE_CHANNELS = [X, Y, SIZE, SHAPE, COLOR, OPACITY];\n\n// UNIT_SCALE_CHANNELS with ROW, COLUMN\nexport const SCALE_CHANNELS = [X, Y, SIZE, SHAPE, COLOR, OPACITY, ROW, COLUMN];\n\n// UNIT_CHANNELS without X, Y, X2, Y2;\nexport const NONSPATIAL_CHANNELS = [SIZE, SHAPE, COLOR, ORDER, OPACITY, TEXT, DETAIL];\n\n// UNIT_SCALE_CHANNELS without X, Y;\nexport const NONSPATIAL_SCALE_CHANNELS = [SIZE, SHAPE, COLOR, OPACITY];\n\n/** Channels that can serve as groupings for stacked charts. */\nexport const STACK_GROUP_CHANNELS = [COLOR, DETAIL, ORDER, OPACITY, SIZE];\n\nexport interface SupportedMark {\n  point?: boolean;\n  tick?: boolean;\n  rule?: boolean;\n  circle?: boolean;\n  square?: boolean;\n  bar?: boolean;\n  rect?: boolean;\n  line?: boolean;\n  area?: boolean;\n  text?: boolean;\n};\n\n/**\n * Return whether a channel supports a particular mark type.\n * @param channel  channel name\n * @param mark the mark type\n * @return whether the mark supports the channel\n */\nexport function supportMark(channel: Channel, mark: Mark) {\n  return mark in getSupportedMark(channel);\n}\n\n/**\n * Return a dictionary showing whether a channel supports mark type.\n * @param channel\n * @return A dictionary mapping mark types to boolean values.\n */\nexport function getSupportedMark(channel: Channel): SupportedMark {\n  switch (channel) {\n    case X:\n    case Y:\n    case COLOR:\n    case DETAIL:\n    case ORDER:    // TODO: revise (order might not support rect, which is not stackable?)\n    case OPACITY:\n    case ROW:\n    case COLUMN:\n      return { // all marks\n        point: true, tick: true, rule: true, circle: true, square: true,\n        bar: true, rect: true, line: true, area: true, text: true\n      };\n    case X2:\n    case Y2:\n      return {\n        rule: true, bar: true, rect: true, area: true\n      };\n    case SIZE:\n      return {\n        point: true, tick: true, rule: true, circle: true, square: true,\n        bar: true, text: true, line: true\n      };\n    case SHAPE:\n      return {point: true};\n    case TEXT:\n      return {text: true};\n  }\n  return {};\n}\n\nexport function hasScale(channel: Channel) {\n  return !contains([DETAIL, TEXT, ORDER], channel);\n}\n\n// Position does not work with ordinal (lookup) scale and sequential (which is only for color)\nconst POSITION_SCALE_TYPE_INDEX = toSet(without(SCALE_TYPES, ['ordinal', 'sequential'] as ScaleType[]));\n\nexport function supportScaleType(channel: Channel, scaleType: ScaleType): boolean {\n  switch (channel) {\n    case ROW:\n    case COLUMN:\n      return scaleType === 'band'; // row / column currently supports band only\n    case X:\n    case Y:\n    case SIZE: // TODO: size and opacity can support ordinal with more modification\n    case OPACITY:\n      // Although it generally doesn't make sense to use band with size and opacity,\n      // it can also work since we use band: 0.5 to get midpoint.\n      return scaleType in POSITION_SCALE_TYPE_INDEX;\n    case COLOR:\n      return scaleType !== 'band';    // band does not make sense with color\n    case SHAPE:\n      return scaleType === 'ordinal'; // shape = lookup only\n  }\n  /* istanbul ignore next: it should never reach here */\n  return false;\n}\n\nexport function rangeType(channel: Channel): RangeType {\n  switch (channel) {\n    case X:\n    case Y:\n    case SIZE:\n    case OPACITY:\n      return 'continuous';\n\n    case ROW:\n    case COLUMN:\n    case SHAPE:\n      return 'discrete';\n\n    // Color can be either continuous or discrete, depending on scale type.\n    case COLOR:\n      return 'flexible';\n\n    // No scale, no range type.\n    case X2:\n    case Y2:\n    case DETAIL:\n    case TEXT:\n    case ORDER:\n      return undefined;\n  }\n  /* istanbul ignore next: should never reach here. */\n  throw new Error('getSupportedRole not implemented for ' + channel);\n}\n","import {COLUMN, X, Channel} from '../../channel';\nimport {NOMINAL, ORDINAL, TEMPORAL} from '../../type';\nimport {contains, keys, extend} from '../../util';\nimport {VgAxis} from '../../vega.schema';\n\nimport {timeFormatExpression} from '../common';\nimport {Model} from '../model';\n\nexport function labels(model: Model, channel: Channel, labelsSpec: any, def: VgAxis) {\n  const fieldDef = model.fieldDef(channel);\n  const axis = model.axis(channel);\n  const config = model.config;\n\n  // Text\n  if (contains([NOMINAL, ORDINAL], fieldDef.type) && axis.labelMaxLength) {\n    // TODO replace this with Vega's labelMaxLength once it is introduced\n    labelsSpec = extend({\n      text: {\n        signal: `truncate(datum.value, ${axis.labelMaxLength})`\n      }\n    }, labelsSpec || {});\n  } else if (fieldDef.type === TEMPORAL) {\n    labelsSpec = extend({\n      text: {\n        signal: timeFormatExpression('datum.value', fieldDef.timeUnit, axis.format, config.axis.shortTimeLabels, config.timeFormat)\n      }\n    }, labelsSpec);\n  }\n\n  // Label Angle\n  if (axis.labelAngle !== undefined) {\n    labelsSpec.angle = {value: axis.labelAngle};\n  } else {\n    // auto rotate for X\n    if (channel === X && (contains([NOMINAL, ORDINAL], fieldDef.type) || !!fieldDef.bin || fieldDef.type === TEMPORAL)) {\n      labelsSpec.angle = {value: 270};\n    }\n  }\n\n  // Auto set align if rotated\n  // TODO: consider other value besides 270, 90\n  if (labelsSpec.angle) {\n    if (labelsSpec.angle.value === 270) {\n      labelsSpec.align = {\n        value: def.orient === 'top' ? 'left':\n                (channel === X || channel === COLUMN) ? 'right' :\n                'center'\n      };\n    } else if (labelsSpec.angle.value === 90) {\n      labelsSpec.align = {value: 'center'};\n    }\n  }\n\n  if (labelsSpec.angle) {\n    // Auto set baseline if rotated\n    // TODO: consider other value besides 270, 90\n    if (labelsSpec.angle.value === 270) {\n      labelsSpec.baseline = {value: (channel === X || channel === COLUMN) ? 'middle' : 'bottom'};\n    } else if (labelsSpec.angle.value === 90) {\n      labelsSpec.baseline = {value: 'bottom'};\n    }\n  }\n\n  return keys(labelsSpec).length === 0 ? undefined : labelsSpec;\n}\n","import {Axis, AXIS_PROPERTIES} from '../../axis';\nimport {Channel} from '../../channel';\nimport {VgAxis} from '../../vega.schema';\n\nimport * as encode from './encode';\nimport * as rules from './rules';\n\nimport {Model} from '../model';\nimport {Dict, keys, some} from '../../util';\n\ntype AxisPart = 'domain' | 'grid' | 'labels' | 'ticks' | 'title';\nconst AXIS_PARTS: AxisPart[] = ['domain', 'grid', 'labels', 'ticks', 'title'];\n\nexport function parseAxisComponent(model: Model, axisChannels: Channel[]): Dict<VgAxis[]> {\n  return axisChannels.reduce(function(axis, channel) {\n    const vgAxes: VgAxis[] = [];\n    if (model.axis(channel)) {\n      const main = parseMainAxis(channel, model);\n      if (main && isVisibleAxis(main)) {\n        vgAxes.push(main);\n      }\n\n      const grid = parseGridAxis(channel, model);\n      if (grid && isVisibleAxis(grid)) {\n        vgAxes.push(grid);\n      }\n\n      if (vgAxes.length > 0) {\n        axis[channel] = vgAxes;\n      }\n    }\n    return axis;\n  }, {});\n}\n\nfunction isFalseOrNull(v: boolean | null) {\n  return v === false || v === null;\n}\n\n/**\n * Return if an axis is visible (shows at least one part of the axis).\n */\nfunction isVisibleAxis(axis: VgAxis) {\n  return some(AXIS_PARTS, (part) => hasAxisPart(axis, part));\n}\n\nfunction hasAxisPart(axis: VgAxis, part: AxisPart) {\n  // FIXME this method can be wrong if users use a Vega theme.\n  // (Not sure how to correctly handle that yet.).\n\n  if (part === 'grid' || part === 'title') {\n    return !!axis[part];\n  }\n  // Other parts are enabled by default, so they should not be false or null.\n  return !isFalseOrNull(axis[part]);\n}\n\n/**\n * Make an inner axis for showing grid for shared axis.\n */\nexport function parseGridAxis(channel: Channel, model: Model): VgAxis {\n  // FIXME: support adding ticks for grid axis that are inner axes of faceted plots.\n  return parseAxis(channel, model, true);\n}\n\nexport function parseMainAxis(channel: Channel, model: Model) {\n  return parseAxis(channel, model, false);\n}\n\nfunction parseAxis(channel: Channel, model: Model, isGridAxis: boolean): VgAxis {\n  const axis = model.axis(channel);\n\n  let vgAxis: VgAxis = {\n    scale: model.scaleName(channel)\n  };\n\n  // 1.2. Add properties\n  AXIS_PROPERTIES.forEach(function(property) {\n    const value = getSpecifiedOrDefaultValue(property, axis, channel, model, isGridAxis);\n    if (value !== undefined) {\n      vgAxis[property] = value;\n    }\n  });\n\n  // Special case for gridScale since gridScale is not a Vega-Lite Axis property.\n  const gridScale = getSpecifiedOrDefaultValue('gridScale', axis, channel, model, isGridAxis);\n  if (gridScale !== undefined) {\n      vgAxis.gridScale = gridScale;\n  }\n\n  // 2) Add guide encode definition groups\n\n  const encodeSpec = axis.encode || {};\n  AXIS_PARTS.forEach(function(part) {\n    if (!hasAxisPart(vgAxis, part)) {\n      // No need to create encode for a disabled part.\n      return;\n    }\n    // TODO(@yuhanlu): instead of calling encode[part], break this line based on part type\n    // as different require different parameters.\n    let value;\n    if (part === 'labels') {\n        value = encode.labels(model, channel, encodeSpec.labels || {}, vgAxis);\n    } else {\n        value = encodeSpec[part] || {};\n    }\n\n    if (value !== undefined && keys(value).length > 0) {\n      vgAxis.encode = vgAxis.encode || {};\n      vgAxis.encode[part] = {update: value};\n    }\n  });\n\n  return vgAxis;\n}\n\nfunction getSpecifiedOrDefaultValue(property: keyof VgAxis, specifiedAxis: Axis, channel: Channel, model: Model, isGridAxis: boolean) {\n  const fieldDef = model.fieldDef(channel);\n\n  switch (property) {\n    case 'labels':\n      return isGridAxis ? false : specifiedAxis[property];\n    case 'domain':\n      return rules.domain(property, specifiedAxis, isGridAxis, channel);\n    case 'ticks':\n      return rules.ticks(property, specifiedAxis, isGridAxis, channel);\n    case 'format':\n      return rules.format(specifiedAxis, channel, fieldDef, model.config);\n    case 'grid':\n      return rules.grid(model, channel, isGridAxis); // FIXME: refactor this\n    case 'gridScale':\n      return rules.gridScale(model, channel, isGridAxis);\n    case 'orient':\n      return rules.orient(specifiedAxis, channel);\n    case 'tickCount':\n      return rules.tickCount(specifiedAxis, channel, fieldDef); // TODO: scaleType\n    case 'title':\n      return rules.title(specifiedAxis, fieldDef, model.config, isGridAxis);\n    case 'values':\n      return rules.values(specifiedAxis);\n    case 'zindex':\n      return rules.zindex(specifiedAxis, isGridAxis);\n  }\n  // Otherwise, return specified property.\n  return specifiedAxis[property];\n}\n","import * as log from '../../log';\n\nimport {Axis} from '../../axis';\nimport {VgAxis} from '../../vega.schema';\nimport {COLUMN, ROW, X, Y, Channel} from '../../channel';\nimport {Config} from '../../config';\nimport {DateTime, isDateTime, timestamp} from '../../datetime';\nimport {title as fieldDefTitle, FieldDef} from '../../fielddef';\nimport {truncate} from '../../util';\n\nimport {numberFormat} from '../common';\nimport {Model} from '../model';\n\nexport function format(specifiedAxis: Axis, channel: Channel, fieldDef: FieldDef, config: Config) {\n  return numberFormat(fieldDef, specifiedAxis.format, config, channel);\n}\n\n// TODO: we need to refactor this method after we take care of config refactoring\n/**\n * Default rules for whether to show a grid should be shown for a channel.\n * If `grid` is unspecified, the default value is `true` for ordinal scales that are not binned\n */\nexport function gridShow(model: Model, channel: Channel) {\n  const grid = model.axis(channel).grid;\n  if (grid !== undefined) {\n    return grid;\n  }\n\n  return !model.hasDiscreteScale(channel) && !model.fieldDef(channel).bin;\n}\n\nexport function grid(model: Model, channel: Channel, isGridAxis: boolean) {\n  if (channel === ROW || channel === COLUMN) {\n    // never apply grid for ROW and COLUMN since we manually create rule-group for them\n    return false;\n  }\n\n  if (!isGridAxis) {\n    return undefined;\n  }\n\n  return gridShow(model, channel);\n}\n\nexport function gridScale(model: Model, channel: Channel, isGridAxis: boolean) {\n  if (isGridAxis) {\n    const gridChannel: Channel = channel === 'x' ? 'y' : 'x';\n    if (model.scale(gridChannel)) {\n      return model.scaleName(gridChannel);\n    }\n  }\n  return undefined;\n}\n\nexport function orient(specifiedAxis: Axis, channel: Channel) {\n  const orient = specifiedAxis.orient;\n  if (orient) {\n    return orient;\n  }\n\n  switch (channel) {\n    case COLUMN:\n      // FIXME test and decide\n      return 'top';\n    case X:\n      return 'bottom';\n    case ROW:\n    case Y:\n      return 'left';\n  }\n  /* istanbul ignore next: This should never happen. */\n  throw new Error(log.message.INVALID_CHANNEL_FOR_AXIS);\n}\n\nexport function tickCount(specifiedAxis: Axis, channel: Channel, fieldDef: FieldDef) {\n  const count = specifiedAxis.tickCount;\n  if (count !== undefined) {\n    return count;\n  }\n\n  // FIXME depends on scale type too\n  if (channel === X && !fieldDef.bin) {\n    // Vega's default tickCount often lead to a lot of label occlusion on X without 90 degree rotation\n    return 5;\n  }\n\n  return undefined;\n}\n\nexport function title(specifiedAxis: Axis, fieldDef: FieldDef, config: Config, isGridAxis: boolean) {\n  if (isGridAxis) {\n    return undefined;\n  }\n  if (specifiedAxis.title !== undefined) {\n    return specifiedAxis.title;\n  }\n\n  // if not defined, automatically determine axis title from field def\n  const fieldTitle = fieldDefTitle(fieldDef, config);\n\n  let maxLength: number = specifiedAxis.titleMaxLength;\n  return maxLength ? truncate(fieldTitle, maxLength) : fieldTitle;\n}\n\nexport function values(specifiedAxis: Axis) {\n  const vals = specifiedAxis.values;\n  if (specifiedAxis.values && isDateTime(vals[0])) {\n    return (vals as DateTime[]).map((dt) => {\n      // normalize = true as end user won't put 0 = January\n      return timestamp(dt, true);\n    });\n  }\n  return vals;\n}\n\nexport function zindex(specifiedAxis: Axis, isGridAxis: boolean) {\n  const z = specifiedAxis.zindex;\n  if (z !== undefined) {\n    return z;\n  }\n  if (isGridAxis) {\n    // if grid is true, need to put layer on the back so that grid is behind marks\n    return 0;\n  }\n  return 1; // otherwise return undefined and use Vega's default.\n};\n\nexport function domainAndTicks(property: keyof VgAxis, specifiedAxis: Axis, isGridAxis: boolean, channel: Channel) {\n  if (isGridAxis || channel === ROW || channel === COLUMN) {\n    return false;\n  }\n  return specifiedAxis[property];\n}\n\nexport const domain = domainAndTicks;\nexport const ticks = domainAndTicks;\n","import * as log from '../log';\n\nimport {TEXT, Channel} from '../channel';\nimport {Config, CellConfig} from '../config';\nimport {FieldDef, OrderFieldDef, field} from '../fielddef';\nimport {Mark, MarkConfig, TextConfig} from '../mark';\nimport {TimeUnit} from '../timeunit';\nimport {QUANTITATIVE} from '../type';\nimport {isArray} from '../util';\n\nimport {FacetModel} from './facet';\nimport {LayerModel} from './layer';\nimport {Model} from './model';\nimport {formatExpression} from '../timeunit';\nimport {UnitModel} from './unit';\nimport {Spec, isUnitSpec, isFacetSpec, isLayerSpec} from '../spec';\nimport {VgEncodeEntry, VgSort} from '../vega.schema';\n\nexport function buildModel(spec: Spec, parent: Model, parentGivenName: string): Model {\n  if (isFacetSpec(spec)) {\n    return new FacetModel(spec, parent, parentGivenName);\n  }\n\n  if (isLayerSpec(spec)) {\n    return new LayerModel(spec, parent, parentGivenName);\n  }\n\n  if (isUnitSpec(spec)) {\n    return new UnitModel(spec, parent, parentGivenName);\n  }\n\n  throw new Error(log.message.INVALID_SPEC);\n}\n\nexport function applyConfig(e: VgEncodeEntry,\n    config: CellConfig | MarkConfig | TextConfig, // TODO(#1842): consolidate MarkConfig | TextConfig?\n    propsList: string[]) {\n  propsList.forEach((property) => {\n    const value = config[property];\n    if (value !== undefined) {\n      e[property] = {value: value};\n    }\n  });\n  return e;\n}\n\nexport function applyMarkConfig(e: VgEncodeEntry, model: UnitModel, propsList: (keyof MarkConfig)[]) {\n  propsList.forEach((property) => {\n    const value = getMarkConfig(property, model.mark(), model.config);\n    if (value !== undefined) {\n      e[property] = {value: value};\n    }\n  });\n  return e;\n}\n\n/**\n * Return value mark specific config property if exists.\n * Otherwise, return general mark specific config.\n */\nexport function getMarkConfig<P extends keyof MarkConfig>(prop: P, mark: Mark, config: Config): MarkConfig[P] {\n  const markSpecificConfig = config[mark];\n  if (markSpecificConfig[prop] !== undefined) {\n    return markSpecificConfig[prop];\n  }\n  return config.mark[prop];\n}\n\n/**\n * Returns number format for a fieldDef\n *\n * @param format explicitly specified format\n */\nexport function numberFormat(fieldDef: FieldDef, format: string, config: Config, channel: Channel) {\n  if (fieldDef.type === QUANTITATIVE && !fieldDef.bin) {\n    // add number format for quantitative type only\n\n    if (format) {\n      return format;\n    } else if (fieldDef.aggregate === 'count' && channel === TEXT) {\n      // FIXME: need a more holistic way to deal with this.\n      return 'd';\n    }\n    // TODO: need to make this work correctly for numeric ordinal / nominal type\n    return config.numberFormat;\n  }\n  return undefined;\n}\n\n/**\n * Returns the time expression used for axis/legend labels or text mark for a temporal field\n */\nexport function timeFormatExpression(field: string, timeUnit: TimeUnit, format: string, shortTimeLabels: boolean, timeFormatConfig: string): string {\n  if (!timeUnit || format) {\n    // If there is not time unit, or if user explicitly specify format for axis/legend/text.\n    const _format = format || timeFormatConfig; // only use config.timeFormat if there is no timeUnit.\n    return `timeFormat(${field}, '${_format}')`;\n  } else {\n    return formatExpression(timeUnit, field, shortTimeLabels);\n  }\n}\n\n/**\n * Return Vega sort parameters (tuple of field and order).\n */\nexport function sortParams(orderDef: OrderFieldDef | OrderFieldDef[]): VgSort {\n  return (isArray(orderDef) ? orderDef : [orderDef]).reduce((s, orderChannelDef) => {\n    s.field.push(field(orderChannelDef, {binSuffix: 'start'}));\n    s.order.push(orderChannelDef.sort || 'ascending');\n    return s;\n  }, {field:[], order: []});\n}\n","/**\n * Module for compiling Vega-lite spec into Vega spec.\n */\n\nimport {LAYOUT} from '../data';\nimport * as log from '../log';\nimport {Model} from './model';\nimport {normalize, ExtendedSpec} from '../spec';\nimport {extend} from '../util';\nimport {assembleTopLevelSignals} from './selection/selection';\nimport {buildModel} from './common';\n\nexport function compile(inputSpec: ExtendedSpec, logger?: log.LoggerInterface) {\n  if (logger) {\n    // set the singleton logger to the provided logger\n    log.set(logger);\n  }\n\n  try {\n    // 1. Convert input spec into a normal form\n    // (Decompose all extended unit specs into composition of unit spec.)\n    const spec = normalize(inputSpec);\n\n    // 2. Instantiate the model with default properties\n    const model = buildModel(spec, null, '');\n\n    // 3. Parse each part of the model to produce components that will be assembled later\n    // We traverse the whole tree to parse once for each type of components\n    // (e.g., data, layout, mark, scale).\n    // Please see inside model.parse() for order for compilation.\n    model.parse();\n\n    // 4. Assemble a Vega Spec from the parsed components in 3.\n    return assemble(model);\n  } finally {\n    // Reset the singleton logger if a logger is provided\n    if (logger) {\n      log.reset();\n    }\n  }\n}\n\nfunction assemble(model: Model) {\n  // TODO: change type to become VgSpec\n  const output = extend(\n    {\n      $schema: 'http://vega.github.io/schema/vega/v3.0.json',\n    },\n    topLevelBasicProperties(model),\n    {\n      // Map calculated layout width and height to width and height signals.\n      signals: [\n        {\n          name: 'width',\n          update: \"data('layout')[0].width\"\n        },\n        {\n          name: 'height',\n          update: \"data('layout')[0].height\"\n        }\n      ].concat(assembleTopLevelSignals(model))\n    },{\n      data: [].concat(\n        model.assembleData([]),\n        model.assembleLayout([]),\n        model.assembleSelectionData([])\n      ),\n      marks: [assembleRootGroup(model)]\n    });\n\n  return {\n    spec: output\n    // TODO: add warning / errors here\n  };\n}\n\nexport function topLevelBasicProperties(model: Model) {\n  const config = model.config;\n  return extend(\n    // TODO: Add other top-level basic properties (#1778)\n    {padding: model.padding || config.padding},\n    {autosize: 'pad'},\n    config.viewport ? {viewport: config.viewport} : {},\n    config.background ? {background: config.background} : {}\n  );\n}\n\nexport function assembleRootGroup(model: Model) {\n  let rootGroup:any = extend(\n    {\n      name: model.getName('main'),\n      type: 'group',\n    },\n    model.description ? {description: model.description} : {},\n    {\n      from: {data: model.getName(LAYOUT +'')},\n      encode: {\n        update: extend(\n          {\n            width: {field: model.getName('width')},\n            height: {field: model.getName('height')}\n          },\n          model.assembleParentGroupProperties(model.config.cell)\n        )\n      }\n    });\n\n  return extend(rootGroup, model.assembleGroup());\n}\n","import {DataComponentCompiler} from './base';\n\nimport {autoMaxBins} from '../../bin';\nimport {Channel} from '../../channel';\nimport {field, FieldDef} from '../../fielddef';\nimport {extend, vals, flatten, hash, Dict} from '../../util';\nimport {VgTransform} from '../../vega.schema';\nimport {hasDiscreteDomain} from '../../scale';\n\nimport {FacetModel} from './../facet';\nimport {LayerModel} from './../layer';\nimport {Model} from './../model';\n\n\nfunction numberFormatExpr(expr: string, format: string) {\n  return `format(${expr}, '${format}')`;\n}\n\nfunction parse(model: Model): Dict<VgTransform[]> {\n  return model.reduceFieldDef(function(binComponent: Dict<VgTransform[]>, fieldDef: FieldDef, channel: Channel) {\n    const bin = model.fieldDef(channel).bin;\n    if (bin) {\n\n      let binTrans: VgTransform = extend({\n        type: 'bin',\n        field: fieldDef.field,\n        as: [field(fieldDef, {binSuffix: 'start'}), field(fieldDef, {binSuffix: 'end'})]\n      },\n        // if bin is an object, load parameter here!\n        typeof bin === 'boolean' ? {} : bin\n      );\n\n      const transform: VgTransform[] = [];\n      if (!binTrans.extent) {\n        const extentSignal = model.getName(fieldDef.field + '_extent');\n        transform.push({\n          type: 'extent',\n          field: fieldDef.field,\n          signal: extentSignal\n        });\n\n        binTrans.extent = {signal: extentSignal};\n      }\n\n      if (!binTrans.maxbins && !binTrans.step) {\n        // if both maxbins and step are not specified, need to automatically determine bin\n        binTrans.maxbins = autoMaxBins(channel);\n      }\n\n      transform.push(binTrans);\n\n      const hasDiscreteDomainOrHasLegend = hasDiscreteDomain(model.scale(channel).type) || model.legend(channel);\n      if (hasDiscreteDomainOrHasLegend) {\n        // read format from axis or legend, if there is no format then use config.numberFormat\n        const format = (model.axis(channel) || model.legend(channel) || {}).format ||\n          model.config.numberFormat;\n\n        const startField = field(fieldDef, {datum: true, binSuffix: 'start'});\n        const endField = field(fieldDef, {datum: true, binSuffix: 'end'});\n\n        transform.push({\n          type: 'formula',\n          as: field(fieldDef, {binSuffix: 'range'}),\n          expr: `${numberFormatExpr(startField, format)} + ' - ' + ${numberFormatExpr(endField, format)}`\n        });\n      }\n      // FIXME: current merging logic can produce redundant transforms when a field is binned for color and for non-color\n      const key = hash(bin) + '_' + fieldDef.field + 'oc:' + hasDiscreteDomainOrHasLegend;\n      binComponent[key] = transform;\n    }\n    return binComponent;\n  }, {});\n}\n\nexport const bin: DataComponentCompiler<Dict<VgTransform[]>> = {\n  parseUnit: parse,\n\n  parseFacet: function(model: FacetModel) {\n    let binComponent = parse(model);\n\n    const childDataComponent = model.child.component.data;\n\n    // If child doesn't have its own data source, then merge\n    if (!childDataComponent.source) {\n      // FIXME: current merging logic can produce redundant transforms when a field is binned for color and for non-color\n      extend(binComponent, childDataComponent.bin);\n      delete childDataComponent.bin;\n    }\n    return binComponent;\n  },\n\n  parseLayer: function (model: LayerModel) {\n    let binComponent = parse(model);\n\n    model.children.forEach((child) => {\n      const childDataComponent = child.component.data;\n\n      // If child doesn't have its own data source, then merge\n      if (!childDataComponent.source) {\n        extend(binComponent, childDataComponent.bin);\n        delete childDataComponent.bin;\n      }\n    });\n\n    return binComponent;\n  },\n\n  assemble: function (component: Dict<VgTransform[]>) {\n    return flatten(vals(component));\n  }\n};\n","import {SOURCE} from '../../data';\nimport {FieldDef} from '../../fielddef';\nimport {Formula} from '../../transform';\nimport {Dict, StringSet} from '../../util';\nimport {VgData, VgSort, VgTransform} from '../../vega.schema';\n\nimport {FacetModel} from './../facet';\nimport {LayerModel} from './../layer';\nimport {Model} from './../model';\nimport {UnitModel} from './../unit';\n\nimport {source} from './source';\nimport {formatParse} from './formatparse';\nimport {nullFilter} from './nullfilter';\nimport {filter} from './filter';\nimport {bin} from './bin';\nimport {formula} from './formula';\nimport {pathOrder} from './pathorder';\nimport {nonPositiveFilter} from './nonpositivefilter';\nimport {summary} from './summary';\nimport {stack, StackComponent} from './stack';\nimport {timeUnit} from './timeunit';\n\n/**\n * Composable component instance of a model's data.\n */\nexport interface DataComponent {\n  source: VgData;\n\n  /** Mapping from field name to primitive data type.  */\n  formatParse: Dict<string>;\n\n  /** String set of fields for null filtering */\n  nullFilter: Dict<FieldDef>;\n\n  /** Hashset of a formula object */\n  calculate: Dict<Formula>;\n\n  /** Filter test expression */\n  filter: string;\n\n  /** Dictionary mapping a bin parameter hash to transforms of the binned field */\n  bin: Dict<VgTransform[]>;\n\n  /** Dictionary mapping an output field name (hash) to the time unit transform  */\n  timeUnit: Dict<VgTransform>;\n\n  /** String set of fields to be filtered */\n  nonPositiveFilter: Dict<boolean>;\n\n  /** Sort order to apply at the end */\n  pathOrder: VgSort;\n\n  /**\n   * Stack transforms to be applied.\n   */\n  stack: StackComponent;\n\n  /** Array of summary component object for producing summary (aggregate) data source */\n  summary: SummaryComponent[];\n}\n\n/**\n * Composable component for a model's summary data\n */\nexport interface SummaryComponent {\n  /** Name of the summary data source */\n  name: string;\n\n  /** String set for all dimension fields  */\n  dimensions: StringSet;\n\n  /** dictionary mapping field name to string set of aggregate ops */\n  measures: Dict<StringSet>;\n}\n\n// TODO: split this file into multiple files and remove this linter flag\n/* tslint:disable:no-use-before-declare */\n\nexport function parseUnitData(model: UnitModel): DataComponent {\n  return {\n    formatParse: formatParse.parseUnit(model),\n    nullFilter: nullFilter.parseUnit(model),\n    filter: filter.parseUnit(model),\n    nonPositiveFilter: nonPositiveFilter.parseUnit(model),\n    pathOrder: pathOrder.parseUnit(model),\n\n    source: source.parseUnit(model),\n    bin: bin.parseUnit(model),\n    calculate: formula.parseUnit(model),\n    timeUnit: timeUnit.parseUnit(model),\n    summary: summary.parseUnit(model),\n    stack: stack.parseUnit(model)\n  };\n}\n\nexport function parseFacetData(model: FacetModel): DataComponent {\n  return {\n    formatParse: formatParse.parseFacet(model),\n    nullFilter: nullFilter.parseFacet(model),\n    filter: filter.parseFacet(model),\n    nonPositiveFilter: nonPositiveFilter.parseFacet(model),\n    pathOrder: pathOrder.parseFacet(model),\n\n    source: source.parseFacet(model),\n    bin: bin.parseFacet(model),\n    calculate: formula.parseFacet(model),\n    timeUnit: timeUnit.parseFacet(model),\n    summary: summary.parseFacet(model),\n    stack: stack.parseFacet(model)\n  };\n}\n\nexport function parseLayerData(model: LayerModel): DataComponent {\n  return {\n    // filter and formatParse could cause us to not be able to merge into parent\n    // so let's parse them first\n    filter: filter.parseLayer(model),\n    formatParse: formatParse.parseLayer(model),\n    nullFilter: nullFilter.parseLayer(model),\n    nonPositiveFilter: nonPositiveFilter.parseLayer(model),\n    pathOrder: pathOrder.parseLayer(model),\n\n    // everything after here does not affect whether we can merge child data into parent or not\n    source: source.parseLayer(model),\n    bin: bin.parseLayer(model),\n    calculate: formula.parseLayer(model),\n    timeUnit: timeUnit.parseLayer(model),\n    summary: summary.parseLayer(model),\n    stack: stack.parseLayer(model)\n  };\n}\n\n/* tslint:enable:no-use-before-declare */\n\n/**\n * Creates Vega Data array from a given compiled model and append all of them to the given array\n *\n * @param  model\n * @param  data array\n * @return modified data array\n */\nexport function assembleData(model: Model, data: VgData[]) {\n  const dataComponent = model.component.data;\n\n  const sourceData = source.assemble(dataComponent);\n  if (sourceData) {\n    data.push(sourceData);\n  }\n\n  summary.assemble(dataComponent.summary || [], model.dataName(SOURCE)).forEach(function(summaryData) {\n    data.push(summaryData);\n  });\n\n  // nonPositiveFilter\n  const nonPositiveFilterTransform = nonPositiveFilter.assemble(dataComponent.nonPositiveFilter);\n  if (nonPositiveFilterTransform.length > 0) {\n    if (data.length > 0) {\n      const dataTable = data[data.length - 1];\n      dataTable.transform = (dataTable.transform || []).concat(nonPositiveFilterTransform);\n    } else { /* istanbul ignore else: should never reach here */\n      throw new Error('Invalid nonPositiveFilter not merged');\n    }\n  }\n\n  // stack\n  const stackData = stack.assemble(dataComponent.stack);\n  if (stackData) {\n    data.push(stackData);\n  }\n\n  // Path Order\n  const pathOrderCollectTransform = pathOrder.assemble(dataComponent.pathOrder);\n  if (pathOrderCollectTransform) {\n    const dataTable = data[data.length - 1];\n    if (data.length > 0) {\n      dataTable.transform = (dataTable.transform || []).concat([pathOrderCollectTransform]);\n    } else { /* istanbul ignore else: should never reach here */\n      throw new Error('Invalid path order collect transform not added');\n    }\n  }\n\n  return data;\n}\n","import {DataComponentCompiler} from './base';\n\nimport {expression} from '../../filter';\nimport {isArray} from '../../util';\n\nimport {FacetModel} from '../facet';\nimport {LayerModel} from '../layer';\nimport {Model} from '../model';\n\n/**\n * @param v value to be converted into Vega Expression\n * @param timeUnit\n * @return Vega Expression of the value v. This could be one of:\n * - a timestamp value of datetime object\n * - a timestamp value of casted single time unit value\n * - stringified value\n */\n\nfunction parse(model: Model): string {\n  const filter = model.filter();\n  if (isArray(filter)) {\n    return '(' +\n      filter.map((f) => expression(f))\n        .filter((f) => f !==undefined)\n        .join(') && (') +\n      ')';\n  } else if (filter) {\n    return expression(filter);\n  }\n  return undefined;\n}\n\nexport const filter: DataComponentCompiler<string> = {\n  parseUnit: parse,\n\n  parseFacet: function(model: FacetModel) {\n    let filterComponent = parse(model);\n\n    const childDataComponent = model.child.component.data;\n\n    // If child doesn't have its own data source but has filter, then merge\n    if (!childDataComponent.source && childDataComponent.filter) {\n      // merge by adding &&\n      filterComponent =\n        (filterComponent ? filterComponent + ' && ' : '') +\n        childDataComponent.filter;\n      delete childDataComponent.filter;\n    }\n    return filterComponent;\n  },\n\n  parseLayer: function(model: LayerModel) {\n    // Note that this `filter.parseLayer` method is called before `source.parseLayer`\n    let filterComponent = parse(model);\n    model.children.forEach((child) => {\n      const childDataComponent = child.component.data;\n      if (model.compatibleSource(child) && childDataComponent.filter && childDataComponent.filter === filterComponent) {\n        // same filter in child so we can just delete it\n        delete childDataComponent.filter;\n      }\n    });\n    return filterComponent;\n  },\n\n  assemble: function(filterComponent: string) {\n    return filterComponent ? [{\n      type: 'filter',\n      expr: filterComponent\n    }] : [];\n  }\n};\n","import {DataComponentCompiler} from './base';\n\nimport {isDateTime, DateTime} from '../../datetime';\nimport {isUrlData} from '../../data';\nimport {FieldDef, isCount} from '../../fielddef';\nimport {isOneOfFilter, isEqualFilter, isRangeFilter} from '../../filter';\nimport {QUANTITATIVE, TEMPORAL} from '../../type';\nimport {extend, differ, keys, isArray, isNumber, isString, Dict} from '../../util';\n\nimport {FacetModel} from './../facet';\nimport {LayerModel} from './../layer';\nimport {Model} from './../model';\n\nfunction parse(model: Model): Dict<string> {\n  const calcFieldMap = (model.calculate() || []).reduce(function(fieldMap, formula) {\n    fieldMap[formula.as] = true;\n    return fieldMap;\n  }, {});\n\n  let parseComponent: Dict<string> = {};\n\n  // Parse filter fields\n  let filter = model.filter();\n  if (!isArray(filter)) {\n    filter = [filter];\n  }\n  filter.forEach(f => {\n    let val: string | number | boolean | DateTime = null;\n    // For EqualFilter, just use the equal property.\n    // For RangeFilter and OneOfFilter, all array members should have\n    // the same type, so we only use the first one.\n    if (isEqualFilter(f)) {\n      val = f.equal;\n    } else if (isRangeFilter(f)) {\n      val = f.range[0];\n    } else if (isOneOfFilter(f)) {\n      val = (f.oneOf || f['in'])[0];\n    } // else -- for filter expression, we can't infer anything\n\n    if (!!val) {\n      if (isDateTime(val)) {\n        parseComponent[f['field']] = 'date';\n      } else if (isNumber(val)) {\n        parseComponent[f['field']] = 'number';\n      } else if (isString(val)) {\n        parseComponent[f['field']] = 'string';\n      }\n    }\n  });\n\n  // Parse encoded fields\n  model.forEachFieldDef(function(fieldDef: FieldDef) {\n    if (fieldDef.type === TEMPORAL) {\n      parseComponent[fieldDef.field] = 'date';\n    } else if (fieldDef.type === QUANTITATIVE) {\n      if (isCount(fieldDef) || calcFieldMap[fieldDef.field]) {\n        return;\n      }\n      parseComponent[fieldDef.field] = 'number';\n    }\n  });\n\n  // Custom parse should override inferred parse\n  const data = model.data;\n  if (data && isUrlData(data) && data.format && data.format.parse) {\n    const parse = data.format.parse;\n    keys(parse).forEach((field) => {\n      parseComponent[field] = parse[field];\n    });\n  }\n\n  return parseComponent;\n}\n\nexport const formatParse: DataComponentCompiler<Dict<string>> = {\n  parseUnit: parse,\n\n  parseFacet: function(model: FacetModel) {\n    let parseComponent = parse(model);\n\n    // If child doesn't have its own data source, but has its own parse, then merge\n    const childDataComponent = model.child.component.data;\n    if (!childDataComponent.source && childDataComponent.formatParse) {\n      extend(parseComponent, childDataComponent.formatParse);\n      delete childDataComponent.formatParse;\n    }\n    return parseComponent;\n  },\n\n  parseLayer: function(model: LayerModel) {\n    // note that we run this before source.parseLayer\n    let parseComponent = parse(model);\n    model.children.forEach((child) => {\n      const childDataComponent = child.component.data;\n      if (model.compatibleSource(child) && !differ(childDataComponent.formatParse, parseComponent)) {\n        // merge parse up if the child does not have an incompatible parse\n        extend(parseComponent, childDataComponent.formatParse);\n        delete childDataComponent.formatParse;\n      }\n    });\n    return parseComponent;\n  },\n\n  // identity function\n  assemble: function (x) {return x;}\n};\n","import {DataComponentCompiler} from './base';\n\nimport {Formula} from '../../transform';\nimport {extend, vals, hash, Dict} from '../../util';\n\nimport {FacetModel} from './../facet';\nimport {LayerModel} from './../layer';\nimport {Model} from './../model';\n\nfunction parse(model: Model): Dict<Formula> {\n  return (model.calculate() || []).reduce(function(formulaComponent, formula) {\n    formulaComponent[hash(formula)] = formula;\n    return formulaComponent;\n  }, {});\n}\n\nexport const formula: DataComponentCompiler<Dict<Formula>> = {\n  parseUnit: parse,\n\n  parseFacet: function(model: FacetModel): Dict<Formula> {\n    let formulaComponent = parse(model);\n\n    const childDataComponent = model.child.component.data;\n\n    // If child doesn't have its own data source, then merge\n    if (!childDataComponent.source) {\n      extend(formulaComponent, childDataComponent.calculate);\n      delete childDataComponent.calculate;\n    }\n    return formulaComponent;\n  },\n\n  parseLayer: function(model: LayerModel): Dict<Formula> {\n    let formulaComponent = parse(model);\n    model.children.forEach((child) => {\n      const childDataComponent = child.component.data;\n      if (!childDataComponent.source && childDataComponent.calculate) {\n        extend(formulaComponent || {}, childDataComponent.calculate);\n        delete childDataComponent.calculate;\n      }\n    });\n    return formulaComponent;\n  },\n\n  assemble: function(component: Dict<Formula>) {\n    return vals(component).reduce(function(transform: any, f: any) {\n      transform.push(extend({type: 'formula'}, f));\n      return transform;\n    }, []);\n  }\n};\n","import {DataComponentCompiler} from './base';\n\nimport {ScaleType} from '../../scale';\nimport {extend, keys, differ, Dict} from '../../util';\n\nimport {FacetModel} from './../facet';\nimport {LayerModel} from './../layer';\nimport {Model} from './../model';\n\n\nexport const nonPositiveFilter: DataComponentCompiler<Dict<boolean>> = {\n  parseUnit: function(model: Model): Dict<boolean> {\n    return model.channels().reduce(function(nonPositiveComponent, channel) {\n      const scale = model.scale(channel);\n      if (!model.field(channel) || !scale) {\n        // don't set anything\n        return nonPositiveComponent;\n      }\n      nonPositiveComponent[model.field(channel)] = scale.type === ScaleType.LOG;\n      return nonPositiveComponent;\n    }, {});\n  },\n\n  parseFacet: function(model: FacetModel) {\n    const childDataComponent = model.child.component.data;\n\n    // If child doesn't have its own data source, then consider merging\n    if (!childDataComponent.source) {\n      // For now, let's assume it always has union scale\n      const nonPositiveFilterComponent = childDataComponent.nonPositiveFilter;\n      delete childDataComponent.nonPositiveFilter;\n      return nonPositiveFilterComponent;\n    }\n    return {};\n  },\n\n  parseLayer: function(model: LayerModel) {\n    // note that we run this before source.parseLayer\n    let nonPositiveFilterComponent = {};\n\n    model.children.forEach((child) => {\n      const childDataComponent = child.component.data;\n      if (model.compatibleSource(child) && !differ(childDataComponent.nonPositiveFilter, nonPositiveFilterComponent)) {\n        extend(nonPositiveFilterComponent, childDataComponent.nonPositiveFilter);\n        delete childDataComponent.nonPositiveFilter;\n      }\n    });\n\n    return nonPositiveFilterComponent;\n  },\n\n  assemble: function(nonPositiveFilterComponent: Dict<boolean>) {\n    if (nonPositiveFilterComponent) {\n      return keys(nonPositiveFilterComponent).filter((field) => {\n        // Only filter fields (keys) with value = true\n        return nonPositiveFilterComponent[field];\n      }).map(function(field) {\n        return {\n          type: 'filter',\n          expr: 'datum[\"' + field + '\"] > 0'\n        };\n      });\n    }\n    return [];\n  }\n};\n","import {DataComponentCompiler} from './base';\n\nimport {FieldDef} from '../../fielddef';\nimport {QUANTITATIVE, TEMPORAL} from '../../type';\nimport {contains, extend, keys, differ, Dict} from '../../util';\n\nimport {FacetModel} from './../facet';\nimport {LayerModel} from './../layer';\nimport {Model} from './../model';\n\nconst DEFAULT_NULL_FILTERS = {\n  nominal: false,\n  ordinal: false,\n  quantitative: true,\n  temporal: true\n};\n\n/** Return Hashset of fields for null filtering (key=field, value = true). */\nfunction parse(model: Model): Dict<FieldDef> {\n  const filterInvalid = model.filterInvalid();\n\n  return model.reduceFieldDef(function(aggregator: Dict<FieldDef>, fieldDef: FieldDef) {\n    if (fieldDef.field !== '*') { // Ignore * for count(*) fields.\n      if (filterInvalid ||\n        (filterInvalid === undefined && fieldDef.field && DEFAULT_NULL_FILTERS[fieldDef.type])) {\n        aggregator[fieldDef.field] = fieldDef;\n      } else {\n        // define this so we know that we don't filter nulls for this field\n        // this makes it easier to merge into parents\n        aggregator[fieldDef.field] = null;\n      }\n    }\n    return aggregator;\n  }, {});\n}\n\nexport const nullFilter: DataComponentCompiler<Dict<FieldDef>> = {\n  parseUnit: parse,\n\n  parseFacet: function(model: FacetModel) {\n    const nullFilterComponent = parse(model);\n\n    const childDataComponent = model.child.component.data;\n\n    // If child doesn't have its own data source, then merge\n    if (!childDataComponent.source) {\n      extend(nullFilterComponent, childDataComponent.nullFilter);\n      delete childDataComponent.nullFilter;\n    }\n    return nullFilterComponent;\n  },\n\n  parseLayer: function(model: LayerModel) {\n    // note that we run this before source.parseLayer\n\n    // FIXME: null filters are not properly propagated right now\n    let nullFilterComponent = parse(model);\n\n    model.children.forEach((child) => {\n      const childDataComponent = child.component.data;\n      if (model.compatibleSource(child) && !differ<FieldDef>(childDataComponent.nullFilter, nullFilterComponent)) {\n        extend(nullFilterComponent, childDataComponent.nullFilter);\n        delete childDataComponent.nullFilter;\n      }\n    });\n\n    return nullFilterComponent;\n  },\n\n  assemble: function(component: Dict<FieldDef>) {\n    const filters = keys(component).reduce((_filters, field) => {\n      const fieldDef = component[field];\n      if (fieldDef !== null) {\n        _filters.push('datum[\"' + fieldDef.field + '\"] !== null');\n        if (contains([QUANTITATIVE, TEMPORAL], fieldDef.type)) {\n          // TODO(https://github.com/vega/vega-lite/issues/1436):\n          // We can be even smarter and add NaN filter for N,O that are numbers\n          // based on the `parse` property once we have it.\n          _filters.push('!isNaN(datum[\"'+ fieldDef.field + '\"])');\n        }\n      }\n      return _filters;\n    }, []);\n\n    return filters.length > 0 ?\n      [{\n        type: 'filter',\n        expr: filters.join(' && ')\n      }] : [];\n  }\n};\n","import * as stringify from 'json-stable-stringify';\n\nimport {DataComponentCompiler} from './base';\n\nimport {isAggregate} from '../../encoding';\nimport {field} from '../../fielddef';\nimport {isSortField} from '../../sort';\nimport {VgSort} from '../../vega.schema';\nimport {contains} from '../../util';\n\nimport {sortParams} from '../common';\nimport {FacetModel} from '../facet';\nimport {LayerModel} from '../layer';\nimport {UnitModel} from '../unit';\n\nexport const pathOrder: DataComponentCompiler<VgSort> = {\n  parseUnit: function(model: UnitModel): VgSort {\n    if (contains(['line', 'area'], model.mark())) {\n      if (model.mark() === 'line' && model.channelHasField('order')) {\n        // For only line, sort by the order field if it is specified.\n        return sortParams(model.encoding.order);\n      } else {\n        // For both line and area, we sort values based on dimension by default\n        const dimensionChannel: 'x' | 'y' = model.markDef.orient === 'horizontal' ? 'y' : 'x';\n        const sort = model.sort(dimensionChannel);\n        const sortField = isSortField(sort) ?\n          field({\n            // FIXME: this op might not already exist?\n            // FIXME: what if dimensionChannel (x or y) contains custom domain?\n            aggregate: isAggregate(model.encoding) ? sort.op : undefined,\n            field: sort.field\n          }) :\n          model.field(dimensionChannel, {binSuffix: 'start'});\n\n        return {\n          field: sortField,\n          order: 'descending'\n        };\n      }\n\n    }\n    return null;\n  },\n\n  parseFacet: function(model: FacetModel) {\n    const childDataComponent = model.child.component.data;\n\n    // If child doesn't have its own data source, then consider merging\n    if (!childDataComponent.source) {\n      // For now, let's assume it always has union scale\n      const pathOrderComponent = childDataComponent.pathOrder;\n      delete childDataComponent.pathOrder;\n      return pathOrderComponent;\n    }\n    return null;\n  },\n\n  parseLayer: function(model: LayerModel) {\n    // note that we run this before source.parseLayer\n    let pathOrderComponent: VgSort = null;\n    let stringifiedPathOrder: string = null;\n\n    for (let child of model.children) {\n      const childDataComponent = child.component.data;\n      if (model.compatibleSource(child) && childDataComponent.pathOrder !== null) {\n        if (pathOrderComponent === null) {\n          pathOrderComponent = childDataComponent.pathOrder;\n          stringifiedPathOrder = stringify(pathOrderComponent);\n        } else if (stringifiedPathOrder !== stringify(childDataComponent.pathOrder)) {\n          pathOrderComponent = null;\n          break;\n        }\n      }\n    }\n\n    if (pathOrderComponent !== null) {\n      // If we merge pathOrderComponent, remove them from children.\n      for (let child of model.children) {\n        delete child.component.data.pathOrder;\n      }\n    }\n\n    return pathOrderComponent;\n  },\n\n  assemble: function(pathOrderComponent: VgSort) {\n    if (pathOrderComponent) {\n      return {\n        type: 'collect',\n        sort: pathOrderComponent\n      };\n    }\n    return null;\n  }\n};\n","import {DataFormat, isNamedData, isInlineData, isUrlData, SOURCE} from '../../data';\nimport {contains, extend} from '../../util';\nimport {VgData} from '../../vega.schema';\n\nimport {FacetModel} from '../facet';\nimport {LayerModel} from '../layer';\nimport {Model} from './../model';\n\nimport {DataComponent} from './data';\nimport {nullFilter} from './nullfilter';\nimport {filter} from './filter';\nimport {bin} from './bin';\nimport {formula} from './formula';\nimport {timeUnit} from './timeunit';\n\nexport namespace source {\n  function parse(model: Model): VgData {\n    let data = model.data;\n\n    if (data) {\n      // If data is explicitly provided\n\n      let sourceData: VgData = {name: model.dataName(SOURCE)};\n      if (isInlineData(data)) {\n        sourceData.values = data.values;\n        sourceData.format = {type: 'json'};\n      } else if (isUrlData(data)) {\n        sourceData.url = data.url;\n\n        // Extract extension from URL using snippet from\n        // http://stackoverflow.com/questions/680929/how-to-extract-extension-from-filename-string-in-javascript\n        let defaultExtension = /(?:\\.([^.]+))?$/.exec(sourceData.url)[1];\n        if (!contains(['json', 'csv', 'tsv', 'topojson'], defaultExtension)) {\n          defaultExtension = 'json';\n        }\n        const dataFormat: DataFormat = data.format || {};\n\n        // For backward compatibility for former `data.formatType` property\n        const formatType: DataFormat = dataFormat.type || data['formatType'];\n        sourceData.format =\n          extend(\n            {type: formatType ? formatType : defaultExtension},\n            dataFormat.property ? {property: dataFormat.property} : {},\n            // Feature and mesh are two mutually exclusive properties\n            dataFormat.feature ?\n              {feature : dataFormat.feature} :\n            dataFormat.mesh ?\n              {mesh : dataFormat.mesh} :\n              {}\n          );\n      } else if (isNamedData(data)) {\n        return {name: data.name};\n      }\n\n      return sourceData;\n    } else if (!model.parent) {\n      // If data is not explicitly provided but the model is a root,\n      // need to produce a source as well\n      return {name: model.dataName(SOURCE)};\n    }\n    return undefined;\n  }\n\n  export const parseUnit: (model: Model) => VgData = parse;\n\n  export function parseFacet(model: FacetModel) {\n    let sourceData = parse(model);\n    if (!model.child.component.data.source) {\n      // If the child does not have its own source, have to rename its source.\n      model.child.renameData(model.child.dataName(SOURCE), model.dataName(SOURCE));\n    }\n\n    return sourceData;\n  }\n\n  export function parseLayer(model: LayerModel) {\n    let sourceData = parse(model);\n    model.children.forEach((child) => {\n      const childData = child.component.data;\n\n      if (model.compatibleSource(child)) {\n        // we cannot merge if the child has filters defined even after we tried to move them up\n        const canMerge = !childData.filter && !childData.formatParse && !childData.nullFilter;\n        if (canMerge) {\n          // rename source because we can just remove it\n          child.renameData(child.dataName(SOURCE), model.dataName(SOURCE));\n          delete childData.source;\n        } else {\n          // child does not have data defined or the same source so just use the parents source\n          childData.source = {\n            name: child.dataName(SOURCE),\n            source: model.dataName(SOURCE)\n          };\n        }\n      }\n    });\n    return sourceData;\n  }\n\n  export function assemble(component: DataComponent) {\n    if (component.source) {\n      let sourceData: VgData = component.source;\n\n      if (component.formatParse) {\n        component.source.format = component.source.format || {};\n        component.source.format.parse = component.formatParse;\n      }\n\n      sourceData.transform = [].concat(\n        formula.assemble(component.calculate),\n        nullFilter.assemble(component.nullFilter),\n        filter.assemble(component.filter),\n        bin.assemble(component.bin),\n        timeUnit.assemble(component.timeUnit)\n      );\n\n      return sourceData;\n    }\n    return null;\n  }\n}\n","import {DataComponentCompiler} from './base';\n\nimport {FacetModel} from './../facet';\nimport {LayerModel} from './../layer';\nimport {UnitModel} from './../unit';\n\nimport {sortParams} from '../common';\nimport {STACKED, SUMMARY} from '../../data';\nimport {FieldDef, field} from '../../fielddef';\nimport {hasDiscreteDomain} from '../../scale';\nimport {StackOffset} from '../../stack';\nimport {contains} from '../../util';\nimport {VgData, VgSort, VgStackTransform, VgImputeTransform} from '../../vega.schema';\n\nexport interface StackComponent {\n  /**\n   * Name of the output stacked data source\n   */\n  name: string;\n\n  /**\n   * Name of the input source data for stacked data source\n   */\n  source: string;\n\n  /**\n   * Grouping fields for stacked charts.  This includes one of x- or 'y-field and may include faceted field.\n   */\n  groupby: string[];\n\n  /**\n   * Stack measure's field\n   */\n  field: string;\n\n  /**\n   * Level of detail fields for each level in the stacked charts such as color or detail.\n   */\n  stackby: string[];\n\n  /**\n   * Field that determines order of levels in the stacked charts.\n   */\n  sort: VgSort;\n\n  /** Mode for stacking marks. */\n  offset: StackOffset;\n\n  /**\n   * Whether to impute the data before stacking.\n   */\n  impute: boolean;\n}\n\n\nfunction getStackByFields(model: UnitModel) {\n  return model.stack.stackBy.reduce((fields, by) => {\n    const channel = by.channel;\n    const fieldDef = by.fieldDef;\n\n    const scale = model.scale(channel);\n    const _field = field(fieldDef, {\n      binSuffix: scale && hasDiscreteDomain(scale.type) ? 'range' : 'start'\n    });\n    if (!!_field) {\n      fields.push(_field);\n    }\n    return fields;\n  }, [] as string[]);\n}\n\n/**\n * Stack data compiler\n */\nexport const stack: DataComponentCompiler<StackComponent> = {\n\n  parseUnit: function(model: UnitModel): StackComponent {\n    const stackProperties = model.stack;\n    if (!stackProperties) {\n      return undefined;\n    }\n\n    const groupby = [];\n    if (stackProperties.groupbyChannel) {\n      const groupbyFieldDef = model.fieldDef(stackProperties.groupbyChannel);\n      if (groupbyFieldDef.bin) {\n        // For Bin, we need to add both start and end to ensure that both get imputed\n        // and included in the stack output (https://github.com/vega/vega-lite/issues/1805).\n        groupby.push(model.field(stackProperties.groupbyChannel, {binSuffix: 'start'}));\n        groupby.push(model.field(stackProperties.groupbyChannel, {binSuffix: 'end'}));\n      } else {\n        groupby.push(model.field(stackProperties.groupbyChannel));\n      }\n    }\n\n    const stackby = getStackByFields(model);\n    const orderDef = model.encoding.order;\n\n    let sort: VgSort;\n    if (orderDef) {\n      sort = sortParams(orderDef);\n    } else {\n      // default = descending by stackFields\n      // FIXME is the default here correct for binned fields?\n      sort = stackby.reduce((s, field) => {\n        s.field.push(field);\n        s.order.push('descending');\n        return s;\n      }, {field:[], order: []});\n    }\n\n    return {\n      name: model.dataName(STACKED),\n      source: model.dataName(SUMMARY),\n      groupby: groupby,\n      field: model.field(stackProperties.fieldChannel),\n      stackby: stackby,\n      sort: sort,\n      offset: stackProperties.offset,\n      impute: contains(['area', 'line'], model.mark())\n    };\n  },\n\n  parseLayer: function(model: LayerModel): StackComponent {\n    // FIXME: merge if identical\n    // FIXME: Correctly support facet of layer of stack.\n    return undefined;\n  },\n\n  parseFacet: function(model: FacetModel): StackComponent {\n    const child = model.child;\n    const childDataComponent = child.component.data;\n    // FIXME: Correctly support facet of layer of stack.\n    if (childDataComponent.stack) {\n      let stackComponent = childDataComponent.stack;\n\n      const newName = model.dataName(STACKED);\n      child.renameData(stackComponent.name, newName);\n      stackComponent.name = newName;\n\n      // Refer to facet's summary instead (always summary because stacked only works with aggregation)\n      stackComponent.source = model.dataName(SUMMARY);\n\n      // Add faceted field to groupby\n      stackComponent.groupby = model.reduceFieldDef((groupby: string[], fieldDef: FieldDef) => {\n        const facetedField = field(fieldDef, {binSuffix: 'start'});\n        if (!contains(groupby, facetedField)) {\n          groupby.push(facetedField);\n        }\n        return groupby;\n      }, stackComponent.groupby);\n\n      delete childDataComponent.stack;\n      return stackComponent;\n    }\n    return undefined;\n  },\n  assemble: (stackComponent: StackComponent): VgData => {\n    if (!stackComponent) {\n      return undefined;\n    }\n\n    let transform: (VgStackTransform|VgImputeTransform)[] = [];\n    // Impute\n    if (stackComponent.impute) {\n      transform.push({\n        type: 'impute',\n        field: stackComponent.field,\n        groupby: stackComponent.stackby,\n        orderby: stackComponent.groupby,\n        method: 'value',\n        value: 0\n      });\n    }\n\n    // Stack\n    transform.push({\n      type: 'stack',\n      groupby: stackComponent.groupby,\n      field: stackComponent.field,\n      sort: stackComponent.sort,\n      as: [\n        stackComponent.field + '_start',\n        stackComponent.field + '_end'\n      ],\n      offset: stackComponent.offset\n    });\n\n    return {\n      name: stackComponent.name,\n      source: stackComponent.source,\n      transform: transform\n    };\n  }\n};\n","import {SUMMARY} from '../../data';\nimport {field, FieldDef} from '../../fielddef';\nimport {keys, vals, reduce, hash, Dict, StringSet} from '../../util';\nimport {VgData} from '../../vega.schema';\n\nimport {FacetModel} from './../facet';\nimport {LayerModel} from './../layer';\nimport {Model} from './../model';\n\nimport {SummaryComponent} from './data';\n\n\nexport namespace summary {\n  function addDimension(dims: {[field: string]: boolean}, fieldDef: FieldDef) {\n    if (fieldDef.bin) {\n      dims[field(fieldDef, {binSuffix: 'start'})] = true;\n      dims[field(fieldDef, {binSuffix: 'end'})] = true;\n\n      // const scale = model.scale(channel);\n      // if (scaleType(scale, fieldDef, channel, model.mark()) === ScaleType.ORDINAL) {\n      // also produce bin_range if the binned field use ordinal scale\n      dims[field(fieldDef, {binSuffix: 'range'})] = true;\n      // }\n    } else {\n      dims[field(fieldDef)] = true;\n    }\n    return dims;\n  }\n\n  export function parseUnit(model: Model): SummaryComponent[] {\n    /* string set for dimensions */\n    const dims: StringSet = {};\n\n    /* dictionary mapping field name => dict set of aggregation functions */\n    const meas: Dict<StringSet> = {};\n\n    model.forEachFieldDef(function(fieldDef, channel) {\n      if (fieldDef.aggregate) {\n        if (fieldDef.aggregate === 'count') {\n          meas['*'] = meas['*'] || {};\n          /* tslint:disable:no-string-literal */\n          meas['*']['count'] = true;\n          /* tslint:enable:no-string-literal */\n        } else {\n          meas[fieldDef.field] = meas[fieldDef.field] || {};\n          meas[fieldDef.field][fieldDef.aggregate] = true;\n\n          // add min/max so we can use their union as unaggregated domain\n          const scale = model.scale(channel);\n          if (scale && scale.domain === 'unaggregated') {\n            meas[fieldDef.field]['min'] = true;\n            meas[fieldDef.field]['max'] = true;\n          }\n        }\n      } else {\n        addDimension(dims, fieldDef);\n      };\n    });\n\n    return [{\n      name: model.dataName(SUMMARY),\n      dimensions: dims,\n      measures: meas\n    }];\n  }\n\n  export function parseFacet(model: FacetModel): SummaryComponent[] {\n    const childDataComponent = model.child.component.data;\n\n    // FIXME: this could be incorrect for faceted layer charts.\n\n    // If child doesn't have its own data source but has a summary data source, merge\n    if (!childDataComponent.source && childDataComponent.summary) {\n      let summaryComponents = childDataComponent.summary.map(function(summaryComponent) {\n        // add facet fields as dimensions\n        summaryComponent.dimensions = model.reduceFieldDef(addDimension, summaryComponent.dimensions);\n\n        const summaryNameWithoutPrefix = summaryComponent.name.substr(model.child.getName('').length);\n        model.child.renameData(summaryComponent.name, summaryNameWithoutPrefix);\n        summaryComponent.name = summaryNameWithoutPrefix;\n        return summaryComponent;\n      });\n\n      delete childDataComponent.summary;\n      return summaryComponents;\n    }\n    return [];\n  }\n\n  function mergeMeasures(parentMeasures: Dict<Dict<boolean>>, childMeasures: Dict<Dict<boolean>>) {\n    for (const field in childMeasures) {\n      if (childMeasures.hasOwnProperty(field)) {\n        // when we merge a measure, we either have to add an aggregation operator or even a new field\n        const ops = childMeasures[field];\n        for (const op in ops) {\n          if (ops.hasOwnProperty(op)) {\n            if (field in parentMeasures) {\n              // add operator to existing measure field\n              parentMeasures[field][op] = true;\n            } else {\n              parentMeasures[field] = {op: true};\n            }\n          }\n        }\n      }\n    }\n  }\n\n  export function parseLayer(model: LayerModel): SummaryComponent[] {\n    // Index by the fields we are grouping by\n    let summaries = {};\n\n    // Combine summaries for children that don't have a distinct source\n    // (either having its own data source, or its own tranformation of the same data source).\n    model.children.forEach((child) => {\n      const childDataComponent = child.component.data;\n      if (!childDataComponent.source && childDataComponent.summary) {\n        // Merge the summaries if we can\n        childDataComponent.summary.forEach((childSummary) => {\n          // The key is a hash based on the dimensions;\n          // we use it to find out whether we have a summary that uses the same group by fields.\n          const key = hash(childSummary.dimensions);\n          if (key in summaries) {\n            // yes, there is a summary hat we need to merge into\n            // we know that the dimensions are the same so we only need to merge the measures\n            mergeMeasures(summaries[key].measures, childSummary.measures);\n          } else {\n            // give the summary a new name\n            childSummary.name = model.dataName(SUMMARY) + '_' + keys(summaries).length;\n            summaries[key] = childSummary;\n          }\n\n          // remove summary from child\n          child.renameData(child.dataName(SUMMARY), summaries[key].name);\n          delete childDataComponent.summary;\n        });\n      }\n    });\n\n    return vals(summaries);\n  }\n\n  /**\n   * Assemble the summary. Needs a rename function because we cannot guarantee that the\n   * parent data before the children data.\n   */\n  export function assemble(component: SummaryComponent[], sourceName: string): VgData[] {\n    return component.reduce(function(summaryData, summaryComponent) {\n      const dims = summaryComponent.dimensions;\n      const meas = summaryComponent.measures;\n\n      if (keys(meas).length > 0) { // has aggregate\n        const groupby = keys(dims);\n        const transform = reduce(meas, function(t, fnDictSet, field) {\n          const ops = keys(fnDictSet);\n          for (const op of ops) {\n            t.fields.push(field);\n            t.ops.push(op);\n          }\n          return t;\n        }, {\n          type: 'aggregate',\n          groupby: groupby,\n          fields: [],\n          ops: []\n        });\n\n        summaryData.push({\n          name: summaryComponent.name,\n          source: sourceName,\n          transform: [transform]\n        });\n      }\n      return summaryData;\n    }, []);\n  }\n}\n","import {DataComponentCompiler} from './base';\n\nimport {field, FieldDef} from '../../fielddef';\nimport {fieldExpr} from '../../timeunit';\nimport {TEMPORAL} from '../../type';\nimport {extend, vals, Dict} from '../../util';\nimport {VgFormulaTransform} from '../../vega.schema';\n\nimport {FacetModel} from '../facet';\nimport {LayerModel} from '../layer';\nimport {Model} from '../model';\n\nfunction parse(model: Model): Dict<VgFormulaTransform> {\n  return model.reduceFieldDef(function(timeUnitComponent: Dict<VgFormulaTransform>, fieldDef: FieldDef) {\n    if (fieldDef.type === TEMPORAL && fieldDef.timeUnit) {\n\n      const f = field(fieldDef);\n      timeUnitComponent[f] = {\n        type: 'formula',\n        as: f,\n        expr: fieldExpr(fieldDef.timeUnit, fieldDef.field)\n      };\n    }\n    return timeUnitComponent;\n  }, {});\n}\n\nexport const timeUnit: DataComponentCompiler<Dict<VgFormulaTransform>> = {\n  parseUnit: parse,\n\n  parseFacet: function (model: FacetModel) {\n    let timeUnitComponent = parse(model);\n\n    const childDataComponent = model.child.component.data;\n\n    // If child doesn't have its own data source, then merge\n    if (!childDataComponent.source) {\n      extend(timeUnitComponent, childDataComponent.timeUnit);\n      delete childDataComponent.timeUnit;\n    }\n    return timeUnitComponent;\n  },\n\n  parseLayer: function(model: LayerModel) {\n    let timeUnitComponent = parse(model);\n    model.children.forEach((child) => {\n      const childDataComponent = child.component.data;\n      if (!childDataComponent.source) {\n        extend(timeUnitComponent, childDataComponent.timeUnit);\n        delete childDataComponent.timeUnit;\n      }\n    });\n    return timeUnitComponent;\n  },\n  assemble: function(component: Dict<VgFormulaTransform>) {\n    // just join the values, which are already transforms\n    return vals(component);\n  }\n};\n","import * as log from '../log';\n\nimport {Axis, VlOnlyAxisBase, VL_ONLY_AXIS_PROPERTIES} from '../axis';\nimport {COLUMN, ROW, X, Y, Channel} from '../channel';\nimport {defaultConfig, Config} from '../config';\nimport {Facet} from '../facet';\nimport {forEach} from '../encoding';\nimport {FieldDef, normalize} from '../fielddef';\nimport {Legend} from '../legend';\nimport {Scale} from '../scale';\nimport {FacetSpec} from '../spec';\nimport {contains, extend, keys, vals, flatten, duplicate, mergeDeep, Dict} from '../util';\nimport {VgData, VgEncodeEntry} from '../vega.schema';\nimport {StackProperties} from '../stack';\n\nimport {parseMainAxis, parseGridAxis, parseAxisComponent} from './axis/parse';\nimport {gridShow} from './axis/rules';\nimport {buildModel} from './common';\nimport {assembleData, parseFacetData} from './data/data';\nimport {assembleLayout, parseFacetLayout} from './layout';\nimport {Model} from './model';\n\nimport initScale from './scale/init';\nimport parseScaleComponent from './scale/parse';\n\n/**\n * Prefix for special data sources for driving column's axis group.\n */\n\nexport const COLUMN_AXES_DATA_PREFIX = 'column-';\n\n/**\n * Prefix for special data sources for driving row's axis group.\n */\nexport const ROW_AXES_DATA_PREFIX = 'row-';\n\nexport class FacetModel extends Model {\n  public readonly facet: Facet;\n\n  public readonly child: Model;\n\n  public readonly children: Model[];\n  protected readonly scales: Dict<Scale> = {};\n\n  protected readonly axes: Dict<Axis> = {};\n\n  protected readonly legends: Dict<Legend> = {};\n\n  public readonly config: Config;\n\n  public readonly stack: StackProperties = null;\n\n  private readonly _spacing: {\n    row?: number;\n    column?: number;\n  } = {};\n\n  constructor(spec: FacetSpec, parent: Model, parentGivenName: string) {\n    super(spec, parent, parentGivenName);\n\n    // Config must be initialized before child as it gets cascaded to the child\n    const config = this.config = this.initConfig(spec.config, parent);\n\n    const child  = this.child = buildModel(spec.spec, this, this.getName('child'));\n    this.children = [child];\n\n    const facet  = this.facet = this.initFacet(spec.facet);\n    this.scales  = this.initScalesAndSpacing(facet, config);\n    this.axes   = this.initAxis(facet, config, child);\n    this.legends = {};\n  }\n\n  private initConfig(specConfig: Config, parent: Model) {\n    return mergeDeep(duplicate(defaultConfig), parent ? parent.config : {}, specConfig);\n  }\n\n  private initFacet(facet: Facet) {\n    // clone to prevent side effect to the original spec\n    facet = duplicate(facet);\n\n    forEach(facet, function(fieldDef: FieldDef, channel: Channel) {\n      if (!contains([ROW, COLUMN], channel)) {\n        // Drop unsupported channel\n        log.warn(log.message.incompatibleChannel(channel, 'facet'));\n        delete facet[channel];\n        return;\n      }\n\n      // TODO: array of row / column ?\n      if (fieldDef.field === undefined) { // TODO: datum\n        log.warn(log.message.emptyFieldDef(fieldDef, channel));\n        delete facet[channel];\n        return;\n      }\n\n      // Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.\n      normalize(fieldDef, channel);\n    });\n    return facet;\n  }\n\n  private initScalesAndSpacing(facet: Facet, config: Config): Dict<Scale> {\n    const model = this;\n    return [ROW, COLUMN].reduce(function(_scale, channel) {\n      if (facet[channel]) {\n        _scale[channel] = initScale(\n          channel, facet[channel], config,\n          undefined, // Facet doesn't have one single mark\n          undefined, // TODO(#1647): support width / height here\n          [] // There is no xyRangeSteps here and there is no need to input\n        );\n\n        model._spacing[channel] = spacing(facet[channel].scale || {}, model, config);\n      }\n      return _scale;\n    }, {});\n  }\n\n  private initAxis(facet: Facet, config: Config, child: Model): Dict<Axis> {\n    const model = this;\n    return [ROW, COLUMN].reduce(function(_axis, channel) {\n      if (facet[channel]) {\n        const axisSpec = facet[channel].axis;\n        if (axisSpec !== false) {\n          let vlOnlyAxisProperties: VlOnlyAxisBase = {};\n          VL_ONLY_AXIS_PROPERTIES.forEach(function(property) {\n            if (config.facet.axis[property] !== undefined) {\n              vlOnlyAxisProperties[property] = config.facet.axis[property];\n            }\n          });\n\n          const modelAxis = _axis[channel] = {\n            ...vlOnlyAxisProperties,\n            ...axisSpec\n          };\n\n          if (channel === ROW) {\n            const yAxis: any = child.axis(Y);\n            if (yAxis && yAxis.orient !== 'right' && !modelAxis.orient) {\n              modelAxis.orient = 'right';\n            }\n            if (model.hasDescendantWithFieldOnChannel(X) && !modelAxis.labelAngle) {\n              modelAxis.labelAngle = modelAxis.orient === 'right' ? 90 : 270;\n            }\n          }\n        }\n      }\n      return _axis;\n    }, {});\n  }\n\n  public channelHasField(channel: Channel): boolean {\n    return !!this.facet[channel];\n  }\n\n  private hasSummary() {\n    const summary = this.component.data.summary;\n    for (const s of summary) {\n      if (keys(s.measures).length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  public facetedTable(): string {\n    // FIXME: revise if the suffix should be 'data'\n    return 'faceted-' + this.getName('data');\n  }\n\n  public dataTable(): string {\n    // FIXME: shouldn't we apply data renaming here?\n    if (this.component.data.stack) {\n      return 'stacked';\n    }\n    if (this.hasSummary()) {\n      return 'summary';\n    }\n    return 'source';\n  }\n\n  public fieldDef(channel: Channel): FieldDef {\n    return this.facet[channel];\n  }\n\n  public parseData() {\n    this.child.parseData();\n    this.component.data = parseFacetData(this);\n  }\n\n  public parseSelection() {\n    // TODO: @arvind can write this\n    // We might need to split this into compileSelectionData and compileSelectionSignals?\n  }\n\n  public parseLayoutData() {\n    this.child.parseLayoutData();\n    this.component.layout = parseFacetLayout(this);\n  }\n\n  public parseScale() {\n    const child = this.child;\n    const model = this;\n\n    child.parseScale();\n\n    // TODO: support scales for field reference of parent data (e.g., for SPLOM)\n\n    // First, add scale for row and column.\n    let scaleComponent = this.component.scales = parseScaleComponent(this);\n\n    // Then, move shared/union from its child spec.\n    keys(child.component.scales).forEach(function(channel) {\n      // TODO: correctly implement independent scale\n      if (true) { // if shared/union scale\n        scaleComponent[channel] = child.component.scales[channel];\n\n        // for each scale, need to rename\n        vals(scaleComponent[channel]).forEach(function(scale: any) {\n          const scaleNameWithoutPrefix = scale.name.substr(child.getName('').length);\n          const newName = model.scaleName(scaleNameWithoutPrefix, true);\n          child.renameScale(scale.name, newName);\n          scale.name = newName;\n        });\n\n        // Once put in parent, just remove the child's scale.\n        delete child.component.scales[channel];\n      }\n    });\n  }\n\n  public parseMark() {\n    this.child.parseMark();\n\n    this.component.mark = extend(\n      {\n        name: this.getName('cell'),\n        type: 'group',\n        from: extend(\n          {\n            facet: {\n              name: this.facetedTable(),\n              data: this.dataTable(),\n              groupby: [].concat(\n                this.channelHasField(ROW) ? [this.field(ROW)] : [],\n                this.channelHasField(COLUMN) ? [this.field(COLUMN)] : []\n              )\n            }\n          }\n        ),\n        encode: {\n          update: getFacetGroupProperties(this)\n        }\n      },\n      // FIXME: move this call to assembleMarks()\n      // Call child's assembleGroup to add marks, scales, axes, and legends.\n      // Note that we can call child's assembleGroup() here because parseMark()\n      // is the last method in compile() and thus the child is completely compiled\n      // at this point.\n      this.child.assembleGroup()\n    );\n  }\n\n  public parseAxis() {\n    this.child.parseAxis();\n    this.component.axes = parseAxisComponent(this, [ROW, COLUMN]);\n  }\n\n  public parseAxisGroup() {\n    // TODO: with nesting, we might need to consider calling child\n    // this.child.parseAxisGroup();\n\n    const xAxisGroup = parseAxisGroups(this, X);\n    const yAxisGroup = parseAxisGroups(this, Y);\n\n    this.component.axisGroups = extend(\n      xAxisGroup ? {x: xAxisGroup} : {},\n      yAxisGroup ? {y: yAxisGroup} : {}\n    );\n  }\n\n  public parseGridGroup() {\n    // TODO: with nesting, we might need to consider calling child\n    // this.child.parseGridGroup();\n\n    const child = this.child;\n\n    this.component.gridGroups = extend(\n      !child.channelHasField(X) && this.channelHasField(COLUMN) ? {column: getColumnGridGroups(this)} : {},\n      !child.channelHasField(Y) && this.channelHasField(ROW) ? {row: getRowGridGroups(this)} : {}\n    );\n  }\n\n  public parseLegend() {\n    this.child.parseLegend();\n\n    // TODO: support legend for independent non-position scale across facets\n    // TODO: support legend for field reference of parent data (e.g., for SPLOM)\n\n    // For now, assuming that non-positional scales are always shared across facets\n    // Thus, just move all legends from its child\n    this.component.legends = this.child.component.legends;\n    this.child.component.legends = {};\n  }\n\n  public assembleParentGroupProperties(): any {\n    return null;\n  }\n\n  public assembleSignals(signals: any): any[] {\n    return [];\n  }\n\n  public assembleSelectionData(data: VgData[]): VgData[] {\n    return [];\n  }\n\n  public assembleData(data: VgData[]): VgData[] {\n    // Prefix traversal – parent data might be referred by children data\n    assembleData(this, data);\n    this.child.assembleData(data);\n    assembleAxesGroupData(this, data);\n\n    return data;\n  }\n\n\n  public assembleLayout(layoutData: VgData[]): VgData[] {\n    // Postfix traversal – layout is assembled bottom-up\n    this.child.assembleLayout(layoutData);\n    return assembleLayout(this, layoutData);\n  }\n\n  public assembleMarks(): any[] {\n    return [].concat(\n      // axisGroup is a mapping to VgMarkGroup\n      vals(this.component.axisGroups),\n      flatten(vals(this.component.gridGroups)),\n      this.component.mark\n    );\n  }\n\n  public channels() {\n    return [ROW, COLUMN];\n  }\n\n  protected getMapping() {\n    return this.facet;\n  }\n\n  public spacing(channel: Channel) {\n    return this._spacing[channel];\n  }\n\n  public isFacet() {\n    return true;\n  }\n}\n\nexport function hasSubPlotWithXy(model: FacetModel) {\n  return model.hasDescendantWithFieldOnChannel('x') ||\n    model.hasDescendantWithFieldOnChannel('y');\n}\n\nexport function spacing(scale: Scale, model: FacetModel, config: Config) {\n  if (scale.spacing !== undefined) {\n    return scale.spacing;\n  }\n\n  if (!hasSubPlotWithXy(model)) {\n    // If there is no subplot with x/y, it's a simple table so there should be no spacing.\n    return 0;\n  }\n  return config.scale.facetSpacing;\n}\n\nfunction getFacetGroupProperties(model: FacetModel) {\n  const child = model.child;\n  const mergedCellConfig = extend({}, child.config.cell, child.config.facet.cell);\n\n  return extend({\n      x: model.channelHasField(COLUMN) ? {\n          scale: model.scaleName(COLUMN),\n          field: model.field(COLUMN),\n          // offset by the spacing / 2\n          offset: model.spacing(COLUMN) / 2\n        } : {value: model.config.scale.facetSpacing / 2},\n\n      y: model.channelHasField(ROW) ? {\n        scale: model.scaleName(ROW),\n        field: model.field(ROW),\n        // offset by the spacing / 2\n        offset: model.spacing(ROW) / 2\n      } : {value: model.config.scale.facetSpacing / 2},\n\n      width: {field: {parent: model.child.sizeName('width')}},\n      height: {field: {parent: model.child.sizeName('height')}}\n    },\n    hasSubPlotWithXy(model) ? child.assembleParentGroupProperties(mergedCellConfig) : {}\n  );\n}\n\n// TODO: move the rest of the file src/compile/facet/*.ts\n\n/**\n * Add data for driving row/column axes when there are both row and column\n * Note that we don't have to deal with these in the parse step at all\n * because these items never get merged with any other items.\n */\nexport function assembleAxesGroupData(model: FacetModel, data: VgData[]) {\n  if (model.facet.column) {\n    data.push({\n      name: COLUMN_AXES_DATA_PREFIX + model.dataTable(),\n      source: model.dataTable(),\n      transform: [{\n        type: 'aggregate',\n        groupby: [model.field(COLUMN)]\n      }]\n    });\n  }\n\n  if (model.facet.row) {\n    data.push({\n      name: ROW_AXES_DATA_PREFIX + model.dataTable(),\n      source: model.dataTable(),\n      transform: [{\n        type: 'aggregate',\n        groupby: [model.field(ROW)]\n      }]\n    });\n  }\n  return data;\n}\n\nfunction parseAxisGroups(model: FacetModel, channel: 'x' | 'y') {\n  // TODO: add a case where inner spec is not a unit (facet/layer/concat)\n  let axisGroup: any = null;\n\n  const child = model.child;\n  if (child.channelHasField(channel)) {\n    if (child.axis(channel)) {\n      if (true) { // the channel has shared axes\n\n        // add a group for the shared axes\n        axisGroup = getSharedAxisGroup(model, channel);\n\n        if (child.axis(channel) && gridShow(child, channel)) { // show inner grid\n          // add inner axis (aka axis that shows only grid to )\n          child.component.axes[channel] = [parseGridAxis(channel, child)];\n        } else {\n          // Delete existing child axes\n          delete child.component.axes[channel];\n        }\n      } else {\n        // TODO: implement independent axes support\n      }\n    }\n  }\n  return axisGroup;\n}\n\n\nexport function getSharedAxisGroup(model: FacetModel, channel: 'x' | 'y'): VgEncodeEntry {\n  const isX = channel === 'x' ;\n  const facetChannel = isX ? 'column' : 'row';\n  const hasFacet = !!model.facet[facetChannel];\n  const dataPrefix = isX ? COLUMN_AXES_DATA_PREFIX : ROW_AXES_DATA_PREFIX;\n\n  let axesGroup: VgEncodeEntry = {\n    name: model.getName(channel + '-axes'),\n    type: 'group'\n  };\n\n  if (hasFacet) {\n    // Need to drive this with special data source that has one item for each column/row value.\n\n    // TODO: We might only need to drive this with special data source if there are both row and column\n    // However, it might be slightly difficult as we have to merge this with the main group.\n    axesGroup.from = {data: dataPrefix + model.dataTable()};\n  }\n\n  if (isX) {\n    axesGroup.encode = {\n      update: {\n        width: {field: {parent: model.child.sizeName('width')}},\n        height: {field: {group: 'height'}},\n        x: hasFacet ? {\n          scale: model.scaleName(COLUMN),\n          field: model.field(COLUMN),\n          // offset by the spacing\n          offset: model.spacing(COLUMN) / 2\n        } : {\n          // TODO: support custom spacing here\n          // offset by the spacing\n          value: model.config.scale.facetSpacing / 2\n        }\n      }\n    };\n  } else {\n    axesGroup.encode = {\n      update: {\n        width: {field: {group: 'width'}},\n        height: {field: {parent: model.child.sizeName('height')}},\n        y: hasFacet ? {\n          scale: model.scaleName(ROW),\n          field: model.field(ROW),\n          // offset by the spacing\n          offset: model.spacing(ROW) / 2\n        } : {\n          // offset by the spacing\n          value: model.config.scale.facetSpacing / 2\n        }\n      }\n    };\n  }\n\n  axesGroup.axes = [parseMainAxis(channel, model.child)];\n  return axesGroup;\n}\n\n\nfunction getRowGridGroups(model: Model): any[] { // TODO: VgMarks\n  const facetGridConfig = model.config.facet.grid;\n\n  const rowGrid = {\n    name: model.getName('row-grid'),\n    type: 'rule',\n    from: {\n      data: ROW_AXES_DATA_PREFIX + model.dataTable()\n    },\n    encode: {\n      update: {\n        y: {\n          scale: model.scaleName(ROW),\n          field: model.field(ROW)\n        },\n        x: {value: 0, offset: -facetGridConfig.offset},\n        x2: {field: {group: 'width'}, offset: facetGridConfig.offset},\n        stroke: {value: facetGridConfig.color},\n        strokeOpacity: {value: facetGridConfig.opacity},\n        strokeWidth: {value: 0.5}\n      }\n    }\n  };\n\n  return [rowGrid, {\n    name: model.getName('row-grid-end'),\n    type: 'rule',\n    encode: {\n      update: {\n        y: {field: {group: 'height'}},\n        x: {value: 0, offset: -facetGridConfig.offset},\n        x2: {field: {group: 'width'}, offset: facetGridConfig.offset},\n        stroke: {value: facetGridConfig.color},\n        strokeOpacity: {value: facetGridConfig.opacity},\n        strokeWidth: {value: 0.5}\n      }\n    }\n  }];\n}\n\nfunction getColumnGridGroups(model: Model): any { // TODO: VgMarks\n  const facetGridConfig = model.config.facet.grid;\n\n  const columnGrid = {\n    name: model.getName('column-grid'),\n    type: 'rule',\n    from: {\n      data: COLUMN_AXES_DATA_PREFIX + model.dataTable()\n    },\n    encode: {\n      update: {\n        x: {\n          scale: model.scaleName(COLUMN),\n          field: model.field(COLUMN)\n        },\n        y: {value: 0, offset: -facetGridConfig.offset},\n        y2: {field: {group: 'height'}, offset: facetGridConfig.offset},\n        stroke: {value: facetGridConfig.color},\n        strokeOpacity: {value: facetGridConfig.opacity},\n        strokeWidth: {value: 0.5}\n      }\n    }\n  };\n\n  return [columnGrid,  {\n    name: model.getName('column-grid-end'),\n    type: 'rule',\n    encode: {\n      update: {\n        x: {field: {group: 'width'}},\n        y: {value: 0, offset: -facetGridConfig.offset},\n        y2: {field: {group: 'height'}, offset: facetGridConfig.offset},\n        stroke: {value: facetGridConfig.color},\n        strokeOpacity: {value: facetGridConfig.opacity},\n        strokeWidth: {value: 0.5}\n      }\n    }\n  }];\n}\n","import {Channel} from '../channel';\nimport {defaultConfig, CellConfig, Config} from '../config';\nimport {FieldDef} from '../fielddef';\nimport {Legend} from '../legend';\nimport {Scale} from '../scale';\nimport {Axis} from '../axis';\nimport {LayerSpec} from '../spec';\nimport {StackProperties} from '../stack';\nimport {FILL_STROKE_CONFIG} from '../mark';\nimport {keys, duplicate, mergeDeep, flatten, vals, Dict} from '../util';\nimport {VgData, VgEncodeEntry} from '../vega.schema';\nimport {isUrlData} from '../data';\n\nimport {assembleData, parseLayerData} from './data/data';\nimport {applyConfig, buildModel} from './common';\nimport {assembleLayout, parseLayerLayout} from './layout';\nimport {Model} from './model';\nimport {UnitModel} from './unit';\n\nimport {ScaleComponents} from './scale/scale';\nimport {unionDomains} from './scale/domain';\n\n\nexport class LayerModel extends Model {\n  public readonly children: UnitModel[];\n\n  protected readonly scales: Dict<Scale> = {};\n\n  protected readonly axes: Dict<Axis> = {};\n\n  protected readonly legends: Dict<Legend> = {};\n\n  public readonly config: Config;\n\n  public readonly stack: StackProperties = null;\n\n  /**\n   * Fixed width for the unit visualization.\n   * If undefined (e.g., for ordinal scale), the width of the\n   * visualization will be calculated dynamically.\n   */\n  public readonly width: number;\n\n  /**\n   * Fixed height for the unit visualization.\n   * If undefined (e.g., for ordinal scale), the height of the\n   * visualization will be calculated dynamically.\n   */\n  public readonly height: number;\n\n  constructor(spec: LayerSpec, parent: Model, parentGivenName: string) {\n    super(spec, parent, parentGivenName);\n\n    this.width = spec.width;\n    this.height = spec.height;\n\n    this.config = this.initConfig(spec.config, parent);\n    this.children = spec.layer.map((layer, i) => {\n      // we know that the model has to be a unit model because we pass in a unit spec\n      return buildModel(layer, this, this.getName('layer_' + i)) as UnitModel;\n    });\n  }\n\n  private initConfig(specConfig: Config, parent: Model) {\n    return mergeDeep(duplicate(defaultConfig), specConfig, parent ? parent.config : {});\n  }\n\n  public channelHasField(channel: Channel): boolean {\n    // layer does not have any channels\n    return false;\n  }\n\n  public hasDiscreteScale(channel: Channel) {\n    // since we assume shared scales we can just ask the first child\n    return this.children[0].hasDiscreteScale(channel);\n  }\n\n  public dataTable() {\n    // FIXME: don't just use the first child\n    return this.children[0].dataTable();\n  }\n\n  public fieldDef(channel: Channel): FieldDef {\n    return null; // layer does not have field defs\n  }\n\n  public parseData() {\n    this.children.forEach((child) => {\n      child.parseData();\n    });\n    this.component.data = parseLayerData(this);\n  }\n\n  public parseSelection() {\n    // TODO: @arvind can write this\n    // We might need to split this into compileSelectionData and compileSelectionSignals?\n  }\n\n  public parseLayoutData() {\n    // TODO: correctly union ordinal scales rather than just using the layout of the first child\n    this.children.forEach(child => {\n      child.parseLayoutData();\n    });\n    this.component.layout = parseLayerLayout(this);\n  }\n\n  public parseScale(this: LayerModel) {\n    const model = this;\n\n    let scaleComponent = this.component.scales = {};\n\n    this.children.forEach(function(child) {\n      child.parseScale();\n\n      // FIXME(#1602): correctly implement independent scale\n      // Also need to check whether the scales are actually compatible, e.g. use the same sort or throw error\n      if (true) { // if shared/union scale\n        keys(child.component.scales).forEach(function(channel) {\n          let childScales: ScaleComponents = child.component.scales[channel];\n          if (!childScales) {\n            // the child does not have any scales so we have nothing to merge\n            return;\n          }\n\n          const modelScales: ScaleComponents = scaleComponent[channel];\n          if (modelScales && modelScales.main) {\n            // Scales are unioned by combining the domain of the main scale.\n            // Other scales that are used for ordinal legends are appended.\n\n            modelScales.main.domain = unionDomains(modelScales.main.domain, childScales.main.domain);\n            modelScales.binLegend = modelScales.binLegend ? modelScales.binLegend : childScales.binLegend;\n            modelScales.binLegendLabel = modelScales.binLegendLabel ? modelScales.binLegendLabel : childScales.binLegendLabel;\n          } else {\n            scaleComponent[channel] = childScales;\n          }\n\n          // rename child scales to parent scales\n          vals(childScales).forEach(function(scale: any) {\n            const scaleNameWithoutPrefix = scale.name.substr(child.getName('').length);\n            const newName = model.scaleName(scaleNameWithoutPrefix, true);\n            child.renameScale(scale.name, newName);\n            scale.name = newName;\n          });\n\n          delete childScales[channel];\n        });\n      }\n    });\n  }\n\n  public parseMark() {\n    this.children.forEach(function(child) {\n      child.parseMark();\n    });\n  }\n\n  public parseAxis() {\n    let axisComponent = this.component.axes = {};\n\n    this.children.forEach(function(child) {\n      child.parseAxis();\n\n      // TODO: correctly implement independent axes\n      if (true) { // if shared/union scale\n        keys(child.component.axes).forEach(function(channel) {\n          // TODO: support multiple axes for shared scale\n\n          // just use the first axis definition for each channel\n          if (!axisComponent[channel]) {\n            axisComponent[channel] = child.component.axes[channel];\n          }\n        });\n      }\n    });\n  }\n\n  public parseAxisGroup(): void {\n    return null;\n  }\n\n  public parseGridGroup(): void {\n    return null;\n  }\n\n  public parseLegend() {\n    let legendComponent = this.component.legends = {};\n\n    this.children.forEach(function(child) {\n      child.parseLegend();\n\n      // TODO: correctly implement independent axes\n      if (true) { // if shared/union scale\n        keys(child.component.legends).forEach(function(channel) {\n          // just use the first legend definition for each channel\n          if (!legendComponent[channel]) {\n            legendComponent[channel] = child.component.legends[channel];\n          }\n        });\n      }\n    });\n  }\n\n  public assembleParentGroupProperties(cellConfig: CellConfig): VgEncodeEntry {\n    return applyConfig({}, cellConfig, FILL_STROKE_CONFIG.concat(['clip']));\n  }\n\n  public assembleSignals(signals: any[]): any[] {\n    return [];\n  }\n\n  public assembleSelectionData(data: VgData[]): VgData[] {\n    return [];\n  }\n\n  public assembleData(data: VgData[]): VgData[] {\n    // Prefix traversal – parent data might be referred to by children data\n    assembleData(this, data);\n    this.children.forEach((child) => {\n      child.assembleData(data);\n    });\n    return data;\n  }\n\n  public assembleLayout(layoutData: VgData[]): VgData[] {\n    // Postfix traversal – layout is assembled bottom-up\n    this.children.forEach((child) => {\n      child.assembleLayout(layoutData);\n    });\n    return assembleLayout(this, layoutData);\n  }\n\n  public assembleMarks(): any[] {\n    // only children have marks\n    return flatten(this.children.map((child) => {\n      return child.assembleMarks();\n    }));\n  }\n\n  public channels(): Channel[] {\n    return [];\n  }\n\n  protected getMapping(): any {\n    return null;\n  }\n\n  public isLayer() {\n    return true;\n  }\n\n  /**\n   * Returns true if the child either has no source defined or uses the same url.\n   * This is useful if you want to know whether it is possible to move a filter up.\n   *\n   * This function can only be called once th child has been parsed.\n   */\n  public compatibleSource(child: UnitModel) {\n    const data = this.data;\n    const childData = child.component.data;\n    const compatible = !childData.source || (data && isUrlData(data) && data.url === childData.source.url);\n    return compatible;\n  }\n}\n","\nimport {Channel, X, Y, ROW, COLUMN} from '../channel';\nimport {LAYOUT} from '../data';\nimport {hasDiscreteDomain} from '../scale';\nimport {Formula} from '../transform';\nimport {extend, keys, StringSet} from '../util';\nimport {VgData} from '../vega.schema';\n\nimport {FacetModel} from './facet';\nimport {LayerModel} from './layer';\nimport {Model} from './model';\nimport {UnitModel} from './unit';\n\n// FIXME: for nesting x and y, we need to declare x,y layout separately before joining later\n// For now, let's always assume shared scale\nexport interface LayoutComponent {\n  width: SizeComponent;\n  height: SizeComponent;\n}\n\nexport interface SizeComponent {\n  /** Field that we need to calculate distinct */\n  distinct: StringSet;\n\n  /** Array of formulas */\n  formula: Formula[];\n}\n\nexport function assembleLayout(model: Model, layoutData: VgData[]): VgData[] {\n  const layoutComponent = model.component.layout;\n  if (!layoutComponent.width && !layoutComponent.height) {\n    return layoutData; // Do nothing\n  }\n\n  if (true) { // if both are shared scale, we can simply merge data source for width and for height\n    const distinctFields = keys(extend(layoutComponent.width.distinct, layoutComponent.height.distinct));\n    const formula = layoutComponent.width.formula.concat(layoutComponent.height.formula)\n      .map(f => extend({type: 'formula'}, f));\n\n    return [\n      distinctFields.length > 0 ? {\n        name: model.dataName(LAYOUT),\n        source: model.dataTable(),\n        transform: [{\n          type: 'aggregate',\n          fields: distinctFields,\n          ops: distinctFields.map(() => 'distinct')\n        } as any].concat(formula)\n      } : {\n        name: model.dataName(LAYOUT),\n        values: [{}],\n        transform: formula\n      }\n    ];\n  }\n  // FIXME: implement\n  // otherwise, we need to join width and height (cross)\n}\n\n// FIXME: for nesting x and y, we need to declare x,y layout separately before joining later\n// For now, let's always assume shared scale\nexport function parseUnitLayout(model: UnitModel): LayoutComponent {\n  return {\n    width: parseUnitSizeLayout(model, X),\n    height: parseUnitSizeLayout(model, Y)\n  };\n}\n\nfunction parseUnitSizeLayout(model: UnitModel, channel: Channel): SizeComponent {\n  return {\n    distinct: getDistinct(model, channel),\n    formula: [{\n      as: model.channelSizeName(channel),\n      expr: unitSizeExpr(model, channel)\n    }]\n  };\n}\n\nexport function unitSizeExpr(model: UnitModel, channel: Channel): string {\n  const scale = model.scale(channel);\n  if (scale) {\n\n    if (hasDiscreteDomain(scale.type) && scale.rangeStep) {\n      // If the spec has top level size or specified rangeStep = fit, it will be undefined here.\n\n      const cardinality = cardinalityExpr(model, channel);\n      const paddingOuter = scale.paddingOuter !== undefined ? scale.paddingOuter : scale.padding;\n      const paddingInner = scale.type === 'band' ?\n        // only band has real paddingInner\n        (scale.paddingInner !== undefined ? scale.paddingInner : scale.padding) :\n        // For point, as calculated in https://github.com/vega/vega-scale/blob/master/src/band.js#L128,\n        // it's equivalent to have paddingInner = 1 since there is only n-1 steps between n points.\n        1;\n\n      let space = cardinality +\n        (paddingInner ? ` - ${paddingInner}` : '') +\n        (paddingOuter ? ` + 2*${paddingOuter}` : '');\n\n      // This formula is equivalent to\n      // space = count - inner + outer * 2\n      // range = rangeStep * (space > 0 ? space : 0)\n      // in https://github.com/vega/vega-encode/blob/master/src/Scale.js#L112\n      return `max(${space}, 0) * ${scale.rangeStep}`;\n    }\n  }\n  return (channel === X ? model.width : model.height) + '';\n}\n\nexport function parseFacetLayout(model: FacetModel): LayoutComponent {\n  return {\n    width: parseFacetSizeLayout(model, COLUMN),\n    height: parseFacetSizeLayout(model, ROW)\n  };\n}\n\nfunction parseFacetSizeLayout(model: FacetModel, channel: Channel): SizeComponent {\n  const childLayoutComponent = model.child.component.layout;\n  const sizeType = channel === ROW ? 'height' : 'width';\n  const childSizeComponent: SizeComponent = childLayoutComponent[sizeType];\n\n  if (true) { // assume shared scale\n    // For shared scale, we can simply merge the layout into one data source\n\n    const distinct = extend(getDistinct(model, channel), childSizeComponent.distinct);\n    const formula = childSizeComponent.formula.concat([{\n      as: model.channelSizeName(channel),\n      expr: facetSizeFormula(model, channel, model.child.channelSizeName(channel))\n    }]);\n\n    delete childLayoutComponent[sizeType];\n    return {\n      distinct: distinct,\n      formula: formula\n    };\n  }\n  // FIXME implement independent scale as well\n  // TODO: - also consider when children have different data source\n}\n\nfunction facetSizeFormula(model: FacetModel, channel: Channel, innerSize: string) {\n  if (model.channelHasField(channel)) {\n    return '(datum[\"' + innerSize + '\"] + ' + model.spacing(channel) + ')' + ' * ' + cardinalityExpr(model, channel);\n  } else {\n    return 'datum[\"' + innerSize + '\"] + ' + model.config.scale.facetSpacing; // need to add outer padding for facet\n  }\n}\n\nexport function parseLayerLayout(model: LayerModel): LayoutComponent {\n  return {\n    width: parseLayerSizeLayout(model, X),\n    height: parseLayerSizeLayout(model, Y)\n  };\n}\n\nfunction parseLayerSizeLayout(model: LayerModel, channel: Channel): SizeComponent {\n  if (true) {\n    // For shared scale, we can simply merge the layout into one data source\n    // TODO: don't just take the layout from the first child\n\n    const childLayoutComponent = model.children[0].component.layout;\n    const sizeType = channel === Y ? 'height' : 'width';\n    const childSizeComponent: SizeComponent = childLayoutComponent[sizeType];\n\n    const distinct = childSizeComponent.distinct;\n    const formula: Formula[] = [{\n      as: model.channelSizeName(channel),\n      expr: childSizeComponent.formula[0].expr\n    }];\n\n    model.children.forEach((child) => {\n      delete child.component.layout[sizeType];\n    });\n\n    return {\n      distinct: distinct,\n      formula: formula\n    };\n  }\n}\n\nfunction getDistinct(model: Model, channel: Channel): StringSet {\n  if (model.channelHasField(channel) && model.hasDiscreteScale(channel)) {\n    const scale = model.scale(channel);\n    if (hasDiscreteDomain(scale.type) && !(scale.domain instanceof Array)) {\n      // if explicit domain is declared, use array length\n      const distinctField = model.field(channel);\n      let distinct: StringSet = {};\n      distinct[distinctField] = true;\n      return distinct;\n    }\n  }\n  return {};\n}\n\nexport function cardinalityExpr(model: Model, channel: Channel):string {\n  const scale = model.scale(channel);\n  if (scale.domain instanceof Array) {\n    return scale.domain.length + '';\n  }\n\n  return model.field(channel, {datum: true, prefix: 'distinct'});\n}\n","import {COLOR, SIZE, SHAPE, OPACITY, Channel} from '../../channel';\nimport {FieldDef, isValueDef} from '../../fielddef';\nimport {AREA, BAR, TICK, TEXT, LINE, POINT, CIRCLE, SQUARE, FILL_STROKE_CONFIG} from '../../mark';\nimport {hasContinuousDomain} from '../../scale';\nimport {TEMPORAL} from '../../type';\nimport {extend, keys, without} from '../../util';\n\nimport {VgValueRef} from '../../vega.schema';\n\nimport {applyMarkConfig, timeFormatExpression} from '../common';\nimport {BIN_LEGEND_LABEL_SUFFIX} from '../scale/scale';\nimport {UnitModel} from '../unit';\n\nexport function symbols(fieldDef: FieldDef, symbolsSpec: any, model: UnitModel, channel: Channel) {\n  let symbols:any = {};\n  const mark = model.mark();\n\n  switch (mark) {\n    case BAR:\n    case TICK:\n    case TEXT:\n      symbols.shape = {value: 'square'};\n      break;\n    case CIRCLE:\n    case SQUARE:\n      symbols.shape = {value: mark};\n      break;\n    case POINT:\n    case LINE:\n    case AREA:\n      // use default circle\n      break;\n  }\n\n  const cfg = model.config;\n  const filled = model.markDef.filled;\n\n  let config = channel === COLOR ?\n      /* For color's legend, do not set fill (when filled) or stroke (when unfilled) property from config because the legend's `fill` or `stroke` scale should have precedence */\n      without(FILL_STROKE_CONFIG, [ filled ? 'fill' : 'stroke', 'strokeDash', 'strokeDashOffset']) :\n      /* For other legend, no need to omit. */\n      FILL_STROKE_CONFIG;\n\n  config = without(config, ['strokeDash', 'strokeDashOffset']);\n\n  applyMarkConfig(symbols, model, config);\n\n  if (filled) {\n    symbols.strokeWidth = {value: 0};\n  }\n\n  // Avoid override default mapping for opacity channel\n  if (channel === OPACITY) {\n    delete symbols.opacity;\n  }\n\n  let value: VgValueRef;\n  const colorDef = model.encoding.color;\n  if (isValueDef(colorDef)) {\n    value = {value: colorDef.value};\n  }\n\n  if (value !== undefined) {\n    // apply the value\n    if (filled) {\n      symbols.fill = value;\n    } else {\n      symbols.stroke = value;\n    }\n  } else if (channel !== COLOR) {\n    // For non-color legend, apply color config if there is no fill / stroke config.\n    // (For color, do not override scale specified!)\n    symbols[filled ? 'fill' : 'stroke'] = symbols[filled ? 'fill' : 'stroke'] ||\n      {value: cfg.mark.color};\n  }\n\n  if (symbols.fill === undefined) {\n    // fall back to mark config colors for legend fill\n    if (cfg.mark.fill !== undefined) {\n      symbols.fill = {value: cfg.mark.fill};\n    } else if (cfg.mark.stroke !== undefined) {\n      symbols.stroke = {value: cfg.mark.stroke};\n    }\n  }\n\n  const shapeDef = model.encoding.shape;\n  if (channel !== SHAPE) {\n    if (isValueDef(shapeDef)) {\n      symbols.shape = {value: shapeDef.value};\n    }\n  }\n\n  if (fieldDef.bin && hasContinuousDomain(model.scale(channel).type)) {\n    const def = {\n      scale: model.scaleName(channel),\n      field: 'value'\n    };\n    switch (channel) {\n      case OPACITY:\n        symbols.opacity = def;\n        break;\n      case SIZE:\n        symbols.size = def;\n        break;\n      case COLOR:\n        symbols[filled ? 'fill' : 'stroke'] = def;\n        break;\n      default:\n        throw Error(`Legend for channel ${channel} not implemented`);\n    }\n  }\n\n  symbols = extend(symbols, symbolsSpec || {});\n\n  return keys(symbols).length > 0 ? symbols : undefined;\n}\n\nexport function labels(fieldDef: FieldDef, labelsSpec: any, model: UnitModel, channel: Channel) {\n  const legend = model.legend(channel);\n  const config = model.config;\n\n  let labels:any = {};\n\n  if (fieldDef.bin && hasContinuousDomain(model.scale(channel).type)) {\n    // Override label's text to map bin's quantitative value to range\n    labelsSpec = extend({\n      text: {\n        scale: model.scaleName(channel) + BIN_LEGEND_LABEL_SUFFIX,\n        field: 'value'\n      }\n    }, labelsSpec || {});\n  } else if (fieldDef.type === TEMPORAL) {\n    labelsSpec = extend({\n      text: {\n        signal: timeFormatExpression('datum.value', fieldDef.timeUnit, legend.format, config.legend.shortTimeLabels, config.timeFormat)\n      }\n    }, labelsSpec || {});\n  }\n\n  labels = extend(labels, labelsSpec || {});\n\n  return keys(labels).length > 0 ? labels : undefined;\n}\n\n","import {COLOR, SIZE, SHAPE, OPACITY, Channel} from '../../channel';\nimport {hasContinuousDomain} from '../../scale';\nimport {keys, Dict} from '../../util';\nimport {VgLegend} from '../../vega.schema';\nimport {Legend, LEGEND_PROPERTIES} from '../../legend';\n\nimport {Model} from '../model';\nimport {numberFormat} from '../common';\nimport {BIN_LEGEND_SUFFIX} from '../scale/scale';\nimport {UnitModel} from '../unit';\n\nimport * as encode from './encode';\nimport * as rules from './rules';\n\nexport function parseLegendComponent(model: UnitModel): Dict<VgLegend> {\n  return [COLOR, SIZE, SHAPE, OPACITY].reduce(function(legendComponent, channel) {\n    if (model.legend(channel)) {\n      legendComponent[channel] = parseLegend(model, channel);\n    }\n    return legendComponent;\n  }, {});\n}\n\nfunction getLegendDefWithScale(model: UnitModel, channel: Channel): VgLegend {\n  // For binned field with continuous scale, use a special scale so we can overrride the mark props and labels\n  const suffix = model.fieldDef(channel).bin && hasContinuousDomain(model.scale(channel).type) ? BIN_LEGEND_SUFFIX : '';\n  switch (channel) {\n    case COLOR:\n      const scale = model.scaleName(COLOR) + suffix;\n      return model.markDef.filled ? {fill: scale} : {stroke: scale};\n    case SIZE:\n      return {size: model.scaleName(SIZE) + suffix};\n    case SHAPE:\n      return {shape: model.scaleName(SHAPE) + suffix};\n    case OPACITY:\n      return {opacity: model.scaleName(OPACITY) + suffix};\n  }\n  return null;\n}\n\nexport function parseLegend(model: UnitModel, channel: Channel): VgLegend {\n  const fieldDef = model.fieldDef(channel);\n  const legend = model.legend(channel);\n\n  let def: VgLegend = getLegendDefWithScale(model, channel);\n\n  LEGEND_PROPERTIES.forEach(function(property) {\n    const value = getSpecifiedOrDefaultValue(property, legend, channel, model);\n    if (value !== undefined) {\n      def[property] = value;\n    }\n  });\n\n  // 2) Add mark property definition groups\n  const encodeSpec = legend.encode || {};\n  ['labels', 'legend', 'title', 'symbols'].forEach(function(part) {\n    let value = encode[part] ?\n      encode[part](fieldDef, encodeSpec[part], model, channel) : // apply rule\n      encodeSpec[part]; // no rule -- just default values\n    if (value !== undefined && keys(value).length > 0) {\n      def.encode = def.encode || {};\n      def.encode[part] = {update: value};\n    }\n  });\n\n  return def;\n}\n\nfunction getSpecifiedOrDefaultValue(property: keyof VgLegend, specifiedLegend: Legend, channel: Channel, model: Model) {\n  const fieldDef = model.fieldDef(channel);\n\n  switch (property) {\n    case 'format':\n      return numberFormat(fieldDef, specifiedLegend.format, model.config, channel);\n    case 'title':\n      return rules.title(specifiedLegend, fieldDef, model.config);\n    case 'values':\n      return rules.values(specifiedLegend);\n    case 'type':\n      rules.type(specifiedLegend, fieldDef, channel);\n  }\n\n  // Otherwise, return specified property.\n  return specifiedLegend[property];\n}\n\n","import {COLOR, Channel} from '../../channel';\nimport {Config} from '../../config';\nimport {DateTime, isDateTime, timestamp} from '../../datetime';\nimport {FieldDef} from '../../fielddef';\nimport {Legend} from '../../legend';\nimport {title as fieldTitle} from '../../fielddef';\nimport {TEMPORAL, QUANTITATIVE} from '../../type';\nimport {contains} from '../../util';\n\nexport function title(legend: Legend, fieldDef: FieldDef, config: Config) {\n  if (legend.title !== undefined) {\n    return legend.title;\n  }\n\n  return fieldTitle(fieldDef, config);\n}\n\nexport function values(legend: Legend) {\n  const vals = legend.values;\n  if (vals && isDateTime(vals[0])) {\n    return (vals as DateTime[]).map((dt) => {\n      // normalize = true as end user won't put 0 = January\n      return timestamp(dt, true);\n    });\n  }\n  return vals;\n}\n\nexport function type(legend: Legend, fieldDef: FieldDef, channel: Channel) {\n  if (legend.type) {\n    return legend.type;\n  }\n\n  if (channel === COLOR && !fieldDef.bin && !fieldDef.timeUnit && contains([QUANTITATIVE, TEMPORAL], fieldDef.type)) {\n    return 'gradient';\n  }\n  return undefined;\n}\n","import * as mixins from './mixins';\nimport {UnitModel} from '../unit';\n\nimport {MarkCompiler} from './base';\n\nexport const area: MarkCompiler = {\n  vgMark: 'area',\n  role: undefined,\n  encodeEntry: (model: UnitModel) => {\n    const orient = model.markDef.orient;\n\n    return {\n      ...mixins.pointPosition('x', model, 'zeroOrMin'),\n      ...mixins.pointPosition('y', model, 'zeroOrMin'),\n      ...mixins.pointPosition2(model, 'zeroOrMin'),\n\n      ...mixins.color(model),\n      ...mixins.nonPosition('opacity', model),\n      ...mixins.markDefProperties(model.markDef, ['orient', 'interpolate', 'tension']),\n    };\n  }\n};\n","import {X, Y} from '../../channel';\nimport {Config} from '../../config';\nimport {isFieldDef} from '../../fielddef';\nimport {Scale, ScaleType} from '../../scale';\nimport {StackProperties} from '../../stack';\nimport * as log from '../../log';\nimport {VgEncodeEntry} from '../../vega.schema';\n\nimport * as mixins from './mixins';\nimport {UnitModel} from '../unit';\nimport {VgValueRef} from '../../vega.schema';\n\nimport {MarkCompiler} from './base';\nimport * as ref from './valueref';\n\nexport const bar: MarkCompiler = {\n  vgMark: 'rect',\n  role: 'bar',\n  encodeEntry: (model: UnitModel) => {\n    const stack = model.stack;\n    return {\n      ...x(model, stack),\n      ...y(model, stack),\n      ...mixins.color(model),\n      ...mixins.nonPosition('opacity', model)\n    };\n  }\n};\n\nfunction x(model: UnitModel, stack: StackProperties): VgEncodeEntry {\n  const {config} = model;\n  const orient = model.markDef.orient;\n  const sizeDef = model.encoding.size;\n\n  const xDef = model.encoding.x;\n  const xScaleName = model.scaleName(X);\n  const xScale = model.scale(X);\n  // x, x2, and width -- we must specify two of these in all conditions\n  if (orient === 'horizontal') {\n    return {\n      ...mixins.pointPosition('x', model, 'zeroOrMin'),\n      ...mixins.pointPosition2(model, 'zeroOrMin'),\n    };\n  } else { // vertical\n    if (isFieldDef(xDef)) {\n      if (xDef.bin && !sizeDef) {\n        // TODO: check scale type = linear\n        return mixins.binnedPosition('x', model, config.bar.binSpacing);\n      } else if (xScale.type === ScaleType.BAND) {\n        return mixins.bandPosition('x', model);\n      }\n    }\n    // sized bin, normal point-ordinal axis, quantitative x-axis, or no x\n\n    return mixins.centeredBandPosition('x', model,\n      {...ref.midX(config), offset: 1}, // TODO: config.singleBarOffset,\n      defaultSizeRef(xScaleName, model.scale(X), config)\n    );\n  }\n}\n\nfunction y(model: UnitModel, stack: StackProperties) {\n  const {config, encoding} = model;\n  const orient = model.markDef.orient;\n  const sizeDef = encoding.size;\n\n  const yDef = encoding.y;\n  const yScaleName = model.scaleName(Y);\n  const yScale = model.scale(Y);\n  // y, y2 & height -- we must specify two of these in all conditions\n  if (orient === 'vertical') {\n    return {\n      ...mixins.pointPosition('y', model, 'zeroOrMin'),\n      ...mixins.pointPosition2(model, 'zeroOrMin'),\n    };\n  } else {\n    if (isFieldDef(yDef)) {\n      if (yDef.bin && !sizeDef) {\n        return mixins.binnedPosition('y', model, config.bar.binSpacing);\n      } else if (yScale.type === ScaleType.BAND) {\n        return mixins.bandPosition('y', model);\n      }\n    }\n    return mixins.centeredBandPosition('y', model, ref.midY(config), defaultSizeRef(yScaleName, model.scale(Y), config));\n  }\n}\n\nfunction defaultSizeRef(scaleName: string, scale: Scale, config: Config): VgValueRef {\n  if (config.bar.discreteBandSize) {\n    return {value: config.bar.discreteBandSize};\n  }\n\n  if (scale) {\n    if (scale.type === ScaleType.POINT) {\n      if (scale.rangeStep !== null) {\n        return {value: scale.rangeStep - 1};\n      }\n      log.warn(log.message.BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL);\n    } else if (scale.type === ScaleType.BAND) {\n      return ref.band(scaleName);\n    } else { // non-ordinal scale\n      return {value: config.bar.continuousBandSize};\n    }\n  }\n  if (config.scale.rangeStep && config.scale.rangeStep !== null) {\n    return {value: config.scale.rangeStep - 1};\n  }\n  // TODO: this should depends on cell's width / height?\n  return {value: 20};\n}\n\n","import {Mark, MarkDef, isMarkDef, BAR, AREA, POINT, LINE, TICK, CIRCLE, SQUARE, RECT, RULE, TEXT, Orient} from '../../mark';\nimport {Encoding, isAggregate, channelHasField} from '../../encoding';\nimport * as log from '../../log';\nimport {Dict, contains} from '../../util';\nimport {Scale, hasDiscreteDomain} from '../../scale';\nimport {isFieldDef, FieldDef, isContinuous} from '../../fielddef';\nimport {TEMPORAL} from '../../type';\nimport {Config} from '../../config';\nimport {getMarkConfig} from '../common';\nimport {StackProperties} from '../../stack';\n\nexport function initMarkDef(mark: Mark | MarkDef, encoding: Encoding, scale: Dict<Scale>, config: Config): MarkDef & {filled: boolean} {\n  const markDef = isMarkDef(mark) ? mark : {type: mark};\n\n  const specifiedOrient = markDef.orient || getMarkConfig('orient', markDef.type, config);\n  markDef.orient = orient(markDef.type, encoding, scale, specifiedOrient);\n  if (specifiedOrient !== undefined && specifiedOrient !== markDef.orient) {\n    log.warn(log.message.orientOverridden(markDef.orient,specifiedOrient));\n  }\n\n  return {\n    ...markDef,\n\n    // TODO: filled could be injected to encoding too, but we don't have filled channel yet.\n    // Thus we inject it here for now.\n    filled: filled(markDef.type, config)\n  };\n}\n\n/**\n * Initialize encoding's value with some special default values\n */\nexport function initEncoding(mark: Mark, encoding: Encoding, stacked: StackProperties, config: Config): Encoding {\n  const opacityConfig = getMarkConfig('opacity', mark, config);\n  if (!encoding.opacity && opacityConfig === undefined) {\n    const opacity = defaultOpacity(mark, encoding, stacked);\n    if (opacity !== undefined) {\n      encoding.opacity = {value: opacity};\n    }\n  }\n  return encoding;\n}\n\n\nfunction defaultOpacity(mark: Mark, encoding: Encoding, stacked: StackProperties) {\n  if (contains([POINT, TICK, CIRCLE, SQUARE], mark)) {\n    // point-based marks\n    if (!isAggregate(encoding) || channelHasField(encoding, 'detail')) {\n      return 0.7;\n    }\n  }\n  if (mark === BAR && !stacked) {\n    if (channelHasField(encoding, 'color') || channelHasField(encoding, 'detail') || channelHasField(encoding, 'size')) {\n      return 0.7;\n    }\n  }\n  if (mark === AREA) {\n    return 0.7; // inspired by Tableau\n  }\n  return undefined;\n}\n\nfunction filled(mark: Mark, config: Config) {\n  const filledConfig = getMarkConfig('filled', mark, config);\n  return filledConfig !== undefined ? filledConfig : mark !== POINT && mark !== LINE && mark !== RULE;\n}\n\nfunction orient(mark: Mark, encoding: Encoding, scale: Dict<Scale>, specifiedOrient: Orient): Orient {\n  switch (mark) {\n    case POINT:\n    case CIRCLE:\n    case SQUARE:\n    case TEXT:\n    case RECT:\n      // orient is meaningless for these marks.\n      return undefined;\n  }\n\n  const yIsRange = encoding.y && encoding.y2;\n  const xIsRange = encoding.x && encoding.x2;\n\n  switch (mark) {\n    case TICK:\n      const xScaleType = scale['x'] ? scale['x'].type : null;\n      const yScaleType = scale['y'] ? scale['y'].type : null;\n\n      // Tick is opposite to bar, line, area and never have ranged mark.\n      if (!hasDiscreteDomain(xScaleType) && (\n            !encoding.y ||\n            hasDiscreteDomain(yScaleType) ||\n            (isFieldDef(encoding.y) && encoding.y.bin)\n        )) {\n        return 'vertical';\n      }\n      // y:Q or Ambiguous case, return horizontal\n      return 'horizontal';\n\n    case RULE:\n    case BAR:\n    case AREA:\n      // If there are range for both x and y, y (vertical) has higher precedence.\n      if (yIsRange) {\n        return 'vertical';\n      } else if (xIsRange) {\n        return 'horizontal';\n      } else if (mark === RULE) {\n        if (encoding.x && !encoding.y) {\n          return 'vertical';\n        } else if (encoding.y && !encoding.x) {\n          return 'horizontal';\n        }\n      }\n\n      /* tslint:disable */\n    case LINE: // intentional fall through\n      /* tslint:enable */\n      const xIsContinuous = isFieldDef(encoding.x) && isContinuous(encoding.x);\n      const yIsContinuous = isFieldDef(encoding.y) && isContinuous(encoding.y);\n      if (xIsContinuous && !yIsContinuous) {\n        return 'horizontal';\n      } else if (!xIsContinuous && yIsContinuous) {\n        return 'vertical';\n      } else if (xIsContinuous && yIsContinuous) {\n        const xDef = encoding.x as FieldDef; // we can cast here since they are surely fieldDef\n        const yDef = encoding.y as FieldDef;\n\n        const xIsTemporal = xDef.type === TEMPORAL;\n        const yIsTemporal = yDef.type === TEMPORAL;\n\n        // temporal without timeUnit is considered continuous, but better serves as dimension\n        if (xIsTemporal && !yIsTemporal) {\n          return 'vertical';\n        } else if (!xIsTemporal && yIsTemporal) {\n          return 'horizontal';\n        }\n\n        if (!xDef.aggregate && !!yDef.aggregate) {\n          return 'vertical';\n        } else if (!!xDef.aggregate && !yDef.aggregate) {\n          return 'horizontal';\n        }\n\n        if (specifiedOrient) {\n          // When ambiguous, use user specified one.\n          return specifiedOrient;\n        }\n\n        if (!(mark === LINE && encoding.order)) {\n          // Except for connected scatterplot, we should log warning for unclear orientation of QxQ plots.\n          log.warn(log.message.unclearOrientContinuous(mark));\n        }\n        return 'vertical';\n      } else {\n        // For Discrete x Discrete case, return undefined.\n        log.warn(log.message.unclearOrientDiscreteOrEmpty(mark));\n        return undefined;\n      }\n  }\n  return 'vertical';\n}\n","import * as mixins from './mixins';\nimport {UnitModel} from '../unit';\n\nimport {MarkCompiler} from './base';\n\nexport const line: MarkCompiler = {\n  vgMark: 'line',\n  role: undefined,\n  encodeEntry: (model: UnitModel) => {\n    return {\n      ...mixins.pointPosition('x', model, 'zeroOrMin'),\n      ...mixins.pointPosition('y', model, 'zeroOrMin'),\n      ...mixins.color(model),\n      ...mixins.nonPosition('opacity', model),\n      ...mixins.nonPosition('size', model, {\n        vgChannel: 'strokeWidth'  // VL's line size is strokeWidth\n      }),\n      ...mixins.markDefProperties(model.markDef, ['interpolate', 'tension'])\n    };\n  }\n};\n","import {NONSPATIAL_CHANNELS, Channel} from '../../channel';\nimport {AREA, LINE} from '../../mark';\nimport {contains, without} from '../../util';\n\nimport {MarkCompiler} from './base';\nimport {area} from './area';\nimport {bar} from './bar';\nimport {line} from './line';\nimport {point, circle, square} from './point';\nimport {rect} from './rect';\nimport {rule} from './rule';\nimport {text} from './text';\nimport {tick} from './tick';\n\nimport {FacetModel} from '../facet';\nimport {UnitModel} from '../unit';\n\nconst markCompiler: {[type: string]: MarkCompiler} = {\n  area: area,\n  bar: bar,\n  line: line,\n  point: point,\n  text: text,\n  tick: tick,\n  rect: rect,\n  rule: rule,\n  circle: circle,\n  square: square\n};\n\nexport function parseMark(model: UnitModel): any[] {\n  if (contains([LINE, AREA], model.mark())) {\n    return parsePathMark(model);\n  } else {\n    return parseNonPathMark(model);\n  }\n}\n\n// FIXME: maybe this should not be here.  Need re-think and refactor, esp. after having all composition in.\nfunction dataFrom(model: UnitModel): string {\n  const parent = model.parent;\n  if (parent && parent.isFacet()) {\n    return (parent as FacetModel).facetedTable();\n  }\n  if (model.stack) {\n    return model.dataName('stacked');\n  }\n  return model.dataTable();\n}\n\nconst FACETED_PATH_PREFIX = 'faceted-path-';\n\nfunction parsePathMark(model: UnitModel) {\n  const mark = model.mark();\n  // FIXME: replace this with more general case for composition\n  const details = detailFields(model);\n\n  let pathMarks: any = [\n    {\n      name: model.getName('marks'),\n      type: markCompiler[mark].vgMark,\n      // If has subfacet for line/area group, need to use faceted data from below.\n      // FIXME: support sorting path order (in connected scatterplot)\n      from: {data: (details.length > 0 ? FACETED_PATH_PREFIX : '') + dataFrom(model)},\n      encode: {update: markCompiler[mark].encodeEntry(model)}\n    }\n  ];\n\n  if (details.length > 0) { // have level of details - need to facet line into subgroups\n    // TODO: for non-stacked plot, map order to zindex. (Maybe rename order for layer to zindex?)\n\n    return [{\n      name: model.getName('pathgroup'),\n      type: 'group',\n      from: {\n        facet: {\n          name: FACETED_PATH_PREFIX + dataFrom(model),\n          data: dataFrom(model),\n          groupby: details,\n        }\n      },\n      encode: {\n        update: {\n          width: {field: {group: 'width'}},\n          height: {field: {group: 'height'}}\n        }\n      },\n      marks: pathMarks\n    }];\n  } else {\n    return pathMarks;\n  }\n}\n\nfunction parseNonPathMark(model: UnitModel) {\n  const mark = model.mark();\n\n  const role = markCompiler[mark].role;\n\n  let marks: any[] = []; // TODO: vgMarks\n\n  // TODO: for non-stacked plot, map order to zindex. (Maybe rename order for layer to zindex?)\n\n  marks.push({\n    name: model.getName('marks'),\n    type: markCompiler[mark].vgMark,\n    ...(role? {role} : {}),\n    from: {data: dataFrom(model)},\n    encode: {update: markCompiler[mark].encodeEntry(model)}\n  });\n\n  return marks;\n}\n\nconst NONSPATIAL_CHANNELS_EXCEPT_ORDER = without(NONSPATIAL_CHANNELS, ['order'] as Channel[]);\n\n/**\n * Returns list of detail (group-by) fields\n * that the model's spec contains.\n */\nfunction detailFields(model: UnitModel): string[] {\n  return NONSPATIAL_CHANNELS_EXCEPT_ORDER.reduce(function(details, channel) {\n    if (model.channelHasField(channel) && !model.fieldDef(channel).aggregate) {\n      details.push(model.field(channel));\n    }\n    return details;\n  }, []);\n}\n","import {MarkDef} from '../../mark';\nimport * as util from '../../util';\nimport {VgEncodeEntry, VgValueRef} from '../../vega.schema';\nimport {getMarkConfig} from '../common';\nimport {UnitModel} from '../unit';\n\nimport * as ref from './valueref';\n\nimport {NONSPATIAL_SCALE_CHANNELS} from '../../channel';\nimport {Condition} from '../../fielddef';\nimport {predicate} from '../selection/selection';\n\nexport function color(model: UnitModel) {\n  const config = model.config;\n  const filled = model.markDef.filled;\n\n  let e = nonPosition('color', model, {\n    vgChannel: filled ? 'fill' : 'stroke',\n    defaultValue: getMarkConfig('color', model.mark(), config) as string\n  });\n\n  // If there is no fill, always fill symbols\n  // with transparent fills https://github.com/vega/vega-lite/issues/1316\n  if (!e.fill && util.contains(['bar', 'point', 'circle', 'square'], model.mark())) {\n    e.fill = {value: 'transparent'};\n  }\n  return e;\n}\n\nexport function markDefProperties(mark: MarkDef, props: (keyof MarkDef)[]) {\n  return props.reduce((m, prop) => {\n    if (mark[prop]) {\n      m[prop] = {value: mark[prop]};\n    }\n    return m;\n  }, {});\n}\n\nexport function valueIfDefined(prop: string, value: VgValueRef): VgEncodeEntry {\n  if (value !== undefined) {\n    return {[prop]: {value: value}};\n  }\n  return undefined;\n}\n\n/**\n * Return mixins for non-positional channels with scales.  (Text doesn't have scale.)\n */\nexport function nonPosition(channel: typeof NONSPATIAL_SCALE_CHANNELS[0], model: UnitModel, opt: {defaultValue?: number | string | boolean, vgChannel?: string, defaultRef?: VgValueRef} = {}): VgEncodeEntry {\n  // TODO: refactor how refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613\n\n  const {defaultValue, vgChannel} = opt;\n  const defaultRef = opt.defaultRef || (defaultValue !== undefined ? {value: defaultValue} : undefined);\n\n  const channelDef = model.encoding[channel];\n  const valueRef = ref.midPoint(channel, channelDef, model.scaleName(channel), model.scale(channel), defaultRef);\n\n  return wrapCondition(model, channelDef && channelDef.condition, vgChannel || channel, valueRef);\n}\n\n/**\n * Return a mixin that include a Vega production rule for a Vega-Lite conditional channel definition.\n * or a simple mixin if channel def has no condition.\n */\nfunction wrapCondition(model: UnitModel, condition: Condition<any>, vgChannel: string, valueRef: VgValueRef): VgEncodeEntry {\n  if (condition) {\n    const {selection, value} = condition;\n    return {\n      [vgChannel]: [\n        {test: selectionTest(model, selection), value},\n        ...(valueRef !== undefined ? [valueRef] : [])\n      ]\n    };\n  } else {\n    return valueRef !== undefined ? {[vgChannel]: valueRef} : {};\n  }\n}\n\nfunction selectionTest(model: UnitModel, selectionName: string) {\n  const negate = selectionName.charAt(0) === '!',\n    name = negate ? selectionName.slice(1) : selectionName;\n  return (negate ? '!' : '') + predicate(model.component.selection[name]);\n}\n\nexport function text(model: UnitModel) {\n  const channelDef = model.encoding.text;\n  return wrapCondition(model, channelDef && channelDef.condition, 'text', ref.text(channelDef, model.config));\n}\n\nexport function bandPosition(channel: 'x'|'y', model: UnitModel) {\n  // TODO: band scale doesn't support size yet\n  const fieldDef = model.encoding[channel];\n  const scaleName = model.scaleName(channel);\n  const sizeChannel = channel === 'x' ? 'width' : 'height';\n  return {\n    [channel]: ref.fieldRef(fieldDef, scaleName, {}),\n    [sizeChannel]: ref.band(scaleName)\n  };\n}\n\nexport function centeredBandPosition(channel: 'x' | 'y', model: UnitModel, defaultPosRef: VgValueRef, defaultSizeRef: VgValueRef) {\n  const centerChannel: 'xc' | 'yc' = channel === 'x' ? 'xc' : 'yc';\n  const sizeChannel = channel === 'x' ? 'width' : 'height';\n  return {\n    ...pointPosition(channel, model, defaultPosRef, centerChannel),\n    ...nonPosition('size', model, {defaultRef: defaultSizeRef, vgChannel: sizeChannel})\n  };\n}\n\nexport function binnedPosition(channel: 'x'|'y', model: UnitModel, spacing: number) {\n  const fieldDef = model.encoding[channel];\n  const scaleName = model.scaleName(channel);\n  if (channel === 'x') {\n    return {\n      x2: ref.bin(fieldDef, scaleName, 'start', spacing),\n      x: ref.bin(fieldDef, scaleName, 'end')\n    };\n  } else {\n    return {\n      y2: ref.bin(fieldDef, scaleName, 'start'),\n      y: ref.bin(fieldDef, scaleName, 'end', spacing)\n    };\n  }\n}\n\n/**\n * Return mixins for point (non-band) position channels.\n */\nexport function pointPosition(channel: 'x'|'y', model: UnitModel, defaultRef: VgValueRef | 'zeroOrMin' | 'zeroOrMax', vgChannel?: 'x'|'y'|'xc'|'yc') {\n  // TODO: refactor how refer to scale as discussed in https://github.com/vega/vega-lite/pull/1613\n\n  const {encoding, stack} = model;\n  const valueRef = ref.stackable(channel, encoding[channel], model.scaleName(channel), model.scale(channel), stack, defaultRef);\n\n  return {\n    [vgChannel || channel]: valueRef\n  };\n}\n\n/**\n * Return mixins for x2, y2.\n * If channel is not specified, return one channel based on orientation.\n */\nexport function pointPosition2(model: UnitModel, defaultRef: 'zeroOrMin' | 'zeroOrMax', channel?: 'x2' | 'y2') {\n  const {encoding, markDef, stack} = model;\n  channel = channel || (markDef.orient === 'horizontal' ? 'x2' : 'y2');\n  const baseChannel = channel === 'x2' ? 'x' : 'y';\n\n  const valueRef = ref.stackable2(channel, encoding[baseChannel], encoding[channel], model.scaleName(baseChannel), model.scale(baseChannel), stack, defaultRef);\n  return {[channel]: valueRef};\n}\n","\n\nimport * as mixins from './mixins';\nimport {UnitModel} from '../unit';\n\nimport {MarkCompiler} from './base';\nimport * as ref from './valueref';\nimport {getMarkConfig} from '../common';\nimport {Config} from '../../config';\n\nfunction encodeEntry(model: UnitModel, fixedShape?: 'circle' | 'square') {\n  const {config} = model;\n\n  return {\n    ...mixins.pointPosition('x', model, ref.midX(config)),\n    ...mixins.pointPosition('y', model, ref.midY(config)),\n\n    ...mixins.color(model),\n    ...mixins.nonPosition('size', model),\n    ...shapeMixins(model, config, fixedShape),\n    ...mixins.nonPosition('opacity', model)\n  };\n}\n\nexport function shapeMixins(model: UnitModel, config: Config, fixedShape?: 'circle' | 'square') {\n  if (fixedShape) {\n    return {shape: {value: fixedShape}};\n  }\n  return mixins.nonPosition('shape', model, {defaultValue: getMarkConfig('shape', 'point', config) as string});\n}\n\nexport const point: MarkCompiler = {\n  vgMark: 'symbol',\n  role: 'point',\n  encodeEntry: (model: UnitModel) => {\n    return encodeEntry(model);\n  }\n};\n\nexport const circle: MarkCompiler = {\n  vgMark: 'symbol',\n  role: 'circle',\n  encodeEntry: (model: UnitModel) => {\n    return encodeEntry(model, 'circle');\n  }\n};\n\nexport const square: MarkCompiler = {\n  vgMark: 'symbol',\n  role: 'square',\n  encodeEntry: (model: UnitModel) => {\n    return encodeEntry(model, 'square');\n  }\n};\n","import {X, Y} from '../../channel';\nimport {isFieldDef} from '../../fielddef';\nimport {ScaleType, hasDiscreteDomain} from '../../scale';\nimport {RECT} from '../../mark';\nimport * as log from '../../log';\n\nimport * as mixins from './mixins';\nimport {UnitModel} from '../unit';\n\nimport {MarkCompiler} from './base';\n\nexport const rect: MarkCompiler = {\n  vgMark: 'rect',\n  role: undefined,\n  encodeEntry: (model: UnitModel) => {\n    return {\n      ...x(model),\n      ...y(model),\n      ...mixins.color(model),\n      ...mixins.nonPosition('opacity', model),\n    };\n  }\n};\n\nfunction x(model: UnitModel) {\n  const xDef = model.encoding.x;\n  const x2Def = model.encoding.x2;\n  const xScale = model.scale(X);\n\n  if (isFieldDef(xDef) && xDef.bin && !x2Def) {\n    return mixins.binnedPosition('x', model, 0);\n  } else if (xScale && hasDiscreteDomain(xScale.type)) {\n    /* istanbul ignore else */\n    if (xScale.type === ScaleType.BAND) {\n      return mixins.bandPosition('x', model);\n    } else {\n      // We don't support rect mark with point/ordinal scale\n      throw new Error(log.message.scaleTypeNotWorkWithMark(RECT, xScale.type));\n    }\n  } else { // continuous scale or no scale\n    return {\n      ...mixins.pointPosition('x', model, 'zeroOrMax'),\n      ...mixins.pointPosition2(model, 'zeroOrMin', 'x2')\n    };\n  }\n}\n\nfunction y(model: UnitModel) {\n  const yDef = model.encoding.y;\n  const y2Def = model.encoding.y2;\n  const yScale = model.scale(Y);\n\n  if (isFieldDef(yDef) && yDef.bin && !y2Def) {\n    return mixins.binnedPosition('y', model, 0);\n  } else if (yScale && hasDiscreteDomain(yScale.type)) {\n    /* istanbul ignore else */\n    if (yScale.type === ScaleType.BAND) {\n      return mixins.bandPosition('y', model);\n    } else {\n      // We don't support rect mark with point/ordinal scale\n      throw new Error(log.message.scaleTypeNotWorkWithMark(RECT, yScale.type));\n    }\n  } else { // continuous scale or no scale\n    return {\n      ...mixins.pointPosition('y', model, 'zeroOrMax'),\n      ...mixins.pointPosition2(model, 'zeroOrMin', 'y2')\n    };\n  }\n}\n","import {UnitModel} from '../unit';\nimport {MarkCompiler} from './base';\nimport * as mixins from './mixins';\n\nexport const rule: MarkCompiler = {\n  vgMark: 'rule',\n  role: undefined,\n  encodeEntry: (model: UnitModel) => {\n    return {\n      ...mixins.pointPosition('x', model, 'zeroOrMin'),\n      ...mixins.pointPosition('y', model, 'zeroOrMin'),\n      ...mixins.pointPosition2(model, 'zeroOrMax'),\n\n      ...mixins.color(model),\n      ...mixins.nonPosition('opacity', model),\n      ...mixins.nonPosition('size', model, {\n        vgChannel: 'strokeWidth'  // VL's rule size is strokeWidth\n      })\n    };\n  }\n};\n","import {X} from '../../channel';\nimport {getMarkConfig} from '../common';\n\nimport * as mixins from './mixins';\nimport {Config} from '../../config';\nimport {ChannelDef, isFieldDef} from '../../fielddef';\nimport {QUANTITATIVE} from '../../type';\nimport {UnitModel} from '../unit';\nimport {VgValueRef} from '../../vega.schema';\n\nimport {MarkCompiler} from './base';\nimport * as ref from './valueref';\nimport {Encoding, channelHasField} from '../../encoding';\n\nexport const text: MarkCompiler = {\n  vgMark: 'text',\n  role: undefined,\n\n  encodeEntry: (model: UnitModel) => {\n    const {config, encoding} = model;\n    const textDef = encoding.text;\n\n    return {\n      ...mixins.pointPosition('x', model, xDefault(config, textDef)),\n      ...mixins.pointPosition('y', model, ref.midY(config)),\n      ...mixins.text(model),\n      ...mixins.color(model),\n      ...mixins.nonPosition('opacity', model),\n      ...mixins.nonPosition('size', model, {\n        vgChannel: 'fontSize'  // VL's text size is fontSize\n      }),\n      ...mixins.valueIfDefined('align', align(encoding, config))\n    };\n  }\n};\n\nfunction xDefault(config: Config, textDef: ChannelDef): VgValueRef {\n  if (isFieldDef(textDef) && textDef.type === QUANTITATIVE) {\n    return {field: {group: 'width'}, offset: -5};\n  }\n  // TODO: allow this to fit (Be consistent with ref.midX())\n  return {value: config.scale.textXRangeStep / 2};\n}\n\nfunction align(encoding: Encoding, config: Config) {\n  const alignConfig = getMarkConfig('align', 'text', config);\n  if (alignConfig === undefined) {\n    return channelHasField(encoding, X) ? 'center' : 'right';\n  }\n  // If there is a config, Vega-parser will process this already.\n  return undefined;\n}\n","\n\nimport * as mixins from './mixins';\nimport {UnitModel} from '../unit';\n\nimport {MarkCompiler} from './base';\nimport * as ref from './valueref';\n\nexport const tick: MarkCompiler = {\n  vgMark: 'rect',\n  role: 'tick',\n\n  encodeEntry: (model: UnitModel) => {\n    const {config, markDef} = model;\n    const orient = markDef.orient;\n\n    const vgSizeChannel = orient === 'horizontal' ? 'width' : 'height';\n    const vgThicknessChannel = orient === 'horizontal' ? 'height' : 'width';\n\n    return {\n      ...mixins.pointPosition('x', model, ref.midX(config), 'xc'),\n      ...mixins.pointPosition('y', model, ref.midY(config), 'yc'),\n\n      // size / thickness => width / height\n      ...mixins.nonPosition('size', model, {\n        defaultValue: defaultSize(model),\n        vgChannel: vgSizeChannel\n      }),\n      [vgThicknessChannel]: {value: config.tick.thickness},\n\n      ...mixins.color(model),\n      ...mixins.nonPosition('opacity', model),\n    };\n  }\n};\n\nfunction defaultSize(model: UnitModel): number {\n  const {config} = model;\n  const orient = model.markDef.orient;\n\n  const scaleRangeStep: number | null = (model.scale(orient === 'horizontal' ? 'x' : 'y') || {}).rangeStep;\n\n  if (config.tick.bandSize !== undefined) {\n    return config.tick.bandSize;\n  } else {\n    const rangeStep = scaleRangeStep !== undefined ?\n      scaleRangeStep :\n      config.scale.rangeStep;\n    if (typeof rangeStep !== 'number') {\n      // FIXME consolidate this log\n      throw new Error('Function does not handle non-numeric rangeStep');\n    }\n    return rangeStep / 1.5;\n  }\n}\n","/**\n * Utility files for producing Vega ValueRef for marks\n */\n\nimport {Channel, X, X2, Y, Y2} from '../../channel';\nimport {Config} from '../../config';\nimport {ChannelDef, FieldDef, FieldRefOption, field, isFieldDef, TextFieldDef, ValueDef} from '../../fielddef';\nimport {Scale, ScaleType, hasDiscreteDomain} from '../../scale';\nimport {StackProperties} from '../../stack';\nimport {contains} from '../../util';\nimport {VgValueRef} from '../../vega.schema';\nimport {numberFormat, timeFormatExpression} from '../common';\n\n// TODO: we need to find a way to refactor these so that scaleName is a part of scale\n// but that's complicated.  For now, this is a huge step moving forward.\n\n/**\n * @return Vega ValueRef for stackable x or y\n */\nexport function stackable(channel: 'x' | 'y', channelDef: ChannelDef, scaleName: string, scale: Scale,\n    stack: StackProperties, defaultRef: VgValueRef): VgValueRef {\n  if (channelDef && stack && channel === stack.fieldChannel) {\n    // x or y use stack_end so that stacked line's point mark use stack_end too.\n    return fieldRef(channelDef, scaleName, {suffix: 'end'});\n  }\n  return midPoint(channel, channelDef, scaleName, scale, defaultRef);\n}\n\n/**\n * @return Vega ValueRef for stackable x2 or y2\n */\nexport function stackable2(channel: 'x2' | 'y2', aFieldDef: FieldDef, a2fieldDef: FieldDef, scaleName: string, scale: Scale,\n    stack: StackProperties, defaultRef: VgValueRef): VgValueRef {\n  if (aFieldDef && stack &&\n      // If fieldChannel is X and channel is X2 (or Y and Y2)\n      channel.charAt(0) === stack.fieldChannel.charAt(0)\n      ) {\n    return fieldRef(aFieldDef, scaleName, {suffix: 'start'});\n  }\n  return midPoint(channel, a2fieldDef, scaleName, scale, defaultRef);\n}\n\n/**\n * Value Ref for binned fields\n */\nexport function bin(fieldDef: FieldDef, scaleName: string, side: 'start' | 'end',  offset?: number) {\n  return fieldRef(fieldDef, scaleName, {binSuffix: side}, offset);\n}\n\nexport function fieldRef(fieldDef: FieldDef, scaleName: string, opt: FieldRefOption, offset?: number | VgValueRef): VgValueRef {\n  let ref: VgValueRef = {\n    scale: scaleName,\n    field: field(fieldDef, opt),\n  };\n  if (offset) {\n    ref.offset = offset;\n  }\n  return ref;\n}\n\nexport function band(scaleName: string, band: number|boolean = true): VgValueRef {\n  return {\n    scale: scaleName,\n    band: band\n  };\n}\n\nexport function binMidSignal(fieldDef: FieldDef, scaleName: string) {\n  return {\n    scale: scaleName,\n    signal: '(' + field(fieldDef, {binSuffix: 'start', datum: true}) + '+' +\n      field(fieldDef, {binSuffix: 'end', datum: true}) + ')/2'\n  };\n}\n\n/**\n * @returns {VgValueRef} Value Ref for xc / yc or mid point for other channels.\n */\nexport function midPoint(channel: Channel, channelDef: ChannelDef, scaleName: string, scale: Scale,\n  defaultRef: VgValueRef | 'zeroOrMin' | 'zeroOrMax'): VgValueRef {\n  // TODO: datum support\n\n  if (channelDef) {\n    /* istanbul ignore else */\n    if (isFieldDef(channelDef)) {\n      if (hasDiscreteDomain(scale.type)) {\n        if (scale.type === 'band') {\n          // For band, to get mid point, need to offset by half of the band\n          return fieldRef(channelDef, scaleName, {binSuffix: 'range'}, band(scaleName, 0.5));\n        }\n        return fieldRef(channelDef, scaleName, {binSuffix: 'range'});\n      } else {\n        if (channelDef.bin) {\n          return binMidSignal(channelDef, scaleName);\n        } else {\n          return fieldRef(channelDef, scaleName, {}); // no need for bin suffix\n        }\n      }\n    } else if (channelDef.value) {\n      return {\n        value: channelDef.value\n      };\n    } else {\n      throw new Error('FieldDef without field or value.'); // FIXME add this to log.message\n    }\n  }\n\n  if (defaultRef === 'zeroOrMin') {\n    /* istanbul ignore else */\n    if (channel === X || channel === X2) {\n      return zeroOrMinX(scaleName, scale);\n    } else if (channel === Y || channel === Y2) {\n      return zeroOrMinY(scaleName, scale);\n    } else {\n      throw new Error(`Unsupported channel ${channel} for base function`); // FIXME add this to log.message\n    }\n  } else if (defaultRef === 'zeroOrMax') {\n    /* istanbul ignore else */\n    if (channel === X || channel === X2) {\n      return zeroOrMaxX(scaleName, scale);\n    } else if (channel === Y || channel === Y2) {\n      return zeroOrMaxY(scaleName, scale);\n    } else {\n      throw new Error(`Unsupported channel ${channel} for base function`); // FIXME add this to log.message\n    }\n  }\n  return defaultRef;\n}\n\nexport function text(textDef: TextFieldDef | ValueDef<any>, config: Config): VgValueRef {\n  // text\n  if (textDef) {\n    if (isFieldDef(textDef)) {\n      if (textDef.type === 'quantitative') {\n        // FIXME: what happens if we have bin?\n        const format = numberFormat(textDef, textDef.format, config, 'text');\n        return {\n          signal: `format(${field(textDef, {datum: true})}, '${format}')`\n        };\n      } else if (textDef.type === 'temporal') {\n        return {\n          signal: timeFormatExpression(field(textDef, {datum: true}), textDef.timeUnit, textDef.format, config.text.shortTimeLabels, config.timeFormat)\n        };\n      } else {\n        return {field: textDef.field};\n      }\n    } else if (textDef.value) {\n      return {value: textDef.value};\n    }\n  }\n  return {value: config.text.text};\n}\n\nexport function midX(config: Config): VgValueRef {\n\n  if (typeof config.scale.rangeStep === 'string') {\n    // TODO: For fit-mode, use middle of the width\n    throw new Error('midX can not handle string rangeSteps');\n  }\n  return {value: config.scale.rangeStep / 2};\n}\n\nexport function midY(config: Config): VgValueRef {\n  if (typeof config.scale.rangeStep === 'string') {\n    // TODO: For fit-mode, use middle of the width\n    throw new Error('midX can not handle string rangeSteps');\n  }\n  return {value: config.scale.rangeStep / 2};\n}\n\nfunction zeroOrMinX(scaleName: string, scale: Scale): VgValueRef {\n  if (scaleName) {\n    // Log / Time / UTC scale do not support zero\n    if (!contains([ScaleType.LOG, ScaleType.TIME, ScaleType.UTC], scale.type) &&\n      scale.zero !== false) {\n\n      return {\n        scale: scaleName,\n        value: 0\n      };\n    }\n  }\n  // Put the mark on the x-axis\n  return {value: 0};\n}\n\n/**\n * @returns {VgValueRef} base value if scale exists and return max value if scale does not exist\n */\nfunction zeroOrMaxX(scaleName: string, scale: Scale): VgValueRef {\n  if (scaleName) {\n    // Log / Time / UTC scale do not support zero\n    if (!contains([ScaleType.LOG, ScaleType.TIME, ScaleType.UTC], scale.type) &&\n      scale.zero !== false) {\n\n      return {\n        scale: scaleName,\n        value: 0\n      };\n    }\n  }\n  return {field: {group: 'width'}};\n}\n\nfunction zeroOrMinY(scaleName: string, scale: Scale): VgValueRef {\n  if (scaleName) {\n    // Log / Time / UTC scale do not support zero\n    if (!contains([ScaleType.LOG, ScaleType.TIME, ScaleType.UTC], scale.type) &&\n      scale.zero !== false) {\n\n      return {\n        scale: scaleName,\n        value: 0\n      };\n    }\n  }\n  // Put the mark on the y-axis\n  return {field: {group: 'height'}};\n}\n\n/**\n * @returns {VgValueRef} base value if scale exists and return max value if scale does not exist\n */\nfunction zeroOrMaxY(scaleName: string, scale: Scale): VgValueRef {\n  if (scaleName) {\n    // Log / Time / UTC scale do not support zero\n    if (!contains([ScaleType.LOG, ScaleType.TIME, ScaleType.UTC], scale.type) &&\n      scale.zero !== false) {\n\n      return {\n        scale: scaleName,\n        value: 0\n      };\n    }\n  }\n  // Put the mark on the y-axis\n  return {value: 0};\n}\n","import * as log from '../log';\n\nimport {Axis} from '../axis';\nimport {Channel, X, COLUMN} from '../channel';\nimport {Config, CellConfig} from '../config';\nimport {Data, DataSourceType, isNamedData, SOURCE} from '../data';\nimport {reduce, forEach} from '../encoding';\nimport {FieldDef, FieldRefOption, field, isFieldDef, ChannelDef} from '../fielddef';\nimport {Legend} from '../legend';\nimport {Scale, hasDiscreteDomain} from '../scale';\nimport {SortField, SortOrder} from '../sort';\nimport {BaseSpec, Padding} from '../spec';\nimport {Transform} from '../transform';\nimport {extend, flatten, vals, Dict} from '../util';\nimport {VgData, VgEncodeEntry, VgScale, VgAxis, VgLegend} from '../vega.schema';\nimport {Formula} from '../transform';\nimport {OneOfFilter, EqualFilter, RangeFilter} from '../filter';\n\nimport {DataComponent} from './data/data';\nimport {LayoutComponent} from './layout';\nimport {ScaleComponents, BIN_LEGEND_SUFFIX, BIN_LEGEND_LABEL_SUFFIX} from './scale/scale';\nimport {StackProperties} from '../stack';\n\nimport {SelectionComponent} from './selection/selection';\n\n/**\n * Composable Components that are intermediate results of the parsing phase of the\n * compilations.  These composable components will be assembled in the last\n * compilation step.\n */\nexport interface Component {\n  data: DataComponent;\n  layout: LayoutComponent;\n  scales: Dict<ScaleComponents>;\n  selection: Dict<SelectionComponent>;\n\n  /** Dictionary mapping channel to VgAxis definition */\n  axes: Dict<VgAxis[]>;\n\n  /** Dictionary mapping channel to VgLegend definition */\n  legends: Dict<VgLegend>;\n\n  /** Dictionary mapping channel to axis mark group for facet and concat */\n  axisGroups: Dict<VgEncodeEntry>;\n\n  /** Dictionary mapping channel to grid mark group for facet (and concat?) */\n  gridGroups: Dict<VgEncodeEntry[]>;\n\n  mark: VgEncodeEntry[];\n}\n\nexport class NameMap implements NameMapInterface {\n  private nameMap: Dict<string>;\n\n  constructor() {\n    this.nameMap = {};\n  }\n\n  public rename(oldName: string, newName: string) {\n    this.nameMap[oldName] = newName;\n  }\n\n\n  public has(name: string): boolean {\n    return this.nameMap[name] !== undefined;\n  }\n\n  public get(name: string): string {\n    // If the name appears in the _nameMap, we need to read its new name.\n    // We have to loop over the dict just in case the new name also gets renamed.\n    while (this.nameMap[name]) {\n      name = this.nameMap[name];\n    }\n\n    return name;\n  }\n}\n\nexport interface NameMapInterface {\n  rename(oldname: string, newName: string): void;\n  has(name: string): boolean;\n  get(name: string): string;\n}\n\nexport abstract class Model {\n  public readonly parent: Model;\n  protected readonly name: string;\n  public readonly description: string;\n  public readonly padding: Padding;\n\n  public readonly data: Data;\n\n  /** Name map for data sources, which can be renamed by a model's parent. */\n  protected dataNameMap: NameMapInterface;\n\n  /** Name map for scales, which can be renamed by a model's parent. */\n  protected scaleNameMap: NameMapInterface;\n\n  /** Name map for size, which can be renamed by a model's parent. */\n  protected sizeNameMap: NameMapInterface;\n\n  protected readonly transform: Transform;\n  protected abstract readonly scales: Dict<Scale> = {};\n\n  protected abstract readonly axes: Dict<Axis> = {};\n\n  protected abstract readonly legends: Dict<Legend> = {};\n\n  public abstract readonly config: Config;\n\n  public component: Component;\n\n  public abstract readonly children: Model[] = [];\n\n  public abstract stack: StackProperties;\n\n  constructor(spec: BaseSpec, parent: Model, parentGivenName: string) {\n    this.parent = parent;\n\n    // If name is not provided, always use parent's givenName to avoid name conflicts.\n    this.name = spec.name || parentGivenName;\n\n    // Shared name maps\n    this.dataNameMap = parent ? parent.dataNameMap : new NameMap();\n    this.scaleNameMap = parent ? parent.scaleNameMap : new NameMap();\n    this.sizeNameMap = parent ? parent.sizeNameMap : new NameMap();\n\n    this.data = spec.data;\n\n    this.description = spec.description;\n    this.padding = spec.padding;\n    this.transform = spec.transform;\n\n    if (spec.transform) {\n      if (spec.transform.filterInvalid === undefined &&\n          spec.transform['filterNull'] !== undefined) {\n        spec.transform.filterInvalid = spec.transform['filterNull'];\n        log.warn(log.message.DEPRECATED_FILTER_NULL);\n      }\n    }\n\n    this.component = {data: null, layout: null, mark: null, scales: null, axes: null, axisGroups: null, gridGroups: null, legends: null, selection: null};\n  }\n\n\n  public parse() {\n    this.parseData();\n    this.parseLayoutData();\n    this.parseScale(); // depends on data name\n    this.parseSelection();\n    this.parseAxis(); // depends on scale name\n    this.parseLegend(); // depends on scale name\n    this.parseAxisGroup(); // depends on child axis\n    this.parseGridGroup();\n    this.parseMark(); // depends on data name and scale name, axisGroup, gridGroup and children's scale, axis, legend and mark.\n  }\n\n  public abstract parseData(): void;\n\n  public abstract parseSelection(): void;\n\n  public abstract parseLayoutData(): void;\n\n  public abstract parseScale(): void;\n\n  public abstract parseMark(): void;\n\n  public abstract parseAxis(): void;\n\n  public abstract parseLegend(): void;\n\n  // TODO: revise if these two methods make sense for shared scale concat\n  public abstract parseAxisGroup(): void;\n  public abstract parseGridGroup(): void;\n\n  public abstract assembleSignals(signals: any[]): any[];\n\n  public abstract assembleSelectionData(data: VgData[]): VgData[];\n  public abstract assembleData(data: VgData[]): VgData[];\n\n  public abstract assembleLayout(layoutData: VgData[]): VgData[];\n\n  public assembleScales(): VgScale[] {\n    // FIXME: write assembleScales() in scale.ts that\n    // help assemble scale domains with scale signature as well\n    return flatten(vals(this.component.scales).map((scales: ScaleComponents) => {\n      let arr = [scales.main];\n      if (scales.binLegend) {\n        arr.push(scales.binLegend);\n      }\n      if (scales.binLegendLabel) {\n        arr.push(scales.binLegendLabel);\n      }\n      return arr;\n    }));\n  }\n\n  public abstract assembleMarks(): any[]; // TODO: VgMarkGroup[]\n\n  public assembleAxes(): VgAxis[] {\n    return [].concat.apply([], vals(this.component.axes));\n  }\n\n  public assembleLegends(): any[] { // TODO: VgLegend[]\n    return vals(this.component.legends);\n  }\n\n  public assembleGroup() {\n    let group: VgEncodeEntry = {};\n\n    const signals = this.assembleSignals(group.signals || []);\n    if (signals.length > 0) {\n      group.signals = signals;\n    }\n\n    // TODO: consider if we want scales to come before marks in the output spec.\n    group.marks = this.assembleMarks();\n    const scales = this.assembleScales();\n    if (scales.length > 0) {\n      group.scales = scales;\n    }\n\n    const axes = this.assembleAxes();\n    if (axes.length > 0) {\n      group.axes = axes;\n    }\n\n    const legends = this.assembleLegends();\n    if (legends.length > 0) {\n      group.legends = legends;\n    }\n\n    return group;\n  }\n\n  public abstract assembleParentGroupProperties(cellConfig: CellConfig): VgEncodeEntry;\n\n  public abstract channels(): Channel[];\n\n  protected abstract getMapping(): {[key: string]: any};\n\n  public reduceFieldDef<T, U>(f: (acc: U, fd: FieldDef, c: Channel) => U, init: T, t?: any) {\n    return reduce(this.getMapping(), (acc:U , cd: ChannelDef, c: Channel) => {\n      return isFieldDef(cd) ? f(acc, cd, c) : acc;\n    }, init, t);\n  }\n\n  public forEachFieldDef(f: (fd: FieldDef, c: Channel) => void, t?: any) {\n    forEach(this.getMapping(), (cd: ChannelDef, c: Channel) => {\n      if (isFieldDef(cd)) {\n        f(cd, c);\n      }\n    }, t);\n  }\n\n  public hasDescendantWithFieldOnChannel(channel: Channel) {\n    for (let child of this.children) {\n      if (child.isUnit()) {\n        if (child.channelHasField(channel)) {\n          return true;\n        }\n      } else {\n        if (child.hasDescendantWithFieldOnChannel(channel)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  public abstract channelHasField(channel: Channel): boolean;\n\n  public getName(text: string, delimiter: string = '_') {\n    if (this.data && text === SOURCE && isNamedData(this.data)) {\n      return this.data.name;\n    }\n    return (this.name ? this.name + delimiter : '') + text;\n  }\n\n  public renameData(oldName: string, newName: string) {\n     this.dataNameMap.rename(oldName, newName);\n  }\n\n  /**\n   * Return the data source name for the given data source type.\n   *\n   * For unit spec, this is always simply the spec.name + '-' + dataSourceType.\n   * We already use the name map so that marks and scales use the correct data.\n   */\n  public dataName(dataSourceType: DataSourceType): string {\n    return this.dataNameMap.get(this.getName(String(dataSourceType)));\n  }\n\n  public renameSize(oldName: string, newName: string) {\n    this.sizeNameMap.rename(oldName, newName);\n  }\n\n  public channelSizeName(channel: Channel): string {\n    return this.sizeName(channel === X || channel === COLUMN ? 'width' : 'height');\n  }\n\n  public sizeName(size: string): string {\n     return this.sizeNameMap.get(this.getName(size, '_'));\n  }\n\n  public abstract dataTable(): string;\n\n  // TRANSFORMS\n  public calculate(): Formula[] {\n    return this.transform ? this.transform.calculate : undefined;\n  }\n\n  public filterInvalid(): boolean {\n    const transform = this.transform || {};\n    if (transform.filterInvalid === undefined) {\n      return this.parent ? this.parent.filterInvalid() : undefined;\n    }\n    return transform.filterInvalid;\n  }\n\n  public filter(): string | OneOfFilter | EqualFilter| RangeFilter | (string | OneOfFilter | EqualFilter| RangeFilter)[] {\n    return this.transform ? this.transform.filter : undefined;\n  }\n\n  /** Get \"field\" reference for vega */\n  public field(channel: Channel, opt: FieldRefOption = {}) {\n    const fieldDef = this.fieldDef(channel);\n\n    if (fieldDef.bin) { // bin has default suffix that depends on scaleType\n      opt = extend({\n        binSuffix: hasDiscreteDomain(this.scale(channel).type) ? 'range' : 'start'\n      }, opt);\n    }\n\n    return field(fieldDef, opt);\n  }\n\n  public abstract fieldDef(channel: Channel): FieldDef;\n\n  public scale(channel: Channel): Scale {\n    return this.scales[channel];\n  }\n\n  public hasDiscreteScale(channel: Channel) {\n    const scale = this.scale(channel);\n    return scale && hasDiscreteDomain(scale.type);\n  }\n\n  public renameScale(oldName: string, newName: string) {\n    this.scaleNameMap.rename(oldName, newName);\n  }\n\n\n  /**\n   * @return scale name for a given channel after the scale has been parsed and named.\n   * (DO NOT USE THIS METHOD DURING SCALE PARSING, use model.name() instead)\n   */\n  public scaleName(this: Model, originalScaleName: Channel|string, parse?: boolean): string {\n    const channel = originalScaleName.replace(BIN_LEGEND_SUFFIX, '').replace(BIN_LEGEND_LABEL_SUFFIX, '');\n\n    if (parse) {\n      // During the parse phase always return a value\n      // No need to refer to rename map because a scale can't be renamed\n      // before it has the original name.\n      return this.getName(originalScaleName + '');\n    }\n\n    // If there is a scale for the channel, it should either\n    // be in the _scale mapping or exist in the name map\n    if (\n        // in the scale map (the scale is not merged by its parent)\n        (this.scale && this.scales[channel]) ||\n        // in the scale name map (the the scale get merged by its parent)\n        this.scaleNameMap.has(this.getName(originalScaleName + ''))\n      ) {\n      return this.scaleNameMap.get(this.getName(originalScaleName + ''));\n    }\n    return undefined;\n  }\n\n  public sort(channel: Channel): SortField | SortOrder {\n    return (this.getMapping()[channel] || {}).sort;\n  }\n\n  public axis(channel: Channel): Axis {\n    return this.axes[channel];\n  }\n\n  public legend(channel: Channel): Legend {\n    return this.legends[channel];\n  }\n\n  /**\n   * Type checks\n   */\n  public isUnit() {\n    return false;\n  }\n  public isFacet() {\n    return false;\n  }\n  public isLayer() {\n    return false;\n  }\n}\n","import * as log from '../../log';\n\nimport {SHARED_DOMAIN_OPS} from '../../aggregate';\nimport {Channel} from '../../channel';\nimport {SOURCE} from '../../data';\nimport {DateTime, isDateTime, timestamp} from '../../datetime';\nimport {Domain, Scale, ScaleType, hasDiscreteDomain, ScaleConfig} from '../../scale';\nimport {isSortField} from '../../sort';\nimport {FieldRefUnionDomain, VgSortField, isDataRefUnionedDomain, isFieldRefUnionDomain, isDataRefDomain, VgDomain, VgDataRef} from '../../vega.schema';\n\nimport * as util from '../../util';\n\nimport {Model} from '../model';\nimport {FieldDef} from '../../fielddef';\n\n\nexport function initDomain(domain: Domain, fieldDef: FieldDef, scale: ScaleType, scaleConfig: ScaleConfig) {\n  if (domain === 'unaggregated') {\n    const {valid, reason} = canUseUnaggregatedDomain(fieldDef, scale);\n    if(!valid) {\n      log.warn(reason);\n      return undefined;\n    }\n  } else if (domain === undefined && scaleConfig.useUnaggregatedDomain) {\n    // Apply config if domain is not specified.\n    const {valid} = canUseUnaggregatedDomain(fieldDef, scale);\n    if (valid) {\n      return 'unaggregated';\n    }\n  }\n\n  return domain;\n}\n\n\nexport function parseDomain(model: Model, channel: Channel): VgDomain {\n  const scale = model.scale(channel);\n\n\n  // If channel is either X or Y then union them with X2 & Y2 if they exist\n  if (channel === 'x' && model.channelHasField('x2')) {\n    if (model.channelHasField('x')) {\n      return unionDomains(parseSingleChannelDomain(scale, model, 'x'), parseSingleChannelDomain(scale, model, 'x2'));\n    } else {\n      return parseSingleChannelDomain(scale, model, 'x2');\n    }\n  } else if (channel === 'y' && model.channelHasField('y2')) {\n    if (model.channelHasField('y')) {\n      return unionDomains(parseSingleChannelDomain(scale, model, 'y'), parseSingleChannelDomain(scale, model, 'y2'));\n    } else {\n      return parseSingleChannelDomain(scale, model, 'y2');\n    }\n  }\n  return parseSingleChannelDomain(scale, model, channel);\n}\n\nfunction parseSingleChannelDomain(scale: Scale, model: Model, channel:Channel): any[] | VgDataRef | FieldRefUnionDomain {\n  const fieldDef = model.fieldDef(channel);\n\n  if (scale.domain && scale.domain !== 'unaggregated') { // explicit value\n    if (isDateTime(scale.domain[0])) {\n      return (scale.domain as DateTime[]).map((dt) => {\n        return timestamp(dt, true);\n      });\n    }\n    return scale.domain;\n  }\n\n  // special case for temporal scale\n  if (fieldDef.type === 'temporal') {\n    return {\n      data: model.dataTable(),\n      field: model.field(channel),\n      sort: {\n        field: model.field(channel),\n        op: 'min'\n      }\n    };\n  }\n\n  // For stack, use STACKED data.\n  const stack = model.stack;\n  if (stack && channel === stack.fieldChannel) {\n    if(stack.offset === 'normalize') {\n      return [0, 1];\n    }\n    return {\n      data: model.dataName('stacked'),\n      fields: [\n        model.field(channel, {suffix: 'start'}),\n        model.field(channel, {suffix: 'end'})\n      ]\n    };\n  }\n\n  const sort = domainSort(model, channel, scale.type);\n\n  if (scale.domain === 'unaggregated') {\n    return {\n      data: model.dataTable(),\n      fields: [\n        model.field(channel, {aggregate: 'min'}),\n        model.field(channel, {aggregate: 'max'})\n      ]\n    };\n  } else if (fieldDef.bin) { // bin\n    if (hasDiscreteDomain(scale.type)) {\n      // ordinal bin scale takes domain from bin_range, ordered by bin_start\n      // This is useful for both axis-based scale (x, y, column, and row) and legend-based scale (other channels).\n      return {\n        data: model.dataTable(),\n        field: model.field(channel, {binSuffix: 'range'}),\n        sort: {\n          field: model.field(channel, {binSuffix: 'start'}),\n          op: 'min' // min or max doesn't matter since same _range would have the same _start\n        }\n      };\n    } else { // continuous scales\n      if (channel === 'x' || channel === 'y') {\n        // X/Y position have to include start and end for non-ordinal scale\n        return {\n          data: model.dataTable(),\n          fields: [\n            model.field(channel, {binSuffix: 'start'}),\n            model.field(channel, {binSuffix: 'end'})\n          ]\n        };\n      } else {\n        // TODO: use bin_mid\n        return {\n          data: model.dataTable(),\n          field: model.field(channel, {binSuffix: 'start'})\n        };\n      }\n    }\n  } else if (sort) { // have sort -- only for ordinal\n    return {\n      // If sort by aggregation of a specified sort field, we need to use SOURCE table,\n      // so we can aggregate values for the scale independently from the main aggregation.\n      data: util.isBoolean(sort) ? model.dataTable(): SOURCE,\n      field: model.field(channel),\n      sort: sort\n    };\n  } else {\n    return {\n      data: model.dataTable(),\n      field: model.field(channel),\n    };\n  }\n}\n\nexport function domainSort(model: Model, channel: Channel, scaleType: ScaleType): VgSortField {\n  if (!hasDiscreteDomain(scaleType)) {\n    return undefined;\n  }\n\n  const sort = model.sort(channel);\n\n  // Sorted based on an aggregate calculation over a specified sort field (only for ordinal scale)\n  if (isSortField(sort)) {\n    return {\n      op: sort.op,\n      field: sort.field\n    };\n  }\n\n  if (util.contains(['ascending', 'descending', undefined /* default =ascending*/], sort)) {\n    return true;\n  }\n\n  // sort === 'none'\n  return undefined;\n}\n\n\n\n/**\n * Determine if a scale can use unaggregated domain.\n * @return {Boolean} Returns true if all of the following conditons applies:\n * 1. `scale.domain` is `unaggregated`\n * 2. Aggregation function is not `count` or `sum`\n * 3. The scale is quantitative or time scale.\n */\nexport function canUseUnaggregatedDomain(fieldDef: FieldDef, scaleType: ScaleType): {valid: boolean, reason?: string} {\n  if (!fieldDef.aggregate) {\n    return {\n      valid: false,\n      reason: log.message.unaggregateDomainHasNoEffectForRawField(fieldDef)\n    };\n  }\n\n  if (SHARED_DOMAIN_OPS.indexOf(fieldDef.aggregate) === -1) {\n    return {\n      valid: false,\n      reason: log.message.unaggregateDomainWithNonSharedDomainOp(fieldDef.aggregate)\n    };\n  }\n\n  if (fieldDef.type === 'quantitative') {\n    if (scaleType === 'log') {\n      return {\n        valid: false,\n        reason: log.message.unaggregatedDomainWithLogScale(fieldDef)\n      };\n    }\n  }\n\n  return {valid: true};\n}\n\n\n/**\n * Convert the domain to an array of data refs or an array of values. Also, throw\n * away sorting information since we always sort the domain when we union two domains.\n */\nfunction normalizeDomain(domain: VgDomain): (any[] | VgDataRef)[] {\n  if (util.isArray(domain)) {\n    return [domain];\n  } else if (isDataRefDomain(domain)) {\n    delete domain.sort;\n    return [domain];\n  } else if(isFieldRefUnionDomain(domain)) {\n    return domain.fields.map(d => {\n      return {\n        data: domain.data,\n        field: d\n      };\n    });\n  } else if (isDataRefUnionedDomain(domain)) {\n    return domain.fields.map(d => {\n      if (util.isArray(d)) {\n        return d;\n      }\n      return {\n        field: d.field,\n        data: d.data\n      };\n    });\n  }\n  /* istanbul ignore next: This should never happen. */\n  throw new Error(log.message.INVAID_DOMAIN);\n}\n\n/**\n * Union two data domains. A unioned domain is always sorted.\n */\nexport function unionDomains(domain1: VgDomain, domain2: VgDomain): VgDomain {\n  const normalizedDomain1 = normalizeDomain(domain1);\n  const normalizedDomain2 = normalizeDomain(domain2);\n\n  let domains = normalizedDomain1.concat(normalizedDomain2);\n  domains = util.unique(domains, util.hash);\n\n  if (domains.length > 1) {\n    const allData = domains.map(d => {\n      if (isDataRefDomain(d)) {\n        return d.data;\n      }\n      return null;\n    });\n\n    if (util.unique(allData, x => x).length === 1 && allData[0] !== null) {\n      return {\n        data: allData[0],\n        fields: domains.map(d => (d as VgDataRef).field)\n      };\n    }\n\n    return {fields: domains, sort: true};\n  } else {\n    return domains[0];\n  }\n}\n","import * as log from '../../log';\n\nimport {Config} from '../../config';\nimport {Channel} from '../../channel';\nimport {ScaleFieldDef, FieldDef} from '../../fielddef';\nimport {Mark} from '../../mark';\nimport {Scale, ScaleConfig, scaleTypeSupportProperty, channelScalePropertyIncompatability} from '../../scale';\n\nimport {initDomain} from './domain';\nimport rangeMixins from './range';\nimport * as rules from './rules';\nimport scaleType from './type';\nimport * as util from '../../util';\n\n/**\n * All scale properties except type and all range properties.\n */\nexport const NON_TYPE_RANGE_SCALE_PROPERTIES: (keyof Scale)[] = [\n  // general properties\n  'domain', // For domain, we only copy specified value here.  Default value is determined during parsing phase.\n  'round',\n  // quantitative / time\n  'clamp', 'nice',\n  // quantitative\n  'exponent', 'zero', // zero depends on domain\n  'interpolate',\n  // ordinal\n  'padding', 'paddingInner', 'paddingOuter' // padding\n];\n\n/**\n * Initialize Vega-Lite Scale's properties\n *\n * Note that we have to apply these rules here because:\n * - many other scale and non-scale properties (including layout, mark) depend on scale type\n * - layout depends on padding\n * - range depends on zero and size (width and height) depends on range\n */\nexport default function init(\n    channel: Channel, fieldDef: ScaleFieldDef, config: Config,\n    mark: Mark | undefined, topLevelSize: number | undefined, xyRangeSteps: number[]): Scale {\n  const specifiedScale = (fieldDef || {}).scale || {};\n\n  const scale: Scale = {\n    type: scaleType(\n      specifiedScale.type, fieldDef.type, channel, fieldDef.timeUnit, mark,\n      topLevelSize !== undefined, specifiedScale.rangeStep, config.scale\n    )\n  };\n\n  // Use specified value if compatible or determine default values for each property\n  NON_TYPE_RANGE_SCALE_PROPERTIES.forEach(function(property) {\n    const specifiedValue = specifiedScale[property];\n\n    const supportedByScaleType = scaleTypeSupportProperty(scale.type, property);\n    const channelIncompatability = channelScalePropertyIncompatability(channel, property);\n\n    if (specifiedValue !== undefined) {\n      // If there is a specified value, check if it is compatible with scale type and channel\n      if (!supportedByScaleType) {\n        log.warn(log.message.scalePropertyNotWorkWithScaleType(scale.type, property, channel));\n      } else if (channelIncompatability) { // channel\n        log.warn(channelIncompatability);\n      }\n    }\n    if (supportedByScaleType && channelIncompatability === undefined) {\n      const value = getValue(specifiedValue, property, scale, channel, fieldDef, config.scale);\n      if (value !== undefined) { // use the default value\n        scale[property] = value;\n      }\n    }\n  });\n\n  return util.extend(\n    scale,\n    rangeMixins(\n      channel, scale.type, fieldDef.type, specifiedScale, config,\n      scale.zero, mark, topLevelSize, xyRangeSteps\n    )\n  );\n}\n\nfunction getValue(specifiedValue: any, property: keyof Scale, scale: Scale, channel: Channel, fieldDef: FieldDef, scaleConfig: ScaleConfig) {\n  // For domain, we might override specified value\n  if (property === 'domain') {\n    return initDomain(specifiedValue, fieldDef, scale.type, scaleConfig);\n  }\n\n  // Other properties, no overriding default values\n  if (specifiedValue !== undefined) {\n    return specifiedValue;\n  }\n  return getDefaultValue(property, scale, channel, fieldDef, scaleConfig);\n}\n\nfunction getDefaultValue(property: keyof Scale, scale: Scale, channel: Channel, fieldDef: FieldDef, scaleConfig: ScaleConfig) {\n\n  // If we have default rule-base, determine default value first\n  switch (property) {\n    case 'nice':\n      return rules.nice(scale.type, channel, fieldDef);\n    case 'padding':\n      return rules.padding(channel, scale.type, scaleConfig);\n    case 'paddingInner':\n      return rules.paddingInner(scale.padding, channel, scaleConfig);\n    case 'paddingOuter':\n      return rules.paddingOuter(scale.padding, channel, scale.type, scale.paddingInner, scaleConfig);\n    case 'round':\n      return rules.round(channel, scaleConfig);\n    case 'zero':\n      return rules.zero(scale, channel, fieldDef);\n  }\n  // Otherwise, use scale config\n  return scaleConfig[property];\n}\n","import {Channel} from '../../channel';\nimport {FieldDef, field} from '../../fielddef';\nimport {Scale, ScaleType, hasContinuousDomain} from '../../scale';\nimport {isSortField} from '../../sort';\nimport {Dict} from '../../util';\n\nimport {Model} from '../model';\n\nimport {ScaleComponent, ScaleComponents, BIN_LEGEND_SUFFIX, BIN_LEGEND_LABEL_SUFFIX} from './scale';\nimport {parseDomain} from './domain';\nimport {parseRange} from './range';\nimport {VgScale} from '../../vega.schema';\n\n/**\n * Parse scales for all channels of a model.\n */\nexport default function parseScaleComponent(model: Model): Dict<ScaleComponents> {\n  // TODO: should model.channels() inlcude X2/Y2?\n  return model.channels().reduce(function(scaleComponentsIndex: Dict<ScaleComponents>, channel: Channel) {\n    const scaleComponents = parseScale(model, channel);\n    if (scaleComponents) {\n      scaleComponentsIndex[channel] = scaleComponents;\n    }\n    return scaleComponentsIndex;\n  }, {});\n}\n\n/**\n * Parse scales for a single channel of a model.\n */\nexport function parseScale(model: Model, channel: Channel) {\n   if (model.scale(channel)) {\n    const fieldDef = model.fieldDef(channel);\n    const scales: ScaleComponents = {\n      main: parseMainScale(model, channel)\n    };\n\n    // Add additional scale needed for the labels in the binned legend.\n    if (model.legend(channel) && fieldDef.bin && hasContinuousDomain(model.scale(channel).type)) {\n      scales.binLegend = parseBinLegend(channel, model);\n      scales.binLegendLabel = parseBinLegendLabel(channel, model, fieldDef);\n    }\n\n    return scales;\n  }\n  return null;\n}\n\nexport const NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES: (keyof Scale)[] = [\n  'round',\n  // quantitative / time\n  'clamp', 'nice',\n  // quantitative\n  'exponent', 'interpolate', 'zero', // zero depends on domain\n  // ordinal\n  'padding', 'paddingInner', 'paddingOuter', // padding\n];\n\n// TODO: consider return type of this method\n// maybe we should just return domain as we can have the rest of scale (ScaleSignature constant)\n/**\n * Return the main scale for each channel.  (Only color can have multiple scales.)\n */\nfunction parseMainScale(model: Model, channel: Channel) {\n  const scale = model.scale(channel);\n  const sort = model.sort(channel);\n\n  let scaleComponent: VgScale = {\n    name: model.scaleName(channel + '', true),\n    type: scale.type,\n    domain: parseDomain(model, channel),\n    range: parseRange(scale)\n  };\n\n  NON_TYPE_DOMAIN_RANGE_VEGA_SCALE_PROPERTIES.forEach((property) => {\n    scaleComponent[property] = scale[property];\n  });\n\n  if (sort && (isSortField(sort) ? sort.order : sort) === 'descending') {\n    scaleComponent.reverse = true;\n  }\n\n  return scaleComponent;\n}\n\n\n/**\n * Return additional scale to drive legend when we use a continuous scale and binning.\n */\nfunction parseBinLegend(channel: Channel, model: Model): ScaleComponent {\n  return {\n    name: model.scaleName(channel, true) + BIN_LEGEND_SUFFIX,\n    type: ScaleType.POINT,\n    domain: {\n      data: model.dataTable(),\n      field: model.field(channel),\n      sort: true\n    },\n    range: [0,1] // doesn't matter because we override it\n  };\n}\n\n/**\n *  Return an additional scale for bin labels because we need to map bin_start to bin_range in legends\n */\nfunction parseBinLegendLabel(channel: Channel, model: Model, fieldDef: FieldDef): ScaleComponent {\n  return {\n    name: model.scaleName(channel, true) + BIN_LEGEND_LABEL_SUFFIX,\n    type: ScaleType.ORDINAL,\n    domain: {\n      data: model.dataTable(),\n      field: model.field(channel),\n      sort: true\n    },\n    range: {\n      data: model.dataTable(),\n      field: field(fieldDef, {binSuffix: 'range'}),\n      sort: {\n        field: model.field(channel, {binSuffix: 'start'}),\n        op: 'min' // min or max doesn't matter since same _range would have the same _start\n      }\n    }\n  };\n}\n","import * as log from '../../log';\n\nimport {COLUMN, ROW, X, Y, SHAPE, SIZE, COLOR, OPACITY, Channel} from '../../channel';\nimport {Config} from '../../config';\nimport {Mark} from '../../mark';\nimport {Scale, ScaleConfig, ScaleType, scaleTypeSupportProperty, Scheme, Range, isExtendedScheme, channelScalePropertyIncompatability} from '../../scale';\nimport {Type} from '../../type';\nimport {VgRange, VgRangeScheme} from '../../vega.schema';\nimport * as util from '../../util';\n\nexport type RangeMixins = {range: Range} | {rangeStep: number} | {scheme: Scheme};\n\nexport function parseRange(scale: Scale): VgRange {\n  if (scale.rangeStep) {\n    return {step: scale.rangeStep};\n  } else if (scale.scheme) {\n    const scheme = scale.scheme;\n    if (isExtendedScheme(scheme)) {\n      let r: VgRangeScheme = {scheme: scheme.name};\n      if (scheme.count) {\n        r.count = scheme.count;\n      }\n      if (scheme.extent) {\n        r.extent = scheme.extent;\n      }\n      return r;\n    } else {\n      return {scheme};\n    }\n  }\n  return scale.range;\n}\n\nexport const RANGE_PROPERTIES: (keyof Scale)[] = ['range', 'rangeStep', 'scheme'];\n\n/**\n * Return mixins that includes one of the range properties (range, rangeStep, scheme).\n */\nexport default function rangeMixins(\n  channel: Channel, scaleType: ScaleType, type: Type, specifiedScale: Scale, config: Config,\n  zero: boolean, mark: Mark, topLevelSize: number | undefined, xyRangeSteps: number[]): RangeMixins {\n\n  let specifiedRangeStepIsNull = false;\n\n  // Check if any of the range properties is specified.\n  // If so, check if it is compatible and make sure that we only output one of the properties\n  for (let property of RANGE_PROPERTIES) {\n    if (specifiedScale[property] !== undefined) {\n      let supportedByScaleType = scaleTypeSupportProperty(scaleType, property);\n      const channelIncompatability = channelScalePropertyIncompatability(channel, property);\n      if (!supportedByScaleType) {\n        log.warn(log.message.scalePropertyNotWorkWithScaleType(scaleType, property, channel));\n      } else if (channelIncompatability) { // channel\n        log.warn(channelIncompatability);\n      } else {\n        switch (property) {\n          case 'range':\n            return {range: specifiedScale[property]};\n          case 'scheme':\n            return {scheme: specifiedScale[property]};\n          case 'rangeStep':\n            if (topLevelSize === undefined) {\n              const stepSize = specifiedScale[property];\n              if (stepSize !== null) {\n                return {rangeStep: stepSize};\n              } else {\n                specifiedRangeStepIsNull = true;\n              }\n            } else {\n              // If top-level size is specified, we ignore specified rangeStep.\n              log.warn(log.message.rangeStepDropped(channel));\n            }\n        }\n      }\n    }\n  }\n\n  switch (channel) {\n    // TODO: revise row/column when facetSpec has top-level width/height\n    case ROW:\n      return {range: 'height'};\n    case COLUMN:\n      return {range: 'width'};\n    case X:\n    case Y:\n      if (topLevelSize === undefined) {\n        if (util.contains(['point', 'band'], scaleType) && !specifiedRangeStepIsNull) { // FIXME isDiscrete blah blah\n          if (channel === X && mark === 'text') {\n            if (config.scale.textXRangeStep) {\n              return {rangeStep: config.scale.textXRangeStep};\n            }\n          } else {\n            if (config.scale.rangeStep) {\n              return {rangeStep: config.scale.rangeStep};\n            }\n          }\n        }\n        // If specified range step is null or the range step config is null.\n        // Use default topLevelSize rule/config\n        topLevelSize = channel === X ? config.cell.width : config.cell.height;\n      }\n      return {range: channel === X ? [0, topLevelSize] : [topLevelSize, 0]};\n\n    case SIZE:\n      // TODO: support custom rangeMin, rangeMax\n      const rangeMin = sizeRangeMin(mark, zero, config);\n      const rangeMax = sizeRangeMax(mark, xyRangeSteps, config);\n      return {range: [rangeMin, rangeMax]};\n    case SHAPE:\n    case COLOR:\n      return {range: defaultRange(channel, scaleType, type, mark)};\n\n\n    case OPACITY:\n      // TODO: support custom rangeMin, rangeMax\n      return {range: [config.scale.minOpacity, config.scale.maxOpacity]};\n  }\n  /* istanbul ignore next: should never reach here */\n  throw new Error(`Scale range undefined for channel ${channel}`);\n}\n\nfunction defaultRange(channel: 'shape' | 'color', scaleType: ScaleType, type: Type, mark: Mark) {\n  switch (channel) {\n    case SHAPE:\n      return 'symbol';\n    case COLOR:\n      if (scaleType === 'ordinal') {\n        // Only nominal data uses ordinal scale by default\n        return type === 'nominal' ? 'category' : 'ordinal';\n      }\n      return mark === 'rect' ? 'heatmap' : 'ramp';\n  }\n}\n\nfunction sizeRangeMin(mark: Mark, zero: boolean, config: Config) {\n  if (zero) {\n    return 0;\n  }\n  switch (mark) {\n    case 'bar':\n      return config.scale.minBandSize !== undefined ? config.scale.minBandSize : config.bar.continuousBandSize;\n    case 'tick':\n      return config.scale.minBandSize;\n    case 'line':\n    case 'rule':\n      return config.scale.minStrokeWidth;\n    case 'text':\n      return config.scale.minFontSize;\n    case 'point':\n    case 'square':\n    case 'circle':\n      if (config.scale.minSize) {\n        return config.scale.minSize;\n      }\n  }\n  /* istanbul ignore next: should never reach here */\n  // sizeRangeMin not implemented for the mark\n  throw new Error(log.message.incompatibleChannel('size', mark));\n}\n\nfunction sizeRangeMax(mark: Mark, xyRangeSteps: number[], config: Config) {\n  const scaleConfig = config.scale;\n  // TODO(#1168): make max size scale based on rangeStep / overall plot size\n  switch (mark) {\n    case 'bar':\n    case 'tick':\n      if (config.scale.maxBandSize !== undefined) {\n        return config.scale.maxBandSize;\n      }\n      return minXYRangeStep(xyRangeSteps, config.scale) - 1;\n    case 'line':\n    case 'rule':\n      return config.scale.maxStrokeWidth;\n    case 'text':\n      return config.scale.maxFontSize;\n    case 'point':\n    case 'square':\n    case 'circle':\n      if (config.scale.maxSize) {\n        return config.scale.maxSize;\n      }\n\n      // FIXME this case totally should be refactored\n      const pointStep = minXYRangeStep(xyRangeSteps, scaleConfig);\n      return (pointStep - 2) * (pointStep - 2);\n  }\n  /* istanbul ignore next: should never reach here */\n  // sizeRangeMax not implemented for the mark\n  throw new Error(log.message.incompatibleChannel('size', mark));\n}\n\n/**\n * @returns {number} Range step of x or y or minimum between the two if both are ordinal scale.\n */\nfunction minXYRangeStep(xyRangeSteps: number[], scaleConfig: ScaleConfig): number {\n  if (xyRangeSteps.length > 0) {\n    return Math.min.apply(null, xyRangeSteps);\n  }\n  if (scaleConfig.rangeStep) {\n    return scaleConfig.rangeStep;\n  }\n  return 21; // FIXME: re-evaluate the default value here.\n}\n","\nimport {X, Y, Channel} from '../../channel';\nimport {FieldDef} from '../../fielddef';\nimport {Scale, ScaleConfig, ScaleType, NiceTime} from '../../scale';\nimport {smallestUnit} from '../../timeunit';\nimport * as util from '../../util';\n\nexport function nice(scaleType: ScaleType, channel: Channel, fieldDef: FieldDef): boolean | NiceTime {\n  if (util.contains([ScaleType.TIME, ScaleType.UTC], scaleType)) {\n    return smallestUnit(fieldDef.timeUnit) as any;\n  }\n  return util.contains([X, Y], channel); // return true for quantitative X/Y\n}\n\nexport function padding(channel: Channel, scaleType: ScaleType, scaleConfig: ScaleConfig) {\n  if (util.contains([X, Y], channel)) {\n    if (scaleType === ScaleType.POINT) {\n      return scaleConfig.pointPadding;\n    }\n  }\n  return undefined;\n}\n\nexport function paddingInner(padding: number, channel: Channel,  scaleConfig: ScaleConfig) {\n  if (padding !== undefined) {\n    // If user has already manually specified \"padding\", no need to add default paddingInner.\n    return undefined;\n  }\n\n  if (util.contains([X, Y], channel)) {\n    // Padding is only set for X and Y by default.\n    // Basically it doesn't make sense to add padding for color and size.\n\n    // paddingOuter would only be called if it's a band scale, just return the default for bandScale.\n    return scaleConfig.bandPaddingInner;\n  }\n  return undefined;\n}\n\nexport function paddingOuter(padding: number, channel: Channel, scaleType: ScaleType, paddingInner: number, scaleConfig: ScaleConfig) {\n  if (padding !== undefined) {\n    // If user has already manually specified \"padding\", no need to add default paddingOuter.\n    return undefined;\n  }\n\n  if (util.contains([X, Y], channel)) {\n    // Padding is only set for X and Y by default.\n    // Basically it doesn't make sense to add padding for color and size.\n    if (scaleType === ScaleType.BAND) {\n      if (scaleConfig.bandPaddingOuter !== undefined) {\n        return scaleConfig.bandPaddingOuter;\n      }\n      /* By default, paddingOuter is paddingInner / 2. The reason is that\n          size (width/height) = step * (cardinality - paddingInner + 2 * paddingOuter).\n          and we want the width/height to be integer by default.\n          Note that step (by default) and cardinality are integers.) */\n      return paddingInner / 2;\n    }\n  }\n  return undefined;\n}\n\nexport function round(channel: Channel, scaleConfig: ScaleConfig) {\n  if (util.contains(['x', 'y', 'row', 'column'], channel)) {\n    return scaleConfig.round;\n  }\n  return undefined;\n}\n\nexport function zero(specifiedScale: Scale, channel: Channel, fieldDef: FieldDef) {\n  // By default, return true only for the following cases:\n\n  // 1) using quantitative field with size\n  // While this can be either ratio or interval fields, our assumption is that\n  // ratio are more common.\n  if (channel === 'size' && fieldDef.type === 'quantitative') {\n    return true;\n  }\n\n  // 2) non-binned, quantitative x-scale or y-scale if no custom domain is provided.\n  // (For binning, we should not include zero by default because binning are calculated without zero.\n  // Similar, if users explicitly provide a domain range, we should not augment zero as that will be unexpected.)\n  if (!specifiedScale.domain && !fieldDef.bin && util.contains([X, Y], channel)) {\n    return true;\n  }\n  return false;\n}\n","import {VgScale} from '../../vega.schema';\n\n/** Scale suffix for scale used to get drive binned legends. */\nexport const BIN_LEGEND_SUFFIX = '_bin_legend';\n/** Scale suffix for scale for binned field's legend labels, which maps a binned field's quantitative values to range strings. */\nexport const BIN_LEGEND_LABEL_SUFFIX = '_bin_legend_label';\n\n// FIXME: With layer and concat, scaleComponent should decompose between\n// ScaleSignature and ScaleDomain[].\n// Basically, if two unit specs has the same scale, signature for a particular channel,\n// the scale can be unioned by combining the domain.\nexport type ScaleComponent = VgScale;\n\nexport type ScaleComponents = {\n  main: ScaleComponent;\n  binLegend?: ScaleComponent;\n  binLegendLabel?: ScaleComponent;\n};\n","import * as log from '../../log';\n\nimport {hasScale, supportScaleType, rangeType, Channel} from '../../channel';\nimport {Mark} from '../../mark';\nimport {ScaleType, ScaleConfig} from '../../scale';\nimport {TimeUnit, isDiscreteByDefault} from '../../timeunit';\nimport {Type} from '../../type';\n\nimport * as util from '../../util';\n\nexport type RangeType = 'continuous' | 'discrete' | 'flexible' | undefined;\n\n/**\n * Determine if there is a specified scale type and if it is appropriate,\n * or determine default type if type is unspecified or inappropriate.\n */\n// NOTE: CompassQL uses this method.\nexport default function type(\n  specifiedType: ScaleType, type: Type, channel: Channel, timeUnit: TimeUnit, mark: Mark,\n  hasTopLevelSize: boolean, specifiedRangeStep: number, scaleConfig: ScaleConfig): ScaleType {\n\n  if (!hasScale(channel)) {\n    // There is no scale for these channels\n    return null;\n  }\n  if (specifiedType !== undefined) {\n    // Check if explicitly specified scale type is supported by the channel\n    if (supportScaleType(channel, specifiedType)) {\n      return specifiedType;\n    } else {\n      const newScaleType = defaultType(\n        type, channel, timeUnit, mark,\n        hasTopLevelSize, specifiedRangeStep,  scaleConfig\n      );\n      log.warn(log.message.scaleTypeNotWorkWithChannel(channel, specifiedType, newScaleType));\n      return newScaleType;\n    }\n  }\n\n  return defaultType(\n    type, channel, timeUnit, mark,\n    hasTopLevelSize, specifiedRangeStep, scaleConfig\n  );\n}\n\n/**\n * Determine appropriate default scale type.\n */\nfunction defaultType(type: Type, channel: Channel, timeUnit: TimeUnit, mark: Mark,\n  hasTopLevelSize: boolean, specifiedRangeStep: number, scaleConfig: ScaleConfig): ScaleType {\n\n  if (util.contains(['row', 'column'], channel)) {\n    return ScaleType.BAND;\n  }\n\n  switch (type) {\n    case 'nominal':\n      if (channel === 'color' || rangeType(channel) === 'discrete') {\n        return ScaleType.ORDINAL;\n      }\n      return discreteToContinuousType(channel, mark, hasTopLevelSize, specifiedRangeStep, scaleConfig);\n\n    case 'ordinal':\n      if (channel === 'color') {\n        return ScaleType.ORDINAL;\n      } else if (rangeType(channel) === 'discrete') {\n        log.warn(log.message.discreteChannelCannotEncode(channel, 'ordinal'));\n        return ScaleType.ORDINAL;\n      }\n      return discreteToContinuousType(channel, mark, hasTopLevelSize, specifiedRangeStep, scaleConfig);\n\n    case 'temporal':\n      if (channel === 'color') {\n        // Always use `sequential` as the default color scale for continuous data\n        // since it supports both array range and scheme range.\n        return 'sequential';\n      } else if (rangeType(channel) === 'discrete') {\n        log.warn(log.message.discreteChannelCannotEncode(channel, 'temporal'));\n        // TODO: consider using quantize (equivalent to binning) once we have it\n        return ScaleType.ORDINAL;\n      }\n      if (isDiscreteByDefault(timeUnit)) {\n        return discreteToContinuousType(channel, mark, hasTopLevelSize, specifiedRangeStep, scaleConfig);\n      }\n      return ScaleType.TIME;\n\n    case 'quantitative':\n      if (channel === 'color') {\n        // Always use `sequential` as the default color scale for continuous data\n        // since it supports both array range and scheme range.\n        return 'sequential';\n      } else if (rangeType(channel) === 'discrete') {\n        log.warn(log.message.discreteChannelCannotEncode(channel, 'quantitative'));\n        // TODO: consider using quantize (equivalent to binning) once we have it\n        return ScaleType.ORDINAL;\n      }\n      return ScaleType.LINEAR;\n  }\n\n  /* istanbul ignore next: should never reach this */\n  throw new Error(log.message.invalidFieldType(type));\n}\n\n/**\n * Determines default scale type for nominal/ordinal field.\n * @returns BAND or POINT scale based on channel, mark, and rangeStep\n */\nfunction discreteToContinuousType(\n    channel: Channel, mark: Mark, hasTopLevelSize: boolean,\n    specifiedRangeStep: number, scaleConfig: ScaleConfig): ScaleType {\n\n  if (util.contains(['x', 'y'], channel)) {\n    if (mark === 'rect') {\n      // The rect mark should fit into a band.\n      return ScaleType.BAND;\n    }\n    if (mark === 'bar') {\n      // For bar, use band only if there is no rangeStep since we need to use band for fit mode.\n      // However, for non-fit mode, point scale provides better center position.\n      if (haveRangeStep(hasTopLevelSize, specifiedRangeStep, scaleConfig)) {\n        return ScaleType.POINT;\n      }\n      return ScaleType.BAND;\n    }\n  }\n  // Otherwise, use ordinal point scale so we can easily get center positions of the marks.\n  return ScaleType.POINT;\n}\n\nfunction haveRangeStep(hasTopLevelSize: boolean, specifiedRangeStep: number, scaleConfig: ScaleConfig) {\n  if (hasTopLevelSize) {\n    // if topLevelSize is provided, rangeStep will be dropped.\n    return false;\n  }\n  if (specifiedRangeStep !== undefined) {\n    return specifiedRangeStep !== null;\n  }\n  return !!scaleConfig.rangeStep;\n}\n","import {SelectionComponent, SelectionCompiler, TUPLE, invert as invertFn, channelSignalName} from './selection';\nimport {X, Y, Channel} from '../../channel';\nimport {UnitModel} from '../unit';\nimport {stringValue, extend} from '../../util';\nimport {warn} from '../../log';\nimport scales from './transforms/scales';\n\nexport const BRUSH = '_brush',\n  SIZE = '_size';\n\nconst interval:SelectionCompiler = {\n  predicate: 'vlInterval',\n\n  signals: function(model, selCmpt) {\n    let signals: any[] = [],\n        intervals:any[] = [],\n        name = selCmpt.name,\n        size = name + SIZE;\n\n    if (selCmpt.translate && !(scales.has(selCmpt))) {\n      events(selCmpt, function(_: any[], evt: any) {\n        let filters = evt.between[0].filter || (evt.between[0].filter = []);\n        filters.push('!event.item || (event.item && ' +\n          `event.item.mark.name !== ${stringValue(name + BRUSH)})`);\n      });\n    }\n\n    selCmpt.project.forEach(function(p) {\n      if (p.encoding !== X && p.encoding !== Y) {\n        warn('Interval selections only support x and y encoding channels.');\n        return;\n      }\n\n      let cs = channelSignal(model, selCmpt, p.encoding);\n      signals.push(cs);\n      intervals.push(`{field: ${stringValue(p.field)}, extent: ${cs.name}}`);\n    });\n\n    signals.push({\n      name: size,\n      value: [],\n      on: events(selCmpt, function(on: any[], evt: any) {\n        on.push({\n          events: evt.between[0],\n          update: '{x: x(unit), y: y(unit), width: 0, height: 0}'\n        });\n\n        on.push({\n          events: evt,\n          update: `{x: ${size}.x, y: ${size}.y, ` +\n           `width: abs(x(unit) - ${size}.x), height: abs(y(unit) - ${size}.y)}`\n        });\n\n        return on;\n      })\n    }, {\n      name: name,\n      update: `[${intervals.join(', ')}]`\n    });\n\n    return signals;\n  },\n\n  tupleExpr: function(model, selCmpt) {\n    return `intervals: ${selCmpt.name}`;\n  },\n\n  modifyExpr: function(model, selCmpt) {\n    let tpl = selCmpt.name + TUPLE;\n    return `${tpl}, {unit: ${tpl}.unit}`;\n  },\n\n  marks: function(model, selCmpt, marks) {\n    let name = selCmpt.name,\n        {x, y} = projections(selCmpt);\n\n    // Do not add a brush if we're binding to scales.\n    if (scales.has(selCmpt)) {\n      return marks;\n    }\n\n    let update = {\n      x: extend({}, x !== null ?\n        {scale: model.scaleName(X), signal: `${name}[${x}].extent[0]`} :\n        {value: 0}),\n\n      x2: extend({}, x !== null ?\n        {scale: model.scaleName(X), signal: `${name}[${x}].extent[1]`} :\n        {field: {group: 'width'}}),\n\n      y: extend({}, y !== null ?\n        {scale: model.scaleName(Y), signal: `${name}[${y}].extent[0]`} :\n        {value: 0}),\n\n      y2: extend({}, y !== null ?\n        {scale: model.scaleName(Y), signal: `${name}[${y}].extent[1]`} :\n        {field: {group: 'height'}}),\n    };\n\n    return [{\n      name: undefined,\n      type: 'rect',\n      encode: {\n        enter: {fill: {value: '#eee'}},\n        update: update\n      }\n    }].concat(marks, {\n      name: name + BRUSH,\n      type: 'rect',\n      encode: {\n        enter: {fill: {value: 'transparent'}},\n        update: update\n      }\n    });\n  }\n};\nexport {interval as default};\n\nexport function projections(selCmpt: SelectionComponent) {\n  let x:number = null, y:number = null;\n  selCmpt.project.forEach(function(p, i) {\n    if (p.encoding === X) {\n      x = i;\n    } else if (p.encoding === Y) {\n      y = i;\n    }\n  });\n  return {x: x, y: y};\n}\n\nfunction channelSignal(model: UnitModel, selCmpt: SelectionComponent, channel: Channel): any {\n  let name  = channelSignalName(selCmpt, channel),\n      size  = (channel === X ? 'width' : 'height'),\n      coord = `${channel}(unit)`,\n      invert = invertFn.bind(null, model, selCmpt, channel);\n\n  return {\n    name: name,\n    value: [],\n    on: scales.has(selCmpt) ? [] : events(selCmpt, function(on: any[], evt: any) {\n      on.push({\n        events: evt.between[0],\n        update: invert(`[${coord}, ${coord}]`)\n      });\n\n      on.push({\n        events: evt,\n        update: `[${name}[0], ` + invert(`clamp(${coord}, 0, ${size})`) + ']'\n      });\n\n      return on;\n    })\n  };\n}\n\nfunction events(selCmpt: SelectionComponent, cb: Function) {\n  return selCmpt.events.reduce(function(on: any[], evt: any) {\n    if (!evt.between) {\n      warn(`${evt} is not an ordered event stream for interval selections`);\n      return on;\n    }\n    return cb(on, evt);\n  }, []);\n}\n","import {TUPLE, SelectionCompiler} from './selection';\nimport {stringValue} from '../../util';\n\nconst multi:SelectionCompiler = {\n  predicate: 'vlPoint',\n\n  signals: function(model, selCmpt) {\n    let proj = selCmpt.project,\n        datum  = '(item().isVoronoi ? datum.datum : datum)',\n        fields = proj.map((p) => stringValue(p.field)).join(', '),\n        values = proj.map((p) => `${datum}[${stringValue(p.field)}]`).join(', ');\n    return [{\n      name: selCmpt.name,\n      value: {},\n      on: [{\n        events: selCmpt.events,\n        update: `{fields: [${fields}], values: [${values}]}`\n      }]\n    }];\n  },\n\n  tupleExpr: function(model, selCmpt) {\n    let name = selCmpt.name;\n    return `fields: ${name}.fields, values: ${name}.values`;\n  },\n\n  modifyExpr: function(model, selCmpt) {\n    return selCmpt.name + TUPLE;\n  }\n};\n\nexport {multi as default};\n","import {SelectionDef, SelectionDomain, SelectionResolutions, SelectionTypes} from '../../selection';\nimport {SelectionComponent} from './selection';\nimport {Model} from '../model';\nimport {UnitModel} from '../unit';\nimport {Channel} from '../../channel';\nimport {Dict, extend, stringValue, isString} from '../../util';\nimport {forEachTransform} from './transforms/transforms';\nimport parseSelector from 'vega-parser/src/parsers/event-selector';\nimport {VgData, VgBinding} from '../../vega.schema';\nimport singleCompiler from './single';\nimport multiCompiler from './multi';\nimport intervalCompiler from './interval';\n\nexport const STORE = '_store',\n  TUPLE  = '_tuple',\n  MODIFY = '_modify';\n\nexport interface SelectionComponent {\n  name: string;\n  type: SelectionTypes;\n  domain: SelectionDomain;\n  events: any;\n  // predicate?: string;\n  bind?: 'scales' | VgBinding | {[key: string]: VgBinding};\n  resolve: SelectionResolutions;\n\n  // Transforms\n  project?: ProjectComponent[];\n  scales?: Channel[];\n  toggle?: any;\n  translate?: any;\n  zoom?: any;\n  nearest?: any;\n}\n\nexport interface ProjectComponent {\n  field?: string;\n  encoding?: Channel;\n}\n\nexport interface SelectionCompiler {\n  signals: (model: UnitModel, selCmpt: SelectionComponent) => any[];\n  topLevelSignals?: (model: Model, selCmpt: SelectionComponent) => any[];\n  tupleExpr: (model: UnitModel, selCmpt: SelectionComponent) => string;\n  modifyExpr: (model: UnitModel, selCmpt: SelectionComponent) => string;\n  marks?: (model: UnitModel, selCmpt:SelectionComponent, marks: any[]) => any[];\n  predicate: string;  // Vega expr string to determine inclusion in selection.\n}\n\nexport function parseUnitSelection(model: UnitModel, selDefs: Dict<SelectionDef>) {\n  let selCmpts: Dict<SelectionComponent> = {},\n      selectionConfig = model.config.selection;\n\n  for (let name in selDefs) {\n    if (!selDefs.hasOwnProperty(name)) {\n      continue;\n    }\n\n    let selDef = selDefs[name],\n        cfg = selectionConfig[selDef.type];\n\n    // Set default values from config if a property hasn't been specified,\n    // or if it is true. E.g., \"translate\": true should use the default\n    // event handlers for translate. However, true may be a valid value for\n    // a property (e.g., \"nearest\": true).\n    for (let key in cfg) {\n      // A selection should contain either `encodings` or `fields`, only use\n      // default values for these two values if neither of them is specified.\n      if ((key === 'encodings' && selDef.fields) || (key === 'fields' && selDef.encodings)) {\n        continue;\n      }\n\n      if (selDef[key] === undefined || selDef[key] === true) {\n        selDef[key] = cfg[key] || selDef[key];\n      }\n    }\n\n    let selCmpt = selCmpts[name] = extend({}, selDef, {\n      name: model.getName(name),\n      events: isString(selDef.on) ? parseSelector(selDef.on, 'scope') : selDef.on,\n      domain: 'data' as SelectionDomain, // TODO: Support def.domain\n      resolve: 'union' as SelectionResolutions\n    }) as SelectionComponent;\n\n    forEachTransform(selCmpt, function(txCompiler) {\n      if (txCompiler.parse) {\n        txCompiler.parse(model, selDef, selCmpt);\n      }\n    });\n  }\n\n  return selCmpts;\n}\n\nexport function assembleUnitSignals(model: UnitModel, signals: any[]) {\n  forEachSelection(model, function(selCmpt, selCompiler) {\n    let name = selCmpt.name,\n        tupleExpr = selCompiler.tupleExpr(model, selCmpt),\n        modifyExpr = selCompiler.modifyExpr(model, selCmpt);\n\n    signals.push.apply(signals, selCompiler.signals(model, selCmpt));\n\n    forEachTransform(selCmpt, function(txCompiler) {\n      if (txCompiler.signals) {\n        signals = txCompiler.signals(model, selCmpt, signals);\n      }\n      if (txCompiler.modifyExpr) {\n        modifyExpr = txCompiler.modifyExpr(model, selCmpt, modifyExpr);\n      }\n    });\n\n    signals.push({\n      name: name + TUPLE,\n      on: [{\n        events: {signal: name},\n        update: `{unit: unit.datum && unit.datum._id, ${tupleExpr}}`\n      }]\n    }, {\n      name: name + MODIFY,\n      on: [{\n        events: {signal: name},\n        update: `modify(${stringValue(name + STORE)}, ${modifyExpr})`\n      }]\n    });\n  });\n\n  return signals;\n}\n\nexport function assembleTopLevelSignals(model: Model) {\n  let signals:any[] = [{\n    name: 'unit',\n    value: {},\n    on: [{events: 'mousemove', update: 'group()._id ? group() : unit'}]\n  }];\n\n  forEachSelection(model, function(selCmpt, selCompiler) {\n    if (selCompiler.topLevelSignals) {\n      signals.push.apply(signals, selCompiler.topLevelSignals(model, selCmpt));\n    }\n\n    forEachTransform(selCmpt, function(txCompiler) {\n      if (txCompiler.topLevelSignals) {\n        signals = txCompiler.topLevelSignals(model, selCmpt, signals);\n      }\n    });\n  });\n\n  return signals;\n}\n\nexport function assembleUnitData(model: UnitModel, data: VgData[]): VgData[] {\n  return data\n    .concat(Object.keys(model.component.selection)\n      .map(function(k: string) {\n        return {name: k + STORE};\n      }));\n}\n\nexport function assembleUnitMarks(model: UnitModel, marks: any[]): any[] {\n  let clippedGroup = false,\n      selMarks = marks;\n  forEachSelection(model, function(selCmpt, selCompiler) {\n    selMarks = selCompiler.marks ? selCompiler.marks(model, selCmpt, selMarks) : selMarks;\n    forEachTransform(selCmpt, function(txCompiler) {\n      clippedGroup = clippedGroup || txCompiler.clippedGroup;\n      if (txCompiler.marks) {\n        selMarks = txCompiler.marks(model, selCmpt, marks, selMarks);\n      }\n    });\n  });\n\n  if (clippedGroup) {\n    selMarks = [{\n      type: 'group',\n      encode: {\n        enter: {\n          width: {field: {group: 'width'}},\n          height: {field: {group: 'height'}},\n          fill: {value: 'transparent'},\n          clip: {value: true}\n        }\n      },\n      marks: selMarks\n    }];\n  }\n\n  return selMarks;\n}\n\nlet PREDICATES_OPS = {\n  'single': '\"intersect\", \"all\"',\n  'independent': '\"intersect\", \"unit\"',\n  'union': '\"union\", \"all\"',\n  'union_others': '\"union\", \"others\"',\n  'intersect': '\"intersect\", \"all\"',\n  'intersect_others': '\"intersect\", \"others'\n};\n\nexport function predicate(selCmpt: SelectionComponent, datum?: string): string {\n  const store = stringValue(selCmpt.name + STORE),\n        op = PREDICATES_OPS[selCmpt.resolve];\n  datum = datum || 'datum';\n  return compiler(selCmpt).predicate + `(${store}, parent._id, ${datum}, ${op})`;\n}\n\n// Utility functions\n\nfunction forEachSelection(model: Model, cb: (selCmpt: SelectionComponent, selCompiler: SelectionCompiler) => void) {\n  let selections = model.component.selection;\n  for (let name in selections) {\n    if (selections.hasOwnProperty(name)) {\n      let sel = selections[name];\n      cb(sel, compiler(sel));\n    }\n  }\n}\n\nfunction compiler(selCmpt: SelectionComponent): SelectionCompiler {\n  switch (selCmpt.type) {\n    case 'single':\n      return singleCompiler;\n    case 'multi':\n      return multiCompiler;\n    case 'interval':\n      return intervalCompiler;\n  }\n  return null;\n}\n\nexport function invert(model: UnitModel, selCmpt: SelectionComponent, channel: Channel, expr: string) {\n  let scale = stringValue(model.scaleName(channel));\n  return selCmpt.domain === 'data' ? `invert(${scale}, ${expr})` : expr;\n}\n\nexport function channelSignalName(selCmpt: SelectionComponent, channel: Channel) {\n  return selCmpt.name + '_' + channel;\n}\n","import {TUPLE, STORE, SelectionCompiler} from './selection';\nimport multi from './multi';\nimport {stringValue} from '../../util';\n\nconst single:SelectionCompiler = {\n  predicate: multi.predicate,\n\n  signals: multi.signals,\n\n  topLevelSignals: function(model, selCmpt) {\n    let name = selCmpt.name;\n    return [{\n      name: name,\n      update: `data(${stringValue(name + STORE)})[0]`\n    }];\n  },\n\n  tupleExpr: function(model, selCmpt) {\n    let name = selCmpt.name, values = `${name}.values`;\n    return `fields: ${name}.fields, values: ${values}, ` +\n      selCmpt.project.map(function(p, i) {\n        return `${p.field}: ${values}[${i}]`;\n      }).join(', ');\n  },\n\n  modifyExpr: function(model, selCmpt) {\n    return selCmpt.name + TUPLE + ', true';\n  }\n};\n\nexport {single as default};\n","import {TransformCompiler} from './transforms';\nimport {stringValue} from '../../../util';\n\nconst inputBindings:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.type === 'single' && selCmpt.bind && selCmpt.bind !== 'scales';\n  },\n\n  topLevelSignals: function(model, selCmpt, signals) {\n    let name = selCmpt.name,\n        proj = selCmpt.project,\n        bind = selCmpt.bind,\n        datum = '(item().isVoronoi ? datum.datum : datum)';\n\n    proj.forEach(function(p) {\n      signals.unshift({\n        name: name + id(p.field),\n        value: '',\n        on: [{\n          events: selCmpt.events,\n          update: `${datum}[${stringValue(p.field)}]`\n        }],\n        bind: bind[p.field] || bind[p.encoding] || bind\n      });\n    });\n\n    return signals;\n  },\n\n  signals: function(model, selCmpt, signals) {\n    let name = selCmpt.name, proj = selCmpt.project,\n        signal = signals.filter((s) => s.name === name)[0],\n        fields = proj.map((p) => stringValue(p.field)).join(', '),\n        values = proj.map((p) => name + id(p.field)).join(', ');\n\n    signal.update = `{fields: [${fields}], values: [${values}]}`;\n    delete signal.value;\n    delete signal.on;\n\n    return signals;\n  }\n};\n\nexport {inputBindings as default};\n\nfunction id(str: string) {\n  return '_' + str.replace(/\\W/g, '_');\n}\n","import {TransformCompiler} from './transforms';\n\nconst VORONOI = 'voronoi';\n\nconst nearest:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.nearest !== undefined && selCmpt.nearest !== false;\n  },\n\n  marks: function(model, selCmpt, marks, selMarks) {\n    let mark = marks[0],\n        index = selMarks.indexOf(mark),\n        isPathgroup = mark.name === model.getName('pathgroup'),\n        exists = ((m: any) => m.name && m.name.indexOf(VORONOI) >= 0),\n        cellDef = {\n          name: model.getName(VORONOI),\n          type: 'path',\n          from: {data: model.getName('marks')},\n          encode: {\n            enter: {\n              fill: {value: 'transparent'},\n              strokeWidth: {value: 0.35},\n              stroke: {value: 'transparent'},\n              isVoronoi: {value: true}\n            }\n          },\n          transform: [{\n            type: 'voronoi',\n            x: 'datum.x',\n            y: 'datum.y',\n            size: [{signal: 'width'}, {signal: 'height'}]\n          }]\n        };\n\n    if (isPathgroup && !mark.marks.filter(exists).length) {\n      mark.marks.push(cellDef);\n      selMarks.splice(index, 1, mark);\n    } else if (!isPathgroup && !selMarks.filter(exists).length) {\n      selMarks.splice(index + 1, 0, cellDef);\n    }\n\n    return selMarks;\n  }\n};\n\nexport {nearest as default};\n","import {Channel} from '../../../channel';\nimport {SelectionDef} from '../../../selection';\nimport {TransformCompiler} from './transforms';\n\nconst project:TransformCompiler = {\n  has: function(selDef: SelectionDef) {\n    return selDef.fields !== undefined || selDef.encodings !== undefined;\n  },\n\n  parse: function(model, selDef, selCmpt) {\n    let fields = {};\n    // TODO: find a possible channel mapping for these fields.\n    (selDef.fields || []).forEach((f) => fields[f] = null);\n    (selDef.encodings || []).forEach((e: Channel) => fields[model.field(e)] = e);\n\n    let projection = selCmpt.project || (selCmpt.project = []);\n    for (let field in fields) {\n      if (fields.hasOwnProperty(field)) {\n        projection.push({field: field, encoding: fields[field]});\n      }\n    }\n  }\n};\n\nexport {project as default};\n","import {TransformCompiler} from './transforms';\nimport {warn} from '../../../log';\nimport {hasContinuousDomain} from '../../../scale';\nimport {Channel} from '../../../channel';\nimport {TUPLE, MODIFY, channelSignalName} from '../selection';\nimport {UnitModel} from '../../unit';\nimport {SIZE as INTERVAL_SIZE} from '../interval';\nimport {stringValue} from '../../../util';\n\nconst scaleBindings:TransformCompiler = {\n  clippedGroup: true,\n\n  has: function(selCmpt) {\n    return selCmpt.type === 'interval' && selCmpt.bind && selCmpt.bind === 'scales';\n  },\n\n  parse: function(model, selDef, selCmpt) {\n    let scales = model.component.scales,\n        bound:Channel[] = selCmpt.scales = [];\n\n    selCmpt.project.forEach(function(p) {\n      let channel = p.encoding,\n          scale = scales[channel] && scales[channel].main;\n\n      if (!scale || !hasContinuousDomain(scale.type)) {\n        warn('Scale bindings are currently only supported for scales with continuous domains.');\n        return;\n      }\n\n      scale.domainRaw = {signal: channelSignalName(selCmpt, channel)};\n      bound.push(channel);\n    });\n  },\n\n  topLevelSignals: function(model, selCmpt, signals) {\n    return signals.concat(selCmpt.scales.map((channel) => {\n      return {name: channelSignalName(selCmpt, channel)};\n    }));\n  },\n\n  signals: function(model, selCmpt, signals) {\n    let name = selCmpt.name;\n    signals = signals.filter(function(s) {\n      return s.name !== name + INTERVAL_SIZE &&\n        s.name !== name + TUPLE && s.name !== MODIFY;\n    });\n\n    selCmpt.scales.forEach(function(channel) {\n      let signal = signals.filter((s) => s.name === name + '_' + channel)[0];\n      signal.push = 'outer';\n      delete signal.value;\n      delete signal.update;\n    });\n\n    return signals;\n  }\n};\n\nexport {scaleBindings as default};\n\nexport function domain(model: UnitModel, channel: Channel) {\n  let scale = stringValue(model.scaleName(channel));\n  return `domain(${scale})`;\n}\n","import {TransformCompiler} from './transforms';\nimport {TUPLE} from '../selection';\n\nconst TOGGLE = '_toggle';\n\nconst toggle:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.toggle !== undefined && selCmpt.toggle !== false;\n  },\n\n  signals: function(model, selCmpt, signals) {\n    return signals.concat({\n      name: selCmpt.name + TOGGLE,\n      value: false,\n      on: [{events: selCmpt.events, update: selCmpt.toggle}]\n    });\n  },\n\n  modifyExpr: function(model, selCmpt, expr) {\n    let tpl = selCmpt.name + TUPLE,\n        signal = selCmpt.name + TOGGLE;\n\n    return `${signal} ? null : ${tpl}, ` +\n      `${signal} ? null : true, ` +\n      `${signal} ? ${tpl} : null`;\n  }\n};\n\nexport {toggle as default};\n","import {Model} from '../../model';\nimport {UnitModel} from '../../unit';\nimport {SelectionDef} from '../../../selection';\nimport {SelectionComponent} from '../selection';\nimport {Dict} from '../../../util';\n\nexport interface TransformCompiler {\n  has: (selCmpt: SelectionComponent | SelectionDef) => boolean;\n  parse?: (model: UnitModel, def: SelectionDef, selCmpt: SelectionComponent) => void;\n  signals?: (model: UnitModel, selCmpt: SelectionComponent, signals: any[]) => any[];\n  topLevelSignals?: (model: Model, selCmpt: SelectionComponent, signals: any[]) => any[];\n  // tupleExpr?: (model: UnitModel, selCmpt: SelectionComponent, expr: string) => string;\n  modifyExpr?: (model: UnitModel, selCmpt: SelectionComponent, expr: string) => string;\n  marks?: (model: UnitModel, selCmpt:SelectionComponent, marks: any[], selMarks: any[]) => any[];\n  clippedGroup?: boolean;\n}\n\nimport project from './project';\nimport toggle from './toggle';\nimport translate from './translate';\nimport zoom from './zoom';\nimport scales from './scales';\nimport inputs from './inputs';\nimport nearest from './nearest';\nconst compilers: Dict<TransformCompiler> = {project, toggle, scales,\n  translate, zoom, inputs, nearest};\n\nexport function forEachTransform(selCmpt: SelectionComponent, cb: (tx: TransformCompiler) => void) {\n  for (let t in compilers) {\n    if (compilers[t].has(selCmpt)) {\n      cb(compilers[t]);\n    }\n  }\n}\n","import parseSelector from 'vega-parser/src/parsers/event-selector';\nimport {UnitModel} from './../../unit';\nimport {SelectionComponent} from '../selection';\nimport {X, Y, Channel} from '../../../channel';\nimport {stringValue} from '../../../util';\nimport {TransformCompiler} from './transforms';\nimport {default as scalesCompiler, domain} from './scales';\nimport {projections as intervalProjections, SIZE as INTERVAL_SIZE, BRUSH as INTERVAL_BRUSH} from '../interval';\n\nconst ANCHOR = '_translate_anchor',\n      DELTA  = '_translate_delta';\n\nconst translate:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.type === 'interval' && selCmpt.translate !== undefined && selCmpt.translate !== false;\n  },\n\n  signals: function(model, selCmpt, signals) {\n    let name = selCmpt.name,\n        scales = scalesCompiler.has(selCmpt),\n        size = scales ? 'unit' : name + INTERVAL_SIZE,\n        anchor = name + ANCHOR,\n        events = parseSelector(selCmpt.translate, 'scope'),\n        {x, y} = intervalProjections(selCmpt);\n\n    if (!scales) {\n      events = events.map((e) => (e.between[0].markname = name + INTERVAL_BRUSH, e));\n    }\n\n    signals.push({\n      name: anchor,\n      value: {},\n      on: [{\n        events: events.map((e) => e.between[0]),\n        update: '{x: x(unit), y: y(unit), ' +\n          `width: ${size}.width, height: ${size}.height, ` +\n\n          (x !== null ? 'extent_x: ' + (scales ? domain(model, X) :\n              `slice(${name}_x)`) + ', ' : '') +\n\n          (y !== null ? 'extent_y: ' + (scales ? domain(model, Y) :\n              `slice(${name}_y)`) + ', ' : '') + '}'\n      }]\n    }, {\n      name: name + DELTA,\n      value: {},\n      on: [{\n        events: events,\n        update: `{x: x(unit) - ${anchor}.x, y: y(unit) - ${anchor}.y}`\n      }]\n    });\n\n    if (x !== null) {\n      onDelta(model, selCmpt, X, 'width', signals);\n    }\n\n    if (y !== null) {\n      onDelta(model, selCmpt, Y, 'height', signals);\n    }\n\n    return signals;\n  }\n};\n\nexport {translate as default};\n\nfunction getSign(selCmpt: SelectionComponent, channel: Channel) {\n  let s = channel === X ? '+' : '-';\n  if (scalesCompiler.has(selCmpt)) {\n    s = s === '+' ? '-' : '+';\n  }\n  return s;\n}\n\nfunction onDelta(model: UnitModel, selCmpt: SelectionComponent, channel: Channel, size: string, signals: any[]) {\n  let name = selCmpt.name,\n      signal:any = signals.filter((s:any) => s.name === name + '_' + channel)[0],\n      anchor = name + ANCHOR,\n      delta  = name + DELTA,\n      scale  = stringValue(model.scaleName(channel)),\n      extent = `.extent_${channel}`,\n      sign = getSign(selCmpt, channel),\n      offset = `${sign} abs(span(${anchor}${extent})) * ` +\n        `${delta}.${channel} / ${anchor}.${size}`,\n      range = `[${anchor}${extent}[0] ${offset}, ` +\n        `${anchor}${extent}[1] ${offset}]`,\n      lo = `invert(${scale}` + (channel === X ? ', 0' : `, unit.${size}`) + ')',\n      hi = `invert(${scale}` + (channel === X ? `, unit.${size}` : ', 0') + ')';\n\n  signal.on.push({\n    events: {signal: delta},\n    update: scalesCompiler.has(selCmpt) ? range : `clampRange(${range}, ${lo}, ${hi})`\n  });\n}\n","import parseSelector from 'vega-parser/src/parsers/event-selector';\nimport {UnitModel} from './../../unit';\nimport {SelectionComponent} from '../selection';\nimport {X, Y, Channel} from '../../../channel';\nimport {stringValue} from '../../../util';\nimport {TransformCompiler} from './transforms';\nimport {default as scalesCompiler, domain} from './scales';\nimport {projections as intervalProjections, SIZE as INTERVAL_SIZE, BRUSH as INTERVAL_BRUSH} from '../interval';\n\nconst ANCHOR = '_zoom_anchor',\n      DELTA  = '_zoom_delta';\n\nconst zoom:TransformCompiler = {\n  has: function(selCmpt) {\n    return selCmpt.type === 'interval' && selCmpt.zoom !== undefined && selCmpt.zoom !== false;\n  },\n\n  signals: function(model, selCmpt, signals) {\n    let name = selCmpt.name,\n        delta = name + DELTA,\n        events = parseSelector(selCmpt.zoom, 'scope'),\n        {x, y} = intervalProjections(selCmpt),\n        sx = stringValue(model.scaleName(X)),\n        sy = stringValue(model.scaleName(Y));\n\n    if (!scalesCompiler.has(selCmpt)) {\n      events = events.map((e) => (e.markname = name + INTERVAL_BRUSH, e));\n    }\n\n    signals.push({\n      name: name + ANCHOR,\n      on: [{\n        events: events,\n        update: `{x: invert(${sx}, x(unit)), y: invert(${sy}, y(unit))}`\n      }]\n    }, {\n      name: delta,\n      on: [{\n        events: events,\n        force: true,\n        update: 'pow(1.001, event.deltaY * pow(16, event.deltaMode))'\n      }]\n    });\n\n    if (x !== null) {\n      onDelta(model, selCmpt, 'x', 'width', signals);\n    }\n\n    if (y !== null) {\n      onDelta(model, selCmpt, 'y', 'height', signals);\n    }\n\n    let size = signals.filter((s:any) => s.name === name + INTERVAL_SIZE);\n    if (size.length) {\n      let sname = size[0].name;\n      size[0].on.push({\n        events: {signal: delta},\n        update: `{x: ${sname}.x, y: ${sname}.y, ` +\n          `width: ${sname}.width * ${delta} , ` +\n          `height: ${sname}.height * ${delta}}`\n      });\n    }\n\n    return signals;\n  }\n};\n\nexport {zoom as default};\n\nfunction onDelta(model: UnitModel, selCmpt: SelectionComponent, channel: Channel, size: string, signals: any[]) {\n  let name = selCmpt.name,\n      signal:any = signals.filter((s:any) => s.name === name + '_' + channel)[0],\n      scales = scalesCompiler.has(selCmpt),\n      base = scales ? domain(model, channel) : signal.name,\n      anchor = `${name}${ANCHOR}.${channel}`,\n      delta  = name + DELTA,\n      scale  = stringValue(model.scaleName(channel)),\n      range  = `[${anchor} + (${base}[0] - ${anchor}) * ${delta}, ` +\n        `${anchor} + (${base}[1] - ${anchor}) * ${delta}]`,\n      lo = `invert(${scale}` + (channel === X ? ', 0' : `, unit.${size}`) + ')',\n      hi = `invert(${scale}` + (channel === X ? `, unit.${size}` : ', 0') + ')';\n\n  signal.on.push({\n    events: {signal: delta},\n    update: scales ? range : `clampRange(${range}, ${lo}, ${hi})`\n  });\n}\n","\n\nimport {Axis, VlOnlyAxisBase, VL_ONLY_AXIS_PROPERTIES} from '../axis';\nimport {X, Y, X2, Y2, Channel, UNIT_CHANNELS,  UNIT_SCALE_CHANNELS, NONSPATIAL_SCALE_CHANNELS} from '../channel';\nimport {defaultConfig, Config, CellConfig} from '../config';\nimport {SOURCE, SUMMARY} from '../data';\nimport {Encoding, dropInvalidFieldDefs} from '../encoding';\nimport * as vlEncoding from '../encoding'; // TODO: remove\nimport {FieldDef, FieldRefOption, field, isFieldDef} from '../fielddef';\nimport {Legend} from '../legend';\nimport {Mark, MarkDef, TEXT as TEXT_MARK, FILL_STROKE_CONFIG, isMarkDef} from '../mark';\nimport {Scale, ScaleConfig, hasDiscreteDomain} from '../scale';\nimport {UnitSpec} from '../spec';\nimport {duplicate, extend, mergeDeep, Dict} from '../util';\nimport {VgData} from '../vega.schema';\n\nimport {parseAxisComponent} from './axis/parse';\nimport {applyConfig} from './common';\nimport {assembleData, parseUnitData} from './data/data';\nimport {parseLegendComponent} from './legend/parse';\nimport {assembleLayout, parseUnitLayout} from './layout';\nimport {Model} from './model';\nimport {parseMark} from './mark/mark';\nimport initScale from './scale/init';\nimport parseScaleComponent from './scale/parse';\nimport {stack, StackProperties} from '../stack';\nimport {SelectionDef} from '../selection';\nimport {parseUnitSelection, assembleUnitSignals, assembleUnitData as assembleSelectionData, assembleUnitMarks as assembleSelectionMarks} from './selection/selection';\nimport {initMarkDef, initEncoding} from './mark/init';\n\n/**\n * Internal model of Vega-Lite specification for the compiler.\n */\nexport class UnitModel extends Model {\n  /**\n   * Fixed width for the unit visualization.\n   * If undefined (e.g., for ordinal scale), the width of the\n   * visualization will be calculated dynamically.\n   */\n  public readonly width: number;\n\n  /**\n   * Fixed height for the unit visualization.\n   * If undefined (e.g., for ordinal scale), the height of the\n   * visualization will be calculated dynamically.\n   */\n  public readonly height: number;\n\n  public readonly markDef: MarkDef & {filled: boolean};\n  public readonly encoding: Encoding;\n\n  protected readonly selection: Dict<SelectionDef> = {};\n  protected readonly scales: Dict<Scale> = {};\n  protected readonly axes: Dict<Axis> = {};\n  protected readonly legends: Dict<Legend> = {};\n  public readonly config: Config;\n  public readonly stack: StackProperties;\n  public children: Model[] = [];\n\n  constructor(spec: UnitSpec, parent: Model, parentGivenName: string) {\n    super(spec, parent, parentGivenName);\n\n    // use top-level width / height or parent's top-level width / height\n\n    // FIXME: once facet supports width/height, this is no longer correct!\n    const providedWidth = spec.width !== undefined ? spec.width :\n      parent ? parent['width'] : undefined; // only exists if parent is layer\n    const providedHeight = spec.height !== undefined ? spec.height :\n      parent ? parent['height'] : undefined; // only exists if parent is layer\n\n    const mark = isMarkDef(spec.mark) ? spec.mark.type : spec.mark;\n    const encoding = this.encoding = dropInvalidFieldDefs(mark, spec.encoding || {});\n\n    // TODO?: ideally we should use config only inside this constructor\n    const config = this.config = this.initConfig(spec.config, parent);\n\n    // calculate stack properties\n    this.stack = stack(mark, encoding, config.stack);\n    this.scales = this.initScales(mark, encoding, config, providedWidth, providedHeight);\n\n    this.markDef = initMarkDef(spec.mark, encoding, this.scales, config);\n    this.encoding = initEncoding(mark, encoding, this.stack, config);\n\n    this.axes = this.initAxes(encoding, config);\n    this.legends = this.initLegend(encoding, config);\n\n    // Selections will be initialized upon parse.\n    this.selection = spec.selection;\n\n    // width / height\n    const {width = this.width, height = this.height} = this.initSize(mark, this.scales,\n      providedWidth,\n      providedHeight,\n      config.cell, config.scale\n    );\n    this.width = width;\n    this.height = height;\n  }\n\n\n  /**\n   * Init config by merging config from parent and, if applicable, from facet config\n   */\n  private initConfig(specConfig: Config, parent: Model) {\n    let config = mergeDeep(duplicate(defaultConfig), parent ? parent.config : {}, specConfig);\n    let hasFacetParent = false;\n    while (parent !== null) {\n      if (parent.isFacet()) {\n        hasFacetParent = true;\n        break;\n      }\n      parent = parent.parent;\n    }\n\n    if (hasFacetParent) {\n      config.cell = extend({}, config.cell, config.facet.cell);\n    }\n    return config;\n  }\n\n  private initScales(mark: Mark, encoding: Encoding, config: Config, topLevelWidth:number, topLevelHeight: number): Dict<Scale> {\n    const xyRangeSteps: number[] = [];\n\n    return UNIT_SCALE_CHANNELS.reduce((scales, channel) => {\n      if (vlEncoding.channelHasField(encoding, channel) ||\n          (channel === X && vlEncoding.channelHasField(encoding, X2)) ||\n          (channel === Y && vlEncoding.channelHasField(encoding, Y2))\n        ) {\n        const scale = scales[channel] = initScale(\n          channel, encoding[channel], config, mark,\n          channel === X ? topLevelWidth : channel === Y ? topLevelHeight : undefined,\n          xyRangeSteps // for determine point / bar size\n        );\n\n        if (channel === X || channel === Y) {\n          if (scale.rangeStep) {\n            xyRangeSteps.push(scale.rangeStep);\n          }\n        }\n      }\n      return scales;\n    }, {});\n  }\n\n  // TODO: consolidate this with scale?  Current scale range is in parseScale (later),\n  // but not in initScale because scale range depends on size,\n  // but size depends on scale type and rangeStep\n  private initSize(mark: Mark, scale: Dict<Scale>, width: number, height: number, cellConfig: CellConfig, scaleConfig: ScaleConfig) {\n    if (width === undefined) {\n      if (scale[X]) {\n        if (!hasDiscreteDomain(scale[X].type) || !scale[X].rangeStep) {\n          width = cellConfig.width;\n        } // else: Do nothing, use dynamic width.\n      } else { // No scale X\n        if (mark === TEXT_MARK) {\n          // for text table without x/y scale we need wider rangeStep\n          width = scaleConfig.textXRangeStep;\n        } else {\n          if (typeof scaleConfig.rangeStep === 'string') {\n            throw new Error('_initSize does not handle string rangeSteps');\n          }\n          width = scaleConfig.rangeStep;\n        }\n      }\n    }\n\n    if (height === undefined) {\n      if (scale[Y]) {\n        if (!hasDiscreteDomain(scale[Y].type) || !scale[Y].rangeStep) {\n          height = cellConfig.height;\n        } // else: Do nothing, use dynamic height .\n      } else {\n        if (typeof scaleConfig.rangeStep === 'string') {\n          throw new Error('_initSize does not handle string rangeSteps');\n        }\n        height = scaleConfig.rangeStep;\n      }\n    }\n\n    return {width, height};\n  }\n\n  private initAxes(encoding: Encoding, config: Config): Dict<Axis> {\n    return [X, Y].reduce(function(_axis, channel) {\n      // Position Axis\n\n      const channelDef = encoding[channel];\n      if (isFieldDef(channelDef) ||\n          (channel === X && isFieldDef(encoding.x2)) ||\n          (channel === Y && isFieldDef(encoding.y2))) {\n\n        const axisSpec = isFieldDef(channelDef) ? channelDef.axis : null;\n\n        // We no longer support false in the schema, but we keep false here for backward compatability.\n        if (axisSpec !== null && axisSpec !== false) {\n          let vlOnlyAxisProperties: VlOnlyAxisBase = {};\n          VL_ONLY_AXIS_PROPERTIES.forEach(function(property) {\n            if (config.axis[property] !== undefined) {\n              vlOnlyAxisProperties[property] = config.axis[property];\n            }\n          });\n          _axis[channel] = {\n            ...vlOnlyAxisProperties,\n            ...axisSpec\n          };\n        }\n      }\n      return _axis;\n    }, {});\n  }\n\n  private initLegend(encoding: Encoding, config: Config): Dict<Legend> {\n    return NONSPATIAL_SCALE_CHANNELS.reduce(function(_legend, channel) {\n      const channelDef = encoding[channel];\n      if (isFieldDef(channelDef)) {\n        const legendSpec = channelDef.legend;\n        if (legendSpec !== null && legendSpec !== false) {\n          _legend[channel] = {...legendSpec};\n        }\n      }\n      return _legend;\n    }, {});\n  }\n\n  public parseData() {\n    this.component.data = parseUnitData(this);\n  }\n\n  public parseSelection() {\n    this.component.selection = parseUnitSelection(this, this.selection);\n  }\n\n  public parseLayoutData() {\n    this.component.layout = parseUnitLayout(this);\n  }\n\n  public parseScale() {\n    this.component.scales = parseScaleComponent(this);\n  }\n\n  public parseMark() {\n    this.component.mark = parseMark(this);\n  }\n\n  public parseAxis() {\n    this.component.axes = parseAxisComponent(this, [X, Y]);\n  }\n\n  public parseAxisGroup(): void {\n    return null;\n  }\n\n  public parseGridGroup(): void {\n    return null;\n  }\n\n  public parseLegend() {\n    this.component.legends = parseLegendComponent(this);\n  }\n\n  public assembleSignals(signals: any[]): any[] {\n    return assembleUnitSignals(this, signals);\n  }\n\n  public assembleSelectionData(data: VgData[]): VgData[] {\n    return assembleSelectionData(this, data);\n  }\n\n  public assembleData(data: VgData[]): VgData[] {\n    return assembleData(this, data);\n  }\n\n  public assembleLayout(layoutData: VgData[]): VgData[] {\n    return assembleLayout(this, layoutData);\n  }\n\n  public assembleMarks() {\n    return assembleSelectionMarks(this, this.component.mark);\n  }\n\n  public assembleParentGroupProperties(cellConfig: CellConfig) {\n    return applyConfig({}, cellConfig, FILL_STROKE_CONFIG.concat(['clip']));\n  }\n\n  public channels() {\n    return UNIT_CHANNELS;\n  }\n\n  protected getMapping() {\n    return this.encoding;\n  }\n\n  public toSpec(excludeConfig?: any, excludeData?: any) {\n    const encoding = duplicate(this.encoding);\n    let spec: any;\n\n    spec = {\n      mark: this.markDef,\n      encoding: encoding\n    };\n\n    if (!excludeConfig) {\n      spec.config = duplicate(this.config);\n    }\n\n    if (!excludeData) {\n      spec.data = duplicate(this.data);\n    }\n\n    // remove defaults\n    return spec;\n  }\n\n  public mark(): Mark {\n    return this.markDef.type;\n  }\n\n  public channelHasField(channel: Channel) {\n    return vlEncoding.channelHasField(this.encoding, channel);\n  }\n\n  public fieldDef(channel: Channel): FieldDef {\n    // TODO: remove this || {}\n    // Currently we have it to prevent null pointer exception.\n    return this.encoding[channel] || {};\n  }\n\n  /** Get \"field\" reference for vega */\n  public field(channel: Channel, opt: FieldRefOption = {}) {\n    const fieldDef = this.fieldDef(channel);\n\n    if (fieldDef.bin) { // bin has default suffix that depends on scaleType\n      opt = extend({\n        binSuffix: hasDiscreteDomain(this.scale(channel).type) ? 'range' : 'start'\n      }, opt);\n    }\n\n    return field(fieldDef, opt);\n  }\n\n  public dataTable() {\n    return this.dataName(vlEncoding.isAggregate(this.encoding) ? SUMMARY : SOURCE);\n  }\n\n  public isUnit() {\n    return true;\n  }\n}\n","import {Encoding} from './encoding';\nimport {MarkDef, isMarkDef} from './mark';\nimport {GenericUnitSpec, LayerSpec} from './spec';\n\nexport const ERRORBAR: 'error-bar' = 'error-bar';\nexport type ERRORBAR = typeof ERRORBAR;\n\nexport type UnitNormalizer = (spec: GenericUnitSpec<any, any>)=> LayerSpec;\n\n/**\n * Registry index for all composite mark's normalizer\n */\nconst normalizerRegistry: {[mark: string]: UnitNormalizer} = {};\n\nexport function add(mark: string, normalizer: UnitNormalizer) {\n  normalizerRegistry[mark] = normalizer;\n}\n\nexport function remove(mark: string) {\n  delete normalizerRegistry[mark];\n}\n\n/**\n * Transform a unit spec with composite mark into a normal layer spec.\n */\nexport function normalize(\n    // This GenericUnitSpec has any as Encoding because unit specs with composite mark can have additional encoding channels.\n    spec: GenericUnitSpec<string | MarkDef, any>\n  ): LayerSpec {\n\n  const mark = isMarkDef(spec.mark) ? spec.mark.type : spec.mark;\n  const normalizer = normalizerRegistry[mark];\n  if (normalizer) {\n    return normalizer(spec);\n  }\n\n  throw new Error(`Unregistered composite mark ${mark}`);\n}\n\n\nadd(ERRORBAR, (spec: GenericUnitSpec<ERRORBAR, Encoding>): LayerSpec => {\n  const {mark: _m, encoding: encoding, ...outerSpec} = spec;\n  const {size: _s, ...encodingWithoutSize} = encoding;\n  const {x2: _x2, y2: _y2, ...encodingWithoutX2Y2} = encoding;\n\n  return {\n    ...outerSpec,\n    layer: [\n      {\n        mark: 'rule',\n        encoding: encodingWithoutSize\n      },{ // Lower tick\n        mark: 'tick',\n        encoding: encodingWithoutX2Y2\n      }, { // Upper tick\n        mark: 'tick',\n        encoding: {\n          ...encodingWithoutX2Y2,\n          ...(encoding.x2 ? {x: encoding.x2} : {}),\n          ...(encoding.y2 ? {y: encoding.y2} : {})\n        }\n      }\n    ]\n  };\n});\n","import {AxisConfig, defaultAxisConfig} from './axis';\nimport {LegendConfig, defaultLegendConfig} from './legend';\nimport {MarkConfig, BarConfig, TextConfig, TickConfig} from './mark';\nimport * as mark from './mark';\nimport {ScaleConfig, defaultScaleConfig} from './scale';\nimport {StackOffset} from './stack';\nimport {Padding} from './spec';\nimport {VgRangeScheme} from './vega.schema';\nimport {SelectionConfig, defaultConfig as defaultSelectionConfig} from './selection';\n\nexport interface CellConfig {\n  width?: number;\n  height?: number;\n\n  clip?: boolean;\n\n  // FILL_STROKE_CONFIG\n  /**\n   * The fill color.\n   */\n  fill?: string;\n\n  /** The fill opacity (value between [0,1]). */\n  fillOpacity?: number;\n\n  /** The stroke color. */\n  stroke?: string;\n\n  /** The stroke opacity (value between [0,1]). */\n  strokeOpacity?: number;\n\n  /** The stroke width, in pixels. */\n  strokeWidth?: number;\n\n  /** An array of alternating stroke, space lengths for creating dashed or dotted lines. */\n  strokeDash?: number[];\n\n  /** The offset (in pixels) into which to begin drawing with the stroke dash array. */\n  strokeDashOffset?: number;\n}\n\nexport const defaultCellConfig: CellConfig = {\n  width: 200,\n  height: 200,\n  fill: 'transparent'\n};\n\nexport const defaultFacetCellConfig: CellConfig = {\n  stroke: '#ccc',\n  strokeWidth: 1\n};\n\nexport interface FacetConfig {\n  /** Facet Axis Config */\n  axis?: AxisConfig;\n\n  /** Facet Grid Config */\n  grid?: FacetGridConfig;\n\n  /** Facet Cell Config */\n  cell?: CellConfig;\n}\n\nexport interface FacetGridConfig {\n  color?: string;\n  opacity?: number;\n  offset?: number;\n}\n\nconst defaultFacetGridConfig: FacetGridConfig = {\n  color: '#000000',\n  opacity: 0.4,\n  offset: 0\n};\n\nexport const defaultFacetConfig: FacetConfig = {\n  axis: {},\n  grid: defaultFacetGridConfig,\n  cell: defaultFacetCellConfig\n};\n\nexport type AreaOverlay = 'line' | 'linepoint' | 'none';\n\nexport interface OverlayConfig {\n  /**\n   * Whether to overlay line with point.\n   */\n  line?: boolean;\n\n  /**\n   * Type of overlay for area mark (line or linepoint)\n   */\n  area?: AreaOverlay;\n\n  /**\n   * Default style for the overlayed point.\n   */\n  pointStyle?: MarkConfig;\n\n  /**\n   * Default style for the overlayed point.\n   */\n  lineStyle?: MarkConfig;\n}\n\nexport const defaultOverlayConfig: OverlayConfig = {\n  line: false,\n  pointStyle: {filled: true},\n  lineStyle: {}\n};\n\nexport type RangeConfig = (number|string)[] | VgRangeScheme | {step: number};\n\nexport interface Config {\n  // TODO: add this back once we have top-down layout approach\n  // width?: number;\n  // height?: number;\n  // padding?: number|string;\n  /**\n   * The width and height of the on-screen viewport, in pixels. If necessary, clipping and scrolling will be applied.\n   */\n  viewport?: number;\n  /**\n   * CSS color property to use as background of visualization. Default is `\"transparent\"`.\n   */\n  background?: string;\n\n  /**\n   * The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle. This can be a single number or an object with `\"top\"`, `\"left\"`, `\"right\"`, `\"bottom\"` properties.\n   *\n   * __Default value__: `5`\n   *\n   * * @minimum 0\n   */\n  padding?: Padding;\n\n  /**\n   * D3 Number format for axis labels and text tables. For example \"s\" for SI units.\n   */\n  numberFormat?: string;\n\n  /**\n   * Default datetime format for axis and legend labels. The format can be set directly on each axis and legend.\n   */\n  timeFormat?: string;\n\n  /**\n   * Default axis and legend title for count fields.\n   * @type {string}\n   */\n  countTitle?: string;\n\n  /** Cell Config */\n  cell?: CellConfig;\n\n  /** Default stack offset for stackable mark. */\n  stack?: StackOffset;\n\n  /** Mark Config */\n  mark?: MarkConfig;\n\n  // MARK-SPECIFIC CONFIGS\n  /** Area-Specific Config */\n  area?: MarkConfig;\n\n  /** Bar-Specific Config */\n  bar?: BarConfig;\n\n  /** Circle-Specific Config */\n  circle?: MarkConfig;\n\n  /** Line-Specific Config */\n  line?: MarkConfig;\n\n  /** Point-Specific Config */\n  point?: MarkConfig;\n\n  /** Rect-Specific Config */\n  rect?: MarkConfig;\n\n  /** Rule-Specific Config */\n  rule?: MarkConfig;\n\n  /** Square-Specific Config */\n  square?: MarkConfig;\n\n  /** Text-Specific Config */\n  text?: TextConfig;\n\n  /** Tick-Specific Config */\n  tick?: TickConfig;\n\n  // OTHER CONFIG\n\n  // FIXME: move this to line/area\n  /** Mark Overlay Config */\n  overlay?: OverlayConfig;\n\n  /** Scale Config */\n  scale?: ScaleConfig;\n\n  /**\n   * Scale range config, or properties defining named range arrays\n   * that can be used within scale range definitions\n   * (such as `{\"type\": \"ordinal\", \"range\": \"category\"}`).\n   * For default range that Vega-Lite adopts from Vega, see https://github.com/vega/vega-parser#scale-range-properties.\n   */\n  range?: {[name: string]: RangeConfig};\n\n  /** Axis Config */\n  axis?: AxisConfig;\n\n  /** Legend Config */\n  legend?: LegendConfig;\n\n  /** Facet Config */\n  facet?: FacetConfig;\n\n  /** Selection Config */\n  selection?: SelectionConfig;\n}\n\nexport const defaultConfig: Config = {\n  padding: 5,\n  numberFormat: 's',\n  timeFormat: '%b %d, %Y',\n  countTitle: 'Number of Records',\n\n  cell: defaultCellConfig,\n\n  mark: mark.defaultMarkConfig,\n  area: {},\n  bar: mark.defaultBarConfig,\n  circle: {},\n  line: {},\n  point: {},\n  rect: {},\n  rule: {},\n  square: {},\n  text: mark.defaultTextConfig,\n  tick: mark.defaultTickConfig,\n\n  overlay: defaultOverlayConfig,\n  scale: defaultScaleConfig,\n  axis: defaultAxisConfig,\n  legend: defaultLegendConfig,\n\n  facet: defaultFacetConfig,\n\n  selection: defaultSelectionConfig\n};\n","/*\n * Constants and utilities for data.\n */\n\nexport interface DataFormat {\n  /**\n   * Type of input data: `\"json\"`, `\"csv\"`, `\"tsv\"`.\n   * The default format type is determined by the extension of the file url.\n   * If no extension is detected, `\"json\"` will be used by default.\n   */\n  type?: DataFormatType;\n\n  /**\n   * A collection of parsing instructions can be used to define the data types of string-valued attributes in the JSON file. Each instruction is a name-value pair, where the name is the name of the attribute, and the value is the desired data type (one of `\"number\"`, `\"boolean\"` or `\"date\"`). For example, `\"parse\": {\"modified_on\":\"date\"}` ensures that the `modified_on` value in each row of the input data is parsed as a Date value. (See Datalib's [`dl.read.types` method](https://github.com/vega/datalib/wiki/Import#dl_read_types) for more information.)\n   */\n  parse?: any;\n\n  /**\n   * JSON only) The JSON property containing the desired data.\n   * This parameter can be used when the loaded JSON file may have surrounding structure or meta-data.\n   * For example `\"property\": \"values.features\"` is equivalent to retrieving `json.values.features`\n   * from the loaded JSON object.\n   */\n  property?: string;\n\n  /**\n   * The name of the TopoJSON object set to convert to a GeoJSON feature collection.\n   * For example, in a map of the world, there may be an object set named `\"countries\"`.\n   * Using the feature property, we can extract this set and generate a GeoJSON feature object for each country.\n   */\n  feature?: string;\n  /**\n   * The name of the TopoJSON object set to convert to a mesh.\n   * Similar to the `feature` option, `mesh` extracts a named TopoJSON object set.\n   *  Unlike the `feature` option, the corresponding geo data is returned as a single, unified mesh instance, not as individual GeoJSON features.\n   * Extracting a mesh is useful for more efficiently drawing borders or other geographic elements that you do not need to associate with specific regions such as individual countries, states or counties.\n   */\n  mesh?: string;\n}\n\nexport type DataFormatType = 'json' | 'csv' | 'tsv' | 'topojson';\n\nexport type Data = UrlData | InlineData | NamedData;\n\nexport interface UrlData {\n  /**\n   * An object that specifies the format for the data file or values.\n   */\n  format?: DataFormat;\n\n  /**\n   * A URL from which to load the data set. Use the format.type property\n   * to ensure the loaded data is correctly parsed.\n   */\n  url: string;\n}\n\nexport interface InlineData {\n  /**\n   * Pass array of objects instead of a url to a file.\n   */\n  values: any[];\n}\n\nexport interface NamedData {\n  /**\n   * Provide a placeholder name and bind data at runtime.\n   */\n  name: string;\n}\n\nexport function isUrlData(data: Data): data is UrlData {\n  return !!data['url'];\n}\n\nexport function isInlineData(data: Data): data is InlineData {\n  return !!data['values'];\n}\n\nexport function isNamedData(data: Data): data is NamedData {\n  return !!data['name'];\n}\n\nexport type DataSourceType = 'source' | 'summary' | 'stacked' | 'layout';\n\nexport const SUMMARY: 'summary' = 'summary';\nexport const SOURCE: 'source' = 'source';\nexport const STACKED: 'stacked' = 'stacked';\nexport const LAYOUT: 'layout' = 'layout';\n","// DateTime definition object\n\nimport {duplicate, keys, isNumber} from './util';\nimport * as log from './log';\n\n/*\n * A designated year that starts on Sunday.\n */\nconst SUNDAY_YEAR = 2006;\n\n/**\n * @minimum 1\n * @maximum 12\n * @TJS-type integer\n */\nexport type Month = number;\n\n/**\n * @minimum 1\n * @maximum 7\n */\nexport type Day = number;\n\n/**\n * Object for defining datetime in Vega-Lite Filter.\n * If both month and quarter are provided, month has higher precedence.\n * `day` cannot be combined with other date.\n * We accept string for month and day names.\n */\nexport interface DateTime {\n  /**\n   * Integer value representing the year.\n   * @TJS-type integer\n   */\n  year?: number;\n\n  /**\n   * Integer value representing the quarter of the year (from 1-4).\n   * @minimum 1\n   * @maximum 4\n   * @TJS-type integer\n   */\n  quarter?: number;\n\n  /** One of: (1) integer value representing the month from `1`-`12`. `1` represents January;  (2) case-insensitive month name (e.g., `\"January\"`);  (3) case-insensitive, 3-character short month name (e.g., `\"Jan\"`). */\n  month?: Month | string;\n\n  /**\n   * Integer value representing the date from 1-31.\n   * @minimum 1\n   * @maximum 31\n   * @TJS-type integer\n   */\n  date?: number;\n\n  /**\n   * Value representing the day of week.  This can be one of: (1) integer value -- `1` represents Monday; (2) case-insensitive day name (e.g., `\"Monday\"`);  (3) case-insensitive, 3-character short day name (e.g., `\"Mon\"`).   <br/> **Warning:** A DateTime definition object with `day`** should not be combined with `year`, `quarter`, `month`, or `date`.\n   */\n  day?: Day | string;\n\n  /**\n   * Integer value representing the hour of day from 0-23.\n   * @minimum 0\n   * @maximum 23\n   * @TJS-type integer\n   */\n  hours?: number;\n\n  /**\n   * Integer value representing minute segment of a time from 0-59.\n   * @minimum 0\n   * @maximum 59\n   * @TJS-type integer\n   */\n  minutes?: number;\n\n  /**\n   * Integer value representing second segment of a time from 0-59.\n   * @minimum 0\n   * @maximum 59\n   * @TJS-type integer\n   */\n  seconds?: number;\n\n  /**\n   * Integer value representing millisecond segment of a time.\n   * @minimum 0\n   * @maximum 999\n   * @TJS-type integer\n   */\n  milliseconds?: number;\n}\n\n\n/**\n * Internal Object for defining datetime expressions.\n * This is an expression version of DateTime.\n * If both month and quarter are provided, month has higher precedence.\n * `day` cannot be combined with other date.\n */\nexport interface DateTimeExpr {\n  year?: string;\n  quarter?: string;\n  month?: string;\n  date?: string;\n  day?: string;\n  hours?: string;\n  minutes?: string;\n  seconds?: string;\n  milliseconds?: string;\n}\n\nexport function isDateTime(o: any): o is DateTime {\n  return !!o && (!!o.year || !!o.quarter || !!o.month || !!o.date || !!o.day ||\n    !!o.hours || !!o.minutes || !!o.seconds || !!o.milliseconds);\n}\n\nexport const MONTHS = ['january', 'february', 'march', 'april', 'may', 'june', 'july', 'august', 'september', 'october', 'november', 'december'];\nexport const SHORT_MONTHS = MONTHS.map((m) => m.substr(0, 3));\n\nexport const DAYS = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];\nexport const SHORT_DAYS = DAYS.map((d) => d.substr(0,3));\n\nfunction normalizeQuarter(q: number | string) {\n  if (isNumber(q)) {\n    if (q > 4) {\n      log.warn(log.message.invalidTimeUnit('quarter', q));\n    }\n    // We accept 1-based quarter, so need to readjust to 0-based quarter\n    return (q - 1) + '';\n  } else {\n    // Invalid quarter\n    throw new Error(log.message.invalidTimeUnit('quarter', q));\n  }\n}\n\nfunction normalizeMonth(m: string | number) {\n  if (isNumber(m)) {\n    // We accept 1-based month, so need to readjust to 0-based month\n    return (m - 1) + '';\n  } else {\n    const lowerM = m.toLowerCase();\n    const monthIndex = MONTHS.indexOf(lowerM);\n    if (monthIndex !== -1) {\n      return monthIndex + ''; // 0 for january, ...\n    }\n    const shortM = lowerM.substr(0, 3);\n    const shortMonthIndex = SHORT_MONTHS.indexOf(shortM);\n    if (shortMonthIndex !== -1) {\n      return shortMonthIndex + '';\n    }\n    // Invalid month\n    throw new Error(log.message.invalidTimeUnit('month', m));\n  }\n}\n\nfunction normalizeDay(d: string | number) {\n  if (isNumber(d)) {\n    // mod so that this can be both 0-based where 0 = sunday\n    // and 1-based where 7=sunday\n    return (d % 7) + '';\n  } else {\n    const lowerD = d.toLowerCase();\n    const dayIndex = DAYS.indexOf(lowerD);\n    if (dayIndex !== -1) {\n      return dayIndex + ''; // 0 for january, ...\n    }\n    const shortD = lowerD.substr(0, 3);\n    const shortDayIndex = SHORT_DAYS.indexOf(shortD);\n    if (shortDayIndex !== -1) {\n      return shortDayIndex + '';\n    }\n    // Invalid day\n    throw new Error(log.message.invalidTimeUnit('day', d));\n  }\n}\n\nexport function timestamp(d: DateTime, normalize: boolean) {\n  const date = new Date(0, 0, 1, 0, 0, 0, 0); // start with uniform date\n\n  // FIXME support UTC\n\n  if (d.day !== undefined) {\n    if (keys(d).length > 1) {\n      log.warn(log.message.droppedDay(d));\n      d = duplicate(d);\n      delete d.day;\n    } else {\n      // Use a year that has 1/1 as Sunday so we can setDate below\n      date.setFullYear(SUNDAY_YEAR);\n\n      const day = normalize ? normalizeDay(d.day) : d.day;\n      date.setDate(+day + 1); // +1 since date start at 1 in JS\n    }\n  }\n\n  if (d.year !== undefined) {\n    date.setFullYear(d.year);\n  }\n\n  if (d.quarter !== undefined) {\n    const quarter = normalize ? normalizeQuarter(d.quarter) : d.quarter;\n    date.setMonth(+quarter * 3);\n  }\n\n  if (d.month !== undefined) {\n    const month = normalize ? normalizeMonth(d.month) : d.month;\n    date.setMonth(+month);\n  }\n\n  if (d.date !== undefined) {\n    date.setDate(d.date);\n  }\n\n  if (d.hours !== undefined) {\n    date.setHours(d.hours);\n  }\n\n  if (d.minutes !== undefined) {\n    date.setMinutes(d.minutes);\n  }\n\n  if (d.seconds !== undefined) {\n    date.setSeconds(d.seconds);\n  }\n\n  if (d.milliseconds !== undefined) {\n    date.setMilliseconds(d.milliseconds);\n  }\n\n  return date.getTime();\n}\n\n/**\n * Return Vega Expression for a particular date time.\n * @param d\n * @param normalize whether to normalize quarter, month, day.\n */\nexport function dateTimeExpr(d: DateTime | DateTimeExpr, normalize = false) {\n  const units: (string | number)[] = [];\n\n  if (normalize && d.day !== undefined) {\n    if (keys(d).length > 1) {\n      log.warn(log.message.droppedDay(d));\n      d = duplicate(d);\n      delete d.day;\n    }\n  }\n\n  if (d.year !== undefined) {\n    units.push(d.year);\n  } else if (d.day !== undefined) {\n    // Set year to 2006 for working with day since January 1 2006 is a Sunday\n    units.push(SUNDAY_YEAR);\n  } else {\n    units.push(0);\n  }\n\n  if (d.month !== undefined) {\n    const month = normalize ? normalizeMonth(d.month) : d.month;\n    units.push(month);\n  } else if (d.quarter !== undefined) {\n    const quarter = normalize ? normalizeQuarter(d.quarter) : d.quarter;\n    units.push(quarter + '*3');\n  } else {\n    units.push(0); // months start at zero in JS\n  }\n\n  if (d.date !== undefined) {\n    units.push(d.date);\n  } else if (d.day !== undefined) {\n    // HACK: Day only works as a standalone unit\n    // This is only correct because we always set year to 2006 for day\n    const day = normalize ? normalizeDay(d.day) : d.day;\n    units.push(day + '+1');\n  } else {\n    units.push(1); // Date starts at 1 in JS\n  }\n\n  // Note: can't use TimeUnit enum here as importing it will create\n  // circular dependency problem!\n  for (let timeUnit of ['hours', 'minutes', 'seconds', 'milliseconds']) {\n    if (d[timeUnit] !== undefined) {\n      units.push(d[timeUnit]);\n    } else {\n      units.push(0);\n    }\n  }\n\n  return 'datetime(' + units.join(', ') + ')';\n}\n","// utility for encoding mapping\nimport {FieldDef, PositionFieldDef, LegendFieldDef, OrderFieldDef, ValueDef, TextFieldDef, isFieldDef, ChannelDef, isValueDef, normalize, ConditionalValueDef} from './fielddef';\nimport {Channel, CHANNELS, supportMark} from './channel';\nimport {Facet} from './facet';\nimport {isArray, some, duplicate} from './util';\nimport {Mark} from './mark';\nimport * as log from './log';\n\nexport interface Encoding {\n  /**\n   * X coordinates for `point`, `circle`, `square`,\n   * `line`, `rule`, `text`, and `tick`\n   * (or to width and height for `bar` and `area` marks).\n   */\n  x?: PositionFieldDef | ValueDef<number>;\n\n  /**\n   * Y coordinates for `point`, `circle`, `square`,\n   * `line`, `rule`, `text`, and `tick`\n   * (or to width and height for `bar` and `area` marks).\n   */\n  y?: PositionFieldDef | ValueDef<number>;\n\n  /**\n   * X2 coordinates for ranged `bar`, `rule`, `area`\n   */\n  x2?: FieldDef | ValueDef<number>;\n\n  /**\n   * Y2 coordinates for ranged `bar`, `rule`, `area`\n   */\n  y2?: FieldDef | ValueDef<number>;\n\n  /**\n   * Color of the marks – either fill or stroke color based on mark type.\n   * (By default, fill color for `area`, `bar`, `tick`, `text`, `circle`, and `square` /\n   * stroke color for `line` and `point`.)\n   */\n  color?: LegendFieldDef<string> | ConditionalValueDef<string>;\n\n  /**\n   * Opacity of the marks – either can be a value or in a range.\n   */\n  opacity?: LegendFieldDef<number> | ConditionalValueDef<number>;\n\n  /**\n   * Size of the mark.\n   * - For `point`, `square` and `circle`\n   * – the symbol size, or pixel area of the mark.\n   * - For `bar` and `tick` – the bar and tick's size.\n   * - For `text` – the text's font size.\n   * - Size is currently unsupported for `line` and `area`.\n   */\n  size?: LegendFieldDef<number> | ConditionalValueDef<number>;\n\n  /**\n   * The symbol's shape (only for `point` marks). The supported values are\n   * `\"circle\"` (default), `\"square\"`, `\"cross\"`, `\"diamond\"`, `\"triangle-up\"`,\n   * or `\"triangle-down\"`, or else a custom SVG path string.\n   */\n  shape?: LegendFieldDef<string> | ConditionalValueDef<string>; // TODO: maybe distinguish ordinal-only\n\n  /**\n   * Additional levels of detail for grouping data in aggregate views and\n   * in line and area marks without mapping data to a specific visual channel.\n   */\n  detail?: FieldDef | FieldDef[];\n\n  /**\n   * Text of the `text` mark.\n   */\n  text?: TextFieldDef | ConditionalValueDef<string|number>;\n\n  /**\n   * stack order for stacked marks or order of data points in line marks.\n   */\n  order?: OrderFieldDef | OrderFieldDef[];\n}\n\nexport interface EncodingWithFacet extends Encoding, Facet {}\n\nexport function channelHasField(encoding: EncodingWithFacet, channel: Channel): boolean {\n  const channelDef = encoding && encoding[channel];\n  if (channelDef) {\n    if (isArray(channelDef)) {\n      return some(channelDef, (fieldDef) => !!fieldDef.field);\n    } else {\n      return isFieldDef(channelDef);\n    }\n  }\n  return false;\n}\n\nexport function isAggregate(encoding: EncodingWithFacet) {\n  return some(CHANNELS, (channel) => {\n    if (channelHasField(encoding, channel)) {\n      const channelDef = encoding[channel];\n      if (isArray(channelDef)) {\n        return some(channelDef, (fieldDef) => !!fieldDef.aggregate);\n      } else {\n        return isFieldDef(channelDef) && !!channelDef.aggregate;\n      }\n    }\n    return false;\n  });\n}\n\nexport function dropInvalidFieldDefs(mark: Mark, encoding: Encoding): Encoding {\n\n  // clone to prevent side effect to the original spec\n  encoding = duplicate(encoding);\n\n  Object.keys(encoding).forEach((channel: Channel) => {\n    if (!supportMark(channel, mark)) {\n      // Drop unsupported channel\n\n      log.warn(log.message.incompatibleChannel(channel, mark));\n      delete encoding[channel];\n      return;\n    }\n\n    // Drop line's size if the field is aggregated.\n    if (channel === 'size' && mark === 'line') {\n      const channelDef = encoding[channel];\n      if (isFieldDef(channelDef) && channelDef.aggregate) {\n        log.warn(log.message.incompatibleChannel(channel, mark, 'when the field is aggregated.'));\n        delete encoding[channel];\n      }\n      return;\n    }\n\n    if (isArray(encoding[channel])) {\n      // Array of fieldDefs for detail channel (or production rule)\n      encoding[channel] = encoding[channel].reduce((channelDefs: ChannelDef[], channelDef: ChannelDef) => {\n        if (!isFieldDef(channelDef) && !isValueDef(channelDef)) { // TODO: datum\n          log.warn(log.message.emptyFieldDef(channelDef, channel));\n        } else {\n          channelDefs.push(normalize(channelDef, channel));\n        }\n        return channelDefs;\n      }, []);\n    } else {\n      const channelDef = encoding[channel];\n      if (channelDef.field === undefined && channelDef.value === undefined) { // TODO: datum\n        log.warn(log.message.emptyFieldDef(channelDef, channel));\n        delete encoding[channel];\n        return;\n      }\n      normalize(channelDef, channel);\n    }\n  });\n  return encoding;\n}\n\n\nexport function isRanged(encoding: EncodingWithFacet) {\n  return encoding && ((!!encoding.x && !!encoding.x2) || (!!encoding.y && !!encoding.y2));\n}\n\nexport function fieldDefs(encoding: EncodingWithFacet): FieldDef[] {\n  let arr: FieldDef[] = [];\n  CHANNELS.forEach(function(channel) {\n    if (channelHasField(encoding, channel)) {\n      const channelDef = encoding[channel];\n      (isArray(channelDef) ? channelDef : [channelDef]).forEach((fieldDef) => {\n        arr.push(fieldDef);\n      });\n    }\n  });\n  return arr;\n};\n\nexport function forEach(mapping: any,\n    f: (fd: FieldDef, c: Channel) => void,\n    thisArg?: any) {\n  if (!mapping) {\n    return;\n  }\n\n  Object.keys(mapping).forEach((c: any) => {\n    const channel: Channel = c;\n    if (isArray(mapping[channel])) {\n      mapping[channel].forEach(function(channelDef: ChannelDef) {\n        f.call(thisArg, channelDef, channel);\n      });\n    } else {\n      f.call(thisArg, mapping[channel], channel);\n    }\n  });\n}\n\nexport function reduce<T, U>(mapping: U,\n    f: (acc: any, fd: FieldDef, c: Channel) => U,\n    init: T, thisArg?: any) {\n  if (!mapping) {\n    return init;\n  }\n\n  return Object.keys(mapping).reduce((r: T, c: any) => {\n    const channel: Channel = c;\n    if (isArray(mapping[channel])) {\n      return mapping[channel].reduce(function(r1: T, channelDef: ChannelDef) {\n        return f.call(thisArg, r1, channelDef, channel);\n      }, r);\n    } else {\n      return f.call(thisArg, r, mapping[channel], channel);\n    }\n  }, init);\n}\n","// utility for a field definition object\n\nimport {AggregateOp} from './aggregate';\nimport {Axis} from './axis';\nimport {Bin} from './bin';\nimport {Channel, rangeType} from './channel';\nimport {Config} from './config';\nimport {Legend} from './legend';\nimport * as log from './log';\nimport {Scale} from './scale';\nimport {StackOffset} from './stack';\nimport {SortField, SortOrder} from './sort';\nimport {TimeUnit, isDiscreteByDefault} from './timeunit';\nimport {Type, getFullName} from './type';\n\n/**\n * Definition object for a constant value of an encoding channel.\n */\nexport interface ValueDef<T> {\n  /**\n   * A constant value in visual domain.\n   */\n  value?: T;\n}\n\nexport interface ConditionalValueDef<T> extends ValueDef<T> {\n  condition?: Condition<T>;\n}\n\n/**\n *  Definition object for a data field, its type and transformation of an encoding channel.\n */\nexport interface FieldDef {\n  /**\n   * Name of the field from which to pull a data value.\n   */\n  field?: string;\n\n  /**\n   * The encoded field's type of measurement. This can be either a full type\n   * name (`\"quantitative\"`, `\"temporal\"`, `\"ordinal\"`,  and `\"nominal\"`)\n   * or an initial character of the type name (`\"Q\"`, `\"T\"`, `\"O\"`, `\"N\"`).\n   * This property is case insensitive.\n   */\n  type?: Type;\n\n\n  // function\n\n  /**\n   * Time unit for a `temporal` field  (e.g., `year`, `yearmonth`, `month`, `hour`).\n   */\n  timeUnit?: TimeUnit;\n\n  /**\n   * Flag for binning a `quantitative` field, or a bin property object\n   * for binning parameters.\n   */\n  bin?: boolean | Bin;\n\n  /**\n   * Aggregation function for the field\n   * (e.g., `mean`, `sum`, `median`, `min`, `max`, `count`).\n   */\n  aggregate?: AggregateOp;\n\n  /**\n   * Title for axis or legend.\n   */\n  title?: string;\n}\n\nexport interface Condition<T> {\n  selection: string;\n  value: T;\n}\n\nexport interface ScaleFieldDef extends FieldDef {\n  scale?: Scale;\n  sort?: SortField | SortOrder;\n}\n\nexport interface PositionFieldDef extends ScaleFieldDef {\n  /**\n   * @nullable\n   */\n  axis?: Axis;\n\n  /**\n   * Type of stacking offset if the field should be stacked.\n   * \"none\" or null, if the field should not be stacked.\n   */\n  stack?: StackOffset;\n}\nexport interface LegendFieldDef<T> extends ScaleFieldDef {\n   /**\n    * @nullable\n    */\n  legend?: Legend;\n\n  condition?: Condition<T>;\n}\n\n// Detail\n\n// Order Path have no scale\n\nexport interface OrderFieldDef extends FieldDef {\n  sort?: SortOrder;\n}\n\nexport interface TextFieldDef extends FieldDef {\n  // FIXME: add more reference to Vega's format pattern or d3's format pattern.\n  /**\n   * The formatting pattern for text value. If not defined, this will be determined automatically.\n   */\n  format?: string;\n\n  condition?: Condition<string|number>;\n};\n\nexport type ChannelDef = FieldDef | ValueDef<any>;\n\nexport function isFieldDef(channelDef: ChannelDef): channelDef is FieldDef | PositionFieldDef | LegendFieldDef<any> | OrderFieldDef | TextFieldDef {\n  return channelDef && !!channelDef['field'];\n}\n\nexport function isValueDef(channelDef: ChannelDef): channelDef is ValueDef<any> {\n  return channelDef && 'value' in channelDef && channelDef['value'] !== undefined;\n}\n\n// TODO: consider if we want to distinguish ordinalOnlyScale from scale\nexport type FacetFieldDef = PositionFieldDef;\n\nexport interface FieldRefOption {\n  /** exclude bin, aggregate, timeUnit */\n  nofn?: boolean;\n  /** Wrap the field inside datum[...] per Vega convention */\n  datum?: boolean;\n  /** prepend fn with custom function prefix */\n  prefix?: string;\n  /** append suffix to the field ref for bin (default='start') */\n  binSuffix?: 'start' | 'end' | 'range';\n  /** append suffix to the field ref (general) */\n  suffix?: string;\n  /** Overrride which aggregate to use. Needed for unaggregated domain. */\n  aggregate?: AggregateOp;\n}\n\nexport function field(fieldDef: FieldDef, opt: FieldRefOption = {}) {\n  let field = fieldDef.field;\n  let prefix = opt.prefix;\n  let suffix = opt.suffix;\n\n  if (isCount(fieldDef)) {\n    field = 'count_*';\n  } else {\n    let fn: string = undefined;\n\n    if (!opt.nofn) {\n      if (fieldDef.bin) {\n        fn = 'bin';\n        suffix = opt.binSuffix;\n      } else if (fieldDef.aggregate) {\n        fn = String(opt.aggregate || fieldDef.aggregate);\n      } else if (fieldDef.timeUnit) {\n        fn = String(fieldDef.timeUnit);\n      }\n    }\n\n    if (!!fn) {\n      field = `${fn}_${field}`;\n    }\n  }\n\n  if (!!suffix) {\n    field = `${field}_${suffix}`;\n  }\n\n  if (!!prefix) {\n    field = `${prefix}_${field}`;\n  }\n\n  if (opt.datum) {\n    field = `datum[\"${field}\"]`;\n  }\n\n  return field;\n}\n\nexport function isDiscrete(fieldDef: FieldDef) {\n  switch (fieldDef.type) {\n    case 'nominal':\n    case 'ordinal':\n      return true;\n    case 'quantitative':\n      return !!fieldDef.bin;\n    case 'temporal':\n      // TODO: deal with custom scale type case.\n      return isDiscreteByDefault(fieldDef.timeUnit);\n  }\n  throw new Error(log.message.invalidFieldType(fieldDef.type));\n}\n\nexport function isContinuous(fieldDef: FieldDef) {\n  return !isDiscrete(fieldDef);\n}\n\nexport function isCount(fieldDef: FieldDef) {\n  return fieldDef.aggregate === 'count';\n}\n\nexport function title(fieldDef: FieldDef, config: Config) {\n  if (fieldDef.title != null) {\n    return fieldDef.title;\n  }\n  if (isCount(fieldDef)) {\n    return config.countTitle;\n  }\n  const fn = fieldDef.aggregate || fieldDef.timeUnit || (fieldDef.bin && 'bin');\n  if (fn) {\n    return fn.toString().toUpperCase() + '(' + fieldDef.field + ')';\n  } else {\n    return fieldDef.field;\n  }\n}\n\nexport function defaultType(fieldDef: FieldDef, channel: Channel): Type {\n  if (!!fieldDef.timeUnit) {\n    return 'temporal';\n  }\n  if (!!fieldDef.bin) {\n    return 'quantitative';\n  }\n  switch (rangeType(channel)) {\n    case 'continuous':\n      return 'quantitative';\n    case 'discrete':\n      return 'nominal';\n    case 'flexible': // color\n      return 'nominal';\n    default:\n      return 'quantitative';\n  }\n}\n\n/**\n * Convert type to full, lowercase type, or augment the fieldDef with a default type if missing.\n */\nexport function normalize(fieldDef: ChannelDef, channel: Channel) {\n  // If a fieldDef contains a field, we need type.\n  if (isFieldDef(fieldDef)) { // TODO: or datum\n    // convert short type to full type\n    const fullType = getFullName(fieldDef.type);\n    if (fullType) {\n      fieldDef.type = fullType;\n    } else {\n      // If type is empty / invalid, then augment with default type\n      const newType = defaultType(fieldDef, channel);\n      log.warn(log.message.emptyOrInvalidFieldType(fieldDef.type, channel, newType));\n      fieldDef.type = newType;\n    }\n\n    const {compatible, warning} = channelCompatibility(fieldDef, channel);\n    if (!compatible) {\n      log.warn(warning);\n    }\n  }\n  return fieldDef;\n}\n\nconst COMPATIBLE = {compatible: true};\nexport function channelCompatibility(fieldDef: FieldDef, channel: Channel): {compatible: boolean; warning?: string;} {\n  switch (channel) {\n    case 'row':\n    case 'column':\n      if (isContinuous(fieldDef) && !fieldDef.timeUnit) {\n        // TODO:(https://github.com/vega/vega-lite/issues/2011):\n        // with timeUnit it's not always strictly continuous\n        return {\n          compatible: false,\n          warning: log.message.facetChannelShouldBeDiscrete(channel)\n        };\n      }\n      return COMPATIBLE;\n\n    case 'x':\n    case 'y':\n    case 'color':\n    case 'text':\n    case 'detail':\n      return COMPATIBLE;\n\n    case 'opacity':\n    case 'size':\n    case 'x2':\n    case 'y2':\n      if (isDiscrete(fieldDef)) {\n        return {\n          compatible: false,\n          warning: `Channel ${channel} should not be used with discrete field.`\n        };\n      }\n      return COMPATIBLE;\n\n    case 'shape':\n      if (fieldDef.type !== 'nominal') {\n        return {\n          compatible: false,\n          warning: 'Shape channel should be used with nominal data only'\n        };\n      } else {\n        return COMPATIBLE;\n      }\n\n    case 'order':\n      if (fieldDef.type === 'nominal') {\n        return {\n          compatible: false,\n          warning: `Channel order is inappropriate for nominal field, which has no inherent order.`\n        };\n      }\n      return COMPATIBLE;\n  }\n  throw new Error('channelCompatability not implemented for channel ' + channel);\n}\n","import {DateTime, dateTimeExpr, isDateTime} from './datetime';\nimport {field} from './fielddef';\nimport {TimeUnit, fieldExpr as timeUnitFieldExpr, isSingleTimeUnit} from './timeunit';\nimport {isArray, isString} from './util';\n\nexport type Filter = EqualFilter | RangeFilter | OneOfFilter ;\n\n\nexport interface EqualFilter {\n  // TODO: support aggregate\n\n  /**\n   * Time unit for the field to be filtered.\n   */\n  timeUnit?: TimeUnit;\n\n  /**\n   * Field to be filtered.\n   */\n  field: string;\n\n  /**\n   * Value that the field should be equal to.\n   */\n  equal: string | number | boolean | DateTime;\n\n}\n\nexport function isEqualFilter(filter: any): filter is EqualFilter {\n  return filter && !!filter.field && filter.equal!==undefined;\n}\n\nexport interface RangeFilter {\n  // TODO: support aggregate\n\n  /**\n   * time unit for the field to be filtered.\n   */\n  timeUnit?: TimeUnit;\n\n  /**\n   * Field to be filtered\n   */\n  field: string;\n\n  /**\n   * Array of inclusive minimum and maximum values\n   * for a field value of a data item to be included in the filtered data.\n   * @maxItems 2\n   * @minItems 2\n   */\n  range: (number|DateTime)[];\n\n}\n\nexport function isRangeFilter(filter: any): filter is RangeFilter {\n  if (filter && !!filter.field) {\n    if (isArray(filter.range) && filter.range.length === 2) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport interface OneOfFilter {\n  // TODO: support aggregate\n\n  /**\n   * time unit for the field to be filtered.\n   */\n  timeUnit?: TimeUnit;\n\n  /**\n   * Field to be filtered\n   */\n  field: string;\n\n  /**\n   * A set of values that the `field`'s value should be a member of,\n   * for a data item included in the filtered data.\n   */\n  oneOf: (string|number|boolean|DateTime)[];\n\n}\n\nexport function isOneOfFilter(filter: any): filter is OneOfFilter {\n  return filter && !!filter.field && (\n    isArray(filter.oneOf) ||\n    isArray(filter.in) // backward compatibility\n  );\n}\n\nexport function expression(filter: Filter | string) {\n  if (isString(filter)) {\n    return filter as string;\n  } else { // Filter Object\n    const fieldExpr = filter.timeUnit ?\n      // For timeUnit, cast into integer with time() so we can use ===, inrange, indexOf to compare values directly.\n        // TODO: We calculate timeUnit on the fly here. Consider if we would like to consolidate this with timeUnit pipeline\n        // TODO: support utc\n      ('time(' + timeUnitFieldExpr(filter.timeUnit, filter.field) + ')') :\n      field(filter, {datum: true});\n\n    if (isEqualFilter(filter)) {\n      return fieldExpr + '===' + valueExpr(filter.equal, filter.timeUnit);\n    } else if (isOneOfFilter(filter)) {\n      // \"oneOf\" was formerly \"in\" -- so we need to add backward compatibility\n      const oneOf: OneOfFilter[] = filter.oneOf || filter['in'];\n      return 'indexof([' +\n        oneOf.map((v) => valueExpr(v, filter.timeUnit)).join(',') +\n        '], ' + fieldExpr + ') !== -1';\n    } else if (isRangeFilter(filter)) {\n      const lower = filter.range[0];\n      const upper = filter.range[1];\n\n      if (lower !== null &&  upper !== null) {\n        return 'inrange(' + fieldExpr + ', ' +\n          valueExpr(lower, filter.timeUnit) + ', ' +\n          valueExpr(upper, filter.timeUnit) + ')';\n      } else if (lower !== null) {\n        return fieldExpr + ' >= ' + lower;\n      } else if (upper !== null) {\n        return fieldExpr + ' <= ' + upper;\n      }\n    }\n  }\n  return undefined;\n}\n\nfunction valueExpr(v: any, timeUnit: TimeUnit) {\n  if (isDateTime(v)) {\n    const expr = dateTimeExpr(v, true);\n    return 'time(' + expr + ')';\n  }\n  if (isSingleTimeUnit(timeUnit)) {\n    const datetime: DateTime = {};\n    datetime[timeUnit] = v;\n    const expr = dateTimeExpr(datetime, true);\n    return 'time(' + expr + ')';\n  }\n  return JSON.stringify(v);\n}\n","import {DateTime} from './datetime';\nimport {VgLegendEncode, VgLegendBase, VgLegendConfig} from './vega.schema';\n\nexport interface LegendConfig extends VgLegendConfig {\n  /**\n   * Whether month names and weekday names should be abbreviated.\n   */\n  shortTimeLabels?: boolean;\n}\n\n/**\n * Properties of a legend or boolean flag for determining whether to show it.\n */\nexport interface Legend extends VgLegendBase {\n  /**\n   * Optional mark definitions for custom legend encoding.\n   */\n  encode?: VgLegendEncode;\n\n  /**\n   * An optional formatting pattern for legend labels. Vega uses D3\\'s format pattern.\n   */\n  format?: string;\n\n  /**\n   * The desired number of tick values for quantitative legends.\n   */\n  tickCount?: number;\n\n  /**\n   * A title for the legend. (Shows field name and its function by default.)\n   */\n  title?: string;\n  /**\n   * Explicitly set the visible legend values.\n   */\n  values?: number[] | string[] | DateTime[];\n\n  /**\n   * The name of a scale that maps to a shape value.\n   */\n  shape?: string;\n\n  /**\n   * The type of the legend. Use `symbol` to create a discrete legend and `gradient` for a continuous color gradient.\n   */\n  type?: 'symbol' | 'gradient';\n\n  /**\n   * A non-positive integer indicating z-index of the legend.\n   * If zindex is 0, legend should be drawn behind all chart elements.\n   * To put them in front, use zindex = 1.\n   * @TJS-type integer\n   * @minimum 0\n   */\n  zindex?: number;\n}\n\nexport const defaultLegendConfig: LegendConfig = {\n  orient: undefined, // implicitly \"right\"\n};\n\nexport const LEGEND_PROPERTIES:(keyof Legend)[] = ['entryPadding', 'format', 'offset', 'orient', 'tickCount', 'title', 'type', 'values' ,'zindex'];\n","///<reference path=\"../typings/vega-util.d.ts\" />\n\n/**\n * Vega-Lite's singleton logger utility.\n */\n\nimport {logger, LoggerInterface, Warn} from 'vega-util';\n\nimport {AggregateOp} from './aggregate';\nimport {Channel} from './channel';\nimport {DateTime, DateTimeExpr} from './datetime';\nimport {FieldDef} from './fielddef';\nimport {Mark} from './mark';\nimport {TimeUnit} from './timeunit';\nimport {Type} from './type';\nimport {ScaleType} from './scale';\n\nexport {LoggerInterface} from 'vega-util';\n\n/**\n * Main (default) Vega Logger instance for Vega-Lite\n */\nconst main = logger(Warn);\nlet current: LoggerInterface = main;\n\n/**\n * Logger tool for checking if the code throws correct warning\n */\nexport class LocalLogger implements LoggerInterface {\n  public warns: any[] = [];\n  public infos: any[] = [];\n  public debugs: any[] = [];\n\n  public level() {\n    return this;\n  }\n\n  public warn(...args: any[]) {\n    this.warns.push(...args);\n    return this;\n  }\n\n  public info(...args: any[]) {\n    this.infos.push(...args);\n    return this;\n  }\n\n  public debug(...args: any[]) {\n    this.debugs.push(...args);\n    return this;\n  }\n}\n\nexport function runLocalLogger(f: (localLogger: LocalLogger) => void) {\n  const localLogger = current = new LocalLogger();\n  f(localLogger);\n  reset();\n}\n\nexport function wrap(f: (logger: LocalLogger) => void) {\n  return () => {\n    const logger = current = new LocalLogger();\n    f(logger);\n    reset();\n  };\n}\n\n/**\n * Set the singleton logger to be a custom logger\n */\nexport function set(logger: LoggerInterface) {\n  current = logger;\n  return current;\n}\n\n/**\n * Reset the main logger to use the default Vega Logger\n */\nexport function reset() {\n  current = main;\n  return current;\n}\n\nexport function warn(..._: any[]) {\n  current.warn.apply(current, arguments);\n}\n\nexport function info(..._: any[]) {\n  current.info.apply(current, arguments);\n}\n\nexport function debug(..._: any[]) {\n  current.debug.apply(current, arguments);\n}\n\n/**\n * Collection of all Vega-Lite Error Messages\n */\nexport namespace message {\n  export const INVALID_SPEC = 'Invalid spec';\n\n  // DATA\n  export const DEPRECATED_FILTER_NULL = 'filterNull is deprecated. Please use filterInvalid instead.';\n\n  // ENCODING & FACET\n  export function invalidFieldType(type: Type) {\n    return `Invalid field type \"${type}\"`;\n  }\n\n  export function emptyOrInvalidFieldType(type: Type | string, channel: Channel, newType: Type) {\n    return `Invalid field type (${type}) for channel ${channel}, using ${newType} instead.`;\n  }\n\n  export function emptyFieldDef(fieldDef: FieldDef, channel: Channel) {\n    return `Dropping ${JSON.stringify(fieldDef)} from channel ${channel} since it does not contain data field or value.`;\n  }\n\n  export function incompatibleChannel(channel: Channel, markOrFacet: Mark | 'facet', when?: string) {\n    return `${channel} dropped as it is incompatible with ${markOrFacet}` +\n      when ? `when ${when}` : '';\n  }\n\n  export function facetChannelShouldBeDiscrete(channel: string) {\n    return `${channel} encoding should be discrete (ordinal / nominal / binned).`;\n  }\n\n  export function discreteChannelCannotEncode(channel: Channel, type: Type) {\n    return `Using discrete channel ${channel} to encode ${type} field can be misleading as it does not encode ${type === 'ordinal' ? 'order' : 'magnitude'}.`;\n  }\n\n  // Mark\n  export const BAR_WITH_POINT_SCALE_AND_RANGESTEP_NULL = 'Bar mark should not be used with point scale when rangeStep is null. Please use band scale instead.';\n\n  export function unclearOrientContinuous(mark: Mark) {\n    return 'Cannot clearly determine orientation for ' + mark + ' since both x and y channel encode continous fields. In this case, we use vertical by default';\n  }\n\n  export function unclearOrientDiscreteOrEmpty(mark: Mark) {\n    return 'Cannot clearly determine orientation for ' + mark + ' since both x and y channel encode discrete or empty fields.';\n  }\n\n  export function orientOverridden(original: string, actual: string) {\n    return `Specified orient ${original} overridden with ${actual}`;\n  }\n\n  // SCALE\n  export const CANNOT_UNION_CUSTOM_DOMAIN_WITH_FIELD_DOMAIN = 'custom domain scale cannot be unioned with default field-based domain';\n\n  export function cannotUseScalePropertyWithNonColor(prop: string) {\n    return `Cannot use ${prop} with non-color channel.`;\n  }\n\n  export function unaggregateDomainHasNoEffectForRawField(fieldDef: FieldDef) {\n    return `Using unaggregated domain with raw field has no effect (${JSON.stringify(fieldDef)}).`;\n  }\n\n  export function unaggregateDomainWithNonSharedDomainOp(aggregate: AggregateOp) {\n    return `Unaggregated domain not applicable for ${aggregate} since it produces values outside the origin domain of the source data.`;\n  }\n\n  export function unaggregatedDomainWithLogScale(fieldDef: FieldDef) {\n    return `Unaggregated domain is currently unsupported for log scale (${JSON.stringify(fieldDef)}).`;\n  }\n\n  export const CANNOT_USE_RANGE_WITH_POSITION =\n    'Cannot use custom range with x or y channel.  Please customize width, height, padding, or rangeStep instead.';\n\n    export const CANNOT_USE_PADDING_WITH_FACET = 'Cannot use padding with facet\\'s scale.  Please use spacing instead.';\n\n  export function cannotUseRangePropertyWithFacet(propName: string) {\n    return `Cannot use custom ${propName} with row or column channel. Please use width, height, or spacing instead.`;\n  }\n\n  export function rangeStepDropped(channel: Channel) {\n    return `rangeStep for ${channel} is dropped as top-level ${\n      channel === 'x' ? 'width' : 'height'} is provided.`;\n  }\n\n  export function scaleTypeNotWorkWithChannel(channel: Channel, scaleType: ScaleType, newScaleType: ScaleType) {\n    return `Channel ${channel} does not work with ${scaleType} scale. We are using ${newScaleType} scale instead.`;\n  }\n\n  export function scalePropertyNotWorkWithScaleType(scaleType: ScaleType, propName: string, channel: Channel) {\n    return `${channel}-scale's \"${propName}\" is dropped as it does not work with ${scaleType} scale.`;\n  }\n\n  export function scaleTypeNotWorkWithMark(mark: Mark, scaleType: ScaleType) {\n    return `Scale type \"${scaleType}\" does not work with mark ${mark}.`;\n  }\n\n  export const INVAID_DOMAIN = 'Invalid scale domain';\n\n\n  // AXIS\n  export const INVALID_CHANNEL_FOR_AXIS = 'Invalid channel for axis.';\n\n  // STACK\n  export function cannotStackRangedMark(channel: Channel) {\n    return `Cannot stack ${channel} if there is already ${channel}2`;\n  }\n\n  export function cannotStackNonLinearScale(scaleType: ScaleType) {\n    return `Cannot stack non-linear scale (${scaleType})`;\n  }\n\n  export function cannotStackNonSummativeAggregate(aggregate: AggregateOp) {\n    return `Cannot stack when the aggregate function is non-summative (${aggregate})`;\n  }\n\n  // TIMEUNIT\n  export function invalidTimeUnit(unitName: string, value: string | number) {\n    return `Invalid ${unitName}: ${value}`;\n  }\n\n  export function dayReplacedWithDate(fullTimeUnit: TimeUnit) {\n    return `Time unit \"${fullTimeUnit}\" is not supported. We are replacing it with ` +\n      (fullTimeUnit+'').replace('day', 'date') + '.';\n  }\n\n  export function droppedDay(d: DateTime | DateTimeExpr) {\n    return 'Dropping day from datetime ' + JSON.stringify(d) +\n          ' as day cannot be combined with other units.';\n  }\n}\n\n","import {toSet} from './util';\nimport {Orient, Interpolate, VgMarkConfig} from './vega.schema';\nexport {Orient} from './vega.schema';\n\nexport namespace Mark {\n  export const AREA: 'area' = 'area';\n  export const BAR: 'bar' = 'bar';\n  export const LINE: 'line' = 'line';\n  export const POINT: 'point' = 'point';\n  export const RECT: 'rect' = 'rect';\n  export const RULE: 'rule' = 'rule';\n  export const TEXT: 'text' = 'text';\n  export const TICK: 'tick' = 'tick';\n  export const CIRCLE: 'circle' = 'circle';\n  export const SQUARE: 'square' = 'square';\n}\n\n/**\n * All types of primitive marks.\n */\nexport type Mark = typeof Mark.AREA | typeof Mark.BAR | typeof Mark.LINE | typeof Mark.POINT | typeof Mark.TEXT | typeof Mark.TICK | typeof Mark.RECT | typeof Mark.RULE | typeof Mark.CIRCLE | typeof Mark.SQUARE;\n\n\nexport const AREA = Mark.AREA;\nexport const BAR = Mark.BAR;\nexport const LINE = Mark.LINE;\nexport const POINT = Mark.POINT;\nexport const TEXT = Mark.TEXT;\nexport const TICK = Mark.TICK;\nexport const RECT = Mark.RECT;\nexport const RULE = Mark.RULE;\n\nexport const CIRCLE = Mark.CIRCLE;\nexport const SQUARE = Mark.SQUARE;\n\nexport const PRIMITIVE_MARKS = [AREA, BAR, LINE, POINT, TEXT, TICK, RECT, RULE, CIRCLE, SQUARE];\n\nexport interface MarkDef {\n  /**\n   * The mark type.\n   * One of `\"bar\"`, `\"circle\"`, `\"square\"`, `\"tick\"`, `\"line\"`,\n   * `\"area\"`, `\"point\"`, `\"rule\"`, and `\"text\"`.\n   */\n  type: Mark;\n\n  /**\n   * The orientation of a non-stacked bar, tick, area, and line charts.\n   * The value is either horizontal (default) or vertical.\n   * - For bar, rule and tick, this determines whether the size of the bar and tick\n   * should be applied to x or y dimension.\n   * - For area, this property determines the orient property of the Vega output.\n   * - For line, this property determines the sort order of the points in the line\n   * if `config.sortLineBy` is not specified.\n   * For stacked charts, this is always determined by the orientation of the stack;\n   * therefore explicitly specified value will be ignored.\n   */\n  orient?: Orient;\n\n  /**\n   * The line interpolation method to use for line and area marks. One of the following:\n   * - `\"linear\"`: piecewise linear segments, as in a polyline.\n   * - `\"linear-closed\"`: close the linear segments to form a polygon.\n   * - `\"step\"`: alternate between horizontal and vertical segments, as in a step function.\n   * - `\"step-before\"`: alternate between vertical and horizontal segments, as in a step function.\n   * - `\"step-after\"`: alternate between horizontal and vertical segments, as in a step function.\n   * - `\"basis\"`: a B-spline, with control point duplication on the ends.\n   * - `\"basis-open\"`: an open B-spline; may not intersect the start or end.\n   * - `\"basis-closed\"`: a closed B-spline, as in a loop.\n   * - `\"cardinal\"`: a Cardinal spline, with control point duplication on the ends.\n   * - `\"cardinal-open\"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n   * - `\"cardinal-closed\"`: a closed Cardinal spline, as in a loop.\n   * - `\"bundle\"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n   * - `\"monotone\"`: cubic interpolation that preserves monotonicity in y.\n   */\n  interpolate?: Interpolate;\n\n  /**\n   * Depending on the interpolation type, sets the tension parameter (for line and area marks).\n   * @minimum 0\n   * @maximum 1\n   */\n  tension?: number;\n}\n\nexport function isMarkDef(mark: string | MarkDef): mark is MarkDef {\n  return mark['type'];\n}\n\nconst PRIMITIVE_MARK_INDEX = toSet(PRIMITIVE_MARKS);\n\nexport function isPrimitiveMark(mark: string | MarkDef): mark is Mark {\n  const markType = isMarkDef(mark) ? mark.type : mark;\n  return markType in PRIMITIVE_MARK_INDEX;\n}\n\nexport const STROKE_CONFIG = ['stroke', 'strokeWidth',\n  'strokeDash', 'strokeDashOffset', 'strokeOpacity'];\n\nexport const FILL_CONFIG = ['fill', 'fillOpacity'];\n\nexport const FILL_STROKE_CONFIG = [].concat(STROKE_CONFIG, FILL_CONFIG);\n\nexport interface MarkConfig extends VgMarkConfig {\n\n  // ---------- Color ----------\n  /**\n   * Whether the shape\\'s color should be used as fill color instead of stroke color.\n   * This is only applicable for \"bar\", \"point\", and \"area\".\n   * All marks except \"point\", \"line\", and \"rule\" are filled by default.\n   */\n  filled?: boolean;\n\n  // TODO: remove this once we correctly integrate theme\n  /**\n   * Default color.\n   */\n  color?: string;\n}\n\nexport const defaultMarkConfig: MarkConfig = {\n  color: '#4c78a8',\n};\n\nexport interface BarConfig extends MarkConfig {\n  /**\n   * Offset between bar for binned field.  Ideal value for this is either 0 (Preferred by statisticians) or 1 (Vega-Lite Default, D3 example style).\n   * @minimum 0\n   */\n  binSpacing?: number;\n  /**\n   * Default size of the bars on continuous scales.\n   * @minimum 0\n   */\n  continuousBandSize?: number;\n\n  /**\n   * The size of the bars.  If unspecified, the default size is  `bandSize-1`,\n   * which provides 1 pixel offset between bars.\n   * @minimum 0\n   */\n  discreteBandSize?: number;\n}\n\nexport const defaultBarConfig: BarConfig = {\n  binSpacing: 1,\n  continuousBandSize: 2\n};\n\nexport interface TextConfig extends MarkConfig {\n  /**\n   * Whether month names and weekday names should be abbreviated.\n   */\n  shortTimeLabels?: boolean;\n}\n\nexport const defaultTextConfig: TextConfig = {\n  baseline: 'middle',\n};\n\nexport interface TickConfig extends MarkConfig {\n  /**\n   * The width of the ticks.\n   * If this value is undefined (by default,), we use 2/3 of rangeStep by default.\n   * @minimum 0\n   */\n  bandSize?: number;\n\n  /**\n   * Thickness of the tick mark.\n   * @minimum 0\n   */\n  thickness?: number;\n}\n\nexport const defaultTickConfig: TickConfig = {\n  thickness: 1\n};\n","import * as log from './log';\nimport {Channel} from './channel';\nimport {DateTime} from './datetime';\nimport {contains, toSet} from './util';\n\nexport namespace ScaleType {\n  // Continuous - Quantitative\n  export const LINEAR: 'linear' = 'linear';\n  export const LOG: 'log' = 'log';\n  export const POW: 'pow' = 'pow';\n  export const SQRT: 'sqrt' = 'sqrt';\n  // Continuous - Time\n  export const TIME: 'time' = 'time';\n  export const UTC: 'utc'  = 'utc';\n  // sequential\n  export const SEQUENTIAL: 'sequential' = 'sequential';\n\n  // Quantile, Quantize, threshold\n  export const QUANTILE: 'quantile' = 'quantile';\n  export const QUANTIZE: 'quantize' = 'quantize';\n  export const THRESHOLD: 'threshold' = 'threshold';\n\n  export const ORDINAL: 'ordinal' = 'ordinal';\n  export const POINT: 'point' = 'point';\n  export const BAND: 'band' = 'band';\n\n}\n\nexport type ScaleType = typeof ScaleType.LINEAR |\n  typeof ScaleType.LOG | typeof ScaleType.POW | typeof ScaleType.SQRT |\n  typeof ScaleType.TIME | typeof ScaleType.UTC |\n  // TODO: add 'quantize', 'quantile', 'threshold' back when we really support them\n  typeof ScaleType.SEQUENTIAL | // typeof ScaleType.QUANTILE | typeof ScaleType.QUANTIZE | typeof ScaleType.THRESHOLD |\n  typeof ScaleType.ORDINAL | typeof ScaleType.POINT | typeof ScaleType.BAND;\n\nexport const SCALE_TYPES: ScaleType[] = [\n  // Continuous - Quantitative\n  'linear', 'log', 'pow', 'sqrt',\n  // Continuous - Time\n  'time', 'utc',\n  // Sequential\n  'sequential', // TODO: add 'quantile', 'quantize' when we really support them\n  // Discrete\n  'ordinal', 'point', 'band',\n];\n\nexport const CONTINUOUS_TO_CONTINUOUS_SCALES: ScaleType[] = ['linear', 'log', 'pow', 'sqrt', 'time', 'utc'];\nconst CONTINUOUS_TO_CONTINUOUS_INDEX = toSet(CONTINUOUS_TO_CONTINUOUS_SCALES);\n\nexport const CONTINUOUS_DOMAIN_SCALES: ScaleType[] = CONTINUOUS_TO_CONTINUOUS_SCALES.concat(['sequential' /* TODO add 'quantile', 'quantize', 'threshold'*/]);\nconst CONTINUOUS_DOMAIN_INDEX = toSet(CONTINUOUS_DOMAIN_SCALES);\n\nexport const DISCRETE_DOMAIN_SCALES: ScaleType[] = ['ordinal', 'point', 'band'];\nconst DISCRETE_DOMAIN_INDEX = toSet(DISCRETE_DOMAIN_SCALES);\n\nexport const TIME_SCALE_TYPES: ScaleType[] = ['time', 'utc'];\n\nexport function hasDiscreteDomain(type: ScaleType): type is 'ordinal' | 'point' | 'band' {\n  return type in DISCRETE_DOMAIN_INDEX;\n}\n\nexport function hasContinuousDomain(type: ScaleType):\n  type is 'linear' | 'log' | 'pow' | 'sqrt' |  'time' | 'utc'|\n          'sequential' /* TODO add | 'quantile' | 'quantize' | 'threshold' */ {\n  return type in CONTINUOUS_DOMAIN_INDEX;\n}\n\nexport function isContinuousToContinuous(type: ScaleType): type is 'linear' | 'log' | 'pow' | 'sqrt' |  'time' | 'utc' {\n  return type in CONTINUOUS_TO_CONTINUOUS_INDEX;\n}\n\nexport type NiceTime = 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'year';\n\nexport interface ScaleConfig {\n  /**\n   * If true, rounds numeric output values to integers.\n   * This can be helpful for snapping to the pixel grid.\n   * (Only available for `x`, `y`, `size`, `row`, and `column` scales.)\n   */\n  round?: boolean;\n\n  /**\n   * If true, values that exceed the data domain are clamped to either the minimum or maximum range value\n   */\n  clamp?: boolean;\n  /**\n   *  Default range step for `x` ordinal scale when is mark is `text`.\n   *  @minimum 0\n   */\n  textXRangeStep?: number; // FIXME: consider if we will rename this \"tableColumnWidth\"\n  /**\n   * Default range step for (1) `y` ordinal scale,\n   * and (2) `x` ordinal scale when the mark is not `text`.\n   *\n   * @minimum 0\n   * @nullable\n   */\n  rangeStep?: number | null;\n\n  /**\n   * Default inner padding for `x` and `y` band-ordinal scales.\n   * @minimum 0\n   * @maximum 1\n   */\n  bandPaddingInner?: number;\n\n  /**\n   * Default outer padding for `x` and `y` band-ordinal scales.\n   * If not specified, by default, band scale's paddingOuter is paddingInner/2.\n   * @minimum 0\n   * @maximum 1\n   */\n  bandPaddingOuter?: number;\n\n  /**\n   * Default outer padding for `x` and `y` point-ordinal scales.\n   * @minimum 0\n   * @maximum 1\n   */\n  pointPadding?: number;\n\n  /**\n   * Default spacing between faceted plots.\n   * @TJS-type integer\n   * @minimum 0\n   */\n  facetSpacing?: number;\n\n  /**\n   * Use the source data range before aggregation as scale domain instead of aggregated data for aggregate axis.\n   * This property only works with aggregate functions that produce values within the raw data domain (`\"mean\"`, `\"average\"`, `\"median\"`, `\"q1\"`, `\"q3\"`, `\"min\"`, `\"max\"`). For other aggregations that produce values outside of the raw data domain (e.g. `\"count\"`, `\"sum\"`), this property is ignored.\n   */\n  useUnaggregatedDomain?: boolean;\n\n  // nice should depends on type (quantitative or temporal), so\n  // let's not make a config.\n\n  // Configs for Range\n\n\n  /**\n   * The default max value for mapping quantitative fields to bar's size/bandSize.\n   * If undefined (default), we will use bandSize - 1.\n   * @minimum 0\n   */\n  maxBandSize?: number;\n\n  /**\n   * The default min value for mapping quantitative fields to bar and tick's size/bandSize scale with zero=false\n   * If undefined (default), we will use the `continuousBandSize` value for bar and 3 for ticks.\n   * @minimum 0\n   */\n  minBandSize?: number;\n\n  /**\n   * The default max value for mapping quantitative fields to text's size/fontSize.\n   * If undefined (default), we will use bandSize - 1.\n   * @minimum 0\n   */\n  maxFontSize?: number;\n\n  /**\n   * The default min value for mapping quantitative fields to tick's size/fontSize scale with zero=false\n   * @minimum 0\n   */\n  minFontSize?: number;\n\n  /**\n   * Default minimum opacity for mapping a field to opacity.\n   * @minimum 0\n   * @maximum 1\n   */\n  minOpacity?: number;\n\n  /**\n   * Default max opacity for mapping a field to opacity.\n   * @minimum 0\n   * @maximum 1\n   */\n  maxOpacity?: number;\n\n\n  /**\n   * Default minimum value for point size scale with zero=false.\n   * @minimum 0\n   */\n  minSize?: number;\n\n  /**\n   * Default max value for point size scale.\n   * @minimum 0\n   */\n  maxSize?: number;\n\n  /**\n   * Default minimum strokeWidth for strokeWidth (or rule/line's size) scale with zero=false.\n   * @minimum 0\n   */\n  minStrokeWidth?: number;\n\n  /**\n   * Default max strokeWidth for strokeWidth  (or rule/line's size) scale.\n   * @minimum 0\n   */\n  maxStrokeWidth?: number;\n\n  /**\n   * The default collection of symbol shapes for mapping nominal fields to shapes of point marks (i.e., range of a `shape` scale).\n   * Each value should be one of: `\"circle\"`, `\"square\"`, `\"cross\"`, `\"diamond\"`, `\"triangle-up\"`, or `\"triangle-down\"`, or a custom SVG path.\n   */\n  shapes?: string[];\n}\n\nexport const defaultScaleConfig = {\n  round: true,\n  textXRangeStep: 90,\n  rangeStep: 21,\n  pointPadding: 0.5,\n  bandPaddingInner: 0.1,\n  facetSpacing: 16,\n\n  minFontSize: 8,\n  maxFontSize: 40,\n\n  minOpacity: 0.3,\n  maxOpacity: 0.8,\n\n  // FIXME: revise if these *can* become ratios of rangeStep\n  minSize: 9, // Point size is area. For square point, 9 = 3 pixel ^ 2, not too small!\n\n  minStrokeWidth: 1,\n  maxStrokeWidth: 4,\n\n  shapes: ['circle', 'square', 'cross', 'diamond', 'triangle-up', 'triangle-down']\n};\n\nexport interface ExtendedScheme {\n  /**\n   * Color scheme that determines output color of an ordinal/sequential color scale.\n   */\n  name: string;\n\n  // TODO: add docs\n  extent?: number[];\n\n  // TODO: add docs\n  count?: number;\n}\n\nexport type Domain = number[] | string[] | DateTime[] | 'unaggregated';\nexport type Scheme = string | ExtendedScheme;\n\nexport type Range = number[] | string[] | string;\n\nexport function isExtendedScheme(scheme: string | ExtendedScheme): scheme is ExtendedScheme {\n  return scheme && !!scheme['name'];\n}\n\nexport interface Scale {\n  type?: ScaleType;\n  /**\n   * The domain of the scale, representing the set of data values. For quantitative data, this can take the form of a two-element array with minimum and maximum values. For ordinal/categorical data, this may be an array of valid input values.\n   *\n   * If the domain is 'unaggregated', we use the source data range before aggregation as scale domain instead of aggregated data for aggregate axis.\n   * This property only works with aggregate functions that produce values within the raw data domain (`\"mean\"`, `\"average\"`, `\"median\"`, `\"q1\"`, `\"q3\"`, `\"min\"`, `\"max\"`). For other aggregations that produce values outside of the raw data domain (e.g. `\"count\"`, `\"sum\"`), this property is ignored.\n   */\n  domain?: Domain;\n\n  /**\n   * The range of the scale, representing the set of visual values. For numeric values, the range can take the form of a two-element array with minimum and maximum values. For ordinal or quantized data, the range may by an array of desired output values, which are mapped to elements in the specified domain.\n   */\n  range?: Range;\n\n  /**\n   * If true, rounds numeric output values to integers. This can be helpful for snapping to the pixel grid.\n   *\n   * __Default Rule:__ `true` for `\"x\"`, `\"y\"`, `\"row\"`, `\"column\"` channels if scale config's `round` is `true`; `false` otherwise.\n   */\n  round?: boolean;\n\n  // ordinal\n  /**\n   * The distance between the starts of adjacent bands or points in band or point scales.\n   * If this value is `null`, this will be determined to fit width (for x) or height (for y) of the plot.\n   * If both width and x-scale's rangeStep is provided, rangeStep will be dropped.  (The same rule is applied for height and y-scale's rangeStep.)\n   *\n   * __Default Rule:__ for `x` ordinal scale of a `text` mark, derived from [scale config](config.html#scale-config)'s `textXRangeStep`. Otherwise, derived from [scale config](config.html#scale-config)'s `rangeStep`.\n   * __Warning:__ If the cardinality of the scale domain is too high, the rangeStep might become less than one pixel and the mark might not appear correctly.\n   * @minimum 0\n   * @nullable\n   */\n  rangeStep?: number | null;\n\n  /**\n   * Range scheme (e.g., color schemes such as \"category10\" or \"viridis\").\n   */\n  scheme?: Scheme;\n\n  /**\n   * (For `row` and `column` only) A pixel value for padding between cells in the trellis plots.\n   * @TJS-type integer\n   */\n  spacing?: number;\n\n  /**\n   * Applies spacing among ordinal elements in the scale range. The actual effect depends on how the scale is configured. If the __points__ parameter is `true`, the padding value is interpreted as a multiple of the spacing between points. A reasonable value is 1.0, such that the first and last point will be offset from the minimum and maximum value by half the distance between points. Otherwise, padding is typically in the range [0, 1] and corresponds to the fraction of space in the range interval to allocate to padding. A value of 0.5 means that the band size will be equal to the padding width. For more, see the [D3 ordinal scale documentation](https://github.com/mbostock/d3/wiki/Ordinal-Scales).\n   * A convenience property for setting the inner and outer padding to the same value.\n   * @minimum 0\n   * @maximum 1\n   */\n  padding?: number;\n\n  /**\n   * The inner padding of a band scale determines the ratio of the range that is reserved for blank space between bands. (For point scale, this property is ignored.)\n   * @minimum 0\n   * @maximum 1\n   */\n  paddingInner?: number;\n\n  /**\n   * The outer padding determines the ratio of the range that is reserved for blank space before the first and after the last bands/points.\n   * @minimum 0\n   * @maximum 1\n   */\n  paddingOuter?: number;\n\n  // typical\n  /**\n   * If true, values that exceed the data domain are clamped to either the minimum or maximum range value\n   */\n  clamp?: boolean;\n  /**\n   * If specified, modifies the scale domain to use a more human-friendly value range. If specified as a true boolean, modifies the scale domain to use a more human-friendly number range (e.g., 7 instead of 6.96). If specified as a string, modifies the scale domain to use a more human-friendly value range. For time and utc scale types only, the nice value should be a string indicating the desired time interval.\n   */\n  nice?: boolean | NiceTime;\n  /**\n   * Sets the exponent of the scale transformation. For pow scale types only, otherwise ignored.\n   */\n  exponent?: number;\n  /**\n   * If `true`, ensures that a zero baseline value is included in the scale domain.\n   * Default value: `true` for `x` and `y` channel if the quantitative field is not binned\n   * and no custom `domain` is provided; `false` otherwise.\n   */\n  zero?: boolean;\n\n  // FIXME: Add description\n  interpolate?: 'rgb'| 'lab' | 'hcl' | 'hsl' | 'hsl-long' | 'hcl-long' | 'cubehelix' | 'cubehelix-long';\n}\n\nexport const SCALE_PROPERTIES:(keyof Scale)[]= [\n  'type', 'domain', 'range', 'round', 'rangeStep', 'scheme', 'padding', 'paddingInner', 'paddingOuter', 'clamp', 'nice',\n  'exponent', 'zero', 'interpolate'\n];\n\nexport function scaleTypeSupportProperty(scaleType: ScaleType, propName: keyof Scale) {\n  switch (propName) {\n    case 'type':\n    case 'domain':\n    case 'range':\n    case 'scheme':\n      return true;\n    case 'interpolate':\n      return scaleType === 'linear';\n    case 'round':\n      return isContinuousToContinuous(scaleType) || scaleType === 'band' || scaleType === 'point';\n    case 'rangeStep':\n    case 'padding':\n    case 'paddingOuter':\n      return contains(['point', 'band'], scaleType);\n    case 'paddingInner':\n      return scaleType === 'band';\n    case 'clamp':\n      return isContinuousToContinuous(scaleType) || scaleType === 'sequential';\n    case 'nice':\n      return isContinuousToContinuous(scaleType) || scaleType === 'sequential' || scaleType as any === 'quantize';\n    case 'exponent':\n      return scaleType === 'pow' || scaleType === 'log';\n    case 'zero':\n      // TODO: what about quantize, threshold?\n      return !hasDiscreteDomain(scaleType) && !contains(['log', 'time', 'utc'], scaleType);\n  }\n  /* istanbul ignore next: should never reach here*/\n  throw new Error(`Invalid scale property ${propName}.`);\n}\n\n/**\n * Returns undefined if the input channel supports the input scale property name\n */\nexport function channelScalePropertyIncompatability(channel: Channel, propName: keyof Scale): string {\n  switch (propName) {\n    case 'range':\n      // User should not customize range for position and facet channel directly.\n      if (channel === 'x' || channel === 'y') {\n        return log.message.CANNOT_USE_RANGE_WITH_POSITION;\n      }\n      if (channel === 'row' || channel === 'column') {\n        return log.message.cannotUseRangePropertyWithFacet('range');\n      }\n      return undefined; // GOOD!\n    // band / point\n    case 'rangeStep':\n      if (channel === 'row' || channel === 'column') {\n        return log.message.cannotUseRangePropertyWithFacet('rangeStep');\n      }\n      return undefined; // GOOD!\n    case 'padding':\n    case 'paddingInner':\n    case 'paddingOuter':\n      if (channel === 'row' || channel === 'column') {\n        /*\n         * We do not use d3 scale's padding for row/column because padding there\n         * is a ratio ([0, 1]) and it causes the padding to be decimals.\n         * Therefore, we manually calculate \"spacing\" in the layout by ourselves.\n         */\n        return log.message.CANNOT_USE_PADDING_WITH_FACET;\n      }\n      return undefined; // GOOD!\n    case 'interpolate':\n    case 'scheme':\n      if (channel !== 'color') {\n        return log.message.cannotUseScalePropertyWithNonColor(channel);\n      }\n      return undefined;\n    case 'type':\n    case 'domain':\n    case 'round':\n    case 'clamp':\n    case 'exponent':\n    case 'nice':\n    case 'zero':\n      // These channel do not have strict requirement\n      return undefined; // GOOD!\n  }\n  /* istanbul ignore next: it should never reach here */\n  throw new Error('Invalid scale property \"${propName}\".');\n}\n","import {VgBinding} from './vega.schema';\n\nexport type SelectionTypes = 'single' | 'multi' | 'interval';\nexport type SelectionDomain = 'data' | 'visual';\nexport type SelectionResolutions = 'single' | 'independent' | 'union' |\n  'union_others' | 'intersect' | 'intersect_others';\n\nexport interface BaseSelectionDef {\n  // domain?: SelectionDomain;\n  on?: any;\n  // predicate?: string;\n  bind?: 'scales' | VgBinding | {[key: string]: VgBinding};\n\n  // Transforms\n  fields?: string[];\n  encodings?: string[];\n  toggle?: string | boolean;\n  translate?: string | boolean;\n  zoom?: string | boolean;\n  nearest?: boolean;\n}\n\nexport interface SelectionDef extends BaseSelectionDef {\n  type: SelectionTypes;\n}\n\nexport interface SelectionConfig {\n  single: BaseSelectionDef;\n  multi: BaseSelectionDef;\n  interval: BaseSelectionDef;\n}\n\nexport const defaultConfig:SelectionConfig = {\n  single: {on: 'click', fields: ['_id']},\n  multi: {on: 'click', fields: ['_id'], toggle: 'event.shiftKey'},\n  interval: {\n    on: '[mousedown, window:mouseup] > window:mousemove!',\n    encodings: ['x', 'y'],\n    translate: '[mousedown, window:mouseup] > window:mousemove!',\n    zoom: 'wheel'\n  }\n};\n","import {AggregateOp} from './aggregate';\n\nexport type SortOrder = 'ascending' | 'descending' | null;\n\nexport interface SortField {\n  /**\n   * The field name to aggregate over.\n   */\n  field: string;\n  /**\n   * The sort aggregation operator\n   */\n  op: AggregateOp;\n\n  order?: SortOrder;\n}\n\nexport function isSortField(sort: SortOrder | SortField): sort is SortField {\n  return !!sort && !!sort['field'] && !!sort['op'];\n}\n","/* Package of defining Vega-lite Specification's json schema at its utility functions */\n\nimport {Config, defaultOverlayConfig} from './config';\nimport * as compositeMark from './compositemark';\nimport {Data} from './data';\nimport {EncodingWithFacet, Encoding, channelHasField, isRanged} from './encoding';\nimport {Facet} from './facet';\nimport {FieldDef} from './fielddef';\n\nimport * as log from './log';\nimport {Mark, MarkDef, AREA, LINE, POINT, isPrimitiveMark} from './mark';\nimport {stack} from './stack';\nimport {Transform} from './transform';\nimport {ROW, COLUMN, X, Y, X2, Y2} from './channel';\nimport * as vlEncoding from './encoding';\nimport {contains, duplicate, extend, hash, keys, omit, pick, vals} from './util';\nimport {SelectionDef} from './selection';\n\nexport type Padding = number | {top?: number, bottom?: number, left?: number, right?: number};\n\nexport interface BaseSpec {\n  /**\n   * URL to JSON schema for this Vega-Lite specification.\n   * @format uri\n   */\n  $schema?: string;\n\n  /**\n   * Name of the visualization for later reference.\n   */\n  name?: string;\n\n  /**\n   * An optional description of this mark for commenting purpose.\n   * This property has no effect on the output visualization.\n   */\n  description?: string;\n\n  /**\n   * The default visualization padding, in pixels, from the edge of the visualization canvas to the data rectangle. This can be a single number or an object with `\"top\"`, `\"left\"`, `\"right\"`, `\"bottom\"` properties.\n   *\n   * __Default value__: `5`\n   *\n   * @minimum 0\n   */\n  padding?: Padding;\n\n  /**\n   * An object describing the data source\n   */\n  data?: Data;\n\n  /**\n   * An object describing filter and new field calculation.\n   */\n  transform?: Transform;\n\n  /**\n   * Configuration object\n   */\n  config?: Config;\n}\n\nexport interface GenericUnitSpec<M, E extends Encoding> extends BaseSpec {\n  // FIXME description for top-level width\n  width?: number;\n\n  // FIXME description for top-level width\n  height?: number;\n\n  /**\n   * The mark type.\n   * One of `\"bar\"`, `\"circle\"`, `\"square\"`, `\"tick\"`, `\"line\"`,\n   * `\"area\"`, `\"point\"`, `\"rule\"`, and `\"text\"`.\n   */\n  mark: M;\n\n  /**\n   * A key-value mapping between encoding channels and definition of fields.\n   */\n  encoding: E;\n\n  /**\n   * A key-value mapping between selection names and definitions.\n   */\n  selection?: {[name: string]: SelectionDef};\n}\n\nexport type UnitSpec = GenericUnitSpec<Mark | MarkDef, Encoding>;\n\nexport type LayeredUnitSpec = GenericUnitSpec<string | MarkDef, Encoding>;\n\nexport type FacetedUnitSpec = GenericUnitSpec<string | MarkDef, EncodingWithFacet>;\n\nexport interface GenericLayerSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec {\n  // FIXME description for top-level width\n  width?: number;\n\n  // FIXME description for top-level width\n  height?: number;\n\n  /**\n   * Unit specs that will be layered.\n   */\n  // TODO: support layer of layer\n  layer: (GenericLayerSpec<U> | U)[];\n}\n\nexport type LayerSpec = GenericLayerSpec<UnitSpec>;\n\nexport interface GenericFacetSpec<U extends GenericUnitSpec<any, any>> extends BaseSpec {\n  facet: Facet;\n\n  // TODO: support facet of facet\n  spec: GenericLayerSpec<U> | U;\n}\n\nexport type FacetSpec = GenericFacetSpec<UnitSpec>;\nexport type ExtendedFacetSpec = GenericFacetSpec<FacetedUnitSpec>;\n\nexport type GenericSpec<U extends GenericUnitSpec<any, any>> = U | GenericLayerSpec<U> | GenericFacetSpec<U>;\n\nexport type ExtendedSpec = GenericSpec<FacetedUnitSpec>;\n\nexport type Spec = GenericSpec<UnitSpec>;\n\n/* Custom type guards */\n\n\nexport function isFacetSpec(spec: GenericSpec<GenericUnitSpec<any, any>>): spec is GenericFacetSpec<GenericUnitSpec<any, any>> {\n  return spec['facet'] !== undefined;\n}\n\nexport function isFacetedUnitSpec(spec: ExtendedSpec): spec is FacetedUnitSpec {\n  if (isUnitSpec(spec)) {\n    const hasRow = channelHasField(spec.encoding, ROW);\n    const hasColumn = channelHasField(spec.encoding, COLUMN);\n\n    return hasRow || hasColumn;\n  }\n\n  return false;\n}\n\nexport function isUnitSpec(spec: ExtendedSpec | Spec): spec is FacetedUnitSpec | UnitSpec {\n  return !!spec['mark'];\n}\n\nexport function isLayerSpec(spec: ExtendedSpec | Spec): spec is GenericLayerSpec<GenericUnitSpec<any, Encoding>> {\n  return spec['layer'] !== undefined;\n}\n\n/**\n * Decompose extended unit specs into composition of pure unit specs.\n */\n// TODO: consider moving this to another file.  Maybe vl.spec.normalize or vl.normalize\nexport function normalize(spec: ExtendedSpec): Spec {\n  if (isFacetSpec(spec)) {\n    return normalizeFacet(spec);\n  }\n  if (isLayerSpec(spec)) {\n    return normalizeLayer(spec);\n  }\n  if (isFacetedUnitSpec(spec)) {\n    return normalizeFacetedUnit(spec);\n  }\n  if (isUnitSpec(spec)) {\n    return normalizeNonFacetUnit(spec);\n  }\n  throw new Error(log.message.INVALID_SPEC);\n}\n\nfunction normalizeNonFacet(spec: GenericLayerSpec<LayeredUnitSpec> | LayeredUnitSpec) {\n  if (isLayerSpec(spec)) {\n    return normalizeLayer(spec);\n  }\n  return normalizeNonFacetUnit(spec);\n}\n\nfunction normalizeFacet(spec: GenericFacetSpec<LayeredUnitSpec>): FacetSpec {\n  const {spec: subspec, ...rest} = spec;\n  return {\n    ...rest,\n    spec: normalizeNonFacet(subspec)\n  };\n}\n\nfunction normalizeLayer(spec: GenericLayerSpec<LayeredUnitSpec>): LayerSpec {\n  const {layer: layer, ...rest} = spec;\n  return {\n    ...rest,\n    layer: layer.map(normalizeNonFacet)\n  };\n}\n\nfunction normalizeFacetedUnit(spec: FacetedUnitSpec): FacetSpec {\n  // New encoding in the inside spec should not contain row / column\n  // as row/column should be moved to facet\n  const {row: row, column: column, ...encoding} = spec.encoding;\n\n  // Mark and encoding should be moved into the inner spec\n  const {mark: mark, encoding: _, ...outerSpec} = spec;\n\n  return {\n    ...outerSpec,\n    facet: {\n      ...(row ? {row} : {}),\n      ...(column ? {column}: {}),\n    },\n    spec: normalizeNonFacetUnit({\n      mark,\n      encoding\n    })\n  };\n}\n\nfunction isNonFacetUnitSpecWithPrimitiveMark(spec: GenericUnitSpec<string | MarkDef, Encoding>):\n  spec is GenericUnitSpec<Mark, Encoding> {\n    return isPrimitiveMark(spec.mark);\n}\n\nfunction normalizeNonFacetUnit(spec: GenericUnitSpec<string | MarkDef, Encoding>) {\n  const config = spec.config;\n  const overlayConfig = config && config.overlay;\n  const overlayWithLine = overlayConfig  && spec.mark === AREA &&\n    contains(['linepoint', 'line'], overlayConfig.area);\n  const overlayWithPoint = overlayConfig && (\n    (overlayConfig.line && spec.mark === LINE) ||\n    (overlayConfig.area === 'linepoint' && spec.mark === AREA)\n  );\n\n  if (isNonFacetUnitSpecWithPrimitiveMark(spec)) {\n    // TODO: thoroughly test\n    if (isRanged(spec.encoding)) {\n      return normalizeRangedUnit(spec);\n    }\n\n    // TODO: consider moving this to become another case of compositeMark\n    if (overlayWithPoint || overlayWithLine) {\n      return normalizeOverlay(spec, overlayWithPoint, overlayWithLine);\n    }\n\n    return spec; // Nothing to normalize\n  } else {\n    return compositeMark.normalize(spec);\n  }\n}\n\nfunction normalizeRangedUnit(spec: UnitSpec) {\n  const hasX = channelHasField(spec.encoding, X);\n  const hasY = channelHasField(spec.encoding, Y);\n  const hasX2 = channelHasField(spec.encoding, X2);\n  const hasY2 = channelHasField(spec.encoding, Y2);\n  if ((hasX2 && !hasX) || (hasY2 && !hasY)) {\n    let normalizedSpec = duplicate(spec);\n    if (hasX2 && !hasX) {\n      normalizedSpec.encoding.x = normalizedSpec.encoding.x2;\n      delete normalizedSpec.encoding.x2;\n    }\n    if (hasY2 && !hasY) {\n      normalizedSpec.encoding.y = normalizedSpec.encoding.y2;\n      delete normalizedSpec.encoding.y2;\n    }\n\n    return normalizedSpec;\n  }\n  return spec;\n}\n\n\n// FIXME(#1804): rewrite this\nfunction normalizeOverlay(spec: UnitSpec, overlayWithPoint: boolean, overlayWithLine: boolean): LayerSpec {\n  let outerProps = ['name', 'description', 'data', 'transform'];\n  let baseSpec = omit(spec, outerProps.concat('config'));\n\n  let baseConfig = duplicate(spec.config);\n  delete baseConfig.overlay;\n  // TODO: remove shape, size\n\n  // Need to copy stack config to overlayed layer\n  const stacked = stack(spec.mark,\n    spec.encoding,\n    spec.config ? spec.config.stack : undefined\n  );\n\n  const layerSpec = {\n    ...pick(spec, outerProps),\n    layer: [baseSpec],\n    ...(keys(baseConfig).length > 0 ? {config: baseConfig} : {})\n  };\n\n  if (overlayWithLine) {\n    // TODO: add name with suffix\n    let lineSpec = duplicate(baseSpec);\n    lineSpec.mark = LINE;\n    // TODO: remove shape, size\n    let markConfig = extend({},\n      defaultOverlayConfig.lineStyle,\n      spec.config.overlay.lineStyle,\n      stacked ? {stacked: stacked.offset} : null\n    );\n    if (keys(markConfig).length > 0) {\n      lineSpec.config = {mark: markConfig};\n    }\n\n    layerSpec.layer.push(lineSpec);\n  }\n\n  if (overlayWithPoint) {\n    // TODO: add name with suffix\n    let pointSpec = duplicate(baseSpec);\n    pointSpec.mark = POINT;\n\n    let markConfig = extend({},\n      defaultOverlayConfig.pointStyle,\n      spec.config.overlay.pointStyle,\n      stacked ? {stacked: stacked.offset} : null\n    );\n    if (keys(markConfig).length > 0) {\n      pointSpec.config = {mark: markConfig};\n    }\n    layerSpec.layer.push(pointSpec);\n  }\n  return layerSpec;\n}\n\n// TODO: add vl.spec.validate & move stuff from vl.validate to here\n\n/* Accumulate non-duplicate fieldDefs in a dictionary */\nfunction accumulate(dict: any, fieldDefs: FieldDef[]): any {\n  fieldDefs.forEach(function(fieldDef) {\n    // Consider only pure fieldDef properties (ignoring scale, axis, legend)\n    const pureFieldDef = ['field', 'type', 'value', 'timeUnit', 'bin', 'aggregate'].reduce((f, key) => {\n      if (fieldDef[key] !== undefined) {\n        f[key] = fieldDef[key];\n      }\n      return f;\n    }, {});\n    let key = hash(pureFieldDef);\n    dict[key] = dict[key] || fieldDef;\n  });\n  return dict;\n}\n\n/* Recursively get fieldDefs from a spec, returns a dictionary of fieldDefs */\nfunction fieldDefIndex(spec: ExtendedSpec | ExtendedFacetSpec, dict: any = {}): any {\n  // TODO: Support repeat and concat\n  if (isLayerSpec(spec)) {\n    spec.layer.forEach(function(layer) {\n      if (isUnitSpec(layer)) {\n        accumulate(dict, vlEncoding.fieldDefs(layer.encoding));\n      } else {\n        fieldDefIndex(layer, dict);\n      }\n    });\n  } else if (isFacetSpec(spec)) {\n    accumulate(dict, vlEncoding.fieldDefs(spec.facet));\n    fieldDefIndex(spec.spec, dict);\n  } else { // Unit Spec\n    accumulate(dict, vlEncoding.fieldDefs(spec.encoding));\n  }\n  return dict;\n}\n\n/* Returns all non-duplicate fieldDefs in a spec in a flat array */\nexport function fieldDefs(spec: ExtendedSpec | ExtendedFacetSpec): FieldDef[] {\n  return vals(fieldDefIndex(spec));\n};\n\nexport function isStacked(spec: FacetedUnitSpec): boolean {\n  if (isPrimitiveMark(spec.mark)) {\n    return stack(spec.mark, spec.encoding,\n            spec.config ? spec.config.stack : undefined\n          ) !== null;\n  }\n  return false;\n}\n","import * as log from './log';\n\nimport {SUM_OPS} from './aggregate';\nimport {Channel, STACK_GROUP_CHANNELS, X, Y, X2, Y2} from './channel';\nimport {Encoding, channelHasField, isAggregate} from './encoding';\nimport {FieldDef, PositionFieldDef, isFieldDef} from './fielddef';\nimport {Mark, BAR, AREA, POINT, CIRCLE, SQUARE, LINE, RULE, TEXT, TICK, MarkDef, isMarkDef} from './mark';\nimport {ScaleType} from './scale';\nimport {contains, isArray} from './util';\n\n\n\nexport type StackOffset = 'zero' | 'center' | 'normalize' | 'none';\n\nexport interface StackProperties {\n  /** Dimension axis of the stack ('x' or 'y'). */\n  groupbyChannel: Channel;\n\n  /** Measure axis of the stack ('x' or 'y'). */\n  fieldChannel: Channel;\n\n  /** Stack-by fields e.g., color, detail */\n  stackBy: {\n    fieldDef: FieldDef,\n    channel: Channel\n  }[];\n\n  /**\n   * Modes for stacking marks:\n   * - `zero`: stacking with baseline offset at zero value of the scale (for creating typical stacked [bar](mark.html#stacked-bar-chart) and [area](mark.html#stacked-area-chart) chart).\n   * - `normalize` - stacking with normalized domain (for creating normalized stacked [bar](mark.html#normalized-stacked-bar-chart) and [area](mark.html#normalized-stacked-area-chart) chart). <br/>\n   * -`center` - stacking with center baseline (for [streamgraph](mark.html#streamgraph)).\n   * - `none` - No-stacking. This will produce layered [bar](mark.html#layered-bar-chart) and area chart.\n   *\n   * __Default value:__ `zero` for plots with all of the following conditions: (1) `bar` or `area` marks (2) `color`, `opacity`, `size`, or `detail` channel mapped to a group-by field (3) One ordinal or nominal axis, and (4) one quantitative axis with linear scale and summative aggregation function (e.g., `sum`, `count`).\n   */\n  offset: StackOffset;\n}\n\nexport const STACKABLE_MARKS = [BAR, AREA, RULE, POINT, CIRCLE, SQUARE, LINE, TEXT, TICK];\nexport const STACK_BY_DEFAULT_MARKS = [BAR, AREA];\n\n// Note: CompassQL uses this method and only pass in required properties of each argument object.\n// If required properties change, make sure to update CompassQL.\n\nexport function stack(m: Mark | MarkDef, encoding: Encoding, stackConfig: StackOffset): StackProperties {\n  const mark = isMarkDef(m) ? m.type : m;\n  // Should have stackable mark\n  if (!contains(STACKABLE_MARKS, mark)) {\n    return null;\n  }\n\n  // Should be aggregate plot\n  if (!isAggregate(encoding)) {\n    return null;\n  }\n\n  // Should have grouping level of detail\n  const stackBy = STACK_GROUP_CHANNELS.reduce((sc, channel) => {\n    if (channelHasField(encoding, channel)) {\n      const channelDef = encoding[channel];\n      (isArray(channelDef) ? channelDef : [channelDef]).forEach((fieldDef) => {\n        if (isFieldDef(fieldDef) && !fieldDef.aggregate) {\n          sc.push({\n            channel: channel,\n            fieldDef: fieldDef\n          });\n        }\n      });\n    }\n    return sc;\n  }, []);\n\n  if (stackBy.length === 0) {\n    return null;\n  }\n\n  // Has only one aggregate axis\n  const hasXField = isFieldDef(encoding.x);\n  const hasYField = isFieldDef(encoding.y);\n  const xIsAggregate = isFieldDef(encoding.x) && !!encoding.x.aggregate;\n  const yIsAggregate = isFieldDef(encoding.y) && !!encoding.y.aggregate;\n\n  if (xIsAggregate !== yIsAggregate) {\n    const fieldChannel = xIsAggregate ? X : Y;\n    const fieldDef = encoding[fieldChannel] as PositionFieldDef;\n    const fieldChannelAggregate = fieldDef.aggregate;\n    const fieldChannelScale = fieldDef.scale;\n\n    let stackOffset: StackOffset = null;\n    if (fieldDef.stack !== undefined) {\n      stackOffset = fieldDef.stack;\n    } else if (contains(STACK_BY_DEFAULT_MARKS, mark)) {\n      // Bar and Area with sum ops are automatically stacked by default\n      stackOffset = stackConfig === undefined ? 'zero' : stackConfig;\n    } else {\n      stackOffset = stackConfig;\n    }\n\n    if (!stackOffset || stackOffset === 'none') {\n      return null;\n    }\n\n    // If stacked, check if it qualifies for stacking (and log warning if not qualified.)\n    if (fieldChannelScale && fieldChannelScale.type && fieldChannelScale.type !== ScaleType.LINEAR) {\n      log.warn(log.message.cannotStackNonLinearScale(fieldChannelScale.type));\n      return null;\n    }\n\n    if (channelHasField(encoding, fieldChannel === X ? X2 : Y2)) {\n      log.warn(log.message.cannotStackRangedMark(fieldChannel));\n      return null;\n    }\n\n    if (!contains(SUM_OPS, fieldChannelAggregate)) {\n      log.warn(log.message.cannotStackNonSummativeAggregate(fieldChannelAggregate));\n      return null;\n    }\n\n    return {\n      groupbyChannel: xIsAggregate ? (hasYField ? Y : null) : (hasXField ? X : null),\n      fieldChannel: fieldChannel,\n      stackBy: stackBy,\n      offset: stackOffset\n    };\n  }\n  return null;\n}\n","import {DateTimeExpr, dateTimeExpr} from './datetime';\nimport {Dict, keys} from './util';\nimport * as log from './log';\n\nexport namespace TimeUnit {\n  export const YEAR: 'year' = 'year';\n  export const MONTH: 'month' = 'month';\n  export const DAY: 'day' = 'day';\n  export const DATE: 'date' = 'date';\n  export const HOURS: 'hours' = 'hours';\n  export const MINUTES: 'minutes' = 'minutes';\n  export const SECONDS: 'seconds' = 'seconds';\n  export const MILLISECONDS: 'milliseconds' = 'milliseconds';\n  export const YEARMONTH: 'yearmonth' = 'yearmonth';\n  export const YEARMONTHDATE: 'yearmonthdate' = 'yearmonthdate';\n  export const YEARMONTHDATEHOURS: 'yearmonthdatehours' = 'yearmonthdatehours';\n  export const YEARMONTHDATEHOURSMINUTES: 'yearmonthdatehoursminutes' = 'yearmonthdatehoursminutes';\n  export const YEARMONTHDATEHOURSMINUTESSECONDS: 'yearmonthdatehoursminutesseconds' = 'yearmonthdatehoursminutesseconds';\n\n  // MONTHDATE always include 29 February since we use year 0th (which is a leap year);\n  export const MONTHDATE: 'monthdate' = 'monthdate';\n  export const HOURSMINUTES: 'hoursminutes' = 'hoursminutes';\n  export const HOURSMINUTESSECONDS: 'hoursminutesseconds' = 'hoursminutesseconds';\n  export const MINUTESSECONDS: 'minutesseconds' = 'minutesseconds';\n  export const SECONDSMILLISECONDS: 'secondsmilliseconds' = 'secondsmilliseconds';\n  export const QUARTER: 'quarter' = 'quarter';\n  export const YEARQUARTER: 'yearquarter' = 'yearquarter';\n  export const QUARTERMONTH: 'quartermonth' = 'quartermonth';\n  export const YEARQUARTERMONTH: 'yearquartermonth' = 'yearquartermonth';\n}\n\nexport type TimeUnit = typeof TimeUnit.YEAR | typeof TimeUnit.MONTH | typeof TimeUnit.DAY | typeof TimeUnit.DATE | typeof TimeUnit.HOURS\n  | typeof TimeUnit.MINUTES | typeof TimeUnit.SECONDS | typeof TimeUnit.MILLISECONDS | typeof TimeUnit.YEARMONTH\n  | typeof TimeUnit.YEARMONTHDATE | typeof TimeUnit.YEARMONTHDATEHOURS | typeof TimeUnit.YEARMONTHDATEHOURSMINUTES\n  | typeof TimeUnit.YEARMONTHDATEHOURSMINUTESSECONDS | typeof TimeUnit.MONTHDATE | typeof TimeUnit.HOURSMINUTES\n  | typeof TimeUnit.HOURSMINUTESSECONDS | typeof TimeUnit.MINUTESSECONDS | typeof TimeUnit.SECONDSMILLISECONDS\n  | typeof TimeUnit.QUARTER | typeof TimeUnit.YEARQUARTER | typeof TimeUnit.QUARTERMONTH | typeof TimeUnit.YEARQUARTERMONTH;\n\n/** Time Unit that only corresponds to only one part of Date objects. */\nexport const SINGLE_TIMEUNITS = [\n  TimeUnit.YEAR,\n  TimeUnit.QUARTER,\n  TimeUnit.MONTH,\n  TimeUnit.DAY,\n  TimeUnit.DATE,\n  TimeUnit.HOURS,\n  TimeUnit.MINUTES,\n  TimeUnit.SECONDS,\n  TimeUnit.MILLISECONDS,\n];\n\nconst SINGLE_TIMEUNIT_INDEX: Dict<boolean> = SINGLE_TIMEUNITS.reduce((d, timeUnit) => {\n  d[timeUnit] = true;\n  return d;\n}, {});\n\nexport function isSingleTimeUnit(timeUnit: TimeUnit) {\n  return !!SINGLE_TIMEUNIT_INDEX[timeUnit];\n}\n\n/**\n * Converts a date to only have the measurements relevant to the specified unit\n * i.e. ('yearmonth', '2000-12-04 07:58:14') -> '2000-12-01 00:00:00'\n * Note: the base date is Jan 01 1900 00:00:00\n */\nexport function convert(unit: TimeUnit, date: Date): Date {\n  const result: Date = new Date(0, 0, 1, 0, 0, 0, 0); // start with uniform date\n  SINGLE_TIMEUNITS.forEach(function(singleUnit) {\n    if (containsTimeUnit(unit, singleUnit)) {\n      switch (singleUnit) {\n        case TimeUnit.DAY:\n          throw new Error('Cannot convert to TimeUnits containing \\'day\\'');\n        case TimeUnit.YEAR:\n          result.setFullYear(date.getFullYear());\n          break;\n        case TimeUnit.QUARTER:\n          // indicate quarter by setting month to be the first of the quarter i.e. may (4) -> april (3)\n          result.setMonth((Math.floor(date.getMonth() / 3)) * 3);\n          break;\n        case TimeUnit.MONTH:\n          result.setMonth(date.getMonth());\n          break;\n        case TimeUnit.DATE:\n          result.setDate(date.getDate());\n          break;\n        case TimeUnit.HOURS:\n          result.setHours(date.getHours());\n          break;\n        case TimeUnit.MINUTES:\n          result.setMinutes(date.getMinutes());\n          break;\n        case TimeUnit.SECONDS:\n          result.setSeconds(date.getSeconds());\n          break;\n        case TimeUnit.MILLISECONDS:\n          result.setMilliseconds(date.getMilliseconds());\n          break;\n      }\n    }\n  });\n\n  return result;\n}\n\nexport const MULTI_TIMEUNITS = [\n  TimeUnit.YEARQUARTER,\n  TimeUnit.YEARQUARTERMONTH,\n  TimeUnit.YEARMONTH,\n  TimeUnit.YEARMONTHDATE,\n  TimeUnit.YEARMONTHDATEHOURS,\n  TimeUnit.YEARMONTHDATEHOURSMINUTES,\n  TimeUnit.YEARMONTHDATEHOURSMINUTESSECONDS,\n  TimeUnit.QUARTERMONTH,\n  TimeUnit.HOURSMINUTES,\n  TimeUnit.HOURSMINUTESSECONDS,\n  TimeUnit.MINUTESSECONDS,\n  TimeUnit.SECONDSMILLISECONDS,\n];\n\nconst MULTI_TIMEUNIT_INDEX: Dict<boolean> = MULTI_TIMEUNITS.reduce((d, timeUnit) => {\n  d[timeUnit] = true;\n  return d;\n}, {});\n\nexport function isMultiTimeUnit(timeUnit: TimeUnit) {\n  return !!MULTI_TIMEUNIT_INDEX[timeUnit];\n}\n\nexport const TIMEUNITS = [\n  TimeUnit.YEAR,\n  TimeUnit.QUARTER,\n  TimeUnit.MONTH,\n  TimeUnit.DAY,\n  TimeUnit.DATE,\n  TimeUnit.HOURS,\n  TimeUnit.MINUTES,\n  TimeUnit.SECONDS,\n  TimeUnit.MILLISECONDS,\n  TimeUnit.YEARQUARTER,\n  TimeUnit.YEARQUARTERMONTH,\n  TimeUnit.YEARMONTH,\n  TimeUnit.YEARMONTHDATE,\n  TimeUnit.YEARMONTHDATEHOURS,\n  TimeUnit.YEARMONTHDATEHOURSMINUTES,\n  TimeUnit.YEARMONTHDATEHOURSMINUTESSECONDS,\n  TimeUnit.QUARTERMONTH,\n  TimeUnit.HOURSMINUTES,\n  TimeUnit.HOURSMINUTESSECONDS,\n  TimeUnit.MINUTESSECONDS,\n  TimeUnit.SECONDSMILLISECONDS\n];\n\n/** Returns true if fullTimeUnit contains the timeUnit, false otherwise. */\nexport function containsTimeUnit(fullTimeUnit: TimeUnit, timeUnit: TimeUnit) {\n  let fullTimeUnitStr = fullTimeUnit.toString();\n  let timeUnitStr = timeUnit.toString();\n  const index = fullTimeUnitStr.indexOf(timeUnitStr);\n  return index > -1 &&\n    (\n      timeUnit !== TimeUnit.SECONDS ||\n      index === 0 ||\n      fullTimeUnitStr.charAt(index-1) !== 'i' // exclude milliseconds\n    );\n}\n\n/**\n * Returns Vega expresssion for a given timeUnit and fieldRef\n */\nexport function fieldExpr(fullTimeUnit: TimeUnit, field: string): string {\n  const fieldRef =  `datum[\"${field}\"]`;\n\n  function func(timeUnit: TimeUnit) {\n    if (timeUnit === TimeUnit.QUARTER) {\n      // quarter starting at 0 (0,3,6,9).\n      return `(quarter(${fieldRef})-1)`;\n    } else {\n      return `${timeUnit}(${fieldRef})`;\n    }\n  }\n\n  let d = SINGLE_TIMEUNITS.reduce((_d: DateTimeExpr, tu: TimeUnit) => {\n    if (containsTimeUnit(fullTimeUnit, tu)) {\n      _d[tu] = func(tu);\n    }\n    return _d;\n  }, {});\n\n  if (d.day && keys(d).length > 1) {\n    log.warn(log.message.dayReplacedWithDate(fullTimeUnit));\n    delete d.day;\n    d.date = func(TimeUnit.DATE);\n  }\n\n  return dateTimeExpr(d);\n}\n\n/** returns the smallest nice unit for scale.nice */\nexport function smallestUnit(timeUnit: TimeUnit): string {\n  if (!timeUnit) {\n    return undefined;\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {\n    return 'second';\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {\n    return 'minute';\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {\n    return 'hour';\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.DAY) ||\n      containsTimeUnit(timeUnit, TimeUnit.DATE)) {\n    return 'day';\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {\n    return 'month';\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.YEAR)) {\n    return 'year';\n  }\n  return undefined;\n}\n\n/** returns the signal expression used for axis labels for a time unit */\nexport function formatExpression(timeUnit: TimeUnit, field: string, shortTimeLabels: boolean): string {\n  if (!timeUnit) {\n    return undefined;\n  }\n\n  let dateComponents: string[] = [];\n  let expression = '';\n  const hasYear = containsTimeUnit(timeUnit, TimeUnit.YEAR);\n\n  if (containsTimeUnit(timeUnit, TimeUnit.QUARTER)) {\n   // special expression for quarter as prefix\n    expression = `'Q' + quarter(${field})`;\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.MONTH)) {\n    // By default use short month name\n    dateComponents.push(shortTimeLabels !== false ? '%b' : '%B');\n  }\n\n  if (containsTimeUnit(timeUnit, TimeUnit.DAY)) {\n    dateComponents.push(shortTimeLabels ? '%a' : '%A');\n  } else if (containsTimeUnit(timeUnit, TimeUnit.DATE)) {\n    dateComponents.push('%d' + (hasYear ? ',' : '')); // add comma if there is year\n  }\n\n  if (hasYear) {\n    dateComponents.push(shortTimeLabels ? '%y' : '%Y');\n  }\n\n  let timeComponents: string[] = [];\n\n  if (containsTimeUnit(timeUnit, TimeUnit.HOURS)) {\n    timeComponents.push('%H');\n  }\n  if (containsTimeUnit(timeUnit, TimeUnit.MINUTES)) {\n    timeComponents.push('%M');\n  }\n  if (containsTimeUnit(timeUnit, TimeUnit.SECONDS)) {\n    timeComponents.push('%S');\n  }\n  if (containsTimeUnit(timeUnit, TimeUnit.MILLISECONDS)) {\n    timeComponents.push('%L');\n  }\n\n  let dateTimeComponents: string[] = [];\n  if (dateComponents.length > 0) {\n    dateTimeComponents.push(dateComponents.join(' '));\n  }\n  if (timeComponents.length > 0) {\n    dateTimeComponents.push(timeComponents.join(':'));\n  }\n\n  if (dateTimeComponents.length > 0) {\n    if (expression) {\n      // Add space between quarter and main time format\n      expression += ` + ' ' + `;\n    }\n    expression += `timeFormat(${field}, '${dateTimeComponents.join(' ')}')`;\n  }\n\n  // If expression is still an empty string, return undefined instead.\n  return expression || undefined;\n}\n\nexport function isDiscreteByDefault(timeUnit: TimeUnit) {\n  switch (timeUnit) {\n    // These time unit use discrete scale by default\n    case 'hours':\n    case 'day':\n    case 'month':\n    case 'quarter':\n      return true;\n  }\n  return false;\n}\n","/** Constants and utilities for data type */\n/** Data type based on level of measurement */\n\nexport namespace Type {\n  export const QUANTITATIVE: 'quantitative' = 'quantitative';\n  export const ORDINAL: 'ordinal' = 'ordinal';\n  export const TEMPORAL: 'temporal' = 'temporal';\n  export const NOMINAL: 'nominal' = 'nominal';\n}\nexport type Type = typeof Type.QUANTITATIVE | typeof Type.ORDINAL | typeof Type.TEMPORAL | typeof Type.NOMINAL;\n\nexport const QUANTITATIVE = Type.QUANTITATIVE;\nexport const ORDINAL = Type.ORDINAL;\nexport const TEMPORAL = Type.TEMPORAL;\nexport const NOMINAL = Type.NOMINAL;\n\n/**\n * Get full, lowercase type name for a given type.\n * @param  type\n * @return Full type name.\n */\nexport function getFullName(type: Type|string): Type {\n  if (type) {\n    type = type.toLowerCase();\n    switch (type) {\n      case 'q':\n      case QUANTITATIVE:\n        return 'quantitative';\n      case 't':\n      case TEMPORAL:\n        return 'temporal';\n      case 'o':\n      case ORDINAL:\n        return 'ordinal';\n      case 'n':\n      case NOMINAL:\n        return 'nominal';\n    }\n  }\n  // If we get invalid input, return undefined type.\n  return undefined;\n}\n","import * as stringify from 'json-stable-stringify';\nexport {extend, isArray, isObject, isNumber, isString, truncate, toSet, stringValue} from 'vega-util';\nimport {isNumber, isString, isArray} from 'vega-util';\n\n/**\n * Creates an object composed of the picked object properties.\n *\n * Example:  (from lodash)\n *\n * var object = {'a': 1, 'b': '2', 'c': 3};\n * pick(object, ['a', 'c']);\n * // → {'a': 1, 'c': 3}\n *\n */\nexport function pick(obj: any, props: string[]) {\n  const copy = {};\n  props.forEach((prop) => {\n    if (obj.hasOwnProperty(prop)) {\n      copy[prop] = obj[prop];\n    }\n  });\n  return copy;\n}\n\n/**\n * The opposite of _.pick; this method creates an object composed of the own\n * and inherited enumerable string keyed properties of object that are not omitted.\n */\nexport function omit(obj: any, props: string[]) {\n  const copy = duplicate(obj);\n  props.forEach((prop) => {\n    delete copy[prop];\n  });\n  return copy;\n}\n\nexport function hash(a: any) {\n  if (isString(a) || isNumber(a) || isBoolean(a)) {\n    return String(a);\n  }\n  return stringify(a);\n}\n\nexport function contains<T>(array: Array<T>, item: T) {\n  return array.indexOf(item) > -1;\n}\n\n/** Returns the array without the elements in item */\nexport function without<T>(array: Array<T>, excludedItems: Array<T>) {\n  return array.filter(item => !contains(excludedItems, item));\n}\n\nexport function union<T>(array: Array<T>, other: Array<T>) {\n  return array.concat(without(other, array));\n}\n\nexport function reduce(obj: any, f: (a: any, i: any, d: any, k: any, o: any) => any, init: any, thisArg?: any) {\n  if (obj.reduce) {\n    return obj.reduce.call(thisArg, f, init);\n  } else {\n    for (const k in obj) {\n      if (obj.hasOwnProperty(k)) {\n        init = f.call(thisArg, init, obj[k], k, obj);\n      }\n    }\n    return init;\n  }\n}\n\n/**\n * Returns true if any item returns true.\n */\nexport function some<T>(arr: Array<T>, f: (d: T, k?: any, i?: any) => boolean) {\n  let i = 0;\n  for (let k = 0; k<arr.length; k++) {\n    if (f(arr[k], k, i++)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Returns true if all items return true.\n */\n export function every<T>(arr: Array<T>, f: (d: T, k?: any, i?: any) => boolean) {\n  let i = 0;\n  for (let k = 0; k<arr.length; k++) {\n    if (!f(arr[k], k, i++)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport function flatten(arrays: any[]) {\n  return [].concat.apply([], arrays);\n}\n\n/**\n * recursively merges src into dest\n */\nexport function mergeDeep(dest: any, ...src: any[]) {\n  for (const s of src) {\n    dest = deepMerge_(dest, s);\n  }\n  return dest;\n};\n\n// recursively merges src into dest\nfunction deepMerge_(dest: any, src: any) {\n  if (typeof src !== 'object' || src === null) {\n    return dest;\n  }\n\n  for (const p in src) {\n    if (!src.hasOwnProperty(p)) {\n      continue;\n    }\n    if (src[p] === undefined) {\n      continue;\n    }\n    if (typeof src[p] !== 'object' || isArray(src[p]) || src[p] === null) {\n      dest[p] = src[p];\n    } else if (typeof dest[p] !== 'object' || dest[p] === null) {\n      dest[p] = mergeDeep(src[p].constructor === Array ? [] : {}, src[p]);\n    } else {\n      mergeDeep(dest[p], src[p]);\n    }\n  }\n  return dest;\n}\n\nexport function unique<T>(values: T[], f: (item: T) => string): T[] {\n  const results: any[] = [];\n  const u = {};\n  let v: string;\n  for (const val of values) {\n    v = f(val);\n    if (v in u) {\n      continue;\n    }\n    u[v] = 1;\n    results.push(val);\n  }\n  return results;\n};\n\nexport interface Dict<T> {\n  [key: string]: T;\n}\n\nexport type StringSet = Dict<boolean>;\n\n/**\n * Returns true if the two dictionaries disagree. Applies only to defined values.\n */\nexport function differ<T>(dict: Dict<T>, other: Dict<T>) {\n  for (const key in dict) {\n    if (dict.hasOwnProperty(key)) {\n      if (other[key] && dict[key] && other[key] !== dict[key]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport const keys = Object.keys;\n\nexport function vals(x: any) {\n  const _vals: any[] = [];\n  for (const k in x) {\n    if (x.hasOwnProperty(k)) {\n      _vals.push(x[k]);\n    }\n  }\n  return _vals;\n};\n\nexport function duplicate<T>(obj: T): T {\n  return JSON.parse(JSON.stringify(obj));\n};\n\nexport function isBoolean(b: any): b is boolean {\n  return b === true || b === false;\n}\n","import {FacetedUnitSpec} from './spec';\nimport {isMarkDef} from './mark';\n\n// TODO: move to vl.spec.validator?\n\nimport {toSet} from './util';\nimport {BAR} from './mark';\n\nexport interface RequiredChannelMap {\n  [mark: string]: Array<string>;\n}\n\n/**\n * Required Encoding Channels for each mark type\n * @type {Object}\n */\nexport const DEFAULT_REQUIRED_CHANNEL_MAP: RequiredChannelMap = {\n  text: ['text'],\n  line: ['x', 'y'],\n  area: ['x', 'y']\n};\n\nexport interface SupportedChannelMap {\n  [mark: string]: {\n    [channel: string]: number\n  };\n}\n\n/**\n * Supported Encoding Channel for each mark type\n */\nexport const DEFAULT_SUPPORTED_CHANNEL_TYPE: SupportedChannelMap = {\n  bar: toSet(['row', 'column', 'x', 'y', 'size', 'color', 'detail']),\n  line: toSet(['row', 'column', 'x', 'y', 'color', 'detail']), // TODO: add size when Vega supports\n  area: toSet(['row', 'column', 'x', 'y', 'color', 'detail']),\n  tick: toSet(['row', 'column', 'x', 'y', 'color', 'detail']),\n  circle: toSet(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n  square: toSet(['row', 'column', 'x', 'y', 'color', 'size', 'detail']),\n  point: toSet(['row', 'column', 'x', 'y', 'color', 'size', 'detail', 'shape']),\n  text: toSet(['row', 'column', 'size', 'color', 'text']) // TODO(#724) revise\n};\n\n// TODO: consider if we should add validate method and\n// requires ZSchema in the main vega-lite repo\n\n/**\n * Further check if encoding mapping of a spec is invalid and\n * return error if it is invalid.\n *\n * This checks if\n * (1) all the required encoding channels for the mark type are specified\n * (2) all the specified encoding channels are supported by the mark type\n * @param  {[type]} spec [description]\n * @param  {RequiredChannelMap  = DefaultRequiredChannelMap}  requiredChannelMap\n * @param  {SupportedChannelMap = DefaultSupportedChannelMap} supportedChannelMap\n * @return {String} Return one reason why the encoding is invalid,\n *                  or null if the encoding is valid.\n */\nexport function getEncodingMappingError(spec: FacetedUnitSpec,\n  requiredChannelMap: RequiredChannelMap = DEFAULT_REQUIRED_CHANNEL_MAP,\n  supportedChannelMap: SupportedChannelMap = DEFAULT_SUPPORTED_CHANNEL_TYPE\n  ) {\n  let mark = isMarkDef(spec.mark) ? spec.mark.type : spec.mark;\n  let encoding = spec.encoding;\n  let requiredChannels = requiredChannelMap[mark];\n  let supportedChannels = supportedChannelMap[mark];\n\n  for (let i in requiredChannels) { // all required channels are in encoding`\n    if (!(requiredChannels[i] in encoding)) {\n      return 'Missing encoding channel \\\"' + requiredChannels[i] +\n        '\\\" for mark \\\"' + mark + '\\\"';\n    }\n  }\n\n  for (let channel in encoding) { // all channels in encoding are supported\n    if (!supportedChannels[channel]) {\n      return 'Encoding channel \\\"' + channel +\n        '\\\" is not supported by mark type \\\"' + mark + '\\\"';\n    }\n  }\n\n  if (mark === BAR && !encoding.x && !encoding.y) {\n    return 'Missing both x and y for bar';\n  }\n\n  return null;\n}\n","import {StackOffset} from './stack';\nimport {ScaleType, NiceTime} from './scale';\nimport {isArray} from './util';\n\nexport interface VgData {\n  name: string;\n  source?: string;\n  values?: any;\n  format?: any;\n  url?: any;\n  transform?: any;\n}\n\n\nexport type VgParentRef = {\n  parent: string\n};\n\nexport type VgFieldRef = string | VgParentRef | VgParentRef[];\n\nexport type VgSortField = boolean | {\n  field: VgFieldRef,\n  op: string\n};\n\nexport type VgDataRef = {\n  data: string,\n  field: VgFieldRef,\n  sort?: VgSortField\n};\n\nexport type VgSignalRef = {\n  signal: string\n};\n\n// TODO: add type of value (Make it VgValueRef<T> {value?:T ...})\nexport type VgValueRef = {\n  value?: number | string | boolean,\n  field?: string | {\n    datum?: string,\n    group?: string,\n    parent?: string\n  },\n  signal?: string;\n  scale?: string, // TODO: object\n  mult?: number,\n  offset?: number | VgValueRef,\n  band?: boolean | number\n};\n\n// TODO: add vg prefix\nexport type DataRefUnionDomain = {\n  fields: (any[] | VgDataRef)[],\n  sort?: boolean | {\n    op: 'count'\n  }\n};\n\n// TODO: add vg prefix\nexport type FieldRefUnionDomain = {\n  data: string,\n  fields: VgFieldRef[],\n  sort?: boolean | {\n    op: 'count'\n  }\n};\n\nexport type VgRangeScheme = {scheme: string, extent?: number[], count?: number};\nexport type VgRange = string | VgDataRef | (number|string|VgDataRef)[] | VgRangeScheme | {step: number};\n\nexport type VgDomain = any[] | VgDataRef | DataRefUnionDomain | FieldRefUnionDomain | VgSignalRef;\n\nexport type VgScale = {\n  name: string,\n  type: ScaleType,\n  domain: VgDomain,\n  domainRaw?: VgSignalRef,\n  range: VgRange,\n\n  clamp?: boolean,\n  exponent?: number,\n  nice?: boolean | NiceTime,\n  padding?: number,\n  paddingInner?: number,\n  paddingOuter?: number,\n  reverse?: boolean,\n  round?: boolean,\n  zero?: boolean\n};\n\nexport function isDataRefUnionedDomain(domain: VgDomain): domain is DataRefUnionDomain {\n  if (!isArray(domain)) {\n    return 'fields' in domain && !('data' in domain);\n  }\n  return false;\n}\n\nexport function isFieldRefUnionDomain(domain: VgDomain): domain is FieldRefUnionDomain {\n  if (!isArray(domain)) {\n    return 'fields' in domain && 'data' in domain;\n  }\n  return false;\n}\n\nexport function isDataRefDomain(domain: VgDomain): domain is VgDataRef {\n  if (!isArray(domain)) {\n    return !('fields' in domain);\n  }\n  return false;\n}\n\nexport type VgEncodeEntry = any;\n// TODO: make export interface VgEncodeEntry {\n//   x?: VgValueRef<number>\n//   y?: VgValueRef<number>\n//  ...\n//   color?: VgValueRef<string>\n//  ...\n// }\n\nexport type VgAxis = any;\nexport type VgLegend = any;\n\nexport interface VgBinTransform {\n  type: 'bin';\n  field: string;\n  as: string;\n  extent?: {signal: string};\n  // TODO: add other properties\n}\n\nexport interface VgExtentTransform {\n  type: 'extent';\n  field: string;\n  signal: string;\n}\n\nexport interface VgFormulaTransform {\n  type: 'formula';\n  as: string;\n  expr: string;\n}\n\nexport interface VgAxisEncode {\n  ticks?: VgGuideEncode;\n  labels?: VgGuideEncode;\n  title?: VgGuideEncode;\n  grid?: VgGuideEncode;\n  domain?: VgGuideEncode;\n}\n\nexport interface VgLegendEncode {\n  title?: VgGuideEncode;\n  labels?: VgGuideEncode;\n  legend?: VgGuideEncode;\n  symbols?: VgGuideEncode;\n  gradient?: VgGuideEncode;\n}\n\nexport type VgGuideEncode = any; // TODO: replace this (See guideEncode in Vega Schema)\n\nexport type VgTransform = VgBinTransform | VgExtentTransform | VgFormulaTransform | any;\n\nexport interface VgStackTransform {\n  type: 'stack';\n  offset?: StackOffset;\n  groupby: string[];\n  field: string;\n  sort: VgSort;\n  as: string[];\n}\n\nexport type VgSort = {\n  field: string;\n  order: 'ascending' | 'descending';\n} | {\n  field: string[];\n  order: ('ascending' | 'descending')[];\n};\n\nexport interface VgImputeTransform {\n  type: 'impute';\n  groupby?: string[];\n  field: string;\n  orderby?: string[];\n  method?: 'value' | 'median' | 'max' | 'min' | 'mean';\n  value?: any;\n};\n\nexport type VgCheckboxBinding = {\n  input: 'checkbox';\n  element?: string;\n};\n\nexport type VgRadioBinding = {\n  input: 'radio';\n  options: string[];\n  element?: string;\n};\n\nexport type VgSelectBinding = {\n  input: 'select';\n  options: string[];\n  element?: string;\n};\n\nexport type VgRangeBinding = {\n  input: 'range';\n  min?: number;\n  max?: number;\n  step?: number;\n  element?: string;\n};\n\nexport type VgGenericBinding = {\n  input: string;\n  element?: string;\n};\n\nexport type VgBinding = VgCheckboxBinding | VgRadioBinding |\n  VgSelectBinding | VgRangeBinding | VgGenericBinding;\n\n\n/**\n * Base object for Vega's Axis and Axis Config.\n * All of these properties are both properties of Vega's Axis and Axis Config.\n */\nexport interface VgAxisBase {\n  /**\n   * A boolean flag indicating if the domain (the axis baseline) should be included as part of the axis (default true).\n   */\n  domain?: boolean;\n\n  /**\n   * A flag indicate if gridlines should be created in addition to ticks. If `grid` is unspecified, the default value is `true` for ROW and COL. For X and Y, the default value is `true` for quantitative and time fields and `false` otherwise.\n   */\n  grid?: boolean;\n\n  /**\n   * A boolean flag indicating if labels should be included as part of the axis (default true).\n   */\n  labels?: boolean;\n\n  /**\n   * The rotation angle of the axis labels.\n   * @minimum 0\n   * @maximum 360\n   */\n  labelAngle?: number;\n\n  /**\n   * Whether the axis should include ticks.\n   */\n  ticks?: boolean;\n\n  /**\n   * The size, in pixels, of major, minor and end ticks.\n   * @minimum 0\n   */\n  tickSize?: number;\n\n  /**\n   * Max length for axis title if the title is automatically generated from the field's description. By default, this is automatically based on cell size and characterWidth property.\n   * @minimum 0\n   * @TJS-type integer\n   */\n  titleMaxLength?: number;\n\n  /**\n   * The padding, in pixels, between title and axis.\n   */\n  titlePadding?: number;\n\n  /**\n   * The minimum extent in pixels that axis ticks and labels should use. This determines a minimum offset value for axis titles.\n   */\n  minExtent?: number;\n\n  /**\n   * The maximum extent in pixels that axis ticks and labels should use. This determines a maximum offset value for axis titles.\n   */\n  maxExtent?: number;\n}\n\nexport interface VgAxisConfig extends VgAxisBase {\n // ---------- Axis ----------\n  /**\n   * Stroke width of axis domain line\n   */\n  domainWidth?: number;\n\n  /**\n   * Color of axis domain line.\n   */\n  domainColor?: string;\n\n  // ---------- Grid ----------\n  /**\n   * Color of gridlines.\n   */\n  gridColor?: string;\n\n  /**\n   * The offset (in pixels) into which to begin drawing with the grid dash array.\n   * @minimum 0\n   */\n  gridDash?: number[];\n\n  /**\n   * The stroke opacity of grid (value between [0,1])\n   * @minimum 0\n   * @maximum 1\n   */\n  gridOpacity?: number;\n\n  /**\n   * The grid width, in pixels.\n   * @minimum 0\n   */\n  gridWidth?: number;\n\n  // ---------- Ticks ----------\n  /**\n   * The color of the axis's tick.\n   */\n  tickColor?: string;\n\n  /**\n   * The color of the tick label, can be in hex color code or regular color name.\n   */\n  labelColor?: string;\n\n  /**\n   * The font of the tick label.\n   */\n  labelFont?: string;\n\n  /**\n   * The font size of label, in pixels.\n   * @minimum 0\n   */\n  labelFontSize?: number;\n\n  /**\n   * The width, in pixels, of ticks.\n   * @minimum 0\n   */\n  tickWidth?: number;\n\n  // ---------- Title ----------\n  /**\n   * Color of the title, can be in hex color code or regular color name.\n   */\n  titleColor?: string;\n\n  /**\n   * Font of the title.\n   */\n  titleFont?: string;\n\n  /**\n   * Font size of the title.\n   * @minimum 0\n   */\n  titleFontSize?: number;\n\n  /**\n   * Font weight of the title.\n   */\n  titleFontWeight?: string | number;\n}\n\nexport interface VgLegendBase {\n  /**\n   * Padding (in pixels) between legend entries in a symbol legend.\n   */\n  entryPadding?: number;\n\n  /**\n   * The orientation of the legend. One of \"left\" or \"right\". This determines how the legend is positioned within the scene. The default is \"right\".\n   */\n  orient?: string;\n\n  /**\n   * The offset, in pixels, by which to displace the legend from the edge of the enclosing group or data rectangle.\n   */\n  offset?: number;\n\n  /**\n   * The padding, in pixels, between the legend and axis.\n   */\n  padding?: number;\n}\n\nexport interface VgLegendConfig extends VgLegendBase {\n  // ---------- Gradient ----------\n  /**\n   * The color of the gradient stroke, can be in hex color code or regular color name.\n   */\n  gradientStrokeColor?: string;\n\n  /**\n   * The width of the gradient stroke, in pixels.\n   * @minimum 0\n   */\n  gradientStrokeWidth?: number;\n\n  /**\n   * The height of the gradient, in pixels.\n   * @minimum 0\n   */\n  gradientHeight?: number;\n\n  /**\n   * The width of the gradient, in pixels.\n   * @minimum 0\n   */\n  gradientWidth?: number;\n\n  // ---------- Label ----------\n  /**\n   * The alignment of the legend label, can be left, middle or right.\n   */\n  labelAlign?: string;\n\n  /**\n   * The position of the baseline of legend label, can be top, middle or bottom.\n   */\n  labelBaseline?: string;\n\n  /**\n   * The color of the legend label, can be in hex color code or regular color name.\n   */\n  labelColor?: string;\n\n  /**\n   * The font of the legend label.\n   */\n  labelFont?: string;\n\n  /**\n   * The font size of legend label.\n   * @minimum 0\n   */\n  labelFontSize?: number;\n\n  /**\n   * The offset of the legend label.\n   * @minimum 0\n   */\n  labelOffset?: number;\n\n  // ---------- Symbols ----------\n  /**\n   * The color of the legend symbol,\n   */\n  symbolColor?: string;\n\n  /**\n   * Default shape type (such as \"circle\") for legend symbols.\n   */\n  symbolType?: string;\n\n  /**\n   * The size of the legend symbol, in pixels.\n   * @minimum 0\n   */\n  symbolSize?: number;\n\n  /**\n   * The width of the symbol's stroke.\n   * @minimum 0\n   */\n  symbolStrokeWidth?: number;\n\n  // ---------- Title ----------\n  /**\n   * Optional mark property definitions for custom legend styling.\n   */\n  /**\n   * The color of the legend title, can be in hex color code or regular color name.\n   */\n  titleColor?: string;\n\n  /**\n   * The font of the legend title.\n   */\n  titleFont?: string;\n\n  /**\n   * The font size of the legend title.\n   */\n  titleFontSize?: number;\n\n  /**\n   * The font weight of the legend title.\n   */\n  titleFontWeight?: string | number;\n\n  /**\n   * The padding, in pixels, between title and legend.\n   */\n  titlePadding?: number;\n}\n\nexport type FontStyle = 'normal' | 'italic';\nexport type FontWeight = 'normal' | 'bold';\n/**\n * @TJS-type integer\n * @minimum 100\n * @maximum 900\n */\nexport type FontWeightNumber = number;\nexport type HorizontalAlign = 'left' | 'right' | 'center';\nexport type Interpolate = 'linear' | 'linear-closed' |\n  'step' | 'step-before' | 'step-after' |\n  'basis' | 'basis-open' | 'basis-closed' |\n  'cardinal' | 'cardinal-open' | 'cardinal-closed' |\n  'bundle' | 'monotone';\nexport type Orient = 'horizontal' | 'vertical';\nexport type VerticalAlign = 'top' | 'middle' | 'bottom';\n\nexport interface VgMarkConfig {\n\n  /**\n   * Default Fill Color.  This has higher precedence than config.color\n   */\n  fill?: string;\n\n  /**\n   * Default Stroke Color.  This has higher precedence than config.color\n   */\n  stroke?: string;\n\n  // ---------- Opacity ----------\n  /**\n   * @minimum 0\n   * @maximum 1\n   */\n  opacity?: number;\n\n\n  /**\n   * @minimum 0\n   * @maximum 1\n   */\n  fillOpacity?: number;\n\n  /**\n   * @minimum 0\n   * @maximum 1\n   */\n  strokeOpacity?: number;\n\n  // ---------- Stroke Style ----------\n  /**\n   * @minimum 0\n   */\n  strokeWidth?: number;\n\n  /**\n   * An array of alternating stroke, space lengths for creating dashed or dotted lines.\n   */\n  strokeDash?: number[];\n\n  /**\n   * The offset (in pixels) into which to begin drawing with the stroke dash array.\n   */\n  strokeDashOffset?: number;\n\n  // ---------- Orientation: Bar, Tick, Line, Area ----------\n  /**\n   * The orientation of a non-stacked bar, tick, area, and line charts.\n   * The value is either horizontal (default) or vertical.\n   * - For bar, rule and tick, this determines whether the size of the bar and tick\n   * should be applied to x or y dimension.\n   * - For area, this property determines the orient property of the Vega output.\n   * - For line, this property determines the sort order of the points in the line\n   * if `config.sortLineBy` is not specified.\n   * For stacked charts, this is always determined by the orientation of the stack;\n   * therefore explicitly specified value will be ignored.\n   */\n  orient?: Orient;\n\n  // ---------- Interpolation: Line / area ----------\n  /**\n   * The line interpolation method to use for line and area marks. One of the following:\n   * - `\"linear\"`: piecewise linear segments, as in a polyline.\n   * - `\"linear-closed\"`: close the linear segments to form a polygon.\n   * - `\"step\"`: alternate between horizontal and vertical segments, as in a step function.\n   * - `\"step-before\"`: alternate between vertical and horizontal segments, as in a step function.\n   * - `\"step-after\"`: alternate between horizontal and vertical segments, as in a step function.\n   * - `\"basis\"`: a B-spline, with control point duplication on the ends.\n   * - `\"basis-open\"`: an open B-spline; may not intersect the start or end.\n   * - `\"basis-closed\"`: a closed B-spline, as in a loop.\n   * - `\"cardinal\"`: a Cardinal spline, with control point duplication on the ends.\n   * - `\"cardinal-open\"`: an open Cardinal spline; may not intersect the start or end, but will intersect other control points.\n   * - `\"cardinal-closed\"`: a closed Cardinal spline, as in a loop.\n   * - `\"bundle\"`: equivalent to basis, except the tension parameter is used to straighten the spline.\n   * - `\"monotone\"`: cubic interpolation that preserves monotonicity in y.\n   */\n  interpolate?: Interpolate;\n  /**\n   * Depending on the interpolation type, sets the tension parameter (for line and area marks).\n   * @minimum 0\n   * @maximum 1\n   */\n  tension?: number;\n\n  /**\n   * The default symbol shape to use. One of: `\"circle\"` (default), `\"square\"`, `\"cross\"`, `\"diamond\"`, `\"triangle-up\"`, or `\"triangle-down\"`, or a custom SVG path.\n   */\n  shape?: string;\n\n  /**\n   * The pixel area each the point/circle/square.\n   * For example: in the case of circles, the radius is determined in part by the square root of the size value.\n   * @minimum 0\n   */\n  size?: number;\n\n  // Text / Label Mark Config\n\n  /**\n   * The horizontal alignment of the text. One of left, right, center.\n   */\n  align?: HorizontalAlign;\n\n  /**\n   * The rotation angle of the text, in degrees.\n   * @minimum 0\n   * @maximum 360\n   */\n  angle?: number;\n\n  /**\n   * The vertical alignment of the text. One of top, middle, bottom.\n   */\n  baseline?: VerticalAlign;\n\n  /**\n   * The horizontal offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the angle property.\n   */\n  dx?: number;\n\n  /**\n   * The vertical offset, in pixels, between the text label and its anchor point. The offset is applied after rotation by the angle property.\n   */\n  dy?: number;\n\n  /**\n   * Polar coordinate radial offset, in pixels, of the text label from the origin determined by the x and y properties.\n   * @minimum 0\n   */\n  radius?: number;\n\n  /**\n   * Polar coordinate angle, in radians, of the text label from the origin determined by the x and y properties. Values for theta follow the same convention of arc mark startAngle and endAngle properties: angles are measured in radians, with 0 indicating \"north\".\n   */\n  theta?: number;\n\n  /**\n   * The typeface to set the text in (e.g., Helvetica Neue).\n   * @minimum 0\n   */\n  font?: string;\n\n  /**\n   * The font size, in pixels.\n   * @minimum 0\n   */\n  fontSize?: number;\n\n  /**\n   * The font style (e.g., italic).\n   */\n  fontStyle?: FontStyle;\n  /**\n   * The font weight (e.g., `\"normal\"`, `\"bold\"`, `900`).\n   */\n  fontWeight?: FontWeight | FontWeightNumber;\n\n  /**\n   * Placeholder Text\n   */\n  text?: string;\n}\n","export import axis = require('./axis');\nexport import aggregate = require('./aggregate');\nexport import bin = require('./bin');\nexport import channel = require('./channel');\nexport import compositeMark = require('./compositemark');\nexport {compile}  from './compile/compile';\nexport import config = require('./config');\nexport import data = require('./data');\nexport import datetime = require('./datetime');\nexport import encoding = require('./encoding');\nexport import facet = require('./facet');\nexport import fieldDef = require('./fielddef');\nexport import legend = require('./legend');\nexport import mark = require('./mark');\nexport import scale = require('./scale');\nexport import sort = require('./sort');\nexport import spec = require('./spec');\nexport import stack = require('./stack');\nexport import timeUnit = require('./timeunit');\nexport import transform = require('./transform');\nexport import type = require('./type');\nexport import util = require('./util');\nexport import validate = require('./validate');\n\nexport const version: string = require('../package.json').version;\n"]}