toGeoJSON=function(){"use strict";function e(e){if(!e||!e.length)return 0;for(var t=0,r=0;t<e.length;t++)r=(r<<5)-r+e.charCodeAt(t)|0;return r}function t(e,t){return e.getElementsByTagName(t)}function r(e,t){return e.getAttribute(t)}function n(e,t){return parseFloat(r(e,t))}function i(e,r){var n=t(e,r);return n.length?n[0]:null}function o(e){return e.normalize&&e.normalize(),e}function u(e){for(var t=0,r=[];t<e.length;t++)r[t]=parseFloat(e[t]);return r}function a(e){var t={};for(var r in e)e[r]&&(t[r]=e[r]);return t}function l(e){return e&&o(e),e&&e.firstChild&&e.firstChild.nodeValue||""}function s(e){return u(e.replace(y,"").split(","))}function f(e){for(var t=e.replace(d,"").split(v),r=[],n=0;n<t.length;n++)r.push(s(t[n]));return r}function c(e){var t=[n(e,"lon"),n(e,"lat")],r=i(e,"ele");return r&&t.push(parseFloat(l(r))),t}function p(){return{type:"FeatureCollection",features:[]}}function g(e){return h.serializeToString(e)}var h,y=/\s*/g,d=/^\s*|\s*$/g,v=/\s+/;return"undefined"!=typeof XMLSerializer?h=new XMLSerializer:"object"!=typeof exports||"object"!=typeof process||process.browser||(h=new(require("xmldom").XMLSerializer)),{kml:function(n){function o(e){var t,r;return e=e||"","#"===e.substr(0,1)&&(e=e.substr(1)),6!==e.length&&3!==e.length||(t=e),8===e.length&&(r=parseInt(e.substr(0,2),16)/255,t=e.substr(2)),[t,isNaN(r)?void 0:r]}function a(e){return u(e.split(" "))}function c(e){var r=t(e,"coord","gx"),n=[];0===r.length&&(r=t(e,"gx:coord"));for(var i=0;i<r.length;i++)n.push(a(l(r[i])));return n}function h(e){var r,n,o,u,a,p=[];if(i(e,"MultiGeometry"))return h(i(e,"MultiGeometry"));if(i(e,"MultiTrack"))return h(i(e,"MultiTrack"));if(i(e,"gx:MultiTrack"))return h(i(e,"gx:MultiTrack"));for(o=0;o<v.length;o++)if(n=t(e,v[o]))for(u=0;u<n.length;u++)if(r=n[u],"Point"==v[o])p.push({type:"Point",coordinates:s(l(i(r,"coordinates")))});else if("LineString"==v[o])p.push({type:"LineString",coordinates:f(l(i(r,"coordinates")))});else if("Polygon"==v[o]){var g=t(r,"LinearRing"),y=[];for(a=0;a<g.length;a++)y.push(f(l(i(g[a],"coordinates"))));p.push({type:"Polygon",coordinates:y})}else"Track"!=v[o]&&"gx:Track"!=v[o]||p.push({type:"LineString",coordinates:c(r)});return p}for(var y=p(),d={},v=["Polygon","LineString","Point","Track","gx:Track"],m=t(n,"Placemark"),k=t(n,"Style"),S=0;S<k.length;S++)d["#"+r(k[S],"id")]=e(g(k[S])).toString(16);for(var b=0;b<m.length;b++)y.features=y.features.concat(function(e){var n,u=h(e),a={},s=l(i(e,"name")),f=l(i(e,"styleUrl")),c=l(i(e,"description")),p=i(e,"TimeSpan"),g=i(e,"ExtendedData"),y=i(e,"LineStyle"),v=i(e,"PolyStyle");if(!u.length)return[];if(s&&(a.name=s),f&&d[f]&&(a.styleUrl=f,a.styleHash=d[f]),c&&(a.description=c),p){var m=l(i(p,"begin")),k=l(i(p,"end"));a.timespan={begin:m,end:k}}if(y){var S=o(l(i(y,"color"))),b=S[0],L=S[1],x=parseFloat(l(i(y,"width")));b&&(a.stroke=b),isNaN(L)||(a["stroke-opacity"]=L),isNaN(x)||(a["stroke-width"]=x)}if(v){var N=o(l(i(v,"color"))),T=N[0],M=N[1],F=l(i(v,"fill")),P=l(i(v,"outline"));T&&(a.fill=T),isNaN(M)||(a["fill-opacity"]=M),F&&(a["fill-opacity"]="1"===F?1:0),P&&(a["stroke-opacity"]="1"===P?1:0)}if(g){var w=t(g,"Data"),z=t(g,"SimpleData");for(n=0;n<w.length;n++)a[w[n].getAttribute("name")]=l(i(w[n],"value"));for(n=0;n<z.length;n++)a[z[n].getAttribute("name")]=l(z[n])}var C={type:"Feature",geometry:1===u.length?u[0]:{type:"GeometryCollection",geometries:u},properties:a};return r(e,"id")&&(C.id=r(e,"id")),[C]}(m[b]));return y},gpx:function(e){function r(e,r){var n=t(e,r),i=[],o=n.length;if(!(o<2)){for(var u=0;u<o;u++)i.push(c(n[u]));return i}}function n(e){var t,r=["name","desc","author","copyright","link","time","keywords"],n={};for(t=0;t<r.length;t++)n[r[t]]=l(i(e,r[t]));return a(n)}var o,u,s=t(e,"trk"),f=t(e,"rte"),g=t(e,"wpt"),h=p();for(o=0;o<s.length;o++)(u=function(e){for(var i,o=t(e,"trkseg"),u=[],a=0;a<o.length;a++)(i=r(o[a],"trkpt"))&&u.push(i);if(0!==u.length)return{type:"Feature",properties:n(e),geometry:{type:1===u.length?"LineString":"MultiLineString",coordinates:1===u.length?u[0]:u}}}(s[o]))&&h.features.push(u);for(o=0;o<f.length;o++)(u=function(e){var t=r(e,"rtept");if(t)return{type:"Feature",properties:n(e),geometry:{type:"LineString",coordinates:t}}}(f[o]))&&h.features.push(u);for(o=0;o<g.length;o++)h.features.push(function(e){var t=n(e);return t.sym=l(i(e,"sym")),{type:"Feature",properties:t,geometry:{type:"Point",coordinates:c(e)}}}(g[o]));return h}}}(),"undefined"!=typeof module&&(module.exports=toGeoJSON);
//# sourceMappingURL=togeojson.min.js.map