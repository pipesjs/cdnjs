toGeoJSON=function(){function e(e){if(!e||!e.length)return 0;for(var t=0,r=0;t<e.length;t++)r=(r<<5)-r+e.charCodeAt(t)|0;return r}function r(e,t){return e.getElementsByTagName(t)}function n(e,t){return e.getAttribute(t)}function o(e,t){return parseFloat(n(e,t))}function i(e,t){var n=r(e,t);return n.length?n[0]:null}function u(e){for(var t=0,r=[];t<e.length;t++)r[t]=parseFloat(e[t]);return r}function a(e){return e&&e.firstChild&&e.firstChild.nodeValue}function l(e){return u(e.replace(g,"").split(","))}function f(e){for(var t=e.replace(c,"").split(p),r=[],n=0;n<t.length;n++)r.push(l(t[n]));return r}function s(){return{type:"FeatureCollection",features:[]}}var g=/\s*/g,c=/^\s*|\s*$/g,p=/\s+/;return t={kml:function(t,n){function o(e){var t,n,u,s,g,p=[];if(i(e,"MultiGeometry"))return o(i(e,"MultiGeometry"));for(u=0;u<c.length;u++)if(n=r(e,c[u]))for(s=0;s<n.length;s++)if(t=n[s],"Point"==c[u])p.push({type:"Point",coordinates:l(a(i(t,"coordinates")))});else if("LineString"==c[u])p.push({type:"LineString",coordinates:f(a(i(t,"coordinates")))});else if("Polygon"==c[u]){var h=r(t,"LinearRing"),y=[];for(g=0;g<h.length;g++)y.push(f(a(i(h[g],"coordinates"))));p.push({type:"Polygon",coordinates:y})}return p}n=n||{};var u=s(),g={},c=["Polygon","LineString","Point"],p=r(t,"Placemark"),h=r(t,"Style");if(n.styles)for(var y=0;y<h.length;y++)g["#"+h[y].id]=e(h[y].innerHTML).toString(16);for(var d=0;d<p.length;d++)u.features=u.features.concat(function(e){var t,n=o(e),u={},l=a(i(e,"name")),f=a(i(e,"styleUrl")),s=a(i(e,"description")),c=i(e,"ExtendedData");if(!n.length)return!1;if(l&&(u.name=l),f&&g[f]&&(u.styleUrl=f,u.styleHash=g[f]),s&&(u.description=s),c){var p=r(c,"Data"),h=r(c,"SimpleData");for(t=0;t<p.length;t++)u[p[t].getAttribute("name")]=a(i(p[t],"value"));for(t=0;t<h.length;t++)u[h[t].getAttribute("name")]=a(h[t])}return[{type:"Feature",geometry:1===n.length?n[0]:{type:"GeometryCollection",geometries:n},properties:u}]}(p[d]));return u},gpx:function(e,t){var n,u,l,f=r(e,"trk"),g=s();for(n=0;n<f.length;n++){l=f[n];var c=a(i(l,"name")),p=r(l,"trkpt"),h=[];for(u=0;u<p.length;u++)h.push([o(p[u],"lon"),o(p[u],"lat")]);g.features.push({type:"Feature",properties:{name:c||""},geometry:{type:"LineString",coordinates:h}})}return g}},t}(),"undefined"!=typeof module&&(module.exports=toGeoJSON);
//# sourceMappingURL=togeojson.min.js.map