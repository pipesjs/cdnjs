toGeoJSON={kml:function(e,t){function n(e,t){return e.getElementsByTagName(t)}function r(e,t){var r=n(e,t);return r.length?r[0]:null}function o(e){for(var t=0,n=[];t<e.length;t++)n[t]=parseFloat(e[t]);return n}function i(e){return e&&e.firstChild.nodeValue}function l(e){return o(e.replace(c,"").split(","))}function a(e){for(var t=e.replace(p,"").split(h),n=[],r=0;r<t.length;r++)n.push(l(t[r]));return n}function u(e){var t,o,s,f,c,p=[];if(r(e,"MultiGeometry"))return u(r(e,"MultiGeometry"));for(s=0;s<g.length;s++)if(o=n(e,g[s]))for(f=0;f<o.length;f++)if(t=o[f],"Point"==g[s])p.push({type:"Point",coordinates:l(i(r(t,"coordinates")))});else if("LineString"==g[s])p.push({type:"LineString",coordinates:a(i(r(t,"coordinates")))});else if("Polygon"==g[s]){var h=n(t,"LinearRing"),y=[];for(c=0;c<h.length;c++)y.push(a(i(r(h[c],"coordinates"))));p.push({type:"Polygon",coordinates:y})}return p}t=t||{};var s={type:"FeatureCollection",features:[]},f={},g=["Polygon","LineString","Point"],c=/\s*/g,p=/^\s*|\s*$/g,h=/\s+/,y=n(e,"Placemark"),d=n(e,"Style");if(t.styles)for(var m=0;m<d.length;m++)f["#"+d[m].id]=function(e){if(!e||!e.length)return 0;for(var t=0,n=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t)|0;return n}(d[m].innerHTML).toString(16);for(var v=0;v<y.length;v++)s.features=s.features.concat(function(e){var t,o=u(e),l={},a=i(r(e,"name")),s=i(r(e,"styleUrl")),g=i(r(e,"description")),c=r(e,"ExtendedData");if(!o.length)return!1;if(a&&(l.name=a),s&&f[s]&&(l.styleUrl=s,l.styleHash=f[s]),g&&(l.description=g),c){var p=n(c,"Data");for(t=0;t<p.length;t++)l[p[t].getAttribute("name")]=i(r(p[t],"value"))}return[{type:"Feature",geometry:1===o.length?o[0]:{type:"GeometryCollection",geometries:o},properties:l}]}(y[v]));return s}},"undefined"!=typeof module&&(module.exports=toGeoJSON);
//# sourceMappingURL=togeojson.min.js.map