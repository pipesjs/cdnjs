{"version":3,"file":"zooming.min.js","sources":["../src/utils.js","../src/modules/target.js","../src/modules/zooming.js","../src/options.js","../src/modules/handler.js","../src/modules/overlay.js","../src/index.js"],"sourcesContent":["export const webkitPrefix = 'WebkitAppearance' in document.documentElement.style\n  ? '-webkit-'\n  : ''\n\nexport const cursor = {\n  default: 'auto',\n  zoomIn: `${webkitPrefix}zoom-in`,\n  zoomOut: `${webkitPrefix}zoom-out`,\n  grab: `${webkitPrefix}grab`,\n  move: 'move'\n}\n\nexport function listen(el, event, handler, add = true) {\n  if (add) {\n    el.addEventListener(event, handler, { passive: false })\n  } else {\n    el.removeEventListener(event, handler, { passive: false })\n  }\n}\n\nexport function loadImage(src, cb) {\n  if (src) {\n    const img = new Image()\n    img.onload = function() {\n      if (cb) cb(img)\n    }\n    img.src = src\n  }\n}\n\nexport function getOriginalSource(el) {\n  if (el.hasAttribute('data-original')) {\n    return el.getAttribute('data-original')\n  } else if (el.parentNode.tagName === 'A') {\n    return el.parentNode.getAttribute('href')\n  }\n\n  return null\n}\n\nexport function setStyle(el, styles, remember) {\n  checkTrans(styles)\n\n  let s = el.style\n  let original = {}\n\n  for (let key in styles) {\n    if (remember) original[key] = s[key] || ''\n    s[key] = styles[key]\n  }\n\n  return original\n}\n\nexport function bindAll(_this, that) {\n  const methods = Object.getOwnPropertyNames(Object.getPrototypeOf(_this))\n\n  methods.forEach(method => {\n    _this[method] = _this[method].bind(that)\n  })\n}\n\nconst trans = sniffTransition(document.createElement('div'))\nexport const transformCssProp = trans.transformCssProp\nexport const transEndEvent = trans.transEndEvent\n\nfunction checkTrans(styles) {\n  const transitionProp = trans.transitionProp\n  const transformProp = trans.transformProp\n\n  let value\n  if (styles.transition) {\n    value = styles.transition\n    delete styles.transition\n    styles[transitionProp] = value\n  }\n  if (styles.transform) {\n    value = styles.transform\n    delete styles.transform\n    styles[transformProp] = value\n  }\n}\n\nfunction sniffTransition(el) {\n  let ret = {}\n  const trans = ['webkitTransition', 'transition', 'mozTransition']\n  const tform = ['webkitTransform', 'transform', 'mozTransform']\n  const end = {\n    transition: 'transitionend',\n    mozTransition: 'transitionend',\n    webkitTransition: 'webkitTransitionEnd'\n  }\n\n  trans.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transitionProp = prop\n      ret.transEndEvent = end[prop]\n      return true\n    }\n  })\n\n  tform.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transformProp = prop\n      ret.transformCssProp = prop.replace(/(.*)Transform/, '-$1-transform')\n      return true\n    }\n  })\n\n  return ret\n}\n","import { cursor, setStyle, getOriginalSource, transformCssProp } from '../utils'\n\nexport default {\n  init(el, instance) {\n    this.el = el\n    this.instance = instance\n    this.srcThumbnail = this.el.getAttribute('src')\n    this.srcOriginal = getOriginalSource(this.el)\n    this.rect = el.getBoundingClientRect()\n    this.translate = null\n    this.scale = null\n    this.styleOpen = null\n    this.styleClose = null\n  },\n\n  zoomIn() {\n    const options = this.instance.options\n\n    this.translate = calculateTranslate(this.rect)\n    this.scale = calculateScale(\n      this.rect,\n      options.scaleBase,\n      options.customSize\n    )\n\n    // force layout update\n    this.el.offsetWidth\n\n    this.styleOpen = {\n      position: 'relative',\n      zIndex: options.zIndex + 1,\n      cursor: options.enableGrab ? cursor.grab : cursor.zoomOut,\n      transition: `${transformCssProp}\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`,\n      transform: `translate(${this.translate.x}px, ${this.translate.y}px)\n        scale(${this.scale.x},${this.scale.y})`,\n      width: `${this.rect.width}px`,\n      height: `${this.rect.height}px`\n    }\n\n    // trigger transition\n    this.styleClose = setStyle(this.el, this.styleOpen, true)\n  },\n\n  zoomOut() {\n    // force layout update\n    this.el.offsetWidth\n\n    setStyle(this.el, { transform: 'none' })\n  },\n\n  grab(x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      cursor: cursor.move,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  },\n\n  move(x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      transition: transformCssProp,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  },\n\n  restoreCloseStyle() {\n    setStyle(this.el, this.styleClose)\n  },\n\n  restoreOpenStyle() {\n    setStyle(this.el, this.styleOpen)\n  },\n\n  upgradeSource() {\n    if (!this.srcOriginal) return\n\n    const parentNode = this.el.parentNode\n    const temp = this.el.cloneNode(false)\n\n    // force compute the hi-res image in DOM to prevent\n    // image flickering while updating src\n    temp.setAttribute('src', this.srcOriginal)\n    temp.style.position = 'fixed'\n    temp.style.visibility = 'hidden'\n    parentNode.appendChild(temp)\n\n    setTimeout(() => {\n      this.el.setAttribute('src', this.srcOriginal)\n      parentNode.removeChild(temp)\n    }, 100)\n  },\n\n  downgradeSource() {\n    if (!this.srcOriginal) return\n\n    this.el.setAttribute('src', this.srcThumbnail)\n  }\n}\n\nfunction calculateTranslate(rect) {\n  const windowCenter = getWindowCenter()\n  const targetCenter = {\n    x: rect.left + rect.width / 2,\n    y: rect.top + rect.height / 2\n  }\n\n  // The vector to translate image to the window center\n  return {\n    x: windowCenter.x - targetCenter.x,\n    y: windowCenter.y - targetCenter.y\n  }\n}\n\nfunction calculateScale(rect, scaleBase, customSize) {\n  if (customSize) {\n    return {\n      x: customSize.width / rect.width,\n      y: customSize.height / rect.height\n    }\n  } else {\n    const targetHalfWidth = rect.width / 2\n    const targetHalfHeight = rect.height / 2\n    const windowCenter = getWindowCenter()\n\n    // The distance between target edge and window edge\n    const targetEdgeToWindowEdge = {\n      x: windowCenter.x - targetHalfWidth,\n      y: windowCenter.y - targetHalfHeight\n    }\n\n    const scaleHorizontally = targetEdgeToWindowEdge.x / targetHalfWidth\n    const scaleVertically = targetEdgeToWindowEdge.y / targetHalfHeight\n\n    // The additional scale is based on the smaller value of\n    // scaling horizontally and scaling vertically\n    const scale = scaleBase + Math.min(scaleHorizontally, scaleVertically)\n\n    return {\n      x: scale,\n      y: scale\n    }\n  }\n}\n\nfunction getWindowCenter() {\n  const docEl = document.documentElement\n  const windowWidth = Math.min(docEl.clientWidth, window.innerWidth)\n  const windowHeight = Math.min(docEl.clientHeight, window.innerHeight)\n\n  return {\n    x: windowWidth / 2,\n    y: windowHeight / 2\n  }\n}\n","import {\n  cursor,\n  listen,\n  loadImage,\n  transEndEvent,\n  getOriginalSource\n} from '../utils'\nimport DEFAULT_OPTIONS from '../options'\n\nimport handler from './handler'\nimport overlay from './overlay'\nimport target from './target'\n\n/**\n * Zooming instance.\n */\nexport default class Zooming {\n  /**\n   * @param {Object} [options] Update default options if provided.\n   */\n  constructor(options) {\n    // elements\n    this.target = Object.create(target)\n    this.overlay = Object.create(overlay)\n    this.eventHandler = Object.create(handler)\n    this.body = document.body\n\n    // state\n    this.shown = false\n    this.lock = false\n    this.released = true\n    this.lastScrollPosition = null\n    this.pressTimer = null\n\n    // init\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options)\n    this.overlay.init(this)\n    this.eventHandler.init(this)\n    this.listen(this.options.defaultZoomable)\n  }\n\n  /**\n   * Make element(s) zoomable.\n   * @param  {string|Element} el A css selector or an Element.\n   * @return {this}\n   */\n  listen(el) {\n    if (typeof el === 'string') {\n      let els = document.querySelectorAll(el)\n      let i = els.length\n\n      while (i--) {\n        this.listen(els[i])\n      }\n\n      return this\n    }\n\n    if (el.tagName !== 'IMG') return\n\n    el.style.cursor = cursor.zoomIn\n    listen(el, 'click', this.eventHandler.click)\n\n    if (this.options.preloadImage) {\n      loadImage(getOriginalSource(el))\n    }\n\n    return this\n  }\n\n  /**\n   * Update options.\n   * @param  {Object} options An Object that contains this.options.\n   * @return {this}\n   */\n  config(options) {\n    if (!options) return this.options\n\n    Object.assign(this.options, options)\n    this.overlay.updateStyle(this.options)\n\n    return this\n  }\n\n  /**\n   * Open (zoom in) the Element.\n   * @param  {Element} el The Element to open.\n   * @param  {Function} [cb=this.options.onOpen] A callback function that will\n   * be called when a target is opened and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  open(el, cb = this.options.onOpen) {\n    if (this.shown || this.lock) return\n\n    const target = typeof el === 'string' ? document.querySelector(el) : el\n\n    if (target.tagName !== 'IMG') return\n\n    if (this.options.onBeforeOpen) this.options.onBeforeOpen(target)\n\n    this.target.init(target, this)\n\n    if (!this.options.preloadImage) {\n      loadImage(this.target.srcOriginal)\n    }\n\n    this.shown = true\n    this.lock = true\n\n    this.target.zoomIn()\n    this.overlay.create()\n    this.overlay.show()\n\n    listen(document, 'scroll', this.eventHandler.scroll)\n    listen(document, 'keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      listen(target, transEndEvent, onEnd, false)\n      this.lock = false\n      this.target.upgradeSource()\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.eventHandler, true)\n      }\n\n      if (cb) cb(target)\n    }\n\n    listen(target, transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Close (zoom out) the Element currently opened.\n   * @param  {Function} [cb=this.options.onClose] A callback function that will\n   * be called when a target is closed and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  close(cb = this.options.onClose) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    if (this.options.onBeforeClose) this.options.onBeforeClose(target)\n\n    this.lock = true\n    this.body.style.cursor = cursor.default\n    this.overlay.hide()\n    this.target.zoomOut()\n\n    listen(document, 'scroll', this.eventHandler.scroll, false)\n    listen(document, 'keydown', this.eventHandler.keydown, false)\n\n    const onEnd = () => {\n      listen(target, transEndEvent, onEnd, false)\n\n      this.shown = false\n      this.lock = false\n\n      this.target.downgradeSource()\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.eventHandler, false)\n      }\n\n      this.target.restoreCloseStyle()\n      this.overlay.destroy()\n\n      if (cb) cb(target)\n    }\n\n    listen(target, transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Grab the Element currently opened given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is grabbed and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  grab(x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    if (this.options.onBeforeGrab) this.options.onBeforeGrab(target)\n\n    this.released = false\n    this.target.grab(x, y, scaleExtra)\n\n    const onEnd = () => {\n      listen(target, transEndEvent, onEnd, false)\n      if (cb) cb(target)\n    }\n\n    listen(target, transEndEvent, onEnd)\n  }\n\n  /**\n   * Move the Element currently grabbed given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is moved and transition has ended. It will\n   * get the target element as the argument.\n   * @return {this}\n   */\n  move(x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    this.released = false\n    this.body.style.cursor = cursor.move\n    this.target.move(x, y, scaleExtra)\n\n    const target = this.target.el\n\n    const onEnd = () => {\n      listen(target, transEndEvent, onEnd, false)\n      if (cb) cb(target)\n    }\n\n    listen(target, transEndEvent, onEnd)\n  }\n\n  /**\n   * Release the Element currently grabbed.\n   * @param  {Function} [cb=this.options.onRelease] A callback function that\n   * will be called when a target is released and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  release(cb = this.options.onRelease) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    if (this.options.onBeforeRelease) this.options.onBeforeRelease(target)\n\n    this.lock = true\n    this.body.style.cursor = cursor.default\n    this.target.restoreOpenStyle()\n\n    const onEnd = () => {\n      listen(target, transEndEvent, onEnd, false)\n      this.lock = false\n      this.released = true\n\n      if (cb) cb(target)\n    }\n\n    listen(target, transEndEvent, onEnd)\n\n    return this\n  }\n}\n\nfunction toggleGrabListeners(el, handler, add) {\n  const types = [\n    'mousedown',\n    'mousemove',\n    'mouseup',\n    'touchstart',\n    'touchmove',\n    'touchend'\n  ]\n\n  types.forEach(type => listen(el, type, handler[type], add))\n}\n","/**\n * A list of options.\n *\n * @type {Object}\n * @example\n * // Default options\n * var options = {\n *   defaultZoomable: 'img[data-action=\"zoom\"]',\n *   enableGrab: true,\n *   preloadImage: false,\n *   transitionDuration: 0.4,\n *   transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n *   bgColor: 'rgb(255, 255, 255)',\n *   bgOpacity: 1,\n *   scaleBase: 1.0,\n *   scaleExtra: 0.5,\n *   scrollThreshold: 40,\n *   zIndex: 998,\n *   customSize: null,\n *   onOpen: null,\n *   onClose: null,\n *   onRelease: null,\n *   onBeforeOpen: null,\n *   onBeforeClose: null,\n *   onBeforeGrab: null,\n *   onBeforeRelease: null\n * }\n */\nexport default {\n  /**\n   * Zoomable elements by default. It can be a css selector or an element.\n   * @type {string|Element}\n   */\n  defaultZoomable: 'img[data-action=\"zoom\"]',\n\n  /**\n   * To be able to grab and drag the image for extra zoom-in.\n   * @type {boolean}\n   */\n  enableGrab: true,\n\n  /**\n   * Preload zoomable images.\n   * @type {boolean}\n   */\n  preloadImage: false,\n\n  /**\n   * Transition duration in seconds.\n   * @type {number}\n   */\n  transitionDuration: 0.4,\n\n  /**\n   * Transition timing function.\n   * @type {string}\n   */\n  transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n\n  /**\n   * Overlay background color.\n   * @type {string}\n   */\n  bgColor: 'rgb(255, 255, 255)',\n\n  /**\n   * Overlay background opacity.\n   * @type {number}\n   */\n  bgOpacity: 1,\n\n  /**\n   * The base scale factor for zooming. By default scale to fit the window.\n   * @type {number}\n   */\n  scaleBase: 1.0,\n\n  /**\n   * The extra scale factor when grabbing the image.\n   * @type {number}\n   */\n  scaleExtra: 0.5,\n\n  /**\n   * How much scrolling it takes before closing out.\n   * @type {number}\n   */\n  scrollThreshold: 40,\n\n  /**\n   * The z-index that the overlay will be added with.\n   * @type {number}\n   */\n  zIndex: 998,\n\n  /**\n   * Scale (zoom in) to given width and height. Ignore scaleBase if set.\n   * @type {Object}\n   * @example\n   * customSize: { width: 800, height: 400 }\n   */\n  customSize: null,\n\n  /**\n   * A callback function that will be called when a target is opened and\n   * transition has ended. It will get the target element as the argument.\n   * @type {Function}\n   */\n  onOpen: null,\n\n  /**\n   * Same as above, except fired when closed.\n   * @type {Function}\n   */\n  onClose: null,\n\n  /**\n   * Same as above, except fired when released.\n   * @type {Function}\n   */\n  onRelease: null,\n\n  /**\n   * A callback function that will be called before open.\n   * @type {Function}\n   */\n  onBeforeOpen: null,\n\n  /**\n   * A callback function that will be called before close.\n   * @type {Function}\n   */\n  onBeforeClose: null,\n\n  /**\n   * A callback function that will be called before grab.\n   * @type {Function}\n   */\n  onBeforeGrab: null,\n\n  /**\n   * A callback function that will be called before release.\n   * @type {Function}\n   */\n  onBeforeRelease: null\n}\n","import { bindAll } from '../utils'\n\nconst PRESS_DELAY = 200\n\nconst isLeftButton = e => e.button === 0\n\nconst isPressingMetaKey = e => e.metaKey || e.ctrlKey\n\nconst isTouching = e => e.targetTouches.length > 0\n\nconst isEscape = e => {\n  const code = e.key || e.code\n  return code === 'Escape' || e.keyCode === 27\n}\n\nexport default {\n  init(instance) {\n    bindAll(this, instance)\n  },\n\n  click(e) {\n    e.preventDefault()\n\n    if (isPressingMetaKey(e)) {\n      return window.open(\n        this.target.srcOriginal || e.currentTarget.src,\n        '_blank'\n      )\n    } else {\n      if (this.shown) {\n        if (this.released) this.close()\n        else this.release()\n      } else {\n        this.open(e.currentTarget)\n      }\n    }\n  },\n\n  scroll() {\n    const scrollTop =\n      window.pageYOffset ||\n      (document.documentElement || document.body.parentNode || document.body)\n        .scrollTop\n\n    if (this.lastScrollPosition === null) {\n      this.lastScrollPosition = scrollTop\n    }\n\n    const deltaY = this.lastScrollPosition - scrollTop\n\n    if (Math.abs(deltaY) >= this.options.scrollThreshold) {\n      this.lastScrollPosition = null\n      this.close()\n    }\n  },\n\n  keydown(e) {\n    if (isEscape(e)) {\n      if (this.released) {\n        this.close()\n      } else {\n        this.release(this.close)\n      }\n    }\n  },\n\n  mousedown(e) {\n    if (!isLeftButton(e) || isPressingMetaKey(e)) return\n    e.preventDefault()\n\n    this.pressTimer = setTimeout(() => {\n      this.grab(e.clientX, e.clientY)\n    }, PRESS_DELAY)\n  },\n\n  mousemove(e) {\n    if (this.released) return\n    this.move(e.clientX, e.clientY)\n  },\n\n  mouseup(e) {\n    if (!isLeftButton(e) || isPressingMetaKey(e)) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) {\n      this.close()\n    } else {\n      this.release()\n    }\n  },\n\n  touchstart(e) {\n    e.preventDefault()\n    const { clientX, clientY } = e.touches[0]\n\n    this.pressTimer = setTimeout(() => {\n      this.grab(clientX, clientY)\n    }, PRESS_DELAY)\n  },\n\n  touchmove(e) {\n    if (this.released) return\n\n    const { clientX, clientY } = e.touches[0]\n    this.move(clientX, clientY)\n  },\n\n  touchend(e) {\n    if (isTouching(e)) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) {\n      this.close()\n    } else {\n      this.release()\n    }\n  }\n}\n","import { listen, setStyle } from '../utils'\n\nexport default {\n  init(instance) {\n    this.el = document.createElement('div')\n    this.instance = instance\n    this.parent = document.body\n\n    setStyle(this.el, {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      opacity: 0\n    })\n\n    this.updateStyle(instance.options)\n    listen(this.el, 'click', instance.close)\n  },\n\n  updateStyle(options) {\n    setStyle(this.el, {\n      zIndex: options.zIndex,\n      backgroundColor: options.bgColor,\n      transition: `opacity\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`\n    })\n  },\n\n  create() {\n    this.parent.appendChild(this.el)\n  },\n\n  destroy() {\n    this.parent.removeChild(this.el)\n  },\n\n  show() {\n    setTimeout(\n      () => (this.el.style.opacity = this.instance.options.bgOpacity),\n      30\n    )\n  },\n\n  hide() {\n    this.el.style.opacity = 0\n  }\n}\n","import { listen } from './utils'\nimport Zooming from './modules/zooming'\n\nlisten(document, 'DOMContentLoaded', () => new Zooming())\n\nexport default Zooming\n"],"names":["listen","el","event","handler","removeEventListener","passive","addEventListener","loadImage","src","cb","img","Image","onload","getOriginalSource","hasAttribute","getAttribute","parentNode","tagName","setStyle","styles","remember","s","style","original","key","bindAll","_this","that","Object","getOwnPropertyNames","getPrototypeOf","forEach","method","bind","checkTrans","transitionProp","trans","transformProp","value","transition","transform","sniffTransition","ret","tform","end","some","undefined","prop","transEndEvent","transformCssProp","replace","calculateTranslate","rect","windowCenter","getWindowCenter","targetCenter","left","width","top","height","x","y","calculateScale","scaleBase","customSize","targetHalfWidth","targetHalfHeight","targetEdgeToWindowEdge","scaleHorizontally","scaleVertically","scale","Math","min","docEl","document","documentElement","clientWidth","window","innerWidth","clientHeight","innerHeight","toggleGrabListeners","add","type","webkitPrefix","cursor","createElement","isLeftButton","e","button","isPressingMetaKey","metaKey","ctrlKey","isTouching","targetTouches","length","isEscape","code","keyCode","instance","this","preventDefault","open","target","srcOriginal","currentTarget","shown","released","close","release","scrollTop","pageYOffset","body","lastScrollPosition","deltaY","abs","options","scrollThreshold","pressTimer","setTimeout","grab","clientX","clientY","move","touches","parent","updateStyle","zIndex","bgColor","transitionDuration","transitionTimingFunction","appendChild","removeChild","opacity","bgOpacity","srcThumbnail","getBoundingClientRect","translate","styleOpen","styleClose","offsetWidth","enableGrab","zoomOut","scaleExtra","dx","dy","temp","cloneNode","setAttribute","position","visibility","Zooming","create","overlay","eventHandler","lock","babelHelpers.extends","DEFAULT_OPTIONS","init","defaultZoomable","els","querySelectorAll","i","zoomIn","click","preloadImage","onOpen","querySelector","onBeforeOpen","show","scroll","keydown","onEnd","upgradeSource","onClose","onBeforeClose","default","hide","downgradeSource","_this2","restoreCloseStyle","destroy","onBeforeGrab","onRelease","onBeforeRelease","restoreOpenStyle"],"mappings":"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"}