{"version":3,"file":"zooming.min.js","sources":["../src/utils.js","../src/modules/event-handler.js","../src/modules/target.js","../src/modules/zooming.js","../src/options.js","../src/modules/overlay.js","../src/index.js"],"sourcesContent":["export const webkitPrefix = 'WebkitAppearance' in document.documentElement.style\n  ? '-webkit-'\n  : ''\n\nexport const cursor = {\n  default: 'auto',\n  zoomIn: `${webkitPrefix}zoom-in`,\n  zoomOut: `${webkitPrefix}zoom-out`,\n  grab: `${webkitPrefix}grab`,\n  move: 'move'\n}\n\nexport function loadImage(src, cb) {\n  if (!src) return\n\n  const img = new Image()\n  img.onload = function() {\n    if (cb) cb(img)\n  }\n\n  img.src = src\n}\n\nexport function getOriginalSource(el) {\n  if (el.hasAttribute('data-original')) {\n    return el.getAttribute('data-original')\n  } else if (el.parentNode.tagName === 'A') {\n    return el.parentNode.getAttribute('href')\n  }\n\n  return null\n}\n\nexport function setStyle(el, styles, remember) {\n  checkTrans(styles)\n\n  let s = el.style\n  let original = {}\n\n  for (let key in styles) {\n    if (remember) original[key] = s[key] || ''\n    s[key] = styles[key]\n  }\n\n  return original\n}\n\nexport function bindAll(_this, that) {\n  const methods = Object.getOwnPropertyNames(Object.getPrototypeOf(_this))\n\n  methods.forEach(method => {\n    _this[method] = _this[method].bind(that)\n  })\n}\n\nconst trans = sniffTransition(document.createElement('div'))\nexport const transformCssProp = trans.transformCssProp\nexport const transEndEvent = trans.transEndEvent\n\nfunction checkTrans(styles) {\n  const transitionProp = trans.transitionProp\n  const transformProp = trans.transformProp\n\n  let value\n  if (styles.transition) {\n    value = styles.transition\n    delete styles.transition\n    styles[transitionProp] = value\n  }\n  if (styles.transform) {\n    value = styles.transform\n    delete styles.transform\n    styles[transformProp] = value\n  }\n}\n\nfunction sniffTransition(el) {\n  let ret = {}\n  const trans = ['webkitTransition', 'transition', 'mozTransition']\n  const tform = ['webkitTransform', 'transform', 'mozTransform']\n  const end = {\n    transition: 'transitionend',\n    mozTransition: 'transitionend',\n    webkitTransition: 'webkitTransitionEnd'\n  }\n\n  trans.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transitionProp = prop\n      ret.transEndEvent = end[prop]\n      return true\n    }\n  })\n\n  tform.some(prop => {\n    if (el.style[prop] !== undefined) {\n      ret.transformProp = prop\n      ret.transformCssProp = prop.replace(/(.*)Transform/, '-$1-transform')\n      return true\n    }\n  })\n\n  return ret\n}\n","import { bindAll } from '../utils'\n\nconst PRESS_DELAY = 200\nconst MULTITOUCH_SCALE_FACTOR = 2\n\nexport default {\n  init(instance) {\n    bindAll(this, instance)\n  },\n\n  click(e) {\n    e.preventDefault()\n\n    if (isPressingMetaKey(e)) {\n      return window.open(\n        this.target.srcOriginal || e.currentTarget.src,\n        '_blank'\n      )\n    }\n\n    if (this.shown) {\n      if (this.released) this.close()\n      else this.release()\n    } else {\n      this.open(e.currentTarget)\n    }\n  },\n\n  scroll() {\n    const scrollTop =\n      window.pageYOffset ||\n      (document.documentElement || document.body.parentNode || document.body)\n        .scrollTop\n\n    if (this.lastScrollPosition === null) {\n      this.lastScrollPosition = scrollTop\n    }\n\n    const deltaY = this.lastScrollPosition - scrollTop\n\n    if (Math.abs(deltaY) >= this.options.scrollThreshold) {\n      this.lastScrollPosition = null\n      this.close()\n    }\n  },\n\n  keydown(e) {\n    if (isEscape(e)) {\n      if (this.released) this.close()\n      else this.release(() => this.close())\n    }\n  },\n\n  mousedown(e) {\n    if (!isLeftButton(e) || isPressingMetaKey(e)) return\n    e.preventDefault()\n\n    this.pressTimer = setTimeout(() => {\n      this.grab(e.clientX, e.clientY)\n    }, PRESS_DELAY)\n  },\n\n  mousemove(e) {\n    if (this.released) return\n    this.move(e.clientX, e.clientY)\n  },\n\n  mouseup(e) {\n    if (!isLeftButton(e) || isPressingMetaKey(e)) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) this.close()\n    else this.release()\n  },\n\n  touchstart(e) {\n    e.preventDefault()\n\n    this.pressTimer = setTimeout(() => {\n      processTouches(e.touches, this.options.scaleExtra, (x, y, scaleExtra) => {\n        this.grab(x, y, scaleExtra)\n      })\n    }, PRESS_DELAY)\n  },\n\n  touchmove(e) {\n    if (this.released) return\n\n    processTouches(e.touches, this.options.scaleExtra, (x, y, scaleExtra) => {\n      this.move(x, y, scaleExtra)\n    })\n  },\n\n  touchend(e) {\n    if (isTouching(e)) return\n    clearTimeout(this.pressTimer)\n\n    if (this.released) this.close()\n    else this.release()\n  }\n}\n\nfunction isLeftButton(event) {\n  return event.button === 0\n}\n\nfunction isPressingMetaKey(event) {\n  return event.metaKey || event.ctrlKey\n}\n\nfunction isEscape(event) {\n  const code = event.key || event.code\n  return code === 'Escape' || event.keyCode === 27\n}\n\nfunction isTouching(event) {\n  return event.targetTouches.length > 0\n}\n\nfunction processTouches(touches, currScaleExtra, cb) {\n  const total = touches.length\n  const firstTouch = touches[0]\n  const multitouch = total > 1\n\n  let scaleExtra = currScaleExtra\n  let i = touches.length\n  let [xs, ys] = [0, 0]\n\n  // keep track of the min and max of touch positions\n  let min = { x: firstTouch.clientX, y: firstTouch.clientY }\n  let max = { x: firstTouch.clientX, y: firstTouch.clientY }\n\n  while (i--) {\n    const t = touches[i]\n    const [x, y] = [t.clientX, t.clientY]\n    xs += x\n    ys += y\n\n    if (!multitouch) continue\n\n    if (x < min.x) {\n      min.x = x\n    } else if (x > max.x) {\n      max.x = x\n    }\n\n    if (y < min.y) {\n      min.y = y\n    } else if (y > max.y) {\n      max.y = y\n    }\n  }\n\n  if (multitouch) {\n    // change scaleExtra dynamically\n    const [distX, distY] = [max.x - min.x, max.y - min.y]\n\n    if (distX > distY) {\n      scaleExtra = distX / window.innerWidth * MULTITOUCH_SCALE_FACTOR\n    } else {\n      scaleExtra = distY / window.innerHeight * MULTITOUCH_SCALE_FACTOR\n    }\n  }\n\n  cb(xs / total, ys / total, scaleExtra)\n}\n","import { cursor, setStyle, getOriginalSource, transformCssProp } from '../utils'\n\nexport default {\n  init(el, instance) {\n    this.el = el\n    this.instance = instance\n    this.srcThumbnail = this.el.getAttribute('src')\n    this.srcOriginal = getOriginalSource(this.el)\n    this.rect = el.getBoundingClientRect()\n    this.translate = null\n    this.scale = null\n    this.styleOpen = null\n    this.styleClose = null\n  },\n\n  zoomIn() {\n    const options = this.instance.options\n\n    this.translate = calculateTranslate(this.rect)\n    this.scale = calculateScale(\n      this.rect,\n      options.scaleBase,\n      options.customSize\n    )\n\n    // force layout update\n    this.el.offsetWidth\n\n    this.styleOpen = {\n      position: 'relative',\n      zIndex: options.zIndex + 1,\n      cursor: options.enableGrab ? cursor.grab : cursor.zoomOut,\n      transition: `${transformCssProp}\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`,\n      transform: `translate(${this.translate.x}px, ${this.translate.y}px)\n        scale(${this.scale.x},${this.scale.y})`,\n      width: `${this.rect.width}px`,\n      height: `${this.rect.height}px`\n    }\n\n    // trigger transition\n    this.styleClose = setStyle(this.el, this.styleOpen, true)\n  },\n\n  zoomOut() {\n    // force layout update\n    this.el.offsetWidth\n\n    setStyle(this.el, { transform: 'none' })\n  },\n\n  grab(x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      cursor: cursor.move,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  },\n\n  move(x, y, scaleExtra) {\n    const windowCenter = getWindowCenter()\n    const [dx, dy] = [windowCenter.x - x, windowCenter.y - y]\n\n    setStyle(this.el, {\n      transition: transformCssProp,\n      transform: `translate(\n        ${this.translate.x + dx}px, ${this.translate.y + dy}px)\n        scale(${this.scale.x + scaleExtra},${this.scale.y + scaleExtra})`\n    })\n  },\n\n  restoreCloseStyle() {\n    setStyle(this.el, this.styleClose)\n  },\n\n  restoreOpenStyle() {\n    setStyle(this.el, this.styleOpen)\n  },\n\n  upgradeSource() {\n    if (!this.srcOriginal) return\n\n    const parentNode = this.el.parentNode\n    const temp = this.el.cloneNode(false)\n\n    // force compute the hi-res image in DOM to prevent\n    // image flickering while updating src\n    temp.setAttribute('src', this.srcOriginal)\n    temp.style.position = 'fixed'\n    temp.style.visibility = 'hidden'\n    parentNode.appendChild(temp)\n\n    setTimeout(() => {\n      this.el.setAttribute('src', this.srcOriginal)\n      parentNode.removeChild(temp)\n    }, 100)\n  },\n\n  downgradeSource() {\n    if (!this.srcOriginal) return\n\n    this.el.setAttribute('src', this.srcThumbnail)\n  }\n}\n\nfunction calculateTranslate(rect) {\n  const windowCenter = getWindowCenter()\n  const targetCenter = {\n    x: rect.left + rect.width / 2,\n    y: rect.top + rect.height / 2\n  }\n\n  // The vector to translate image to the window center\n  return {\n    x: windowCenter.x - targetCenter.x,\n    y: windowCenter.y - targetCenter.y\n  }\n}\n\nfunction calculateScale(rect, scaleBase, customSize) {\n  if (customSize) {\n    return {\n      x: customSize.width / rect.width,\n      y: customSize.height / rect.height\n    }\n  } else {\n    const targetHalfWidth = rect.width / 2\n    const targetHalfHeight = rect.height / 2\n    const windowCenter = getWindowCenter()\n\n    // The distance between target edge and window edge\n    const targetEdgeToWindowEdge = {\n      x: windowCenter.x - targetHalfWidth,\n      y: windowCenter.y - targetHalfHeight\n    }\n\n    const scaleHorizontally = targetEdgeToWindowEdge.x / targetHalfWidth\n    const scaleVertically = targetEdgeToWindowEdge.y / targetHalfHeight\n\n    // The additional scale is based on the smaller value of\n    // scaling horizontally and scaling vertically\n    const scale = scaleBase + Math.min(scaleHorizontally, scaleVertically)\n\n    return {\n      x: scale,\n      y: scale\n    }\n  }\n}\n\nfunction getWindowCenter() {\n  const windowWidth = Math.min(\n    document.documentElement.clientWidth,\n    window.innerWidth\n  )\n  const windowHeight = Math.min(\n    document.documentElement.clientHeight,\n    window.innerHeight\n  )\n\n  return {\n    x: windowWidth / 2,\n    y: windowHeight / 2\n  }\n}\n","import { cursor, loadImage, transEndEvent, getOriginalSource } from '../utils'\nimport DEFAULT_OPTIONS from '../options'\n\nimport EventHandler from './event-handler'\nimport Overlay from './overlay'\nimport Target from './target'\n\n/**\n * Zooming instance.\n */\nexport default class Zooming {\n  /**\n   * @param {Object} [options] Update default options if provided.\n   */\n  constructor(options) {\n    // elements\n    this.target = Object.create(Target)\n    this.overlay = Object.create(Overlay)\n    this.eventHandler = Object.create(EventHandler)\n    this.body = document.body\n\n    // state\n    this.shown = false\n    this.lock = false\n    this.released = true\n    this.lastScrollPosition = null\n    this.pressTimer = null\n\n    // init\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options)\n    this.overlay.init(this)\n    this.eventHandler.init(this)\n    this.listen(this.options.defaultZoomable)\n  }\n\n  /**\n   * Make element(s) zoomable.\n   * @param  {string|Element} el A css selector or an Element.\n   * @return {this}\n   */\n  listen(el) {\n    if (typeof el === 'string') {\n      let els = document.querySelectorAll(el)\n      let i = els.length\n\n      while (i--) {\n        this.listen(els[i])\n      }\n\n      return this\n    }\n\n    if (el.tagName !== 'IMG') return\n\n    el.style.cursor = cursor.zoomIn\n    el.addEventListener('click', this.eventHandler.click, { passive: false })\n\n    if (this.options.preloadImage) {\n      loadImage(getOriginalSource(el))\n    }\n\n    return this\n  }\n\n  /**\n   * Update options.\n   * @param  {Object} options An Object that contains this.options.\n   * @return {this}\n   */\n  config(options) {\n    if (!options) return this.options\n\n    Object.assign(this.options, options)\n    this.overlay.updateStyle(this.options)\n\n    return this\n  }\n\n  /**\n   * Open (zoom in) the Element.\n   * @param  {Element} el The Element to open.\n   * @param  {Function} [cb=this.options.onOpen] A callback function that will\n   * be called when a target is opened and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  open(el, cb = this.options.onOpen) {\n    if (this.shown || this.lock) return\n\n    const target = typeof el === 'string' ? document.querySelector(el) : el\n\n    if (target.tagName !== 'IMG') return\n\n    // onBeforeOpen event\n    if (this.options.onBeforeOpen) this.options.onBeforeOpen(target)\n\n    this.target.init(target, this)\n\n    if (!this.options.preloadImage) {\n      loadImage(this.target.srcOriginal)\n    }\n\n    this.shown = true\n    this.lock = true\n\n    this.target.zoomIn()\n    this.overlay.create()\n    this.overlay.show()\n\n    document.addEventListener('scroll', this.eventHandler.scroll)\n    document.addEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.lock = false\n\n      this.target.upgradeSource()\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.eventHandler, true)\n      }\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Close (zoom out) the Element currently opened.\n   * @param  {Function} [cb=this.options.onClose] A callback function that will\n   * be called when a target is closed and transition has ended. It will get\n   * the target element as the argument.\n   * @return {this}\n   */\n  close(cb = this.options.onClose) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeClose event\n    if (this.options.onBeforeClose) this.options.onBeforeClose(target)\n\n    this.lock = true\n\n    this.body.style.cursor = cursor.default\n    this.overlay.hide()\n    this.target.zoomOut()\n\n    document.removeEventListener('scroll', this.eventHandler.scroll)\n    document.removeEventListener('keydown', this.eventHandler.keydown)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.shown = false\n      this.lock = false\n\n      this.target.downgradeSource()\n\n      if (this.options.enableGrab) {\n        toggleGrabListeners(document, this.eventHandler, false)\n      }\n\n      this.target.restoreCloseStyle()\n      this.overlay.destroy()\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n\n  /**\n   * Grab the Element currently opened given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is grabbed and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  grab(x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeGrab event\n    if (this.options.onBeforeGrab) this.options.onBeforeGrab(target)\n\n    this.released = false\n    this.target.grab(x, y, scaleExtra)\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n  }\n\n  /**\n   * Move the Element currently grabbed given a position and apply extra zoom-in.\n   * @param  {number}   x The X-axis of where the press happened.\n   * @param  {number}   y The Y-axis of where the press happened.\n   * @param  {number}   scaleExtra Extra zoom-in to apply.\n   * @param  {Function} [cb=this.options.scaleExtra] A callback function that\n   * will be called when a target is moved and transition has ended. It will\n   * get the target element as the argument.\n   * @return {this}\n   */\n  move(x, y, scaleExtra = this.options.scaleExtra, cb) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeMove event\n    if (this.options.onBeforeMove) this.options.onBeforeMove(target)\n\n    this.released = false\n\n    this.target.move(x, y, scaleExtra)\n    this.body.style.cursor = cursor.move\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n  }\n\n  /**\n   * Release the Element currently grabbed.\n   * @param  {Function} [cb=this.options.onRelease] A callback function that\n   * will be called when a target is released and transition has ended. It\n   * will get the target element as the argument.\n   * @return {this}\n   */\n  release(cb = this.options.onRelease) {\n    if (!this.shown || this.lock) return\n\n    const target = this.target.el\n\n    // onBeforeRelease event\n    if (this.options.onBeforeRelease) this.options.onBeforeRelease(target)\n\n    this.lock = true\n\n    this.target.restoreOpenStyle()\n    this.body.style.cursor = cursor.default\n\n    const onEnd = () => {\n      target.removeEventListener(transEndEvent, onEnd)\n\n      this.lock = false\n      this.released = true\n\n      if (cb) cb(target)\n    }\n\n    target.addEventListener(transEndEvent, onEnd)\n\n    return this\n  }\n}\n\nfunction toggleGrabListeners(el, handler, add) {\n  const types = [\n    'mousedown',\n    'mousemove',\n    'mouseup',\n    'touchstart',\n    'touchmove',\n    'touchend'\n  ]\n\n  types.forEach(type => {\n    if (add) {\n      el.addEventListener(type, handler[type], { passive: false })\n    } else {\n      el.removeEventListener(type, handler[type], { passive: false })\n    }\n  })\n}\n","/**\n * A list of options.\n *\n * @type {Object}\n * @example\n * // Default options\n * var options = {\n *   defaultZoomable: 'img[data-action=\"zoom\"]',\n *   enableGrab: true,\n *   preloadImage: false,\n *   transitionDuration: 0.4,\n *   transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n *   bgColor: 'rgb(255, 255, 255)',\n *   bgOpacity: 1,\n *   scaleBase: 1.0,\n *   scaleExtra: 0.5,\n *   scrollThreshold: 40,\n *   zIndex: 998,\n *   customSize: null,\n *   onOpen: null,\n *   onClose: null,\n *   onRelease: null,\n *   onBeforeOpen: null,\n *   onBeforeClose: null,\n *   onBeforeGrab: null,\n *   onBeforeMove: null,\n *   onBeforeRelease: null\n * }\n */\nconst OPTIONS = {\n  /**\n   * Zoomable elements by default. It can be a css selector or an element.\n   * @type {string|Element}\n   */\n  defaultZoomable: 'img[data-action=\"zoom\"]',\n\n  /**\n   * To be able to grab and drag the image for extra zoom-in.\n   * @type {boolean}\n   */\n  enableGrab: true,\n\n  /**\n   * Preload images with attribute \"data-original\".\n   * @type {boolean}\n   */\n  preloadImage: false,\n\n  /**\n   * Transition duration in seconds.\n   * @type {number}\n   */\n  transitionDuration: 0.4,\n\n  /**\n   * Transition timing function.\n   * @type {string}\n   */\n  transitionTimingFunction: 'cubic-bezier(0.4, 0, 0, 1)',\n\n  /**\n   * Overlay background color.\n   * @type {string}\n   */\n  bgColor: 'rgb(255, 255, 255)',\n\n  /**\n   * Overlay background opacity.\n   * @type {number}\n   */\n  bgOpacity: 1,\n\n  /**\n   * The base scale factor for zooming. By default scale to fit the window.\n   * @type {number}\n   */\n  scaleBase: 1.0,\n\n  /**\n   * The extra scale factor when grabbing the image.\n   * @type {number}\n   */\n  scaleExtra: 0.5,\n\n  /**\n   * How much scrolling it takes before closing out.\n   * @type {number}\n   */\n  scrollThreshold: 40,\n\n  /**\n   * The z-index that the overlay will be added with.\n   * @type {number}\n   */\n  zIndex: 998,\n\n  /**\n   * Scale (zoom in) to given width and height. Ignore scaleBase if set.\n   * @type {Object}\n   * @example\n   * customSize: { width: 800, height: 400 }\n   */\n  customSize: null,\n\n  /**\n   * A callback function that will be called when a target is opened and\n   * transition has ended. It will get the target element as the argument.\n   * @type {Function}\n   */\n  onOpen: null,\n\n  /**\n   * Same as above, except fired when closed.\n   * @type {Function}\n   */\n  onClose: null,\n\n  /**\n   * Same as above, except fired when released.\n   * @type {Function}\n   */\n  onRelease: null,\n\n  /**\n   * A callback function that will be called before open.\n   * @type {Function}\n   */\n  onBeforeOpen: null,\n\n  /**\n   * A callback function that will be called before close.\n   * @type {Function}\n   */\n  onBeforeClose: null,\n\n  /**\n   * A callback function that will be called before grab.\n   * @type {Function}\n   */\n  onBeforeGrab: null,\n\n  /**\n   * A callback function that will be called before move.\n   * @type {Function}\n   */\n  onBeforeMove: null,\n\n  /**\n   * A callback function that will be called before release.\n   * @type {Function}\n   */\n  onBeforeRelease: null\n}\n\nexport default OPTIONS\n","import { setStyle } from '../utils'\n\nexport default {\n  init(instance) {\n    this.el = document.createElement('div')\n    this.el.addEventListener('click', () => this.instance.close())\n    this.instance = instance\n    this.parent = document.body\n\n    setStyle(this.el, {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      opacity: 0\n    })\n\n    this.updateStyle(instance.options)\n  },\n\n  updateStyle(options) {\n    setStyle(this.el, {\n      zIndex: options.zIndex,\n      backgroundColor: options.bgColor,\n      transition: `opacity\n        ${options.transitionDuration}s\n        ${options.transitionTimingFunction}`\n    })\n  },\n\n  create() {\n    this.parent.appendChild(this.el)\n  },\n\n  destroy() {\n    this.parent.removeChild(this.el)\n  },\n\n  show() {\n    setTimeout(\n      () => this.el.style.opacity = this.instance.options.bgOpacity,\n      30\n    )\n  },\n\n  hide() {\n    this.el.style.opacity = 0\n  }\n}\n","import Zooming from './modules/zooming'\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  new Zooming()\n})\n\nexport default Zooming\n"],"names":["loadImage","src","cb","img","Image","onload","getOriginalSource","el","hasAttribute","getAttribute","parentNode","tagName","setStyle","styles","remember","s","style","original","key","bindAll","_this","that","Object","getOwnPropertyNames","getPrototypeOf","forEach","method","bind","checkTrans","transitionProp","trans","transformProp","value","transition","transform","sniffTransition","ret","tform","end","some","undefined","prop","transEndEvent","transformCssProp","replace","isLeftButton","event","button","isPressingMetaKey","metaKey","ctrlKey","isEscape","code","keyCode","isTouching","targetTouches","length","processTouches","touches","currScaleExtra","total","firstTouch","multitouch","scaleExtra","i","xs","ys","min","x","clientX","y","clientY","max","t","distX","distY","window","innerWidth","innerHeight","calculateTranslate","rect","windowCenter","getWindowCenter","targetCenter","left","width","top","height","calculateScale","scaleBase","customSize","targetHalfWidth","targetHalfHeight","targetEdgeToWindowEdge","scaleHorizontally","scaleVertically","scale","Math","document","documentElement","clientWidth","clientHeight","toggleGrabListeners","handler","add","addEventListener","type","passive","removeEventListener","webkitPrefix","cursor","createElement","OPTIONS","instance","this","e","preventDefault","open","target","srcOriginal","currentTarget","shown","released","close","release","scrollTop","pageYOffset","body","lastScrollPosition","deltaY","abs","options","scrollThreshold","pressTimer","setTimeout","grab","move","_this3","parent","updateStyle","zIndex","bgColor","transitionDuration","transitionTimingFunction","appendChild","removeChild","_this2","opacity","bgOpacity","srcThumbnail","getBoundingClientRect","translate","styleOpen","styleClose","offsetWidth","enableGrab","zoomOut","dx","dy","temp","cloneNode","setAttribute","position","visibility","Zooming","create","Target","overlay","Overlay","eventHandler","EventHandler","lock","babelHelpers.extends","DEFAULT_OPTIONS","init","listen","defaultZoomable","els","querySelectorAll","zoomIn","click","preloadImage","onOpen","querySelector","onBeforeOpen","show","scroll","keydown","onEnd","upgradeSource","onClose","onBeforeClose","default","hide","downgradeSource","restoreCloseStyle","destroy","onBeforeGrab","onBeforeMove","onRelease","onBeforeRelease","restoreOpenStyle"],"mappings":"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"}