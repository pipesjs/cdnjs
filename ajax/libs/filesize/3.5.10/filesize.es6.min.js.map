{"version":3,"sources":["filesize.es6.js"],"names":["Math","pow","floor","log","isNaN","arg","Error","bits","unix","descriptor","base","round","spacer","symbols","suffixes","standard","output","fullform","fullforms","Array","exponent","neg","num","e","ceil","result","symbol","val","toFixed","charAt","replace","b","test","value","suffix","full","join","iec","bytes","jedec","filesize","partial","opt","exports","define","amd","global","module","window"],"mappings":"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","file":"unknown","sourcesContent":["/**\r\n * filesize\r\n *\r\n * @copyright 2017 Jason Mulligan <jason.mulligan@avoidwork.com>\r\n * @license BSD-3-Clause\r\n * @version 3.5.10\r\n */\r\n(function (global) {\r\n\tconst b = /^(b|B)$/,\r\n\t\tsymbol = {\r\n\t\t\tiec: {\r\n\t\t\t\tbits: [\"b\", \"Kib\", \"Mib\", \"Gib\", \"Tib\", \"Pib\", \"Eib\", \"Zib\", \"Yib\"],\r\n\t\t\t\tbytes: [\"B\", \"KiB\", \"MiB\", \"GiB\", \"TiB\", \"PiB\", \"EiB\", \"ZiB\", \"YiB\"]\r\n\t\t\t},\r\n\t\t\tjedec: {\r\n\t\t\t\tbits: [\"b\", \"Kb\", \"Mb\", \"Gb\", \"Tb\", \"Pb\", \"Eb\", \"Zb\", \"Yb\"],\r\n\t\t\t\tbytes: [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"]\r\n\t\t\t}\r\n\t\t},\r\n\t\tfullform = {\r\n\t\t\tiec: [\"\", \"kibi\", \"mebi\", \"gibi\", \"tebi\", \"pebi\", \"exbi\", \"zebi\", \"yobi\"],\r\n\t\t\tjedec: [\"\", \"kilo\", \"mega\", \"giga\", \"tera\", \"peta\", \"exa\", \"zetta\", \"yotta\"]\r\n\t\t};\r\n\r\n\t/**\r\n\t * filesize\r\n\t *\r\n\t * @method filesize\r\n\t * @param  {Mixed}   arg        String, Int or Float to transform\r\n\t * @param  {Object}  descriptor [Optional] Flags\r\n\t * @return {String}             Readable file size String\r\n\t */\r\n\tfunction filesize (arg, descriptor = {}) {\r\n\t\tlet result = [],\r\n\t\t\tval = 0,\r\n\t\t\te, base, bits, ceil, full, fullforms, neg, num, output, round, unix, spacer, standard, symbols;\r\n\r\n\t\tif (isNaN(arg)) {\r\n\t\t\tthrow new Error(\"Invalid arguments\");\r\n\t\t}\r\n\r\n\t\tbits = descriptor.bits === true;\r\n\t\tunix = descriptor.unix === true;\r\n\t\tbase = descriptor.base || 2;\r\n\t\tround = descriptor.round !== undefined ? descriptor.round : unix ? 1 : 2;\r\n\t\tspacer = descriptor.spacer !== undefined ? descriptor.spacer : unix ? \"\" : \" \";\r\n\t\tsymbols = descriptor.symbols || descriptor.suffixes || {};\r\n\t\tstandard = base === 2 ? descriptor.standard || \"jedec\" : \"jedec\";\r\n\t\toutput = descriptor.output || \"string\";\r\n\t\tfull = descriptor.fullform === true;\r\n\t\tfullforms = descriptor.fullforms instanceof Array ? descriptor.fullforms : [];\r\n\t\te = descriptor.exponent !== undefined ? descriptor.exponent : -1;\r\n\t\tnum = Number(arg);\r\n\t\tneg = num < 0;\r\n\t\tceil = base > 2 ? 1000 : 1024;\r\n\r\n\t\t// Flipping a negative number to determine the size\r\n\t\tif (neg) {\r\n\t\t\tnum = -num;\r\n\t\t}\r\n\r\n\t\t// Determining the exponent\r\n\t\tif (e === -1 || isNaN(e)) {\r\n\t\t\te = Math.floor(Math.log(num) / Math.log(ceil));\r\n\r\n\t\t\tif (e < 0) {\r\n\t\t\t\te = 0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Exceeding supported length, time to reduce & multiply\r\n\t\tif (e > 8) {\r\n\t\t\te = 8;\r\n\t\t}\r\n\r\n\t\t// Zero is now a special case because bytes divide by 1\r\n\t\tif (num === 0) {\r\n\t\t\tresult[0] = 0;\r\n\t\t\tresult[1] = unix ? \"\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\t\t} else {\r\n\t\t\tval = num / (base === 2 ? Math.pow(2, e * 10) : Math.pow(1000, e));\r\n\r\n\t\t\tif (bits) {\r\n\t\t\t\tval = val * 8;\r\n\r\n\t\t\t\tif (val >= ceil && e < 8) {\r\n\t\t\t\t\tval = val / ceil;\r\n\t\t\t\t\te++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tresult[0] = Number(val.toFixed(e > 0 ? round : 0));\r\n\t\t\tresult[1] = base === 10 && e === 1 ? bits ? \"kb\" : \"kB\" : symbol[standard][bits ? \"bits\" : \"bytes\"][e];\r\n\r\n\t\t\tif (unix) {\r\n\t\t\t\tresult[1] = standard === \"jedec\" ? result[1].charAt(0) : e > 0 ? result[1].replace(/B$/, \"\") : result[1];\r\n\r\n\t\t\t\tif (b.test(result[1])) {\r\n\t\t\t\t\tresult[0] = Math.floor(result[0]);\r\n\t\t\t\t\tresult[1] = \"\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Decorating a 'diff'\r\n\t\tif (neg) {\r\n\t\t\tresult[0] = -result[0];\r\n\t\t}\r\n\r\n\t\t// Applying custom symbol\r\n\t\tresult[1] = symbols[result[1]] || result[1];\r\n\r\n\t\t// Returning Array, Object, or String (default)\r\n\t\tif (output === \"array\") {\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tif (output === \"exponent\") {\r\n\t\t\treturn e;\r\n\t\t}\r\n\r\n\t\tif (output === \"object\") {\r\n\t\t\treturn {value: result[0], suffix: result[1], symbol: result[1]};\r\n\t\t}\r\n\r\n\t\tif (full) {\r\n\t\t\tresult[1] = fullforms[e] ? fullforms[e] : fullform[standard][e] + (bits ? \"bit\" : \"byte\") + (result[0] === 1 ? \"\" : \"s\");\r\n\t\t}\r\n\r\n\t\treturn result.join(spacer);\r\n\t}\r\n\r\n\t// Partial application for functional programming\r\n\tfilesize.partial = opt => arg => filesize(arg, opt);\r\n\r\n\t// CommonJS, AMD, script tag\r\n\tif (typeof exports !== \"undefined\") {\r\n\t\tmodule.exports = filesize;\r\n\t} else if (typeof define === \"function\" && define.amd) {\r\n\t\tdefine(() => {\r\n\t\t\treturn filesize;\r\n\t\t});\r\n\t} else {\r\n\t\tglobal.filesize = filesize;\r\n\t}\r\n}(typeof window !== \"undefined\" ? window : global));\r\n"]}