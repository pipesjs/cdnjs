{"version":3,"file":"popper.js.map","sources":["../../src/popper/utils/isNative.js","../../src/popper/utils/debounce.js","../../src/popper/utils/isNumeric.js","../../src/popper/utils/setStyles.js","../../src/popper/utils/isFunction.js","../../src/popper/utils/getStyleComputedProperty.js","../../src/popper/utils/getParentNode.js","../../src/popper/utils/getScrollParent.js","../../src/popper/utils/isOffsetContainer.js","../../src/popper/utils/getRoot.js","../../src/popper/utils/getOffsetParent.js","../../src/popper/utils/findCommonOffsetParent.js","../../src/popper/utils/getScroll.js","../../src/popper/utils/includeScroll.js","../../src/popper/utils/getBordersSize.js","../../src/popper/utils/getWindowSizes.js","../../src/popper/utils/getClientRect.js","../../src/popper/utils/isIE10.js","../../src/popper/utils/getBoundingClientRect.js","../../src/popper/utils/getOffsetRectRelativeToArbitraryNode.js","../../src/popper/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../../src/popper/utils/isFixed.js","../../src/popper/utils/getBoundaries.js","../../src/popper/utils/computeAutoPlacement.js","../../src/popper/utils/getReferenceOffsets.js","../../src/popper/utils/getOuterSizes.js","../../src/popper/utils/getOppositePlacement.js","../../src/popper/utils/getPopperOffsets.js","../../src/popper/utils/find.js","../../src/popper/utils/findIndex.js","../../src/popper/utils/runModifiers.js","../../src/popper/methods/update.js","../../src/popper/utils/isModifierEnabled.js","../../src/popper/utils/getSupportedPropertyName.js","../../src/popper/methods/destroy.js","../../src/popper/utils/setupEventListeners.js","../../src/popper/methods/enableEventListeners.js","../../src/popper/utils/removeEventListeners.js","../../src/popper/methods/disableEventListeners.js","../../src/popper/utils/setAttributes.js","../../src/popper/modifiers/applyStyle.js","../../src/popper/utils/isModifierRequired.js","../../src/popper/modifiers/arrow.js","../../src/popper/utils/getOppositeVariation.js","../../src/popper/methods/placements.js","../../src/popper/utils/clockwise.js","../../src/popper/modifiers/flip.js","../../src/popper/modifiers/keepTogether.js","../../src/popper/modifiers/offset.js","../../src/popper/modifiers/preventOverflow.js","../../src/popper/modifiers/shift.js","../../src/popper/modifiers/hide.js","../../src/popper/modifiers/inner.js","../../src/popper/modifiers/index.js","../../src/popper/methods/defaults.js","../../src/popper/index.js"],"sourcesContent":["const nativeHints = [\n  'native code',\n  '[object MutationObserverConstructor]', // for mobile safari iOS 9.0\n];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @method\n * @memberof Popper.Utils\n * @argument {Function | undefined} fn the function to check\n * @returns {Boolean}\n */\nexport default fn =>\n  nativeHints.some(hint => (fn || '').toString().indexOf(hint) > -1);\n","import isNative from './isNative';\n\nconst isBrowser = typeof window !== 'undefined';\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let scheduled = false;\n  let i = 0;\n  const elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  const observer = new MutationObserver(() => {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nconst supportsNativeMutationObserver =\n  isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsNativeMutationObserver\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 && isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (\n    !element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1\n  ) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","export default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || element.firstElementChild.offsetParent === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  const offsetParent = element && element.offsetParent;\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  return offsetParent;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return window.document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer)\n    || start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = window.document.documentElement;\n    const scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    +styles[`border${sideA}Width`].split('px')[0] +\n    +styles[`border${sideB}Width`].split('px')[0]\n  );\n}\n","export default function getWindowSizes() {\n  const body = window.document.body;\n  const html = window.document.documentElement;\n  return {\n    height: Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    ),\n    width: Math.max(\n      body.scrollWidth,\n      body.offsetWidth,\n      html.clientWidth,\n      html.scrollWidth,\n      html.offsetWidth\n    ),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","/**\n * Tells if you are running Internet Explorer 10\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean} isIE10\n */\nlet isIE10 = undefined;\n\nexport default function() {\n  if (isIE10 === undefined) {\n    isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  }\n  return isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE10 from './isIE10';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10()) {\n    try {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    } catch (err) {}\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes() : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE10 from './isIE10';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent) {\n  const isIE10 = runIsIE10();\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top,\n    left: childrenRect.left - parentRect.left,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (isHTML || parent.nodeName === 'BODY') {\n    const styles = getStyleComputedProperty(parent);\n    const borderTopWidth = isIE10 && isHTML\n      ? 0\n      : +styles.borderTopWidth.split('px')[0];\n    const borderLeftWidth = isIE10 && isHTML\n      ? 0\n      : +styles.borderLeftWidth.split('px')[0];\n    const marginTop = isIE10 && isHTML ? 0 : +styles.marginTop.split('px')[0];\n    const marginLeft = isIE10 && isHTML ? 0 : +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    parent.contains(scrollParent) &&\n    (isIE10 || scrollParent.nodeName !== 'BODY')\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  const html = window.document.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = getScroll(html);\n  const scrollLeft = getScroll(html, 'left');\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode\n  from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement\n) {\n  // NOTE: 1 DOM access here\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes();\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(popper, reference, 0, boundariesElement);\n\n  const sides = {\n    top: refRect.top - boundaries.top,\n    right: boundaries.right - refRect.right,\n    bottom: boundaries.bottom - refRect.bottom,\n    left: refRect.left - boundaries.left,\n  };\n\n  const computedPlacement = Object.keys(sides).sort(\n    (a, b) => sides[b] - sides[a]\n  )[0];\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference) {\n  const commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(\n  popper,\n  referenceOffsets,\n  placement\n) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier.function) {\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier.function || modifier.fn;\n    if (modifier.enabled && isFunction(fn)) {\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n  data.offsets.popper.position = 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'webkit', 'moz', 'o'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length - 1; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroy the popper\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.left = '';\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","import getScrollParent from './getScrollParent';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger onUpdate callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    window.cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data, options) {\n  // apply the final offsets to the popper\n  // NOTE: 1 DOM access here\n  const styles = {\n    position: data.offsets.popper.position,\n  };\n\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // round top and left to avoid blurry text\n  const left = Math.round(data.offsets.popper.left);\n  const top = Math.round(data.offsets.popper.top);\n\n  // if gpuAcceleration is set to true and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n  if (options.gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles.top = 0;\n    styles.left = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `left` and `top` properties\n    styles.left = left;\n    styles.top = top;\n    styles.willChange = 'top, left';\n  }\n\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, { ...styles, ...data.styles });\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, { ...attributes, ...data.attributes });\n\n  // if the arrow style has been computed, apply the arrow style\n  if (data.offsets.arrow) {\n    setStyles(data.arrowElement, data.offsets.arrow);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement\n  );\n\n  popper.setAttribute('x-placement', placement);\n  return options;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const popper = getClientRect(data.offsets.popper);\n  const reference = data.offsets.reference;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const side = isVertical ? 'top' : 'left';\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  let sideValue = center - getClientRect(data.offsets.popper)[side];\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = sideValue;\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-right` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getClientRect from '../utils/getClientRect';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = getClientRect(data.offsets.popper);\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n      data.offsets.popper = getPopperOffsets(\n        data.instance.popper,\n        data.offsets.reference,\n        data.placement\n      );\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const popper = getClientRect(data.offsets.popper);\n  const reference = data.offsets.reference;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n      fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n      [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n    ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  const boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement\n  );\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = getClientRect(data.offsets.popper);\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side = ['left', 'top'].indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const reference = data.offsets.reference;\n    const popper = getClientRect(data.offsets.popper);\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const popper = getClientRect(data.offsets.popper);\n  const reference = getClientRect(data.offsets.reference);\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[placement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unitless, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the height.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * An scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} priority=['left', 'right', 'top', 'bottom']\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper this makes sure the popper has always a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier, can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near eachothers\n   * without leaving any gap between the two. Expecially useful when the arrow is\n   * enabled and you want to assure it to point to its reference element.\n   * It cares only about the first axis, you can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjuction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations).\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position,\n     * the popper will never be placed outside of the defined boundaries\n     * (except if keepTogether is enabled)\n     */\n    boundariesElement: 'viewport',\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Just disable this modifier and define you own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3d transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties.\n     */\n    gpuAcceleration: true,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the informations used by Popper.js\n * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overriden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass as 3rd argument an object with the same\n * structure of this object, example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Whether events (resize, scroll) are initially enabled\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreateCallback}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated, this callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdateCallback}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreateCallback\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdateCallback\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport setStyles from './utils/setStyles';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport DEFAULTS from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Create a new Popper.js instance\n   * @class Popper\n   * @param {HTMLElement|referenceObject} reference - The reference element used to position the popper\n   * @param {HTMLElement} popper - The HTML element used as popper.\n   * @param {Object} options - Your custom options to override the ones defined in [DEFAULTS](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // make sure to apply the popper position before any computation\n    setStyles(this.popper, { position: 'absolute' });\n\n    // refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(Popper.Defaults.modifiers).map(name => ({\n      name,\n      ...Popper.Defaults.modifiers[name],\n    }));\n\n    // assign default values to modifiers, making sure to override them with\n    // the ones defined by user\n    this.modifiers = this.modifiers.map(defaultConfig => {\n      const userConfig = (options.modifiers &&\n        options.modifiers[defaultConfig.name]) || {};\n      return { ...defaultConfig, ...userConfig };\n    });\n\n    // add custom modifiers to the modifiers list\n    if (options.modifiers) {\n      this.options.modifiers = {\n        ...{},\n        ...Popper.Defaults.modifiers,\n        ...options.modifiers,\n      };\n      Object.keys(options.modifiers).forEach(name => {\n        // take in account only custom modifiers\n        if (Popper.Defaults.modifiers[name] === undefined) {\n          const modifier = options.modifiers[name];\n          modifier.name = name;\n          this.modifiers.push(modifier);\n        }\n      });\n    }\n\n    // sort the modifiers by order\n    this.modifiers = this.modifiers.sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() { return update.call(this); }\n  destroy() { return destroy.call(this); }\n  enableEventListeners() { return enableEventListeners.call(this); }\n  disableEventListeners() { return disableEventListeners.call(this); }\n\n  /**\n   * Schedule an update, it will run on the next UI update available\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * @static\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = DEFAULTS;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"],"names":["nativeHints","some","fn","toString","indexOf","hint","isBrowser","window","longerTimeoutBrowsers","timeoutDuration","i","length","navigator","userAgent","microtaskDebounce","scheduled","elem","document","createElement","observer","MutationObserver","observe","attributes","setAttribute","taskDebounce","supportsNativeMutationObserver","isNative","isNumeric","n","isNaN","parseFloat","isFinite","setStyles","element","styles","keys","forEach","unit","prop","style","isFunction","functionToCheck","getType","call","getStyleComputedProperty","property","nodeType","css","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","body","overflow","overflowX","overflowY","test","isOffsetContainer","firstElementChild","offsetParent","getRoot","node","getOffsetParent","documentElement","findCommonOffsetParent","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","axis","sideA","sideB","split","getWindowSizes","Math","max","scrollHeight","offsetHeight","clientHeight","scrollWidth","offsetWidth","clientWidth","getClientRect","offsets","width","height","isIE10","undefined","appVersion","getBoundingClientRect","err","result","sizes","horizScrollbar","vertScrollbar","getOffsetRectRelativeToArbitraryNode","children","parent","runIsIE10","isHTML","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","innerWidth","innerHeight","offset","isFixed","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","computeAutoPlacement","placement","refRect","sides","computedPlacement","Object","sort","a","b","variation","getReferenceOffsets","state","commonOffsetParent","getOuterSizes","x","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","referenceOffsets","popperRect","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","find","arr","check","Array","prototype","filter","findIndex","value","cur","match","obj","runModifiers","modifiers","data","ends","modifiersToRun","slice","function","warn","enabled","update","isDestroyed","options","flip","originalPlacement","position","isCreated","onCreate","onUpdate","isModifierEnabled","modifierName","name","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","destroy","removeAttribute","disableEventListeners","removeOnDestroy","removeChild","attachToScrollParents","event","callback","scrollParents","isBody","target","addEventListener","passive","push","setupEventListeners","updateBound","scrollElement","eventsEnabled","enableEventListeners","scheduleUpdate","removeEventListeners","removeEventListener","cancelAnimationFrame","setAttributes","applyStyle","round","prefixedProperty","gpuAcceleration","willChange","instance","arrow","arrowElement","applyStyleOnLoad","modifierOptions","isModifierRequired","requestingName","requestedName","requesting","isRequired","requested","querySelector","isVertical","len","altSide","opSide","arrowElementSize","center","sideValue","min","getOppositeVariation","validPlacements","placements","clockwise","counter","index","concat","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","COUNTERCLOCKWISE","step","refOffsets","floor","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","toValue","str","size","parseOffset","basePlacement","useHeight","fragments","map","frag","trim","divider","search","splitRegex","ops","op","mergeWithPrevious","reduce","index2","preventOverflow","priority","escapeWithReference","shift","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","Popper","requestAnimationFrame","debounce","bind","Defaults","jquery","userConfig","defaultConfig","onLoad","Utils","global","PopperUtils","DEFAULTS"],"mappings":"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"}