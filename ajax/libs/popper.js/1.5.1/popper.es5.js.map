{"version":3,"file":"popper.es5.js.map","sources":["../src/popper/utils/getStyleComputedProperty.js","../src/popper/utils/getParentNode.js","../src/popper/utils/getScrollParent.js","../src/popper/utils/isOffsetContainer.js","../src/popper/utils/getRoot.js","../src/popper/utils/findCommonOffsetParent.js","../src/popper/utils/getScroll.js","../src/popper/utils/includeScroll.js","../src/popper/utils/getBordersSize.js","../src/popper/utils/getWindowSizes.js","../src/popper/utils/getBoundingClientRect.js","../src/popper/utils/getOffsetRectRelativeToArbitraryNode.js","../src/popper/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/popper/utils/isFixed.js","../src/popper/utils/getBoundaries.js","../src/popper/utils/computeAutoPlacement.js","../src/popper/utils/isNative.js","../src/popper/utils/debounce.js","../src/popper/utils/find.js","../src/popper/utils/findIndex.js","../src/popper/utils/getClientRect.js","../src/popper/utils/getOffsetParent.js","../src/popper/utils/getOffsetRect.js","../src/popper/utils/getOuterSizes.js","../src/popper/utils/getOppositePlacement.js","../src/popper/utils/getPopperOffsets.js","../src/popper/utils/getPosition.js","../src/popper/utils/getReferenceOffsets.js","../src/popper/utils/getSupportedPropertyName.js","../src/popper/utils/getTotalScroll.js","../src/popper/utils/isFunction.js","../src/popper/utils/isModifierEnabled.js","../src/popper/utils/isModifierRequired.js","../src/popper/utils/isNumeric.js","../src/popper/utils/isTransformed.js","../src/popper/utils/removeEventListeners.js","../src/popper/utils/runModifiers.js","../src/popper/utils/setAttributes.js","../src/popper/utils/setStyles.js","../src/popper/utils/setupEventListeners.js","../src/popper/utils/index.js","../src/popper/modifiers/applyStyle.js","../src/popper/modifiers/arrow.js","../src/popper/utils/getOppositeVariation.js","../src/popper/modifiers/flip.js","../src/popper/modifiers/keepTogether.js","../src/popper/modifiers/offset.js","../src/popper/modifiers/preventOverflow.js","../src/popper/modifiers/shift.js","../src/popper/modifiers/hide.js","../src/popper/modifiers/inner.js","../src/popper/modifiers/index.js","../src/popper/index.js"],"sourcesContent":["/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (\n    !element || ['HTML', 'BODY', '#document'].indexOf(element.nodeName) !== -1\n  ) {\n    return window.document.body;\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","export default function isOffsetContainer(element) {\n  return (\n    element.nodeName === 'HTML' ||\n    element.firstElementChild.offsetParent === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  const range = document.createRange();\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (element1 && element2) {\n    // Here we make sure to give as \"start\" the element that comes first in the DOM\n    if (\n      element1.compareDocumentPosition(element2) &\n      Node.DOCUMENT_POSITION_FOLLOWING\n    ) {\n      range.setStart(element1, 0);\n      range.setEnd(element2, 0);\n    } else {\n      range.setStart(element2, 0);\n      range.setEnd(element1, 0);\n    }\n  } else {\n    return window.document.documentElement;\n  }\n\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    element1 !== commonAncestorContainer && element2 !== commonAncestorContainer\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    const offsetParent =\n      commonAncestorContainer && commonAncestorContainer.offsetParent;\n\n    if (!offsetParent || (offsetParent && offsetParent.nodeName === 'BODY')) {\n      return window.document.documentElement;\n    }\n\n    return offsetParent;\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {Number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = window.document.documentElement;\n    const scrollingElement = window.document.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles - result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {Number} borders - the borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    Number(styles[`border${sideA}Width`].split('px')[0]) +\n    Number(styles[`border${sideB}Width`].split('px')[0])\n  );\n}\n","export default function getWindowSizes() {\n  const body = window.document.body;\n  const html = window.document.documentElement;\n  return {\n    height: Math.max(\n      body.scrollHeight,\n      body.offsetHeight,\n      html.clientHeight,\n      html.scrollHeight,\n      html.offsetHeight\n    ),\n    width: Math.max(\n      body.scrollWidth,\n      body.offsetWidth,\n      html.clientWidth,\n      html.scrollWidth,\n      html.offsetWidth\n    ),\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  const isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  let rect;\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  if (isIE10) {\n    try {\n      rect = element.getBoundingClientRect();\n    } catch (err) {\n      rect = {};\n    }\n    const scrollTop = getScroll(element, 'top');\n    const scrollLeft = getScroll(element, 'left');\n    rect.top += scrollTop;\n    rect.bottom += scrollTop;\n    rect.left += scrollLeft;\n    rect.right += scrollLeft;\n  } else {\n    rect = element.getBoundingClientRect();\n  }\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    right: rect.right,\n    bottom: rect.bottom,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  let width, height;\n  if (element.nodeName === 'HTML') {\n    const sizes = getWindowSizes();\n    width = sizes.width;\n    height = sizes.height;\n  } else {\n    width = element.clientWidth || result.right - result.left;\n    height = element.clientHeight || result.bottom - result.top;\n  }\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.right -= horizScrollbar;\n    result.width -= horizScrollbar;\n    result.bottom -= vertScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return result;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent) {\n  const isIE10 = navigator.appVersion.indexOf('MSIE 10') !== -1;\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n  let offsets = {\n    top: childrenRect.top - parentRect.top,\n    left: childrenRect.left - parentRect.left,\n    bottom: childrenRect.top - parentRect.top + childrenRect.height,\n    right: childrenRect.left - parentRect.left + childrenRect.width,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  };\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  const isHTML = parent.nodeName === 'HTML';\n  if (isHTML || parent.nodeName === 'BODY') {\n    const styles = getStyleComputedProperty(parent);\n    const borderTopWidth = isIE10 && isHTML ? 0 : +styles.borderTopWidth.split('px')[0];\n    const borderLeftWidth = isIE10 && isHTML ? 0 : +styles.borderLeftWidth.split('px')[0];\n    const marginTop = isIE10 && isHTML ? 0 : +styles.marginTop.split('px')[0];\n    const marginLeft = isIE10 && isHTML ? 0 : +styles.marginLeft.split('px')[0];\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    parent.contains(scrollParent) &&\n    (isIE10 || scrollParent.nodeName !== 'BODY')\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element) {\n  const html = window.document.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = getScroll(html);\n  const scrollLeft = getScroll(html, 'left');\n\n  return {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    bottom: scrollTop - relativeOffset.top + relativeOffset.marginTop + height,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    right: scrollLeft - relativeOffset.left + relativeOffset.marginLeft + width,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  return isFixed(getParentNode(element));\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode\n  from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {Object} data - Object containing the property \"offsets\" generated by `_getOffsets`\n * @param {Number} padding - Boundaries padding\n * @param {Element} boundariesElement - Element used to define the boundaries\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement\n) {\n  // NOTE: 1 DOM access here\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport') {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent);\n  } else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(popper));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = window.document.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = window.document.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes();\n      boundaries.right = width;\n      boundaries.bottom = height;\n\n      const offsets = getOffsetRectRelativeToArbitraryNode(\n        boundariesNode,\n        offsetParent\n      );\n\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom += offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right += offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = getOffsetRectRelativeToArbitraryNode(\n        boundariesNode,\n        offsetParent\n      );\n    }\n  }\n\n  // Add paddings\n  boundaries.left += padding;\n  boundaries.top += padding;\n  boundaries.right -= padding;\n  boundaries.bottom -= padding;\n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(popper, reference, 0, 'scrollParent');\n\n  const sides = {\n    top: refRect.top - boundaries.top,\n    right: boundaries.right - refRect.right,\n    bottom: boundaries.bottom - refRect.bottom,\n    left: refRect.left - boundaries.left,\n  };\n\n  const computedPlacement = Object.keys(sides).sort(\n    (a, b) => sides[b] - sides[a]\n  )[0];\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","const nativeHints = [\n  'native code',\n  '[object MutationObserverConstructor]', // for mobile safari iOS 9.0\n];\n\n/**\n * Determine if a function is implemented natively (as opposed to a polyfill).\n * @argument {Function | undefined} fn the function to check\n * @returns {boolean}\n */\nexport default fn =>\n  nativeHints.some(hint => (fn || '').toString().indexOf(hint) > -1);\n","import isNative from './isNative';\n\nconst isBrowser = typeof window !== 'undefined';\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let scheduled = false;\n  let i = 0;\n  const elem = document.createElement('span');\n\n  // MutationObserver provides a mechanism for scheduling microtasks, which\n  // are scheduled *before* the next task. This gives us a way to debounce\n  // a function but ensure it's called *before* the next paint.\n  const observer = new MutationObserver(() => {\n    fn();\n    scheduled = false;\n  });\n\n  observer.observe(elem, { attributes: true });\n\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      elem.setAttribute('x-index', i);\n      i = i + 1; // don't use compund (+=) because it doesn't get optimized in V8\n    }\n  };\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\n// It's common for MutationObserver polyfills to be seen in the wild, however\n// these rely on Mutation Events which only occur when an element is connected\n// to the DOM. The algorithm used in this module does not use a connected element,\n// and so we must ensure that a *native* MutationObserver is available.\nconst supportsNativeMutationObserver =\n  isBrowser && isNative(window.MutationObserver);\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsNativeMutationObserver\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","/**\n * Given the popper offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} popperOffsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(popperOffsets) {\n  return {\n    ...popperOffsets,\n    right: popperOffsets.left + popperOffsets.width,\n    bottom: popperOffsets.top + popperOffsets.height,\n  };\n}\n","/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  // NOTE: 1 DOM access here\n  const offsetParent = element.offsetParent;\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return window.document.documentElement;\n  }\n\n  return offsetParent;\n}\n","import getWindowSizes from './getWindowSizes';\n\n/**\n * Get the position of the given element, relative to its offset parent\n * @method\n * @memberof Popper.Utils\n * @param {Element} element\n * @return {Object} position - Coordinates of the element and its `scrollTop`\n */\nexport default function getOffsetRect(element) {\n  let elementRect;\n  if (element.nodeName === 'HTML') {\n    const { width, height } = getWindowSizes();\n    elementRect = {\n      width,\n      height,\n      left: 0,\n      top: 0,\n    };\n  } else {\n    elementRect = {\n      width: element.offsetWidth,\n      height: element.offsetHeight,\n      left: element.offsetLeft,\n      top: element.offsetTop,\n    };\n  }\n\n  elementRect.right = elementRect.left + elementRect.width;\n  elementRect.bottom = elementRect.top + elementRect.height;\n\n  // position\n  return elementRect;\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop) + parseFloat(styles.marginBottom);\n  const y = parseFloat(styles.marginLeft) + parseFloat(styles.marginRight);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one/\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(\n  position,\n  popper,\n  referenceOffsets,\n  placement\n) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    position,\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","import getOffsetParent from './getOffsetParent';\nimport isFixed from './isFixed';\n\n/**\n * Helper used to get the position which will be applied to the popper\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element - popper element\n * @returns {String} position\n */\nexport default function getPosition(element) {\n  const container = getOffsetParent(element);\n\n  // Decide if the popper will be fixed\n  // If the reference element is inside a fixed context, the popper will be fixed as well to allow them to scroll together\n  const isParentFixed = isFixed(container);\n  return isParentFixed ? 'fixed' : 'absolute';\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference) {\n  const commonOffsetParent = findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent);\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'webkit', 'moz', 'o'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length - 1; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof window.document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import getScrollParent from './getScrollParent';\nimport getScroll from './getScroll';\nimport getParentNode from './getParentNode';\nimport isOffsetContainer from './isOffsetContainer';\nimport isFixed from './isFixed';\n\n/**\n * Gets the scroll value of the given element relative to the given parent/\n * It will not include the scroll values of elements that aren't positioned.\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} parent\n * @argument {String} side `top` or `left`\n * @returns {Number} amount of scrolled pixels\n */\nexport default function getTotalScroll(element, parent, side = 'top') {\n  const scrollParent = getScrollParent(element);\n  let scroll = 0;\n  const isParentFixed = isFixed(parent);\n\n  // NOTE: I'm not sure the second line of this check is completely correct, review it if\n  // someone complains about viewport problems in future\n  if (\n    isOffsetContainer(\n      scrollParent.nodeName === 'BODY'\n        ? window.document.documentElement\n        : scrollParent\n    ) &&\n    ((parent.contains(scrollParent) && isParentFixed) || !isParentFixed)\n  ) {\n    scroll = getScroll(scrollParent, side);\n  }\n\n  if (\n    parent === scrollParent ||\n    ['BODY', 'HTML'].indexOf(scrollParent.nodeName) === -1\n  ) {\n    return scroll + getTotalScroll(getParentNode(scrollParent), parent, side);\n  }\n  return scroll;\n}\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {*} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  return (\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    })\n  );\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element has transforms applied to itself or a parent\n * @method\n * @memberof Popper.Utils\n * @param  {Element} element\n * @return {Boolean} answer to \"isTransformed?\"\n */\nexport default function isTransformed(element) {\n  if (element.nodeName === 'BODY') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'transform') !== 'none') {\n    return true;\n  }\n  return getParentNode(element)\n    ? isTransformed(getParentNode(element))\n    : element;\n}\n","/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  window.removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\n\n/**\n * Loop trough the list of modifiers and run them in order, each of them will then edit the data object\n * @method\n * @memberof Popper.Utils\n * @param {Object} data\n * @param {Array} modifiers\n * @param {Function} ends\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier.enabled && isFunction(modifier.function)) {\n      data = modifier.function(data, modifier);\n    }\n  });\n\n  return data;\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles - Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles - Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 && isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","import getScrollParent from './getScrollParent';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? window : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  window.addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import computeAutoPlacement from './computeAutoPlacement';\nimport debounce from './debounce';\nimport findIndex from './findIndex';\nimport getBordersSize from './getBordersSize';\nimport getBoundaries from './getBoundaries';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport getClientRect from './getClientRect';\nimport getOffsetParent from './getOffsetParent';\nimport getOffsetRect from './getOffsetRect';\nimport getOffsetRectRelativeToArbitraryNode\n  from './getOffsetRectRelativeToArbitraryNode';\nimport getOuterSizes from './getOuterSizes';\nimport getParentNode from './getParentNode';\nimport getPopperOffsets from './getPopperOffsets';\nimport getPosition from './getPosition';\nimport getReferenceOffsets from './getReferenceOffsets';\nimport getScroll from './getScroll';\nimport getScrollParent from './getScrollParent';\nimport getStyleComputedProperty from './getStyleComputedProperty';\nimport getSupportedPropertyName from './getSupportedPropertyName';\nimport getTotalScroll from './getTotalScroll';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport isFunction from './isFunction';\nimport isModifierEnabled from './isModifierEnabled';\nimport isModifierRequired from './isModifierRequired';\nimport isNative from './isNative';\nimport isNumeric from './isNumeric';\nimport isTransformed from './isTransformed';\nimport removeEventListeners from './removeEventListeners';\nimport runModifiers from './runModifiers';\nimport setAttributes from './setAttributes';\nimport setStyles from './setStyles';\nimport setupEventListeners from './setupEventListeners';\n\n/** @namespace Popper.Utils */\nexport default {\n  computeAutoPlacement,\n  debounce,\n  findIndex,\n  getBordersSize,\n  getBoundaries,\n  getBoundingClientRect,\n  getClientRect,\n  getOffsetParent,\n  getOffsetRect,\n  getOffsetRectRelativeToArbitraryNode,\n  getOuterSizes,\n  getParentNode,\n  getPopperOffsets,\n  getPosition,\n  getReferenceOffsets,\n  getScroll,\n  getScrollParent,\n  getStyleComputedProperty,\n  getSupportedPropertyName,\n  getTotalScroll,\n  getWindowSizes,\n  isFixed,\n  isFunction,\n  isModifierEnabled,\n  isModifierRequired,\n  isNative,\n  isNumeric,\n  isTransformed,\n  removeEventListeners,\n  runModifiers,\n  setAttributes,\n  setStyles,\n  setupEventListeners,\n};\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * Apply the computed styles to the popper element\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data, options) {\n  // apply the final offsets to the popper\n  // NOTE: 1 DOM access here\n  const styles = {\n    position: data.offsets.popper.position,\n  };\n\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // round top and left to avoid blurry text\n  const left = Math.round(data.offsets.popper.left);\n  const top = Math.round(data.offsets.popper.top);\n\n  // if gpuAcceleration is set to true and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n  if (options.gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';\n    styles.top = 0;\n    styles.left = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `left` and `top` properties\n    styles.left = left;\n    styles.top = top;\n    styles.willChange = 'top, left';\n  }\n\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, { ...styles, ...data.styles });\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, { ...attributes, ...data.attributes });\n\n  // if the arrow style has been computed, apply the arrow style\n  if (data.offsets.arrow) {\n    setStyles(data.arrowElement, data.offsets.arrow);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used to add margins to the popper\n * margins needs to be calculated to get the correct popper offsets\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  options.placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference\n  );\n\n  popper.setAttribute('x-placement', options.placement);\n  return options;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\n\n/**\n * Modifier used to move the arrowElements on the edge of the popper to make sure them are always between the popper and the reference element\n * It will use the CSS outer size of the arrowElement element to know how many pixels of conjuction are needed\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    console.warn(\n      'WARNING: `keepTogether` modifier is required by arrow modifier in order to work, be sure to include it before `arrow`!'\n    );\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const popper = getClientRect(data.offsets.popper);\n  const reference = data.offsets.reference;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const side = isVertical ? 'top' : 'left';\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its reference have enough pixels in conjuction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  let sideValue = center - getClientRect(data.offsets.popper)[side];\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {};\n  data.offsets.arrow[side] = sideValue;\n  data.offsets.arrow[altSide] = ''; // make sure to unset any eventual altSide value from the DOM node\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one/\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getClientRect from '../utils/getClientRect';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\n\n/**\n * Modifier used to flip the placement of the popper when the latter is starting overlapping its reference element.\n * Requires the `preventOverflow` modifier before it in order to work.\n * **NOTE:** data.instance modifier will run all its previous modifiers everytime it tries to flip the popper!\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  if (options.behavior === 'flip') {\n    flipOrder = [placement, placementOpposite];\n  } else {\n    flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = getClientRect(data.offsets.popper);\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n    const flippedVariation =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n      data.offsets.popper = getPopperOffsets(\n        data.instance.state.position,\n        data.instance.popper,\n        data.offsets.reference,\n        data.placement\n      );\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\n\n/**\n * Modifier used to make sure the popper is always near its reference element\n * It cares only about the first axis, you can still have poppers with margin\n * between the popper and its reference element.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const popper = getClientRect(data.offsets.popper);\n  const reference = data.offsets.reference;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Modifier used to add an offset to the popper, useful if you more granularity positioning your popper.\n * The offsets will shift the popper on the side of its reference element.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n *      Basic usage allows a number used to nudge the popper by the given amount of pixels.\n *      You can pass a percentage value as string (eg. `20%`) to nudge by the given percentage (relative to reference element size)\n *      Other supported units are `vh` and `vw` (relative to viewport)\n *      Additionally, you can pass a pair of values (eg. `10 20` or `2vh 20%`) to nudge the popper\n *      on both axis.\n *      A note about percentage values, if you want to refer a percentage to the popper size instead of the reference element size,\n *      use `%p` instead of `%` (eg: `20%p`). To make it clearer, you can replace `%` with `%r` and use eg.`10%p 25%r`.\n *      > **Heads up!** The order of the axis is relative to the popper placement: `bottom` or `top` are `X,Y`, the other are `Y,X`\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, options) {\n  const placement = data.placement;\n  const popper = data.offsets.popper;\n\n  let offsets;\n  if (isNumeric(options.offset)) {\n    offsets = [options.offset, 0];\n  } else {\n    // split the offset in case we are providing a pair of offsets separated\n    // by a blank space\n    offsets = options.offset.split(' ');\n\n    // itherate through each offset to compute them in case they are percentages\n    offsets = offsets.map((offset, index) => {\n      // separate value from unit\n      const split = offset.match(/(\\d*\\.?\\d*)(.*)/);\n      const value = +split[1];\n      const unit = split[2];\n\n      // use height if placement is left or right and index is 0 otherwise use width\n      // in this way the first offset will use an axis and the second one\n      // will use the other one\n      let useHeight =\n        placement.indexOf('right') !== -1 || placement.indexOf('left') !== -1;\n\n      if (index === 1) {\n        useHeight = !useHeight;\n      }\n\n      const measurement = useHeight ? 'height' : 'width';\n\n      // if is a percentage relative to the popper (%p), we calculate the value of it using\n      // as base the sizes of the popper\n      // if is a percentage (% or %r), we calculate the value of it using as base the\n      // sizes of the reference element\n      if (unit.indexOf('%') === 0) {\n        let element;\n        switch (unit) {\n          case '%p':\n            element = data.offsets.popper;\n            break;\n          case '%':\n          case '$r':\n          default:\n            element = data.offsets.reference;\n        }\n\n        const rect = getClientRect(element);\n        const len = rect[measurement];\n        return len / 100 * value;\n      } else if (unit === 'vh' || unit === 'vw') {\n        // if is a vh or vw, we calculate the size based on the viewport\n        let size;\n        if (unit === 'vh') {\n          size = Math.max(\n            document.documentElement.clientHeight,\n            window.innerHeight || 0\n          );\n        } else {\n          size = Math.max(\n            document.documentElement.clientWidth,\n            window.innerWidth || 0\n          );\n        }\n        return size / 100 * value;\n      } else if (unit === 'px') {\n        // if is an explicit pixel unit, we get rid of the unit and keep the value\n        return +value;\n      } else {\n        // if is an implicit unit, it's px, and we return just the value\n        return +offset;\n      }\n    });\n  }\n\n  if (data.placement.indexOf('left') !== -1) {\n    popper.top += offsets[0];\n    popper.left -= offsets[1] || 0;\n  } else if (data.placement.indexOf('right') !== -1) {\n    popper.top += offsets[0];\n    popper.left += offsets[1] || 0;\n  } else if (data.placement.indexOf('top') !== -1) {\n    popper.left += offsets[0];\n    popper.top -= offsets[1] || 0;\n  } else if (data.placement.indexOf('bottom') !== -1) {\n    popper.left += offsets[0];\n    popper.top += offsets[1] || 0;\n  }\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\n\n/**\n * Modifier used to prevent the popper from being positioned outside the boundary.\n *\n * An scenario exists where the reference itself is not within the boundaries. We can\n * say it has \"escaped the boundaries\" — or just \"escaped\". In this case we need to\n * decide whether the popper should either:\n *\n * - detach from the reference and remain \"trapped\" in the boundaries, or\n * - if it should be ignore the boundary and \"escape with the reference\"\n *\n * When `escapeWithReference` is `true`, and reference is completely outside the\n * boundaries, the popper will overflow (or completely leave) the boundaries in order\n * to remain attached to the edge of the reference.\n *\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  const boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement\n  );\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = getClientRect(data.offsets.popper);\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side = ['left', 'top'].indexOf(placement) !== -1\n      ? 'primary'\n      : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\n\n/**\n * Modifier used to shift the popper on the start or end of its reference element side\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const reference = data.offsets.reference;\n    const popper = getClientRect(data.offsets.popper);\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * Modifier used to hide the popper when its reference element is outside of the\n * popper boundaries. It will set an x-hidden attribute which can be used to hide\n * the popper when its reference is out of boundaries.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    console.warn(\n      'WARNING: preventOverflow modifier is required by hide modifier in order to work, be sure to include it before hide!'\n    );\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * Modifier used to make the popper flow toward the inner of the reference element.\n * By default, when this modifier is disabled, the popper will be placed outside\n * the reference element.\n * @method\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const popper = getClientRect(data.offsets.popper);\n  const reference = getClientRect(data.offsets.reference);\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[placement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.\n * Popper.js uses a set of 7 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Each modifier is an object containing several properties listed below.\n * @namespace Modifiers\n * @param {Object} modifier - Modifier descriptor\n * @param {Integer} modifier.order\n *      The `order` property defines the execution order of the modifiers.\n *      The built-in modifiers have orders with a gap of 100 units in between,\n *      this allows you to inject additional modifiers between the existing ones\n *      without having to redefine the order of all of them.\n *      The modifiers are executed starting from the one with the lowest order.\n * @param {Boolean} modifier.enabled - When `true`, the modifier will be used.\n * @param {Modifiers~modifier} modifier.function - Modifier function.\n * @param {Modifiers~onLoad} modifier.onLoad - Function executed on popper initalization\n * @return {Object} data - Each modifier must return the modified `data` object.\n */\nexport default {\n  shift: {\n    order: 100,\n    enabled: true,\n    function: shift,\n  },\n  offset: {\n    order: 200,\n    enabled: true,\n    function: offset,\n    // nudges popper from its origin by the given amount of pixels (can be negative)\n    offset: 0,\n  },\n  preventOverflow: {\n    order: 300,\n    enabled: true,\n    function: preventOverflow,\n    // popper will try to prevent overflow following these priorities\n    //  by default, then, it could overflow on the left and on top of the boundariesElement\n    priority: ['left', 'right', 'top', 'bottom'],\n    // amount of pixel used to define a minimum distance between the boundaries and the popper\n    // this makes sure the popper has always a little padding between the edges of its container\n    padding: 5,\n    boundariesElement: 'scrollParent',\n  },\n  keepTogether: {\n    order: 400,\n    enabled: true,\n    function: keepTogether,\n  },\n  arrow: {\n    order: 500,\n    enabled: true,\n    function: arrow,\n    // selector or node used as arrow\n    element: '[x-arrow]',\n  },\n  flip: {\n    order: 600,\n    enabled: true,\n    function: flip,\n    // the behavior used to change the popper's placement\n    behavior: 'flip',\n    // the popper will flip if it hits the edges of the boundariesElement - padding\n    padding: 5,\n    boundariesElement: 'viewport',\n  },\n  inner: {\n    order: 700,\n    enabled: false,\n    function: inner,\n  },\n  hide: {\n    order: 800,\n    enabled: true,\n    function: hide,\n  },\n  applyStyle: {\n    order: 900,\n    enabled: true,\n    // if true, it uses the CSS 3d transformation to position the popper\n    gpuAcceleration: true,\n    function: applyStyle,\n    onLoad: applyStyleOnLoad,\n  },\n};\n\n/**\n  * Modifiers can edit the `data` object to change the beheavior of the popper.\n  * This object contains all the informations used by Popper.js to compute the\n  * popper position.\n  * The modifier can edit the data as needed, and then `return` it as result.\n  *\n  * @callback Modifiers~modifier\n  * @param {dataObject} data\n  * @return {dataObject} modified data\n  */\n\n/**\n  * The `dataObject` is an object containing all the informations used by Popper.js\n  * this object get passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n  * @name dataObject\n  * @property {Object} data.instance The Popper.js instance\n  * @property {String} data.placement Placement applied to popper\n  * @property {String} data.originalPlacement Placement originally defined on init\n  * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n  * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper.\n  * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n  * @property {Object} data.styles Any CSS property defined here will be applied to the popper, it expects the JavaScript nomenclature (eg. `marginBottom`)\n  * @property {Object} data.boundaries Offsets of the popper boundaries\n  * @property {Object} data.offsets The measurements of popper, reference and arrow elements.\n  * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n  * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n  * @property {Object} data.offsets.arro] `top` and `left` offsets, only one of them will be different from 0\n  */\n","// Utils\nimport Utils from './utils/index';\nimport debounce from './utils/debounce';\nimport setStyles from './utils/setStyles';\nimport isTransformed from './utils/isTransformed';\nimport getSupportedPropertyName from './utils/getSupportedPropertyName';\nimport getReferenceOffsets from './utils/getReferenceOffsets';\nimport getPopperOffsets from './utils/getPopperOffsets';\nimport isFunction from './utils/isFunction';\nimport setupEventListeners from './utils/setupEventListeners';\nimport removeEventListeners from './utils/removeEventListeners';\nimport runModifiers from './utils/runModifiers';\nimport isModifierEnabled from './utils/isModifierEnabled';\nimport computeAutoPlacement from './utils/computeAutoPlacement';\n\n// Modifiers\nimport modifiers from './modifiers/index';\n\n// default options\nconst DEFAULTS = {\n  // placement of the popper\n  placement: 'bottom',\n\n  // whether events (resize, scroll) are initially enabled\n  eventsEnabled: true,\n\n  /**\n     * Callback called when the popper is created.\n     * By default, is set to no-op.\n     * Access Popper.js instance with `data.instance`.\n     * @callback createCallback\n     * @static\n     * @param {dataObject} data\n     */\n  onCreate: () => {},\n\n  /**\n     * Callback called when the popper is updated, this callback is not called\n     * on the initialization/creation of the popper, but only on subsequent\n     * updates.\n     * By default, is set to no-op.\n     * Access Popper.js instance with `data.instance`.\n     * @callback updateCallback\n     * @static\n     * @param {dataObject} data\n     */\n  onUpdate: () => {},\n\n  // list of functions used to modify the offsets before they are applied to the popper\n  modifiers,\n};\n\n/**\n * Create a new Popper.js instance\n * @class Popper\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper.\n * @param {Object} options\n * @param {String} options.placement=bottom\n *      Placement of the popper accepted values: `top(-start, -end), right(-start, -end), bottom(-start, -end),\n *      left(-start, -end)`\n *\n * @param {Boolean} options.eventsEnabled=true\n *      Whether events (resize, scroll) are initially enabled\n * @param {Boolean} options.gpuAcceleration=true\n *      When this property is set to true, the popper position will be applied using CSS3 translate3d, allowing the\n *      browser to use the GPU to accelerate the rendering.\n *      If set to false, the popper will be placed using `top` and `left` properties, not using the GPU.\n *\n * @param {Boolean} options.removeOnDestroy=false\n *      Set to true if you want to automatically remove the popper when you call the `destroy` method.\n *\n * @param {Object} options.modifiers\n *      List of functions used to modify the data before they are applied to the popper (see source code for default values)\n *\n * @param {Object} options.modifiers.arrow - Arrow modifier configuration\n * @param {String|HTMLElement} options.modifiers.arrow.element='[x-arrow]'\n *      The DOM Node used as arrow for the popper, or a CSS selector used to get the DOM node. It must be child of\n *      its parent Popper. Popper.js will apply to the given element the style required to align the arrow with its\n *      reference element.\n *      By default, it will look for a child node of the popper with the `x-arrow` attribute.\n *\n * @param {Object} options.modifiers.offset - Offset modifier configuration\n * @param {Number} options.modifiers.offset.offset=0\n *      Amount of pixels the popper will be shifted (can be negative).\n *\n * @param {Object} options.modifiers.preventOverflow - PreventOverflow modifier configuration\n * @param {Array} [options.modifiers.preventOverflow.priority=['left', 'right', 'top', 'bottom']]\n *      Priority used when Popper.js tries to avoid overflows from the boundaries, they will be checked in order,\n *      this means that the last one will never overflow\n * @param {String|HTMLElement} options.modifiers.preventOverflow.boundariesElement='scrollParent'\n *      Boundaries used by the modifier, can be `scrollParent`, `window`, `viewport` or any DOM element.\n * @param {Number} options.modifiers.preventOverflow.padding=5\n *      Amount of pixels used to define a minimum distance between the boundaries and the popper\n *      this makes sure the popper has always a little padding between the edges of its container.\n *\n * @param {Object} options.modifiers.flip - Flip modifier configuration\n * @param {String|Array} options.modifiers.flip.behavior='flip'\n *      The behavior used by the `flip` modifier to change the placement of the popper when the latter is trying to\n *      overlap its reference element. Defining `flip` as value, the placement will be flipped on\n *      its axis (`right - left`, `top - bottom`).\n *      You can even pass an array of placements (eg: `['right', 'left', 'top']` ) to manually specify\n *      how alter the placement when a flip is needed. (eg. in the above example, it would first flip from right to left,\n *      then, if even in its new placement, the popper is overlapping its reference element, it will be moved to top)\n * @param {String|HTMLElement} options.modifiers.flip.boundariesElement='viewport'\n *      The element which will define the boundaries of the popper position, the popper will never be placed outside\n *      of the defined boundaries (except if `keepTogether` is enabled)\n *\n * @param {Object} options.modifiers.inner - Inner modifier configuration\n * @param {Number} options.modifiers.inner.enabled=false\n *      Set to `true` to make the popper flow toward the inner of the reference element.\n *\n * @param {Number} options.modifiers.flip.padding=5\n *      Amount of pixels used to define a minimum distance between the boundaries and the popper\n *      this makes sure the popper will flip before it touches the edge of the boundaries,\n *      making it have always a little padding between the edges of its container.\n *\n * @param {createCallback} options.onCreate - onCreate callback\n *      Function called after the Popper has been instantiated.\n *\n * @param {updateCallback} options.onUpdate - onUpdate callback\n *      Function called on subsequent updates of Popper.\n *\n * @return {Object} instance - The generated Popper.js instance\n */\nexport default class Popper {\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference.jquery ? reference[0] : reference;\n    this.popper = popper.jquery ? popper[0] : popper;\n\n    // make sure to apply the popper position before any computation\n    setStyles(this.popper, { position: 'absolute' });\n\n    // refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(Popper.Defaults.modifiers).map(name => ({\n      name,\n      ...Popper.Defaults.modifiers[name],\n    }));\n\n    // assign default values to modifiers, making sure to override them with\n    // the ones defined by user\n    this.modifiers = this.modifiers.map(defaultConfig => {\n      const userConfig = (options.modifiers &&\n        options.modifiers[defaultConfig.name]) || {};\n      return { ...defaultConfig, ...userConfig };\n    });\n\n    // add custom modifiers to the modifiers list\n    if (options.modifiers) {\n      this.options.modifiers = {\n        ...{},\n        ...Popper.Defaults.modifiers,\n        ...options.modifiers,\n      };\n      Object.keys(options.modifiers).forEach(name => {\n        // take in account only custom modifiers\n        if (Popper.Defaults.modifiers[name] === undefined) {\n          const modifier = options.modifiers[name];\n          modifier.name = name;\n          this.modifiers.push(modifier);\n        }\n      });\n    }\n\n    // sort the modifiers by order\n    this.modifiers = this.modifiers.sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // determine how we should set the origin of offsets\n    this.state.isParentTransformed = isTransformed(this.popper.parentNode);\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  //\n  // Methods\n  //\n\n  /**\n     * Updates the position of the popper, computing the new offsets and applying the new style\n     * Prefer `scheduleUpdate` over `update` because of performance reasons\n     * @method\n     * @memberof Popper\n     */\n  update() {\n    // if popper is destroyed, don't perform any further update\n    if (this.state.isDestroyed) {\n      return;\n    }\n\n    let data = {\n      instance: this,\n      styles: {},\n      attributes: {},\n      flipped: false,\n      offsets: {},\n    };\n\n    // compute reference element offsets\n    data.offsets.reference = getReferenceOffsets(\n      this.state,\n      this.popper,\n      this.reference\n    );\n\n    // compute auto placement, store placement inside the data object,\n    // modifiers will be able to edit `placement` if needed\n    // and refer to originalPlacement to know the original value\n    data.placement = computeAutoPlacement(\n      this.options.placement,\n      data.offsets.reference,\n      this.popper,\n      this.reference\n    );\n\n    // store the computed placement inside `originalPlacement`\n    data.originalPlacement = this.options.placement;\n\n    // compute the popper offsets\n    data.offsets.popper = getPopperOffsets(\n      this.state,\n      this.popper,\n      data.offsets.reference,\n      data.placement\n    );\n\n    // run the modifiers\n    data = runModifiers(this.modifiers, data);\n\n    // the first `update` will call `onCreate` callback\n    // the other ones will call `onUpdate` callback\n    if (!this.state.isCreated) {\n      this.state.isCreated = true;\n      this.options.onCreate(data);\n    } else {\n      this.options.onUpdate(data);\n    }\n  }\n\n  /**\n     * Schedule an update, it will run on the next UI update available\n     * @method scheduleUpdate\n     * @memberof Popper\n     */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n     * Destroy the popper\n     * @method\n     * @memberof Popper\n     */\n  destroy() {\n    this.state.isDestroyed = true;\n\n    // touch DOM only if `applyStyle` modifier is enabled\n    if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n      this.popper.removeAttribute('x-placement');\n      this.popper.style.left = '';\n      this.popper.style.position = '';\n      this.popper.style.top = '';\n      this.popper.style[getSupportedPropertyName('transform')] = '';\n    }\n\n    this.disableEventListeners();\n\n    // remove the popper if user explicity asked for the deletion on destroy\n    // do not use `remove` because IE11 doesn't support it\n    if (this.options.removeOnDestroy) {\n      this.popper.parentNode.removeChild(this.popper);\n    }\n    return this;\n  }\n\n  /**\n     * it will add resize/scroll events and start recalculating\n     * position of the popper element when they are triggered\n     * @method\n     * @memberof Popper\n     */\n  enableEventListeners() {\n    if (!this.state.eventsEnabled) {\n      this.state = setupEventListeners(\n        this.reference,\n        this.options,\n        this.state,\n        this.scheduleUpdate\n      );\n    }\n  }\n\n  /**\n     * it will remove resize/scroll events and won't recalculate\n     * popper position when they are triggered. It also won't trigger onUpdate callback anymore,\n     * unless you call 'update' method manually.\n     * @method\n     * @memberof Popper\n     */\n  disableEventListeners() {\n    if (this.state.eventsEnabled) {\n      window.cancelAnimationFrame(this.scheduleUpdate);\n      this.state = removeEventListeners(this.reference, this.state);\n    }\n  }\n\n  /**\n     * Collection of utilities useful when writing custom modifiers\n     * @memberof Popper\n     */\n  static Utils = Utils;\n\n  /**\n     * List of accepted placements to use as values of the `placement` option\n     * @memberof Popper\n     */\n  static placements = [\n    'auto',\n    'auto-start',\n    'auto-end',\n    'top',\n    'top-start',\n    'top-end',\n    'right',\n    'right-start',\n    'right-end',\n    'bottom',\n    'bottom-start',\n    'bottom-end',\n    'left',\n    'left-start',\n    'left-end',\n  ];\n\n  /**\n     * Default Popper.js options\n     * @memberof Popper\n     */\n  static Defaults = DEFAULTS;\n}\n"],"names":["getStyleComputedProperty","element","property","nodeType","css","window","getComputedStyle","getParentNode","nodeName","parentNode","host","getScrollParent","indexOf","document","body","overflow","overflowX","overflowY","test","isOffsetContainer","firstElementChild","offsetParent","getRoot","node","findCommonOffsetParent","element1","element2","range","createRange","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","setStart","setEnd","documentElement","commonAncestorContainer","element1root","getScroll","side","upperSide","html","scrollingElement","includeScroll","rect","subtract","scrollTop","scrollLeft","modifier","top","bottom","left","right","getBordersSize","styles","axis","sideA","sideB","Number","split","getWindowSizes","Math","max","scrollHeight","offsetHeight","clientHeight","scrollWidth","offsetWidth","clientWidth","getBoundingClientRect","isIE10","navigator","appVersion","err","result","width","height","sizes","horizScrollbar","vertScrollbar","getOffsetRectRelativeToArbitraryNode","children","parent","childrenRect","parentRect","scrollParent","offsets","isHTML","borderTopWidth","borderLeftWidth","marginTop","marginLeft","contains","getViewportOffsetRectRelativeToArtbitraryNode","relativeOffset","innerWidth","innerHeight","isFixed","getBoundaries","popper","reference","padding","boundariesElement","boundaries","boundariesNode","computeAutoPlacement","placement","refRect","sides","computedPlacement","Object","keys","sort","a","b","variation","nativeHints","some","fn","toString","hint","isBrowser","longerTimeoutBrowsers","timeoutDuration","i","length","userAgent","microtaskDebounce","scheduled","elem","createElement","observer","MutationObserver","observe","attributes","setAttribute","taskDebounce","supportsNativeMutationObserver","isNative","find","arr","check","Array","prototype","filter","findIndex","prop","value","cur","match","obj","getClientRect","popperOffsets","getOffsetParent","getOffsetRect","elementRect","offsetLeft","offsetTop","getOuterSizes","x","parseFloat","marginBottom","y","marginRight","getOppositePlacement","hash","replace","matched","getPopperOffsets","position","referenceOffsets","popperRect","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","getPosition","container","isParentFixed","getReferenceOffsets","state","commonOffsetParent","getSupportedPropertyName","prefixes","upperProp","charAt","toUpperCase","slice","prefix","toCheck","style","getTotalScroll","scroll","isFunction","functionToCheck","getType","call","isModifierEnabled","modifiers","modifierName","name","enabled","isModifierRequired","requestingName","requestedName","requesting","order","isNumeric","n","isNaN","isFinite","isTransformed","removeEventListeners","removeEventListener","updateBound","scrollParents","forEach","scrollElement","eventsEnabled","runModifiers","data","ends","modifiersToRun","undefined","function","setAttributes","removeAttribute","setStyles","unit","attachToScrollParents","event","callback","isBody","target","addEventListener","passive","push","setupEventListeners","options","applyStyle","round","prefixedProperty","gpuAcceleration","willChange","instance","arrow","arrowElement","applyStyleOnLoad","modifierOptions","warn","querySelector","isVertical","len","altSide","opSide","arrowElementSize","center","sideValue","min","getOppositeVariation","flip","flipped","originalPlacement","placementOpposite","flipOrder","behavior","step","index","refOffsets","floor","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariation","flipVariations","keepTogether","offset","map","useHeight","size","preventOverflow","priority","escapeWithReference","shift","basePlacement","shiftvariation","shiftOffsets","hide","bound","inner","subtractLength","DEFAULTS","Popper","scheduleUpdate","requestAnimationFrame","update","debounce","bind","Defaults","jquery","userConfig","defaultConfig","onLoad","isParentTransformed","enableEventListeners","isDestroyed","isCreated","onCreate","onUpdate","disableEventListeners","removeOnDestroy","removeChild","cancelAnimationFrame","Utils","placements"],"mappings":"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"}