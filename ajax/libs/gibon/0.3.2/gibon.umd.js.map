{"version":3,"file":"gibon.umd.js","sources":["../src/index.js"],"sourcesContent":["/*!\n * gibon <https://github.com/tunnckoCore/gibon>\n *\n * Copyright (c) Charlike Mike Reagent <@tunnckoCore> (https://i.am.charlike.online)\n * Released under the MIT license.\n */\n\n'use strict'\n\n// `el` placeholder\nexport default function gibon (routes, onRoute, onClick, el) {\n  onRoute = onRoute || ((view, state) => view(state))\n  onClick = onClick || ((e, loc) => { // `loc` is placeholder\n    if (e.metaKey || e.shiftKey || e.ctrlKey || e.altKey) {\n      return\n    }\n    var t = e.target\n\n    while (t && t.localName !== 'a') {\n      t = t.parentNode\n    }\n\n    loc = window.location\n    if (t && t.host === loc.host && !t.hasAttribute('data-no-routing')) {\n      render(t.pathname)\n      e.preventDefault()\n    }\n  })\n\n  // `handle` is placeholder\n  function start (handle) {\n    handle = () => render(window.location.pathname)\n\n    handle()\n    window.addEventListener('onpopstate', handle)\n    window.onclick = (e) => onClick(e, render)\n  }\n\n  function render (view, state) {\n    view = typeof view === 'string' ? getView(view) : view\n    return (el = onRoute(view, state, el))\n  }\n\n  function getView (pathname) {\n    pathname = pathname || '/'\n    window.history.pushState(0, 0, pathname)\n    return getRoute(routes, pathname)\n  }\n\n  return {\n    start,\n    render\n  }\n}\n\n// `_re` and `_route` are placeholders\nfunction getRoute (routes, pathname, _re, _route) {\n  if (typeof routes === 'function') {\n    return routes\n  }\n\n  if (routes[pathname]) {\n    return routes[pathname]\n  }\n\n  for (_route in routes) {\n    _re = regexify(_route)\n    if (_re.regex.test(pathname)) {\n      let params = {}\n      pathname.replace(_re.regex, function (args) {\n        args = arguments\n        for (var i = 1; i < args.length - 2; i++) {\n          params[_re.keys.shift()] = args[i]\n        }\n        _re.match = 1\n      })\n\n      if (_re.match) {\n        return (state, actions) => {\n          actions = actions || params\n          return routes[_route](state, actions, params)\n        }\n      }\n    }\n  }\n}\n\nfunction regexify (route, _regex) {\n  const keys = []\n  _regex = '^' + route\n    .replace(/\\//g, '\\\\/')\n    .replace(/:(\\w+)/g, (_, name) => {\n      keys.push(name)\n      return '(\\\\w+)'\n    }) + '$'\n\n  return {\n    regex: new RegExp(_regex, 'i'),\n    keys\n  }\n}\n"],"names":["gibon","routes","onRoute","onClick","el","start","handle","render","window","location","pathname","addEventListener","onclick","e","view","state","getView","history","pushState","getRoute","loc","metaKey","shiftKey","ctrlKey","altKey","t","target","localName","parentNode","host","hasAttribute","preventDefault","_re","_route","regexify","regex","test","let","params","replace","args","arguments","i","length","keys","shift","match","actions","route","_regex","const","_","name","push","RegExp"],"mappings":"oKAUA,QAAwBA,GAAOC,EAAQC,EAASC,EAASC,GAoBvD,QAASC,GAAOC,GACdA,EAAS,iBAAMC,GAAOC,OAAOC,SAASC,WAEtCJ,IACAE,OAAOG,iBAAiB,aAAcL,GACtCE,OAAOI,QAAU,SAACC,SAAMV,GAAQU,EAAGN,IAGrC,QAASA,GAAQO,EAAMC,GAErB,MADAD,GAAuB,gBAATA,GAAoBE,EAAQF,GAAQA,EAC1CV,EAAKF,EAAQY,EAAMC,EAAOX,GAGpC,QAASY,GAASN,GAGhB,MAFAA,GAAWA,GAAY,IACvBF,OAAOS,QAAQC,UAAU,EAAG,EAAGR,GACxBS,EAASlB,EAAQS,GAG1B,MAtCAR,GAAUA,YAAaY,EAAMC,SAAUD,GAAKC,IAC5CZ,EAAUA,YAAaU,EAAGO,GACxB,KAAIP,EAAEQ,SAAWR,EAAES,UAAYT,EAAEU,SAAWV,EAAEW,QAA9C,CAKA,IAFA,GAAIC,GAAIZ,EAAEa,OAEHD,GAAqB,MAAhBA,EAAEE,WACZF,EAAIA,EAAEG,UAGRR,GAAMZ,OAAOC,SACTgB,GAAKA,EAAEI,OAAST,EAAIS,OAASJ,EAAEK,aAAa,qBAC9CvB,EAAOkB,EAAEf,UACTG,EAAEkB,qBAyBJ1B,MAAAA,EACAE,OAAAA,GAKJ,QAASY,GAAUlB,EAAQS,EAAUsB,EAAKC,GACxC,GAAsB,kBAAXhC,GACT,MAAOA,EAGT,IAAIA,EAAOS,GACT,MAAOT,GAAOS,EAGhB,KAAKuB,IAAUhC,GAEb,GADA+B,EAAME,EAASD,GACXD,EAAIG,MAAMC,KAAK1B,GAAW,CAC5B2B,GAAIC,KASJ,IARA5B,EAAS6B,QAAQP,EAAIG,MAAO,SAAUK,GACpCA,EAAOC,SACP,KAAK,GAAIC,GAAI,EAAGA,EAAIF,EAAKG,OAAS,EAAGD,IACnCJ,EAAON,EAAIY,KAAKC,SAAWL,EAAKE,EAElCV,GAAIc,MAAQ,IAGVd,EAAIc,MACN,MAAO,UAAC/B,EAAOgC,GAEb,MADAA,GAAUA,GAAWT,EACdrC,EAAOgC,GAAQlB,EAAOgC,EAAST,KAOhD,QAASJ,GAAUc,EAAOC,GACxBC,GAAMN,KAQN,OAPAK,GAAS,IAAMD,EACZT,QAAQ,MAAO,OACfA,QAAQ,UAAW,SAACY,EAAGC,GAEtB,MADAR,GAAKS,KAAKD,GACH,WACJ,KAGLjB,MAAO,GAAImB,QAAOL,EAAQ,KAC1BL,KAAAA"}