{"version":3,"file":"gibon.umd.js","sources":["../src/index.js"],"sourcesContent":["/*!\n * gibon <https://github.com/tunnckoCore/gibon>\n *\n * Copyright (c) Charlike Mike Reagent <@tunnckoCore> (https://i.am.charlike.online)\n * Released under the MIT license.\n */\n\n'use strict'\n\n// `el` placeholder\nexport default function gibon (routes, onRoute, onClick, el) {\n  onRoute = onRoute || ((view, state) => view(state))\n  onClick = onClick || defaultOnClick\n\n  function defaultOnClick (e, loc) {\n    // `loc` is placeholder\n    if (e.metaKey || e.shiftKey || e.ctrlKey || e.altKey) {\n      return\n    }\n    var t = e.target\n\n    while (t && t.localName !== 'a') {\n      t = t.parentNode\n    }\n\n    loc = window.location\n    if (t && t.host === loc.host && !t.hasAttribute('data-no-routing')) {\n      render(t.pathname, {}, true)\n      e.preventDefault()\n    }\n  }\n\n  // `handle` is placeholder\n  function start (handle) {\n    handle = () => render(window.location.pathname)\n\n    handle()\n    window.addEventListener('onpopstate', handle)\n    window.onclick = (e) => onClick(e, render)\n  }\n\n  function render (view, state) {\n    view = typeof view === 'string' ? getView(view) : view\n    return (el = onRoute(view, state, el))\n  }\n\n  function getView (pathname) {\n    pathname = pathname || '/'\n    window.history.pushState(0, 0, pathname)\n    return getRoute(routes, pathname)\n  }\n\n  return {\n    start,\n    render\n  }\n}\n\n// `_re` and `_route` are placeholders\nfunction getRoute (routes, pathname, _re, _route) {\n  if (typeof routes === 'function') {\n    return routes\n  }\n\n  if (routes[pathname]) {\n    return routes[pathname]\n  }\n\n  for (_route in routes) {\n    _re = regexify(_route)\n    if (_re.regex.test(pathname)) {\n      let params = {}\n      pathname.replace(_re.regex, function (args) {\n        args = arguments\n        for (var i = 1; i < args.length - 2; i++) {\n          params[_re.keys.shift()] = args[i]\n        }\n        _re.match = 1\n      })\n\n      if (_re.match) {\n        return (state, actions) => {\n          actions = actions || params\n          return routes[_route](state, actions, params)\n        }\n      }\n    }\n  }\n}\n\nfunction regexify (route, _regex) {\n  const keys = []\n  _regex =\n    '^' +\n    route.replace(/\\//g, '\\\\/').replace(/:(\\w+)/g, (_, name) => {\n      keys.push(name)\n      return '(\\\\w+)'\n    }) +\n    '$'\n\n  return {\n    regex: new RegExp(_regex, 'i'),\n    keys\n  }\n}\n"],"names":["gibon","routes","onRoute","onClick","el","defaultOnClick","e","loc","metaKey","shiftKey","ctrlKey","altKey","t","target","localName","parentNode","window","location","host","hasAttribute","render","pathname","preventDefault","start","handle","addEventListener","onclick","view","state","getView","history","pushState","getRoute","_re","_route","regexify","regex","test","let","params","replace","args","arguments","i","length","keys","shift","match","actions","route","_regex","const","_","name","push","RegExp"],"mappings":"oKAUA,QAAwBA,GAAOC,EAAQC,EAASC,EAASC,GAIvD,QAASC,GAAgBC,EAAGC,GAE1B,KAAID,EAAEE,SAAWF,EAAEG,UAAYH,EAAEI,SAAWJ,EAAEK,QAA9C,CAKA,IAFA,GAAIC,GAAIN,EAAEO,OAEHD,GAAqB,MAAhBA,EAAEE,WACZF,EAAIA,EAAEG,UAGRR,GAAMS,OAAOC,SACTL,GAAKA,EAAEM,OAASX,EAAIW,OAASN,EAAEO,aAAa,qBAC9CC,EAAOR,EAAES,aACTf,EAAEgB,mBAKN,QAASC,GAAOC,GACdA,EAAS,iBAAMJ,GAAOJ,OAAOC,SAASI,WAEtCG,IACAR,OAAOS,iBAAiB,aAAcD,GACtCR,OAAOU,QAAU,SAACpB,SAAMH,GAAQG,EAAGc,IAGrC,QAASA,GAAQO,EAAMC,GAErB,MADAD,GAAuB,gBAATA,GAAoBE,EAAQF,GAAQA,EAC1CvB,EAAKF,EAAQyB,EAAMC,EAAOxB,GAGpC,QAASyB,GAASR,GAGhB,MAFAA,GAAWA,GAAY,IACvBL,OAAOc,QAAQC,UAAU,EAAG,EAAGV,GACxBW,EAAS/B,EAAQoB,GAG1B,MAzCAnB,GAAUA,YAAayB,EAAMC,SAAUD,GAAKC,IAC5CzB,EAAUA,GAAWE,GAyCnBkB,MAAAA,EACAH,OAAAA,GAKJ,QAASY,GAAU/B,EAAQoB,EAAUY,EAAKC,GACxC,GAAsB,kBAAXjC,GACT,MAAOA,EAGT,IAAIA,EAAOoB,GACT,MAAOpB,GAAOoB,EAGhB,KAAKa,IAAUjC,GAEb,GADAgC,EAAME,EAASD,GACXD,EAAIG,MAAMC,KAAKhB,GAAW,CAC5BiB,GAAIC,KASJ,IARAlB,EAASmB,QAAQP,EAAIG,MAAO,SAAUK,GACpCA,EAAOC,SACP,KAAK,GAAIC,GAAI,EAAGA,EAAIF,EAAKG,OAAS,EAAGD,IACnCJ,EAAON,EAAIY,KAAKC,SAAWL,EAAKE,EAElCV,GAAIc,MAAQ,IAGVd,EAAIc,MACN,MAAO,UAACnB,EAAOoB,GAEb,MADAA,GAAUA,GAAWT,EACdtC,EAAOiC,GAAQN,EAAOoB,EAAST,KAOhD,QAASJ,GAAUc,EAAOC,GACxBC,GAAMN,KASN,OARAK,GACE,IACAD,EAAMT,QAAQ,MAAO,OAAOA,QAAQ,UAAW,SAACY,EAAGC,GAEjD,MADAR,GAAKS,KAAKD,GACH,WAET,KAGAjB,MAAO,GAAImB,QAAOL,EAAQ,KAC1BL,KAAAA"}