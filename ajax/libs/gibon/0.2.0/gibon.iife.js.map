{"version":3,"file":"gibon.iife.js","sources":["../src/index.js"],"sourcesContent":["/*!\n * gibon <https://github.com/tunnckoCore/gibon>\n *\n * Copyright (c) Charlike Mike Reagent <@tunnckoCore> (http://i.am.charlike.online)\n * Released under the MIT license.\n */\n\n'use strict'\n\nexport default function gibon (routes, onRoute, onClick, el) {\n  onRoute = onRoute || ((view, state) => view(state))\n  onClick = onClick || ((e, loc) => {\n    if (e.metaKey || e.shiftKey || e.ctrlKey || e.altKey) {\n      return\n    }\n    var t = e.target\n\n    while (t && t.localName !== 'a') {\n      t = t.parentNode\n    }\n\n    loc = window.location\n    if (t && t.host === loc.host && !t.hasAttribute('data-no-routing')) {\n      render(t.pathname)\n      e.preventDefault()\n    }\n  })\n\n  function start (handle) {\n    handle = () => render(window.location.pathname)\n\n    handle()\n    window.addEventListener('onpopstate', handle)\n    window.onclick = (e) => onClick(e, render)\n  }\n\n  function render (view, state) {\n    view = typeof view === 'string' ? getView(view) : view\n    return (el = onRoute(view, state || {}, el))\n  }\n\n  function getView (pathname) {\n    pathname = pathname.replace(/^\\/+/, '/').replace(/\\/+$/, '') || '/'\n    window.history.pushState(0, 0, pathname)\n    return getRoute(routes, pathname)\n  }\n\n  return {\n    start,\n    render\n  }\n}\n\nfunction getRoute (routes, pathname, _re) {\n  if (typeof routes === 'function') {\n    return routes\n  }\n\n  if (routes[pathname]) {\n    return routes[pathname]\n  }\n\n  for (var route in routes) {\n    _re = regexify(route)\n    if (_re.regex.test(pathname)) {\n      let params = {}\n      pathname.replace(_re.regex, function (args) {\n        args = arguments\n        for (var i = 1; i < args.length - 2; i++) {\n          params[_re.keys.shift()] = args[i]\n        }\n        _re.match = 1\n      })\n\n      if (_re.match) {\n        return (state, actions) => {\n          actions = actions || params\n          return routes[route](state, actions, params)\n        }\n      }\n    }\n  }\n}\n\nfunction regexify (route, _regex) {\n  const keys = []\n  _regex = '^' + route\n    .replace(/\\//g, '\\\\/')\n    .replace(/:(\\w+)/g, (_, name) => {\n      keys.push(name)\n      return '(\\\\w+)'\n    }) + '$'\n\n  return {\n    regex: new RegExp(_regex, 'i'),\n    keys\n  }\n}\n"],"names":["gibon","routes","onRoute","onClick","el","start","handle","render","window","location","pathname","addEventListener","onclick","e","view","state","getView","replace","history","pushState","getRoute","loc","metaKey","shiftKey","ctrlKey","altKey","t","target","localName","parentNode","host","hasAttribute","preventDefault","_re","route","regexify","regex","test","let","params","args","arguments","i","length","keys","shift","match","actions","_regex","const","_","name","push","RegExp"],"mappings":"iCAOA,SAEwBA,GAAOC,EAAQC,EAASC,EAASC,GAmBvD,QAASC,GAAOC,GACdA,EAAS,iBAAMC,GAAOC,OAAOC,SAASC,WAEtCJ,IACAE,OAAOG,iBAAiB,aAAcL,GACtCE,OAAOI,QAAU,SAACC,SAAMV,GAAQU,EAAGN,IAGrC,QAASA,GAAQO,EAAMC,GAErB,MADAD,GAAuB,gBAATA,GAAoBE,EAAQF,GAAQA,EAC1CV,EAAKF,EAAQY,EAAMC,MAAaX,GAG1C,QAASY,GAASN,GAGhB,MAFAA,GAAWA,EAASO,QAAQ,OAAQ,KAAKA,QAAQ,OAAQ,KAAO,IAChET,OAAOU,QAAQC,UAAU,EAAG,EAAGT,GACxBU,EAASnB,EAAQS,GAG1B,MArCAR,GAAUA,YAAaY,EAAMC,SAAUD,GAAKC,IAC5CZ,EAAUA,YAAaU,EAAGQ,GACxB,KAAIR,EAAES,SAAWT,EAAEU,UAAYV,EAAEW,SAAWX,EAAEY,QAA9C,CAKA,IAFA,GAAIC,GAAIb,EAAEc,OAEHD,GAAqB,MAAhBA,EAAEE,WACZF,EAAIA,EAAEG,UAGRR,GAAMb,OAAOC,SACTiB,GAAKA,EAAEI,OAAST,EAAIS,OAASJ,EAAEK,aAAa,qBAC9CxB,EAAOmB,EAAEhB,UACTG,EAAEmB,qBAwBJ3B,MAAAA,EACAE,OAAAA,GAIJ,QAASa,GAAUnB,EAAQS,EAAUuB,GACnC,GAAsB,kBAAXhC,GACT,MAAOA,EAGT,IAAIA,EAAOS,GACT,MAAOT,GAAOS,EAGhB,KAAK,GAAIwB,KAASjC,GAEhB,GADAgC,EAAME,EAASD,GACXD,EAAIG,MAAMC,KAAK3B,GAAW,CAC5B4B,GAAIC,KASJ,IARA7B,EAASO,QAAQgB,EAAIG,MAAO,SAAUI,GACpCA,EAAOC,SACP,KAAK,GAAIC,GAAI,EAAGA,EAAIF,EAAKG,OAAS,EAAGD,IACnCH,EAAON,EAAIW,KAAKC,SAAWL,EAAKE,EAElCT,GAAIa,MAAQ,IAGVb,EAAIa,MACN,MAAO,UAAC/B,EAAOgC,GAEb,MADAA,GAAUA,GAAWR,EACdtC,EAAOiC,GAAOnB,EAAOgC,EAASR,KAO/C,QAASJ,GAAUD,EAAOc,GACxBC,GAAML,KAQN,OAPAI,GAAS,IAAMd,EACZjB,QAAQ,MAAO,OACfA,QAAQ,UAAW,SAACiC,EAAGC,GAEtB,MADAP,GAAKQ,KAAKD,GACH,WACJ,KAGLf,MAAO,GAAIiB,QAAOL,EAAQ,KAC1BJ,KAAAA"}