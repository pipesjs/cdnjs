{"version":3,"file":"asmcrypto.js","sources":["?","src/errors.js","src/utils.js","src/aes/aes.js","src/aes/cbc/cbc.js","src/aes/ctr/ctr.js","src/aes/gcm/gcm.js","src/aes/cbc/exports.js","src/aes/gcm/exports.js","src/hash/hash.js","src/hash/sha1/sha1.asm.js","src/hash/sha1/sha1.js","src/hash/sha1/exports.js","src/hash/sha256/sha256.asm.js","src/hash/sha256/sha256.js","src/hash/sha256/exports.js","src/hmac/hmac.js","src/hmac/hmac-sha1.js","src/hmac/hmac-sha256.js","src/hmac/exports-hmac-sha1.js","src/hmac/exports-hmac-sha256.js","src/pbkdf2/pbkdf2.js","src/pbkdf2/pbkdf2-hmac-sha1.js","src/pbkdf2/pbkdf2-hmac-sha256.js","src/pbkdf2/exports-pbkdf2-hmac-sha1.js","src/pbkdf2/exports-pbkdf2-hmac-sha256.js","src/random/random.js","src/bignum/bigint.asm.js","src/bignum/bignum.js","src/bignum/extgcd.js","src/bignum/modulus.js","src/bignum/prime.js","src/rsa/rsa.js","src/rsa/genkey.js","src/rsa/pkcs1.js","src/rsa/exports-keygen.js","src/rsa/exports-oaep-sha1.js","src/rsa/exports-oaep-sha256.js","src/rsa/exports-pss-sha1.js","src/rsa/exports-pss-sha256.js","src/exports.js","src/globals.js","src/aes/aes.asm.js","src/aes/exports.js","src/random/isaac.js","src/random/exports.js","src/random/globals.js","src/bignum/exports.js"],"names":["exports","global","IllegalStateError","err","Error","apply","this","arguments","message","stack","IllegalArgumentError","SecurityError","string_to_bytes","str","len","length","arr","Uint8Array","i","c","charCodeAt","hex_to_bytes","push","parseInt","substr","base64_to_bytes","atob","bytes_to_string","String","fromCharCode","bytes_to_hex","h","toString","bytes_to_base64","btoa","pow2_ceil","a","is_number","is_string","is_buffer","ArrayBuffer","is_bytes","is_typed_array","Int8Array","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","_heap_init","constructor","options","heap","size","byteLength","heapSize","_heap_write","hpos","data","dpos","dlen","hlen","wlen","set","subarray","AES","AES_asm","HEAP_DATA","asm","buffer","mode","key","reset","AES_set_key","undefined","TypeError","keylen","keyview","DataView","byteOffset","set_key","getUint32","AES_set_iv","iv","ivview","set_iv","AES_set_padding","padding","AES_reset","result","pos","call","hasOwnProperty","AES_Encrypt_process","amode","ENC","rpos","rlen","cipher","AES_Encrypt_finish","presult","prlen","plen","p","AES_Decrypt_process","DEC","AES_Decrypt_finish","pad","pcheck","AES_CBC","AES_CBC_Encrypt","AES_CBC_Decrypt","AES_CTR","nonce","counter","counterSize","AES_CTR_Crypt","AES_CTR_set_options","mask","Math","pow","set_mask","view","set_nonce","set_counter","AES_CTR_reset","_gcm_mac_process","mac","MAC","GCM","AES_GCM","adata","tagSize","AES_GCM_Encrypt","AES_GCM_Decrypt","AES_GCM_reset","gcm_init","noncelen","noncebuf","get_iv","nonceview","gamma0","_AES_GCM_data_maxLength","RangeError","AES_GCM_Encrypt_process","CTR","AES_GCM_Encrypt_finish","alen","clen","AES_GCM_encrypt","result1","result2","AES_GCM_Decrypt_process","tlen","AES_GCM_Decrypt_finish","atag","acheck","AES_GCM_decrypt","AES_CBC_encrypt_bytes","SyntaxError","_AES_heap_instance","_AES_asm_instance","encrypt","AES_CBC_decrypt_bytes","decrypt","AES_GCM_encrypt_bytes","AES_GCM_decrypt_bytes","hash_reset","hash_process","process","hash_finish","finish","HASH_SIZE","sha1_asm","stdlib","foreign","H0","H1","H2","H3","H4","TOTAL","I0","I1","I2","I3","I4","O0","O1","O2","O3","O4","HEAP","_core","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","b","d","e","n","t","w16","w17","w18","w19","w20","w21","w22","w23","w24","w25","w26","w27","w28","w29","w30","w31","w32","w33","w34","w35","w36","w37","w38","w39","w40","w41","w42","w43","w44","w45","w46","w47","w48","w49","w50","w51","w52","w53","w54","w55","w56","w57","w58","w59","w60","w61","w62","w63","w64","w65","w66","w67","w68","w69","w70","w71","w72","w73","w74","w75","w76","w77","w78","w79","_core_heap","offset","_state_to_heap","output","init","h0","h1","h2","h3","h4","total","hashed","hmac_reset","_hmac_opad","hmac_init","p0","p1","p2","p3","p4","p5","p6","p7","p8","p9","p10","p11","p12","p13","p14","p15","hmac_finish","t0","t1","t2","t3","t4","pbkdf2_generate_block","block","count","sha1_constructor","BLOCK_SIZE","_sha1_block_size","_sha1_hash_size","get_sha1_instance","sha1_instance","sha1_bytes","sha1_hex","sha1_base64","sha256_asm","H5","H6","H7","I5","I6","I7","O5","O6","O7","f","g","h5","h6","h7","t5","t6","t7","sha256_constructor","_sha256_block_size","_sha256_hash_size","get_sha256_instance","sha256_instance","sha256_bytes","sha256_hex","sha256_base64","hmac_constructor","hash","HMAC_SIZE","verify","password","_hmac_key","_hmac_init_verify","ipad","hmac_process","inner_result","opad","diff","hmac_sha1_constructor","hmac_sha1_reset","hmac_sha1_finish","get_hmac_sha1_instance","hmac_sha1_instance","hmac_sha256_constructor","hmac_sha256_reset","hmac_sha256_finish","get_hmac_sha256_instance","hmac_sha256_instance","hmac_sha1_bytes","hmac_sha1_hex","hmac_sha1_base64","hmac_sha256_bytes","hmac_sha256_hex","hmac_sha256_base64","pbkdf2_constructor","hmac","pbkdf2_reset","pbkdf2_generate","salt","blocks","ceil","j","l","tmp","k","r","pbkdf2_hmac_sha1_constructor","pbkdf2_hmac_sha1_generate","get_pbkdf2_hmac_sha1_instance","pbkdf2_hmac_sha1_instance","pbkdf2_hmac_sha256_constructor","pbkdf2_hmac_sha256_generate","get_pbkdf2_hmac_sha256_instance","pbkdf2_hmac_sha256_instance","pbkdf2_hmac_sha1_bytes","iterations","dklen","generate","pbkdf2_hmac_sha1_hex","pbkdf2_hmac_sha1_base64","pbkdf2_hmac_sha256_bytes","pbkdf2_hmac_sha256_hex","pbkdf2_hmac_sha256_base64","Random_weak_seed","_global_crypto","_global_crypto_getRandomValues","_isaac_seed","FloatArray","_global_math_random","_global_date_now","_hires_now","pbkdf2","location","href","_isaac_counter","_isaac_weak_seeded","Random_seed","seed","bpos","byteOffest","blen","buff","nonzero","_random_estimated_entropy","_isaac_seeded","_random_required_entropy","Random_getValues","_random_allow_weak","_global_console","error","_random_skip_system_rng_warning","s","_random_warn_callstacks","warn","bytes","_isaac_rand","Random_getNumber","_half_imul","_bigint_asm","SP","HEAP32","imul","sreset","salloc","sfree","cp","A","B","z","neg","lA","R","lR","cmp","lB","tst","add","sub","mul","al0","al1","al2","al3","al4","al5","al6","al7","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","r13","r14","r15","u","v","w","m","Ai","Bj","Rk","sqr","dd","Aj","div","N","lN","D","lD","Q","u1","u0","v0","vh","vl","qh","ql","rh","rl","mredc","y","T","uh","ul","is_big_number","BigNumber","num","limbs","_BigNumber_ZERO_limbs","bitlen","sign","absnum","abs","BigNumber_ZERO","bitLength","BigNumber_toString","radix","replace","BigNumber_toBytes","bytelen","BigNumber_valueOf","bits","BigNumber_clamp","clamped","BigNumber_slice","slimbs","sliced","BigNumber_negate","negative","BigNumber_compare","that","alimbs","alimbcnt","blimbs","blimbcnt","_bigint_heap","BigNumber_add","rbitlen","rlimbcnt","rsign","rof","abitlen","asign","bbitlen","bsign","pA","pB","pR","BigNumber_subtract","negate","BigNumber_multiply","BigNumber_square","BigNumber_divide","qlimbcnt","quotient","remainder","pQ","Number_extGCD","q","a_cmp_b","sa","sb","xi","xj","yi","yj","floor","gcd","x","BigNumber_extGCD","compare","BigNumber_ONE","lx","ly","divide","subtract","multiply","clamp","Modulus","valueOf","comodulus","coefficient","comodulusRemainder","comodulusRemainderSquare","square","Modulus_reduce","Modulus_inverse","reduce","Modulus_power","_Montgomery_reduce","g2","gn","Array","nlimbs","nlimbcnt","pN","_BigNumber_isMillerRabinProbablePrime","rounds","slice","m1","power","BigNumber_isProbablePrime","paranoia","s3","s5","s17","l3","l5","l17","_small_primes","_primes","BigNumber_randomProbablePrime","filter","limbcnt","prime","divisors","remainders","LN2","seek","RSA","RSA_reset","RSA_encrypt","msg","toBytes","RSA_decrypt","dp","dq","RSA_generateKey","q1","inverse","RSA_OAEP","label","RSA_OAEP_reset","RSA_OAEP_encrypt","key_size","hash_size","data_length","ps_length","data_block","data_block_mask","RSA_MGF1_generate","seed_mask","RSA_OAEP_decrypt","lhash","ps_end","psz","chunks","submask","chunk","RSA_PSS","saltLength","RSA_PSS_reset","slen","RSA_PSS_sign","key_bits","message_length","salt_length","h_block","d_block","d_salt","m_block","m_hash","m_salt","d_block_mask","zbits","RSA_PSS_verify","signature","h_block_verify","rsa_generate_key","rsa_oaep_sha1_encrypt_bytes","rsa_oaep_sha1_decrypt_bytes","rsa_oaep_sha256_encrypt_bytes","rsa_oaep_sha256_decrypt_bytes","rsa_pss_sha1_sign_bytes","rsa_pss_sha1_verify_bytes","rsa_pss_sha256_sign_bytes","rsa_pss_sha256_verify_bytes","prototype","Object","create","name","value","ginit","gexp3","glog3","ginit_done","gmul","ginv","aes_init","_s","aes_sbox","aes_sinv","aes_enc","aes_dec","aes_init_done","wrapper","ks","k0","k1","k2","k3","k4","k5","k6","k7","ekeys","dkeys","rcon","jj","set_rounds","S0","S1","S2","S3","N0","N1","N2","N3","M0","M1","M2","M3","DATA","x0","x1","x2","x3","y0","y1","y2","y3","_ecb_enc","_ecb_dec","_cbc_enc","_cbc_dec","_cfb_enc","_cfb_dec","_ofb","_ctr","_gcm_mac","z0","z1","z2","z3","set_state","n0","n1","n2","n3","m0","m2","m3","c0","c1","c2","c3","get_state","ret","_cipher_modes","_mac_modes","ECB","CBC","CFB","OFB","freeze","AES_CBC_prototype","AES_CBC_Encrypt_prototype","AES_CBC_Decrypt_prototype","AES_CTR_prototype","AES_CTR_Crypt_prototype","AES_GCM_prototype","AES_GCM_Encrypt_prototype","AES_GCM_Decrypt_prototype","Encrypt","Decrypt","sha1_prototype","hex","base64","SHA1","sha256_prototype","SHA256","hmac_prototype","hmac_sha1_prototype","hmac_sha256_prototype","HMAC","HMAC_SHA1","HMAC_SHA256","pbkdf2_prototype","pbkdf2_hmac_sha1_prototype","pbkdf2_hmac_sha256_prototype","PBKDF2","PBKDF2_HMAC_SHA1","PBKDF2_HMAC_SHA256","ISAAC","randinit","mix","acc","brs","cnt","prng","gnt","rand","console","Date","now","random","_global_performance","performance","crypto","msCrypto","getRandomValues","_hires_epoch","defineProperty","get","bigint_asm","BigNumberPrototype","Number","ModulusPrototype","isProbablePrime","randomProbablePrime","ZERO","ONE","extGCD","RSA_prototype","generateKey","RSA_OAEP_prototype","RSA_PSS_prototype","RSA_OAEP_SHA1","RSA_OAEP_SHA256","RSA_PSS_SHA1","RSA_PSS_SHA256"],"mappings":"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","sourcesContent":[null,"function IllegalStateError () { var err = Error.apply( this, arguments ); this.message = err.message, this.stack = err.stack; }\nIllegalStateError.prototype = Object.create( Error.prototype, { name: { value: 'IllegalStateError' } } );\n\nfunction IllegalArgumentError () { var err = Error.apply( this, arguments ); this.message = err.message, this.stack = err.stack; }\nIllegalArgumentError.prototype = Object.create( Error.prototype, { name: { value: 'IllegalArgumentError' } } );\n\nfunction SecurityError () { var err = Error.apply( this, arguments ); this.message = err.message, this.stack = err.stack; }\nSecurityError.prototype = Object.create( Error.prototype, { name: { value: 'SecurityError' } } );\n","var FloatArray = global.Float64Array || global.Float32Array; // make PhantomJS happy\n\nfunction string_to_bytes ( str ) {\n    var len = str.length,\n        arr = new Uint8Array( len );\n    for ( var i = 0; i < len; i++ ) {\n        var c = str.charCodeAt(i);\n        if ( c >>> 8 ) throw new Error(\"Wide characters are not allowed\");\n        arr[i] = c;\n    }\n    return arr;\n}\n\nfunction hex_to_bytes ( str ) {\n    var arr = [],\n        len = str.length,\n        i;\n    if ( len & 1 ) {\n        str = '0'+str;\n        len++;\n    }\n    for ( i=0; i<len; i+=2 ) {\n        arr.push( parseInt( str.substr( i, 2), 16 ) );\n    }\n    return new Uint8Array(arr);\n}\n\nfunction base64_to_bytes ( str ) {\n    return string_to_bytes( atob( str ) );\n}\n\nfunction bytes_to_string ( arr ) {\n    var str = '';\n    for ( var i = 0; i < arr.length; i++ ) str += String.fromCharCode( arr[i] );\n    return str;\n}\n\nfunction bytes_to_hex ( arr ) {\n    var str = '';\n    for ( var i = 0; i < arr.length; i++ ) {\n        var h = ( arr[i] & 0xff ).toString(16);\n        if ( h.length < 2 ) str += '0';\n        str += h;\n    }\n    return str;\n}\n\nfunction bytes_to_base64 ( arr ) {\n    return btoa( bytes_to_string(arr) );\n}\n\nfunction pow2_ceil ( a ) {\n    a -= 1;\n    a |= a >>> 1;\n    a |= a >>> 2;\n    a |= a >>> 4;\n    a |= a >>> 8;\n    a |= a >>> 16;\n    a += 1;\n    return a;\n}\n\nfunction is_number ( a ) {\n    return ( typeof a === 'number' );\n}\n\nfunction is_string ( a ) {\n    return ( typeof a === 'string' );\n}\n\nfunction is_buffer ( a ) {\n    return ( a instanceof ArrayBuffer );\n}\n\nfunction is_bytes ( a ) {\n    return ( a instanceof Uint8Array );\n}\n\nfunction is_typed_array ( a ) {\n    return ( a instanceof Int8Array ) || ( a instanceof Uint8Array )\n        || ( a instanceof Int16Array ) || ( a instanceof Uint16Array )\n        || ( a instanceof Int32Array ) || ( a instanceof Uint32Array )\n        || ( a instanceof Float32Array )\n        || ( a instanceof Float64Array );\n}\n\nfunction _heap_init ( constructor, options ) {\n    var heap = options.heap,\n        size = heap ? heap.byteLength : options.heapSize || 65536;\n\n    if ( size & 0xfff || size <= 0 )\n        throw new Error(\"heap size must be a positive integer and a multiple of 4096\");\n\n    heap = heap || new constructor( new ArrayBuffer(size) );\n\n    return heap;\n}\n\nfunction _heap_write ( heap, hpos, data, dpos, dlen ) {\n    var hlen = heap.length - hpos,\n        wlen = ( hlen < dlen ) ? hlen : dlen;\n\n    heap.set( data.subarray( dpos, dpos+wlen ), hpos );\n\n    return wlen;\n}\n","function AES ( options ) {\n    options = options || {};\n\n    this.heap = _heap_init( Uint8Array, options ).subarray( AES_asm.HEAP_DATA );\n    this.asm = options.asm || AES_asm( global, null, this.heap.buffer );\n    this.mode = null;\n    this.key = null;\n\n    this.reset( options );\n}\n\nfunction AES_set_key ( key ) {\n    if ( key !== undefined ) {\n        if ( is_buffer(key) || is_bytes(key) ) {\n            key = new Uint8Array(key);\n        }\n        else if ( is_string(key) ) {\n            key = string_to_bytes(key);\n        }\n        else {\n            throw new TypeError(\"unexpected key type\");\n        }\n\n        var keylen = key.length;\n        if ( keylen !== 16 && keylen !== 24 && keylen !== 32 )\n            throw new IllegalArgumentError(\"illegal key size\");\n\n        var keyview = new DataView( key.buffer, key.byteOffset, key.byteLength );\n        this.asm.set_key(\n            keylen >> 2,\n            keyview.getUint32(0),\n            keyview.getUint32(4),\n            keyview.getUint32(8),\n            keyview.getUint32(12),\n            keylen > 16 ? keyview.getUint32(16) : 0,\n            keylen > 16 ? keyview.getUint32(20) : 0,\n            keylen > 24 ? keyview.getUint32(24) : 0,\n            keylen > 24 ? keyview.getUint32(28) : 0\n        );\n\n        this.key = key;\n    }\n    else if ( !this.key ) {\n        throw new Error(\"key is required\");\n    }\n}\n\nfunction AES_set_iv ( iv ) {\n    if ( iv !== undefined ) {\n        if ( is_buffer(iv) || is_bytes(iv) ) {\n            iv = new Uint8Array(iv);\n        }\n        else if ( is_string(iv) ) {\n            iv = string_to_bytes(iv);\n        }\n        else {\n            throw new TypeError(\"unexpected iv type\");\n        }\n\n        if ( iv.length !== 16 )\n            throw new IllegalArgumentError(\"illegal iv size\");\n\n        var ivview = new DataView( iv.buffer, iv.byteOffset, iv.byteLength );\n\n        this.iv = iv;\n        this.asm.set_iv( ivview.getUint32(0), ivview.getUint32(4), ivview.getUint32(8), ivview.getUint32(12) );\n    }\n    else {\n        this.iv = null;\n        this.asm.set_iv( 0, 0, 0, 0 );\n    }\n}\n\nfunction AES_set_padding ( padding ) {\n    if ( padding !== undefined ) {\n        this.padding = !!padding;\n    }\n    else {\n        this.padding = true;\n    }\n}\n\nfunction AES_reset ( options ) {\n    options = options || {};\n\n    this.result = null;\n    this.pos = 0;\n    this.len = 0;\n\n    AES_set_key.call( this, options.key );\n    if ( this.hasOwnProperty('iv') ) AES_set_iv.call( this, options.iv );\n    if ( this.hasOwnProperty('padding') ) AES_set_padding.call( this, options.padding );\n\n    return this;\n}\n\nfunction AES_Encrypt_process ( data ) {\n    if ( is_string(data) )\n        data = string_to_bytes(data);\n\n    if ( is_buffer(data) )\n        data = new Uint8Array(data);\n\n    if ( !is_bytes(data) )\n        throw new TypeError(\"data isn't of expected type\");\n\n    var asm = this.asm,\n        heap = this.heap,\n        amode = AES_asm.ENC[this.mode],\n        hpos = AES_asm.HEAP_DATA,\n        pos = this.pos,\n        len = this.len,\n        dpos = 0,\n        dlen = data.length || 0,\n        rpos = 0,\n        rlen = (len + dlen) & -16,\n        wlen = 0;\n\n    var result = new Uint8Array(rlen);\n\n    while ( dlen > 0 ) {\n        wlen = _heap_write( heap, pos+len, data, dpos, dlen );\n        len  += wlen;\n        dpos += wlen;\n        dlen -= wlen;\n\n        wlen = asm.cipher( amode, hpos + pos, len );\n\n        if ( wlen ) result.set( heap.subarray( pos, pos + wlen ), rpos );\n        rpos += wlen;\n\n        if ( wlen < len ) {\n            pos += wlen;\n            len -= wlen;\n        } else {\n            pos = 0;\n            len = 0;\n        }\n    }\n\n    this.result = result;\n    this.pos = pos;\n    this.len = len;\n\n    return this;\n}\n\nfunction AES_Encrypt_finish ( data ) {\n    var presult = null,\n        prlen = 0;\n\n    if ( data !== undefined ) {\n        presult = AES_Encrypt_process.call( this, data ).result;\n        prlen = presult.length;\n    }\n\n    var asm = this.asm,\n        heap = this.heap,\n        amode = AES_asm.ENC[this.mode],\n        hpos = AES_asm.HEAP_DATA,\n        pos = this.pos,\n        len = this.len,\n        plen = 16 - len % 16,\n        rlen = len;\n\n    if ( this.hasOwnProperty('padding') ) {\n        if ( this.padding ) {\n            for ( var p = 0; p < plen; ++p ) heap[ pos + len + p ] = plen;\n            len += plen;\n            rlen = len;\n        }\n        else if ( len % 16 ) {\n            throw new IllegalArgumentError(\"data length must be a multiple of the block size\");\n        }\n    }\n    else {\n        len += plen;\n    }\n\n    var result = new Uint8Array( prlen + rlen );\n\n    if ( prlen ) result.set( presult );\n\n    if ( len ) asm.cipher( amode, hpos + pos, len );\n\n    if ( rlen ) result.set( heap.subarray( pos, pos + rlen ), prlen );\n\n    this.result = result;\n    this.pos = 0;\n    this.len = 0;\n\n    return this;\n}\n\nfunction AES_Decrypt_process ( data ) {\n    if ( is_string(data) )\n        data = string_to_bytes(data);\n\n    if ( is_buffer(data) )\n        data = new Uint8Array(data);\n\n    if ( !is_bytes(data) )\n        throw new TypeError(\"data isn't of expected type\");\n\n    var asm = this.asm,\n        heap = this.heap,\n        amode = AES_asm.DEC[this.mode],\n        hpos = AES_asm.HEAP_DATA,\n        pos = this.pos,\n        len = this.len,\n        dpos = 0,\n        dlen = data.length || 0,\n        rpos = 0,\n        rlen = (len + dlen) & -16,\n        plen = 0,\n        wlen = 0;\n\n    if ( this.hasOwnProperty('padding') && this.padding ) {\n        plen = len + dlen - rlen || 16;\n        rlen -= plen;\n    }\n\n    var result = new Uint8Array(rlen);\n\n    while ( dlen > 0 ) {\n        wlen = _heap_write( heap, pos+len, data, dpos, dlen );\n        len  += wlen;\n        dpos += wlen;\n        dlen -= wlen;\n\n        wlen = asm.cipher( amode, hpos + pos, len - ( !dlen ? plen : 0 ) );\n\n        if ( wlen ) result.set( heap.subarray( pos, pos + wlen ), rpos );\n        rpos += wlen;\n\n        if ( wlen < len ) {\n            pos += wlen;\n            len -= wlen;\n        } else {\n            pos = 0;\n            len = 0;\n        }\n    }\n\n    this.result = result;\n    this.pos = pos;\n    this.len = len;\n\n    return this;\n}\n\nfunction AES_Decrypt_finish ( data ) {\n    var presult = null,\n        prlen = 0;\n\n    if ( data !== undefined ) {\n        presult = AES_Decrypt_process.call( this, data ).result;\n        prlen = presult.length;\n    }\n\n    var asm = this.asm,\n        heap = this.heap,\n        amode = AES_asm.DEC[this.mode],\n        hpos = AES_asm.HEAP_DATA,\n        pos = this.pos,\n        len = this.len,\n        rlen = len;\n\n    if ( len > 0 ) {\n        if ( len % 16 ) {\n            if ( this.hasOwnProperty('padding') ) {\n                throw new IllegalArgumentError(\"data length must be a multiple of the block size\");\n            } else {\n                len += 16 - len % 16;\n            }\n        }\n\n        asm.cipher( amode, hpos + pos, len );\n\n        if ( this.hasOwnProperty('padding') && this.padding ) {\n            var pad = heap[ pos + rlen - 1 ];\n            if ( pad < 1 || pad > 16 || pad > rlen )\n                throw new SecurityError(\"bad padding\");\n\n            var pcheck = 0;\n            for ( var i = pad; i > 1; i-- ) pcheck |= pad ^ heap[ pos + rlen - i ];\n            if ( pcheck )\n                throw new SecurityError(\"bad padding\");\n\n            rlen -= pad;\n        }\n    }\n\n    var result = new Uint8Array( prlen + rlen );\n\n    if ( prlen > 0 ) {\n        result.set( presult );\n    }\n\n    if ( rlen > 0 ) {\n        result.set( heap.subarray( pos, pos + rlen ), prlen );\n    }\n\n    this.result = result;\n    this.pos = 0;\n    this.len = 0;\n\n    return this;\n}\n","/**\n * Cipher Block Chaining Mode (CBC)\n */\n\nfunction AES_CBC ( options ) {\n    this.padding = true;\n    this.iv = null;\n\n    AES.call( this, options );\n\n    this.mode = 'CBC';\n}\n\nvar AES_CBC_prototype = AES_CBC.prototype;\nAES_CBC_prototype.BLOCK_SIZE = 16;\nAES_CBC_prototype.reset = AES_reset;\nAES_CBC_prototype.encrypt = AES_Encrypt_finish;\nAES_CBC_prototype.decrypt = AES_Decrypt_finish;\n\nfunction AES_CBC_Encrypt ( options ) {\n    AES_CBC.call( this, options );\n}\n\nvar AES_CBC_Encrypt_prototype = AES_CBC_Encrypt.prototype;\nAES_CBC_Encrypt_prototype.BLOCK_SIZE = 16;\nAES_CBC_Encrypt_prototype.reset = AES_reset;\nAES_CBC_Encrypt_prototype.process = AES_Encrypt_process;\nAES_CBC_Encrypt_prototype.finish = AES_Encrypt_finish;\n\nfunction AES_CBC_Decrypt ( options ) {\n    AES_CBC.call( this, options );\n}\n\nvar AES_CBC_Decrypt_prototype = AES_CBC_Decrypt.prototype;\nAES_CBC_Decrypt_prototype.BLOCK_SIZE = 16;\nAES_CBC_Decrypt_prototype.reset = AES_reset;\nAES_CBC_Decrypt_prototype.process = AES_Decrypt_process;\nAES_CBC_Decrypt_prototype.finish = AES_Decrypt_finish;\n","/**\n * Counter Mode (CTR)\n */\n\nfunction AES_CTR ( options ) {\n    this.nonce = null,\n    this.counter = 0,\n    this.counterSize = 0;\n\n    AES.call( this, options );\n\n    this.mode = 'CTR';\n}\n\nfunction AES_CTR_Crypt ( options ) {\n    AES_CTR.call( this, options );\n}\n\nfunction AES_CTR_set_options ( nonce, counter, size ) {\n    if ( size !== undefined ) {\n        if ( size < 8 || size > 48 )\n            throw new IllegalArgumentError(\"illegal counter size\");\n\n        this.counterSize = size;\n\n        var mask = Math.pow( 2, size ) - 1;\n        this.asm.set_mask( 0, 0, (mask / 0x100000000)|0, mask|0 );\n    }\n    else {\n        this.counterSize = size = 48;\n        this.asm.set_mask( 0, 0, 0xffff, 0xffffffff );\n    }\n\n    if ( nonce !== undefined ) {\n        if ( is_buffer(nonce) || is_bytes(nonce) ) {\n            nonce = new Uint8Array(nonce);\n        }\n        else if ( is_string(nonce) ) {\n            nonce = string_to_bytes(nonce);\n        }\n        else {\n            throw new TypeError(\"unexpected nonce type\");\n        }\n\n        var len = nonce.length;\n        if ( !len || len > 16 )\n            throw new IllegalArgumentError(\"illegal nonce size\");\n\n        this.nonce = nonce;\n\n        var view = new DataView( new ArrayBuffer(16) );\n        new Uint8Array(view.buffer).set(nonce);\n\n        this.asm.set_nonce( view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12) );\n    }\n    else {\n        throw new Error(\"nonce is required\");\n    }\n\n    if ( counter !== undefined ) {\n        if ( !is_number(counter) )\n            throw new TypeError(\"unexpected counter type\");\n\n        if ( counter < 0 || counter >= Math.pow( 2, size ) )\n            throw new IllegalArgumentError(\"illegal counter value\");\n\n        this.counter = counter;\n\n        this.asm.set_counter( 0, 0, (counter / 0x100000000)|0, counter|0 );\n    }\n    else {\n        this.counter = counter = 0;\n    }\n}\n\nfunction AES_CTR_reset ( options ) {\n    options = options || {};\n\n    AES_reset.call( this, options );\n\n    AES_CTR_set_options.call( this, options.nonce, options.counter, options.counterSize );\n\n    return this;\n}\n\nvar AES_CTR_prototype = AES_CTR.prototype;\nAES_CTR_prototype.BLOCK_SIZE = 16;\nAES_CTR_prototype.reset = AES_CTR_reset;\nAES_CTR_prototype.encrypt = AES_Encrypt_finish;\nAES_CTR_prototype.decrypt = AES_Encrypt_finish;\n\nvar AES_CTR_Crypt_prototype = AES_CTR_Crypt.prototype;\nAES_CTR_Crypt_prototype.BLOCK_SIZE = 16;\nAES_CTR_Crypt_prototype.reset = AES_CTR_reset;\nAES_CTR_Crypt_prototype.process = AES_Encrypt_process;\nAES_CTR_Crypt_prototype.finish = AES_Encrypt_finish;\n","/**\n * Galois/Counter mode\n */\n\nvar _AES_GCM_data_maxLength = 68719476704;  // 2^36 - 2^5\n\nfunction _gcm_mac_process ( data ) {\n    var heap = this.heap,\n        asm  = this.asm,\n        dpos = 0,\n        dlen = data.length || 0,\n        wlen = 0;\n\n    while ( dlen > 0 ) {\n        wlen = _heap_write( heap, 0, data, dpos, dlen );\n        dpos += wlen;\n        dlen -= wlen;\n\n        while ( wlen & 15 ) heap[ wlen++ ] = 0;\n\n        asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA, wlen );\n    }\n}\n\nfunction AES_GCM ( options ) {\n    this.nonce      = null;\n    this.adata      = null;\n    this.iv         = null;\n    this.counter    = 1;\n    this.tagSize    = 16;\n\n    AES.call( this, options );\n\n    this.mode       = 'GCM';\n}\n\nfunction AES_GCM_Encrypt ( options ) {\n    AES_GCM.call( this, options );\n}\n\nfunction AES_GCM_Decrypt ( options ) {\n    AES_GCM.call( this, options );\n}\n\nfunction AES_GCM_reset ( options ) {\n    options = options || {};\n\n    AES_reset.call( this, options );\n\n    var asm = this.asm,\n        heap = this.heap;\n\n    asm.gcm_init();\n\n    var tagSize = options.tagSize;\n    if ( tagSize !== undefined ) {\n        if ( !is_number(tagSize) )\n            throw new TypeError(\"tagSize must be a number\");\n\n        if ( tagSize < 4 || tagSize > 16 )\n            throw new IllegalArgumentError(\"illegal tagSize value\");\n\n        this.tagSize = tagSize;\n    }\n    else {\n        this.tagSize = 16;\n    }\n\n    var nonce = options.nonce;\n    if ( nonce !== undefined ) {\n        if ( is_bytes(nonce) || is_buffer(nonce) ) {\n            nonce = new Uint8Array(nonce);\n        }\n        else if ( is_string(nonce) ) {\n            nonce = string_to_bytes(nonce);\n        }\n        else {\n            throw new TypeError(\"unexpected nonce type\");\n        }\n\n        this.nonce = nonce;\n\n        var noncelen = nonce.length || 0,\n            noncebuf = new Uint8Array(16);\n        if ( noncelen !== 12 ) {\n            _gcm_mac_process.call( this, nonce );\n\n            heap[0] = heap[1] = heap[2] = heap[3] = heap[4] = heap[5] = heap[6] = heap[7] = heap[8] = heap[9] = heap[10] = 0,\n            heap[11] = noncelen>>>29,\n            heap[12] = noncelen>>>21&255,\n            heap[13] = noncelen>>>13&255,\n            heap[14] = noncelen>>>5&255,\n            heap[15] = noncelen<<3&255;\n            asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16 );\n\n            asm.get_iv( AES_asm.HEAP_DATA );\n            asm.set_iv();\n\n            noncebuf.set( heap.subarray( 0, 16 ) );\n        }\n        else {\n            noncebuf.set(nonce);\n            noncebuf[15] = 1;\n        }\n\n        var nonceview = new DataView( noncebuf.buffer );\n        this.gamma0 = nonceview.getUint32(12);\n\n        asm.set_nonce( nonceview.getUint32(0), nonceview.getUint32(4), nonceview.getUint32(8), 0 );\n        asm.set_mask( 0, 0, 0, 0xffffffff );\n    }\n    else {\n        throw new Error(\"nonce is required\");\n    }\n\n    var adata = options.adata;\n    if ( adata !== undefined && adata !== null ) {\n        if ( is_bytes(adata) || is_buffer(adata) ) {\n            adata = new Uint8Array(adata);\n        }\n        else if ( is_string(adata) ) {\n            adata = string_to_bytes(adata);\n        }\n        else {\n            throw new TypeError(\"unexpected adata type\");\n        }\n\n        if ( adata.length > _AES_GCM_data_maxLength )\n            throw new IllegalArgumentError(\"illegal adata length\");\n\n        if ( adata.length ) {\n            this.adata = adata;\n            _gcm_mac_process.call( this, adata );\n        }\n        else {\n            this.adata = null;\n        }\n    }\n    else {\n        this.adata = null;\n    }\n\n    var counter = options.counter;\n    if ( counter !== undefined ) {\n        if ( !is_number(counter) )\n            throw new TypeError(\"counter must be a number\");\n\n        if ( counter < 1 || counter > 0xffffffff )\n            throw new RangeError(\"counter must be a positive 32-bit integer\");\n\n        this.counter = counter;\n        asm.set_counter( 0, 0, 0, this.gamma0+counter|0 );\n    }\n    else {\n        this.counter = 1;\n        asm.set_counter( 0, 0, 0, this.gamma0+1|0 );\n    }\n\n    var iv = options.iv;\n    if ( iv !== undefined ) {\n        if ( !is_number(counter) )\n            throw new TypeError(\"counter must be a number\");\n\n        this.iv = iv;\n\n        AES_set_iv.call( this, iv );\n    }\n\n    return this;\n}\n\nfunction AES_GCM_Encrypt_process ( data ) {\n    if ( is_string(data) )\n        data = string_to_bytes(data);\n\n    if ( is_buffer(data) )\n        data = new Uint8Array(data);\n\n    if ( !is_bytes(data) )\n        throw new TypeError(\"data isn't of expected type\");\n\n    var dpos = 0,\n        dlen = data.length || 0,\n        asm = this.asm,\n        heap = this.heap,\n        counter = this.counter,\n        pos = this.pos,\n        len = this.len,\n        rpos = 0,\n        rlen = ( len + dlen ) & -16,\n        wlen = 0;\n\n    if ( ((counter-1)<<4) + len + dlen > _AES_GCM_data_maxLength )\n        throw new RangeError(\"counter overflow\");\n\n    var result = new Uint8Array(rlen);\n\n    while ( dlen > 0 ) {\n        wlen = _heap_write( heap, pos+len, data, dpos, dlen );\n        len  += wlen;\n        dpos += wlen;\n        dlen -= wlen;\n\n        wlen = asm.cipher( AES_asm.ENC.CTR, AES_asm.HEAP_DATA + pos, len );\n        wlen = asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, wlen );\n\n        if ( wlen ) result.set( heap.subarray( pos, pos + wlen ), rpos );\n        counter += (wlen>>>4);\n        rpos += wlen;\n\n        if ( wlen < len ) {\n            pos += wlen;\n            len -= wlen;\n        } else {\n            pos = 0;\n            len = 0;\n        }\n    }\n\n    this.result = result;\n    this.counter = counter;\n    this.pos = pos;\n    this.len = len;\n\n    return this;\n}\n\nfunction AES_GCM_Encrypt_finish () {\n    var asm = this.asm,\n        heap = this.heap,\n        counter = this.counter,\n        tagSize = this.tagSize,\n        adata = this.adata,\n        pos = this.pos,\n        len = this.len;\n\n    var result = new Uint8Array( len + tagSize );\n\n    asm.cipher( AES_asm.ENC.CTR, AES_asm.HEAP_DATA + pos, (len + 15) & -16 );\n    if ( len ) result.set( heap.subarray( pos, pos + len ) );\n\n    for ( var i = len; i & 15; i++ ) heap[ pos + i ] = 0;\n    asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, i );\n\n    var alen = ( adata !== null ) ? adata.length : 0,\n        clen = ( (counter-1) << 4) + len;\n    heap[0] = heap[1] = heap[2] = 0,\n    heap[3] = alen>>>29,\n    heap[4] = alen>>>21,\n    heap[5] = alen>>>13&255,\n    heap[6] = alen>>>5&255,\n    heap[7] = alen<<3&255,\n    heap[8] = heap[9] = heap[10] = 0,\n    heap[11] = clen>>>29,\n    heap[12] = clen>>>21&255,\n    heap[13] = clen>>>13&255,\n    heap[14] = clen>>>5&255,\n    heap[15] = clen<<3&255;\n    asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16 );\n    asm.get_iv( AES_asm.HEAP_DATA );\n\n    asm.set_counter( 0, 0, 0, this.gamma0 );\n    asm.cipher( AES_asm.ENC.CTR, AES_asm.HEAP_DATA, 16 );\n    result.set( heap.subarray( 0, tagSize ), len );\n\n    this.result = result;\n    this.counter = 1;\n    this.pos = 0;\n    this.len = 0;\n\n    return this;\n}\n\nfunction AES_GCM_encrypt ( data ) {\n    var result1 = AES_GCM_Encrypt_process.call( this, data ).result,\n        result2 = AES_GCM_Encrypt_finish.call(this).result;\n\n    var result = new Uint8Array( result1.length + result2.length );\n    if ( result1.length ) result.set( result1 );\n    if ( result2.length ) result.set( result2, result1.length );\n    this.result = result;\n\n    return this;\n}\n\nfunction AES_GCM_Decrypt_process ( data ) {\n    if ( is_string(data) )\n        data = string_to_bytes(data);\n\n    if ( is_buffer(data) )\n        data = new Uint8Array(data);\n\n    if ( !is_bytes(data) )\n        throw new TypeError(\"data isn't of expected type\");\n\n    var dpos = 0,\n        dlen = data.length || 0,\n        asm = this.asm,\n        heap = this.heap,\n        counter = this.counter,\n        tagSize = this.tagSize,\n        pos = this.pos,\n        len = this.len,\n        rpos = 0,\n        rlen = len + dlen > tagSize ? ( len + dlen - tagSize ) & -16 : 0,\n        tlen = len + dlen - rlen,\n        wlen = 0;\n\n    if ( ((counter-1)<<4) + len + dlen > _AES_GCM_data_maxLength )\n        throw new RangeError(\"counter overflow\");\n\n    var result = new Uint8Array(rlen);\n\n    while ( dlen > tlen ) {\n        wlen = _heap_write( heap, pos+len, data, dpos, dlen-tlen );\n        len  += wlen;\n        dpos += wlen;\n        dlen -= wlen;\n\n        wlen = asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, wlen );\n        wlen = asm.cipher( AES_asm.DEC.CTR, AES_asm.HEAP_DATA + pos, wlen );\n\n        if ( wlen ) result.set( heap.subarray( pos, pos+wlen ), rpos );\n        counter += (wlen>>>4);\n        rpos += wlen;\n\n        pos = 0;\n        len = 0;\n    }\n\n    if ( dlen > 0 ) {\n        len += _heap_write( heap, 0, data, dpos, dlen );\n    }\n\n    this.result = result;\n    this.counter = counter;\n    this.pos = pos;\n    this.len = len;\n\n    return this;\n}\n\nfunction AES_GCM_Decrypt_finish () {\n    var asm = this.asm,\n        heap = this.heap,\n        tagSize = this.tagSize,\n        adata = this.adata,\n        counter = this.counter,\n        pos = this.pos,\n        len = this.len,\n        rlen = len - tagSize,\n        wlen = 0;\n\n    if ( len < tagSize )\n        throw new IllegalStateError(\"authentication tag not found\");\n\n    var result = new Uint8Array(rlen),\n        atag = new Uint8Array( heap.subarray( pos+rlen, pos+len ) );\n\n    for ( var i = rlen; i & 15; i++ ) heap[ pos + i ] = 0;\n\n    wlen = asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, i );\n    wlen = asm.cipher( AES_asm.DEC.CTR, AES_asm.HEAP_DATA + pos, i );\n    if ( rlen ) result.set( heap.subarray( pos, pos+rlen ) );\n\n    var alen = ( adata !== null ) ? adata.length : 0,\n        clen = ( (counter-1) << 4) + len - tagSize;\n    heap[0] = heap[1] = heap[2] = 0,\n    heap[3] = alen>>>29,\n    heap[4] = alen>>>21,\n    heap[5] = alen>>>13&255,\n    heap[6] = alen>>>5&255,\n    heap[7] = alen<<3&255,\n    heap[8] = heap[9] = heap[10] = 0,\n    heap[11] = clen>>>29,\n    heap[12] = clen>>>21&255,\n    heap[13] = clen>>>13&255,\n    heap[14] = clen>>>5&255,\n    heap[15] = clen<<3&255;\n    asm.mac( AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16 );\n    asm.get_iv( AES_asm.HEAP_DATA );\n\n    asm.set_counter( 0, 0, 0, this.gamma0 );\n    asm.cipher( AES_asm.ENC.CTR, AES_asm.HEAP_DATA, 16 );\n\n    var acheck = 0;\n    for ( var i = 0; i < tagSize; ++i ) acheck |= atag[i] ^ heap[i];\n    if ( acheck )\n        throw new SecurityError(\"data integrity check failed\");\n\n    this.result = result;\n    this.counter = 1;\n    this.pos = 0;\n    this.len = 0;\n\n    return this;\n}\n\nfunction AES_GCM_decrypt ( data ) {\n    var result1 = AES_GCM_Decrypt_process.call( this, data ).result,\n        result2 = AES_GCM_Decrypt_finish.call( this ).result;\n\n    var result = new Uint8Array( result1.length + result2.length );\n    if ( result1.length ) result.set( result1 );\n    if ( result2.length ) result.set( result2, result1.length );\n    this.result = result;\n\n    return this;\n}\n\nvar AES_GCM_prototype = AES_GCM.prototype;\nAES_GCM_prototype.BLOCK_SIZE = 16;\nAES_GCM_prototype.reset = AES_GCM_reset;\nAES_GCM_prototype.encrypt = AES_GCM_encrypt;\nAES_GCM_prototype.decrypt = AES_GCM_decrypt;\n\nvar AES_GCM_Encrypt_prototype = AES_GCM_Encrypt.prototype;\nAES_GCM_Encrypt_prototype.BLOCK_SIZE = 16;\nAES_GCM_Encrypt_prototype.reset = AES_GCM_reset;\nAES_GCM_Encrypt_prototype.process = AES_GCM_Encrypt_process;\nAES_GCM_Encrypt_prototype.finish = AES_GCM_Encrypt_finish;\n\nvar AES_GCM_Decrypt_prototype = AES_GCM_Decrypt.prototype;\nAES_GCM_Decrypt_prototype.BLOCK_SIZE = 16;\nAES_GCM_Decrypt_prototype.reset = AES_GCM_reset;\nAES_GCM_Decrypt_prototype.process = AES_GCM_Decrypt_process;\nAES_GCM_Decrypt_prototype.finish = AES_GCM_Decrypt_finish;\n","/**\n * AES-CBC exports\n */\n\nfunction AES_CBC_encrypt_bytes ( data, key, padding, iv ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    return new AES_CBC( { heap: _AES_heap_instance, asm: _AES_asm_instance, key: key, padding: padding, iv: iv } ).encrypt(data).result;\n}\n\nfunction AES_CBC_decrypt_bytes ( data, key, padding, iv ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    return new AES_CBC( { heap: _AES_heap_instance, asm: _AES_asm_instance, key: key, padding: padding, iv: iv } ).decrypt(data).result;\n}\n\nexports.AES_CBC = AES_CBC;\nexports.AES_CBC.encrypt = AES_CBC_encrypt_bytes;\nexports.AES_CBC.decrypt = AES_CBC_decrypt_bytes;\n\nexports.AES_CBC.Encrypt = AES_CBC_Encrypt;\nexports.AES_CBC.Decrypt = AES_CBC_Decrypt;\n","/**\n * AES-GCM exports\n */\n\nfunction AES_GCM_encrypt_bytes ( data, key, nonce, adata, tagSize ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    if ( nonce === undefined ) throw new SyntaxError(\"nonce required\");\n    return new AES_GCM( { heap: _AES_heap_instance, asm: _AES_asm_instance, key: key, nonce: nonce, adata: adata, tagSize: tagSize } ).encrypt(data).result;\n}\n\nfunction AES_GCM_decrypt_bytes ( data, key, nonce, adata, tagSize ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    if ( nonce === undefined ) throw new SyntaxError(\"nonce required\");\n    return new AES_GCM( { heap: _AES_heap_instance, asm: _AES_asm_instance, key: key, nonce: nonce, adata: adata, tagSize: tagSize } ).decrypt(data).result;\n}\n\nexports.AES_GCM = AES_GCM;\nexports.AES_GCM.encrypt = AES_GCM_encrypt_bytes;\nexports.AES_GCM.decrypt = AES_GCM_decrypt_bytes;\n\nexports.AES_GCM.Encrypt = AES_GCM_Encrypt;\nexports.AES_GCM.Decrypt = AES_GCM_Decrypt;\n","function hash_reset () {\n    this.result = null;\n    this.pos = 0;\n    this.len = 0;\n\n    this.asm.reset();\n\n    return this;\n}\n\nfunction hash_process ( data ) {\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    if ( is_string(data) )\n        data = string_to_bytes(data);\n\n    if ( is_buffer(data) )\n        data = new Uint8Array(data);\n\n    if ( !is_bytes(data) )\n        throw new TypeError(\"data isn't of expected type\");\n\n    var asm = this.asm,\n        heap = this.heap,\n        hpos = this.pos,\n        hlen = this.len,\n        dpos = 0,\n        dlen = data.length,\n        wlen = 0;\n\n    while ( dlen > 0 ) {\n        wlen = _heap_write( heap, hpos+hlen, data, dpos, dlen );\n        hlen += wlen;\n        dpos += wlen;\n        dlen -= wlen;\n\n        wlen = asm.process( hpos, hlen );\n\n        hpos += wlen;\n        hlen -= wlen;\n\n        if ( !hlen ) hpos = 0;\n    }\n\n    this.pos = hpos;\n    this.len = hlen;\n\n    return this;\n}\n\nfunction hash_finish () {\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    this.asm.finish( this.pos, this.len, 0 );\n\n    this.result = new Uint8Array(this.HASH_SIZE);\n    this.result.set( this.heap.subarray( 0, this.HASH_SIZE ) );\n\n    this.pos = 0;\n    this.len = 0;\n\n    return this;\n}\n","function sha1_asm ( stdlib, foreign, buffer ) {\n    \"use asm\";\n\n    // SHA256 state\n    var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0, TOTAL = 0;\n\n    // HMAC state\n    var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0,\n        O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0;\n\n    // I/O buffer\n    var HEAP = new stdlib.Uint8Array(buffer);\n\n    function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {\n        w0 = w0|0;\n        w1 = w1|0;\n        w2 = w2|0;\n        w3 = w3|0;\n        w4 = w4|0;\n        w5 = w5|0;\n        w6 = w6|0;\n        w7 = w7|0;\n        w8 = w8|0;\n        w9 = w9|0;\n        w10 = w10|0;\n        w11 = w11|0;\n        w12 = w12|0;\n        w13 = w13|0;\n        w14 = w14|0;\n        w15 = w15|0;\n\n        var a = 0, b = 0, c = 0, d = 0, e = 0, n = 0, t = 0,\n            w16 = 0, w17 = 0, w18 = 0, w19 = 0,\n            w20 = 0, w21 = 0, w22 = 0, w23 = 0, w24 = 0, w25 = 0, w26 = 0, w27 = 0, w28 = 0, w29 = 0,\n            w30 = 0, w31 = 0, w32 = 0, w33 = 0, w34 = 0, w35 = 0, w36 = 0, w37 = 0, w38 = 0, w39 = 0,\n            w40 = 0, w41 = 0, w42 = 0, w43 = 0, w44 = 0, w45 = 0, w46 = 0, w47 = 0, w48 = 0, w49 = 0,\n            w50 = 0, w51 = 0, w52 = 0, w53 = 0, w54 = 0, w55 = 0, w56 = 0, w57 = 0, w58 = 0, w59 = 0,\n            w60 = 0, w61 = 0, w62 = 0, w63 = 0, w64 = 0, w65 = 0, w66 = 0, w67 = 0, w68 = 0, w69 = 0,\n            w70 = 0, w71 = 0, w72 = 0, w73 = 0, w74 = 0, w75 = 0, w76 = 0, w77 = 0, w78 = 0, w79 = 0;\n\n        a = H0;\n        b = H1;\n        c = H2;\n        d = H3;\n        e = H4;\n\n        // 0\n        t = ( w0 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 1\n        t = ( w1 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 2\n        t = ( w2 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 3\n        t = ( w3 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 4\n        t = ( w4 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 5\n        t = ( w5 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 6\n        t = ( w6 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 7\n        t = ( w7 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 8\n        t = ( w8 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 9\n        t = ( w9 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 10\n        t = ( w10 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 11\n        t = ( w11 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 12\n        t = ( w12 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 13\n        t = ( w13 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 14\n        t = ( w14 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 15\n        t = ( w15 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 16\n        n = w13 ^ w8 ^ w2 ^ w0;\n        w16 = (n << 1) | (n >>> 31);\n        t = (w16 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 17\n        n = w14 ^ w9 ^ w3 ^ w1;\n        w17 = (n << 1) | (n >>> 31);\n        t = (w17 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 18\n        n = w15 ^ w10 ^ w4 ^ w2;\n        w18 = (n << 1) | (n >>> 31);\n        t = (w18 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 19\n        n = w16 ^ w11 ^ w5 ^ w3;\n        w19 = (n << 1) | (n >>> 31);\n        t = (w19 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 20\n        n = w17 ^ w12 ^ w6 ^ w4;\n        w20 = (n << 1) | (n >>> 31);\n        t = (w20 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 21\n        n = w18 ^ w13 ^ w7 ^ w5;\n        w21 = (n << 1) | (n >>> 31);\n        t = (w21 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 22\n        n = w19 ^ w14 ^ w8 ^ w6;\n        w22 = (n << 1) | (n >>> 31);\n        t = (w22 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 23\n        n = w20 ^ w15 ^ w9 ^ w7;\n        w23 = (n << 1) | (n >>> 31);\n        t = (w23 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 24\n        n = w21 ^ w16 ^ w10 ^ w8;\n        w24 = (n << 1) | (n >>> 31);\n        t = (w24 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 25\n        n = w22 ^ w17 ^ w11 ^ w9;\n        w25 = (n << 1) | (n >>> 31);\n        t = (w25 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 26\n        n = w23 ^ w18 ^ w12 ^ w10;\n        w26 = (n << 1) | (n >>> 31);\n        t = (w26 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 27\n        n = w24 ^ w19 ^ w13 ^ w11;\n        w27 = (n << 1) | (n >>> 31);\n        t = (w27 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 28\n        n = w25 ^ w20 ^ w14 ^ w12;\n        w28 = (n << 1) | (n >>> 31);\n        t = (w28 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 29\n        n = w26 ^ w21 ^ w15 ^ w13;\n        w29 = (n << 1) | (n >>> 31);\n        t = (w29 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 30\n        n = w27 ^ w22 ^ w16 ^ w14;\n        w30 = (n << 1) | (n >>> 31);\n        t = (w30 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 31\n        n = w28 ^ w23 ^ w17 ^ w15;\n        w31 = (n << 1) | (n >>> 31);\n        t = (w31 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 32\n        n = w29 ^ w24 ^ w18 ^ w16;\n        w32 = (n << 1) | (n >>> 31);\n        t = (w32 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 33\n        n = w30 ^ w25 ^ w19 ^ w17;\n        w33 = (n << 1) | (n >>> 31);\n        t = (w33 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 34\n        n = w31 ^ w26 ^ w20 ^ w18;\n        w34 = (n << 1) | (n >>> 31);\n        t = (w34 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 35\n        n = w32 ^ w27 ^ w21 ^ w19;\n        w35 = (n << 1) | (n >>> 31);\n        t = (w35 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 36\n        n = w33 ^ w28 ^ w22 ^ w20;\n        w36 = (n << 1) | (n >>> 31);\n        t = (w36 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 37\n        n = w34 ^ w29 ^ w23 ^ w21;\n        w37 = (n << 1) | (n >>> 31);\n        t = (w37 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 38\n        n = w35 ^ w30 ^ w24 ^ w22;\n        w38 = (n << 1) | (n >>> 31);\n        t = (w38 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 39\n        n = w36 ^ w31 ^ w25 ^ w23;\n        w39 = (n << 1) | (n >>> 31);\n        t = (w39 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 40\n        n = w37 ^ w32 ^ w26 ^ w24;\n        w40 = (n << 1) | (n >>> 31);\n        t = (w40 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 41\n        n = w38 ^ w33 ^ w27 ^ w25;\n        w41 = (n << 1) | (n >>> 31);\n        t = (w41 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 42\n        n = w39 ^ w34 ^ w28 ^ w26;\n        w42 = (n << 1) | (n >>> 31);\n        t = (w42 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 43\n        n = w40 ^ w35 ^ w29 ^ w27;\n        w43 = (n << 1) | (n >>> 31);\n        t = (w43 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 44\n        n = w41 ^ w36 ^ w30 ^ w28;\n        w44 = (n << 1) | (n >>> 31);\n        t = (w44 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 45\n        n = w42 ^ w37 ^ w31 ^ w29;\n        w45 = (n << 1) | (n >>> 31);\n        t = (w45 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 46\n        n = w43 ^ w38 ^ w32 ^ w30;\n        w46 = (n << 1) | (n >>> 31);\n        t = (w46 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 47\n        n = w44 ^ w39 ^ w33 ^ w31;\n        w47 = (n << 1) | (n >>> 31);\n        t = (w47 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 48\n        n = w45 ^ w40 ^ w34 ^ w32;\n        w48 = (n << 1) | (n >>> 31);\n        t = (w48 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 49\n        n = w46 ^ w41 ^ w35 ^ w33;\n        w49 = (n << 1) | (n >>> 31);\n        t = (w49 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 50\n        n = w47 ^ w42 ^ w36 ^ w34;\n        w50 = (n << 1) | (n >>> 31);\n        t = (w50 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 51\n        n = w48 ^ w43 ^ w37 ^ w35;\n        w51 = (n << 1) | (n >>> 31);\n        t = (w51 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 52\n        n = w49 ^ w44 ^ w38 ^ w36;\n        w52 = (n << 1) | (n >>> 31);\n        t = (w52 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 53\n        n = w50 ^ w45 ^ w39 ^ w37;\n        w53 = (n << 1) | (n >>> 31);\n        t = (w53 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 54\n        n = w51 ^ w46 ^ w40 ^ w38;\n        w54 = (n << 1) | (n >>> 31);\n        t = (w54 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 55\n        n = w52 ^ w47 ^ w41 ^ w39;\n        w55 = (n << 1) | (n >>> 31);\n        t = (w55 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 56\n        n = w53 ^ w48 ^ w42 ^ w40;\n        w56 = (n << 1) | (n >>> 31);\n        t = (w56 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 57\n        n = w54 ^ w49 ^ w43 ^ w41;\n        w57 = (n << 1) | (n >>> 31);\n        t = (w57 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 58\n        n = w55 ^ w50 ^ w44 ^ w42;\n        w58 = (n << 1) | (n >>> 31);\n        t = (w58 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 59\n        n = w56 ^ w51 ^ w45 ^ w43;\n        w59 = (n << 1) | (n >>> 31);\n        t = (w59 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 60\n        n = w57 ^ w52 ^ w46 ^ w44;\n        w60 = (n << 1) | (n >>> 31);\n        t = (w60 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 61\n        n = w58 ^ w53 ^ w47 ^ w45;\n        w61 = (n << 1) | (n >>> 31);\n        t = (w61 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 62\n        n = w59 ^ w54 ^ w48 ^ w46;\n        w62 = (n << 1) | (n >>> 31);\n        t = (w62 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 63\n        n = w60 ^ w55 ^ w49 ^ w47;\n        w63 = (n << 1) | (n >>> 31);\n        t = (w63 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 64\n        n = w61 ^ w56 ^ w50 ^ w48;\n        w64 = (n << 1) | (n >>> 31);\n        t = (w64 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 65\n        n = w62 ^ w57 ^ w51 ^ w49;\n        w65 = (n << 1) | (n >>> 31);\n        t = (w65 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 66\n        n = w63 ^ w58 ^ w52 ^ w50;\n        w66 = (n << 1) | (n >>> 31);\n        t = (w66 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 67\n        n = w64 ^ w59 ^ w53 ^ w51;\n        w67 = (n << 1) | (n >>> 31);\n        t = (w67 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 68\n        n = w65 ^ w60 ^ w54 ^ w52;\n        w68 = (n << 1) | (n >>> 31);\n        t = (w68 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 69\n        n = w66 ^ w61 ^ w55 ^ w53;\n        w69 = (n << 1) | (n >>> 31);\n        t = (w69 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 70\n        n = w67 ^ w62 ^ w56 ^ w54;\n        w70 = (n << 1) | (n >>> 31);\n        t = (w70 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 71\n        n = w68 ^ w63 ^ w57 ^ w55;\n        w71 = (n << 1) | (n >>> 31);\n        t = (w71 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 72\n        n = w69 ^ w64 ^ w58 ^ w56;\n        w72 = (n << 1) | (n >>> 31);\n        t = (w72 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 73\n        n = w70 ^ w65 ^ w59 ^ w57;\n        w73 = (n << 1) | (n >>> 31);\n        t = (w73 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 74\n        n = w71 ^ w66 ^ w60 ^ w58;\n        w74 = (n << 1) | (n >>> 31);\n        t = (w74 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 75\n        n = w72 ^ w67 ^ w61 ^ w59;\n        w75 = (n << 1) | (n >>> 31);\n        t = (w75 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 76\n        n = w73 ^ w68 ^ w62 ^ w60;\n        w76 = (n << 1) | (n >>> 31);\n        t = (w76 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 77\n        n = w74 ^ w69 ^ w63 ^ w61;\n        w77 = (n << 1) | (n >>> 31);\n        t = (w77 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 78\n        n = w75 ^ w70 ^ w64 ^ w62;\n        w78 = (n << 1) | (n >>> 31);\n        t = (w78 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        // 79\n        n = w76 ^ w71 ^ w65 ^ w63;\n        w79 = (n << 1) | (n >>> 31);\n        t = (w79 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;\n        e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;\n\n        H0 = ( H0 + a )|0;\n        H1 = ( H1 + b )|0;\n        H2 = ( H2 + c )|0;\n        H3 = ( H3 + d )|0;\n        H4 = ( H4 + e )|0;\n\n    }\n\n    function _core_heap ( offset ) {\n        offset = offset|0;\n\n        _core(\n            HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],\n            HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],\n            HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],\n            HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],\n            HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],\n            HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],\n            HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],\n            HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],\n            HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],\n            HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],\n            HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],\n            HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],\n            HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],\n            HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],\n            HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],\n            HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]\n        );\n    }\n\n    // offset — multiple of 32\n    function _state_to_heap ( output ) {\n        output = output|0;\n\n        HEAP[output|0] = H0>>>24;\n        HEAP[output|1] = H0>>>16&255;\n        HEAP[output|2] = H0>>>8&255;\n        HEAP[output|3] = H0&255;\n        HEAP[output|4] = H1>>>24;\n        HEAP[output|5] = H1>>>16&255;\n        HEAP[output|6] = H1>>>8&255;\n        HEAP[output|7] = H1&255;\n        HEAP[output|8] = H2>>>24;\n        HEAP[output|9] = H2>>>16&255;\n        HEAP[output|10] = H2>>>8&255;\n        HEAP[output|11] = H2&255;\n        HEAP[output|12] = H3>>>24;\n        HEAP[output|13] = H3>>>16&255;\n        HEAP[output|14] = H3>>>8&255;\n        HEAP[output|15] = H3&255;\n        HEAP[output|16] = H4>>>24;\n        HEAP[output|17] = H4>>>16&255;\n        HEAP[output|18] = H4>>>8&255;\n        HEAP[output|19] = H4&255;\n    }\n\n    function reset () {\n        H0 = 0x67452301;\n        H1 = 0xefcdab89;\n        H2 = 0x98badcfe;\n        H3 = 0x10325476;\n        H4 = 0xc3d2e1f0;\n        TOTAL = 0;\n    }\n\n    function init ( h0, h1, h2, h3, h4, total ) {\n        h0 = h0|0;\n        h1 = h1|0;\n        h2 = h2|0;\n        h3 = h3|0;\n        h4 = h4|0;\n        total = total|0;\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n        TOTAL = total;\n    }\n\n    // offset — multiple of 64\n    function process ( offset, length ) {\n        offset = offset|0;\n        length = length|0;\n\n        var hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        while ( (length|0) >= 64 ) {\n            _core_heap(offset);\n\n            offset = ( offset + 64)|0;\n            length = ( length - 64)|0;\n\n            hashed = ( hashed + 64)|0;\n        }\n\n        TOTAL = ( TOTAL + hashed )|0;\n\n        return hashed|0;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var hashed = 0,\n            i = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        if ( (length|0) >= 64 ) {\n            hashed = process( offset, length )|0;\n            if ( (hashed|0) == -1 )\n                return -1;\n\n            offset = ( offset + hashed )|0;\n            length = ( length - hashed )|0;\n        }\n\n        hashed = ( hashed + length )|0;\n        TOTAL = ( TOTAL + length )|0;\n\n        HEAP[offset|length] = 0x80;\n\n        if ( (length|0) >= 56 ) {\n            for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )\n                HEAP[offset|i] = 0x00;\n            _core_heap(offset);\n\n            length = 0;\n\n            HEAP[offset|0] = 0;\n        }\n\n        for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )\n            HEAP[offset|i] = 0;\n\n        HEAP[offset|59] = TOTAL>>>29;\n        HEAP[offset|60] = TOTAL>>>21&255;\n        HEAP[offset|61] = TOTAL>>>13&255;\n        HEAP[offset|62] = TOTAL>>>5&255;\n        HEAP[offset|63] = TOTAL<<3&255;\n        _core_heap(offset);\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    function hmac_reset () {\n        H0 = I0;\n        H1 = I1;\n        H2 = I2;\n        H3 = I3;\n        H4 = I4;\n        TOTAL = 64;\n    }\n\n    function _hmac_opad () {\n        H0 = O0;\n        H1 = O1;\n        H2 = O2;\n        H3 = O3;\n        H4 = O4;\n        TOTAL = 64;\n    }\n\n    function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {\n        p0 = p0|0;\n        p1 = p1|0;\n        p2 = p2|0;\n        p3 = p3|0;\n        p4 = p4|0;\n        p5 = p5|0;\n        p6 = p6|0;\n        p7 = p7|0;\n        p8 = p8|0;\n        p9 = p9|0;\n        p10 = p10|0;\n        p11 = p11|0;\n        p12 = p12|0;\n        p13 = p13|0;\n        p14 = p14|0;\n        p15 = p15|0;\n\n        // opad\n        reset();\n        _core(\n            p0 ^ 0x5c5c5c5c,\n            p1 ^ 0x5c5c5c5c,\n            p2 ^ 0x5c5c5c5c,\n            p3 ^ 0x5c5c5c5c,\n            p4 ^ 0x5c5c5c5c,\n            p5 ^ 0x5c5c5c5c,\n            p6 ^ 0x5c5c5c5c,\n            p7 ^ 0x5c5c5c5c,\n            p8 ^ 0x5c5c5c5c,\n            p9 ^ 0x5c5c5c5c,\n            p10 ^ 0x5c5c5c5c,\n            p11 ^ 0x5c5c5c5c,\n            p12 ^ 0x5c5c5c5c,\n            p13 ^ 0x5c5c5c5c,\n            p14 ^ 0x5c5c5c5c,\n            p15 ^ 0x5c5c5c5c\n        );\n        O0 = H0;\n        O1 = H1;\n        O2 = H2;\n        O3 = H3;\n        O4 = H4;\n\n        // ipad\n        reset();\n        _core(\n            p0 ^ 0x36363636,\n            p1 ^ 0x36363636,\n            p2 ^ 0x36363636,\n            p3 ^ 0x36363636,\n            p4 ^ 0x36363636,\n            p5 ^ 0x36363636,\n            p6 ^ 0x36363636,\n            p7 ^ 0x36363636,\n            p8 ^ 0x36363636,\n            p9 ^ 0x36363636,\n            p10 ^ 0x36363636,\n            p11 ^ 0x36363636,\n            p12 ^ 0x36363636,\n            p13 ^ 0x36363636,\n            p14 ^ 0x36363636,\n            p15 ^ 0x36363636\n        );\n        I0 = H0;\n        I1 = H1;\n        I2 = H2;\n        I3 = H3;\n        I4 = H4;\n\n        TOTAL = 64;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function hmac_finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        hashed = finish( offset, length, -1 )|0;\n        t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\n\n        _hmac_opad();\n        _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    // salt is assumed to be already processed\n    // offset — multiple of 64\n    // output — multiple of 32\n    function pbkdf2_generate_block ( offset, length, block, count, output ) {\n        offset = offset|0;\n        length = length|0;\n        block = block|0;\n        count = count|0;\n        output = output|0;\n\n        var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0,\n            t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        // pad block number into heap\n        // FIXME probable OOB write\n        HEAP[(offset+length)|0]   = block>>>24;\n        HEAP[(offset+length+1)|0] = block>>>16&255;\n        HEAP[(offset+length+2)|0] = block>>>8&255;\n        HEAP[(offset+length+3)|0] = block&255;\n\n        // finish first iteration\n        hmac_finish( offset, (length+4)|0, -1 )|0;\n        h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4;\n        count = (count-1)|0;\n\n        // perform the rest iterations\n        while ( (count|0) > 0 ) {\n            hmac_reset();\n            _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\n\n            _hmac_opad();\n            _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;\n\n            h0 = h0 ^ H0;\n            h1 = h1 ^ H1;\n            h2 = h2 ^ H2;\n            h3 = h3 ^ H3;\n            h4 = h4 ^ H4;\n\n            count = (count-1)|0;\n        }\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return 0;\n    }\n\n    return {\n        // SHA1\n        reset: reset,\n        init: init,\n        process: process,\n        finish: finish,\n\n        // HMAC-SHA1\n        hmac_reset: hmac_reset,\n        hmac_init: hmac_init,\n        hmac_finish: hmac_finish,\n\n        // PBKDF2-HMAC-SHA1\n        pbkdf2_generate_block: pbkdf2_generate_block\n    }\n}\n","var _sha1_block_size = 64,\n    _sha1_hash_size = 20;\n\nfunction sha1_constructor ( options ) {\n    options = options || {};\n\n    this.heap = _heap_init( Uint8Array, options );\n    this.asm = options.asm || sha1_asm( global, null, this.heap.buffer );\n\n    this.BLOCK_SIZE = _sha1_block_size;\n    this.HASH_SIZE = _sha1_hash_size;\n\n    this.reset();\n}\n\nsha1_constructor.BLOCK_SIZE = _sha1_block_size;\nsha1_constructor.HASH_SIZE = _sha1_hash_size;\nvar sha1_prototype = sha1_constructor.prototype;\nsha1_prototype.reset =   hash_reset;\nsha1_prototype.process = hash_process;\nsha1_prototype.finish =  hash_finish;\n\nvar sha1_instance = null;\n\nfunction get_sha1_instance () {\n    if ( sha1_instance === null ) sha1_instance = new sha1_constructor( { heapSize: 0x100000 } );\n    return sha1_instance;\n}\n","/**\n * SHA1 exports\n */\n\nfunction sha1_bytes ( data ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    return get_sha1_instance().reset().process(data).finish().result;\n}\n\nfunction sha1_hex ( data ) {\n    var result = sha1_bytes(data);\n    return bytes_to_hex(result);\n}\n\nfunction sha1_base64 ( data ) {\n    var result = sha1_bytes(data);\n    return bytes_to_base64(result);\n}\n\nsha1_constructor.bytes = sha1_bytes;\nsha1_constructor.hex = sha1_hex;\nsha1_constructor.base64 = sha1_base64;\n\nexports.SHA1 = sha1_constructor;\n","function sha256_asm ( stdlib, foreign, buffer ) {\n    \"use asm\";\n\n    // SHA256 state\n    var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0, H5 = 0, H6 = 0, H7 = 0,\n        TOTAL = 0;\n\n    // HMAC state\n    var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0, I5 = 0, I6 = 0, I7 = 0,\n        O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0, O5 = 0, O6 = 0, O7 = 0;\n\n    // I/O buffer\n    var HEAP = new stdlib.Uint8Array(buffer);\n\n    function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {\n        w0 = w0|0;\n        w1 = w1|0;\n        w2 = w2|0;\n        w3 = w3|0;\n        w4 = w4|0;\n        w5 = w5|0;\n        w6 = w6|0;\n        w7 = w7|0;\n        w8 = w8|0;\n        w9 = w9|0;\n        w10 = w10|0;\n        w11 = w11|0;\n        w12 = w12|0;\n        w13 = w13|0;\n        w14 = w14|0;\n        w15 = w15|0;\n\n        var a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0,\n            t = 0;\n\n        a = H0;\n        b = H1;\n        c = H2;\n        d = H3;\n        e = H4;\n        f = H5;\n        g = H6;\n        h = H7;\n\n        // 0\n        t = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x428a2f98 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 1\n        t = ( w1 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x71374491 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 2\n        t = ( w2 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xb5c0fbcf )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 3\n        t = ( w3 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xe9b5dba5 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 4\n        t = ( w4 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x3956c25b )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 5\n        t = ( w5 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x59f111f1 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 6\n        t = ( w6 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x923f82a4 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 7\n        t = ( w7 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xab1c5ed5 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 8\n        t = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xd807aa98 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 9\n        t = ( w9 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x12835b01 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 10\n        t = ( w10 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x243185be )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 11\n        t = ( w11 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x550c7dc3 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 12\n        t = ( w12 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x72be5d74 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 13\n        t = ( w13 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x80deb1fe )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 14\n        t = ( w14 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x9bdc06a7 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 15\n        t = ( w15 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xc19bf174 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 16\n        w0 = t = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xe49b69c1 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 17\n        w1 = t = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xefbe4786 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 18\n        w2 = t = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x0fc19dc6 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 19\n        w3 = t = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x240ca1cc )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 20\n        w4 = t = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x2de92c6f )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 21\n        w5 = t = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x4a7484aa )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 22\n        w6 = t = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x5cb0a9dc )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 23\n        w7 = t = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x76f988da )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 24\n        w8 = t = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x983e5152 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 25\n        w9 = t = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xa831c66d )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 26\n        w10 = t = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xb00327c8 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 27\n        w11 = t = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xbf597fc7 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 28\n        w12 = t = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xc6e00bf3 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 29\n        w13 = t = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xd5a79147 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 30\n        w14 = t = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x06ca6351 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 31\n        w15 = t = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x14292967 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 32\n        w0 = t = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x27b70a85 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 33\n        w1 = t = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x2e1b2138 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 34\n        w2 = t = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x4d2c6dfc )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 35\n        w3 = t = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x53380d13 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 36\n        w4 = t = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x650a7354 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 37\n        w5 = t = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x766a0abb )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 38\n        w6 = t = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x81c2c92e )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 39\n        w7 = t = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x92722c85 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 40\n        w8 = t = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xa2bfe8a1 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 41\n        w9 = t = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xa81a664b )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 42\n        w10 = t = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xc24b8b70 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 43\n        w11 = t = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xc76c51a3 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 44\n        w12 = t = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xd192e819 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 45\n        w13 = t = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xd6990624 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 46\n        w14 = t = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xf40e3585 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 47\n        w15 = t = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x106aa070 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 48\n        w0 = t = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x19a4c116 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 49\n        w1 = t = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x1e376c08 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 50\n        w2 = t = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x2748774c )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 51\n        w3 = t = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x34b0bcb5 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 52\n        w4 = t = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x391c0cb3 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 53\n        w5 = t = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x4ed8aa4a )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 54\n        w6 = t = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x5b9cca4f )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 55\n        w7 = t = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x682e6ff3 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 56\n        w8 = t = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x748f82ee )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 57\n        w9 = t = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x78a5636f )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 58\n        w10 = t = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x84c87814 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 59\n        w11 = t = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x8cc70208 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 60\n        w12 = t = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x90befffa )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 61\n        w13 = t = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xa4506ceb )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 62\n        w14 = t = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xbef9a3f7 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        // 63\n        w15 = t = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;\n        t = ( t + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xc67178f2 )|0;\n        h = g; g = f; f = e; e = ( d + t )|0; d = c; c = b; b = a;\n        a = ( t + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;\n\n        H0 = ( H0 + a )|0;\n        H1 = ( H1 + b )|0;\n        H2 = ( H2 + c )|0;\n        H3 = ( H3 + d )|0;\n        H4 = ( H4 + e )|0;\n        H5 = ( H5 + f )|0;\n        H6 = ( H6 + g )|0;\n        H7 = ( H7 + h )|0;\n    }\n\n    function _core_heap ( offset ) {\n        offset = offset|0;\n\n        _core(\n            HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],\n            HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],\n            HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],\n            HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],\n            HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],\n            HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],\n            HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],\n            HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],\n            HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],\n            HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],\n            HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],\n            HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],\n            HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],\n            HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],\n            HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],\n            HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]\n        );\n    }\n\n    // offset — multiple of 32\n    function _state_to_heap ( output ) {\n        output = output|0;\n\n        HEAP[output|0] = H0>>>24;\n        HEAP[output|1] = H0>>>16&255;\n        HEAP[output|2] = H0>>>8&255;\n        HEAP[output|3] = H0&255;\n        HEAP[output|4] = H1>>>24;\n        HEAP[output|5] = H1>>>16&255;\n        HEAP[output|6] = H1>>>8&255;\n        HEAP[output|7] = H1&255;\n        HEAP[output|8] = H2>>>24;\n        HEAP[output|9] = H2>>>16&255;\n        HEAP[output|10] = H2>>>8&255;\n        HEAP[output|11] = H2&255;\n        HEAP[output|12] = H3>>>24;\n        HEAP[output|13] = H3>>>16&255;\n        HEAP[output|14] = H3>>>8&255;\n        HEAP[output|15] = H3&255;\n        HEAP[output|16] = H4>>>24;\n        HEAP[output|17] = H4>>>16&255;\n        HEAP[output|18] = H4>>>8&255;\n        HEAP[output|19] = H4&255;\n        HEAP[output|20] = H5>>>24;\n        HEAP[output|21] = H5>>>16&255;\n        HEAP[output|22] = H5>>>8&255;\n        HEAP[output|23] = H5&255;\n        HEAP[output|24] = H6>>>24;\n        HEAP[output|25] = H6>>>16&255;\n        HEAP[output|26] = H6>>>8&255;\n        HEAP[output|27] = H6&255;\n        HEAP[output|28] = H7>>>24;\n        HEAP[output|29] = H7>>>16&255;\n        HEAP[output|30] = H7>>>8&255;\n        HEAP[output|31] = H7&255;\n    }\n\n    function reset () {\n        H0 = 0x6a09e667;\n        H1 = 0xbb67ae85;\n        H2 = 0x3c6ef372;\n        H3 = 0xa54ff53a;\n        H4 = 0x510e527f;\n        H5 = 0x9b05688c;\n        H6 = 0x1f83d9ab;\n        H7 = 0x5be0cd19;\n        TOTAL = 0;\n    }\n\n    function init ( h0, h1, h2, h3, h4, h5, h6, h7, total ) {\n        h0 = h0|0;\n        h1 = h1|0;\n        h2 = h2|0;\n        h3 = h3|0;\n        h4 = h4|0;\n        h5 = h5|0;\n        h6 = h6|0;\n        h7 = h7|0;\n        total = total|0;\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n        H5 = h5;\n        H6 = h6;\n        H7 = h7;\n        TOTAL = total;\n    }\n\n    // offset — multiple of 64\n    function process ( offset, length ) {\n        offset = offset|0;\n        length = length|0;\n\n        var hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        while ( (length|0) >= 64 ) {\n            _core_heap(offset);\n\n            offset = ( offset + 64)|0;\n            length = ( length - 64)|0;\n\n            hashed = ( hashed + 64)|0;\n        }\n\n        TOTAL = ( TOTAL + hashed )|0;\n\n        return hashed|0;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var hashed = 0,\n            i = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        if ( (length|0) >= 64 ) {\n            hashed = process( offset, length )|0;\n            if ( (hashed|0) == -1 )\n                return -1;\n\n            offset = ( offset + hashed )|0;\n            length = ( length - hashed )|0;\n        }\n\n        hashed = ( hashed + length )|0;\n        TOTAL = ( TOTAL + length )|0;\n\n        HEAP[offset|length] = 0x80;\n\n        if ( (length|0) >= 56 ) {\n            for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )\n                HEAP[offset|i] = 0x00;\n\n            _core_heap(offset);\n\n            length = 0;\n\n            HEAP[offset|0] = 0;\n        }\n\n        for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )\n            HEAP[offset|i] = 0;\n\n        HEAP[offset|59] = TOTAL>>>29;\n        HEAP[offset|60] = TOTAL>>>21&255;\n        HEAP[offset|61] = TOTAL>>>13&255;\n        HEAP[offset|62] = TOTAL>>>5&255;\n        HEAP[offset|63] = TOTAL<<3&255;\n        _core_heap(offset);\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    function hmac_reset () {\n        H0 = I0;\n        H1 = I1;\n        H2 = I2;\n        H3 = I3;\n        H4 = I4;\n        H5 = I5;\n        H6 = I6;\n        H7 = I7;\n        TOTAL = 64;\n    }\n\n    function _hmac_opad () {\n        H0 = O0;\n        H1 = O1;\n        H2 = O2;\n        H3 = O3;\n        H4 = O4;\n        H5 = O5;\n        H6 = O6;\n        H7 = O7;\n        TOTAL = 64;\n    }\n\n    function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {\n        p0 = p0|0;\n        p1 = p1|0;\n        p2 = p2|0;\n        p3 = p3|0;\n        p4 = p4|0;\n        p5 = p5|0;\n        p6 = p6|0;\n        p7 = p7|0;\n        p8 = p8|0;\n        p9 = p9|0;\n        p10 = p10|0;\n        p11 = p11|0;\n        p12 = p12|0;\n        p13 = p13|0;\n        p14 = p14|0;\n        p15 = p15|0;\n\n        // opad\n        reset();\n        _core(\n            p0 ^ 0x5c5c5c5c,\n            p1 ^ 0x5c5c5c5c,\n            p2 ^ 0x5c5c5c5c,\n            p3 ^ 0x5c5c5c5c,\n            p4 ^ 0x5c5c5c5c,\n            p5 ^ 0x5c5c5c5c,\n            p6 ^ 0x5c5c5c5c,\n            p7 ^ 0x5c5c5c5c,\n            p8 ^ 0x5c5c5c5c,\n            p9 ^ 0x5c5c5c5c,\n            p10 ^ 0x5c5c5c5c,\n            p11 ^ 0x5c5c5c5c,\n            p12 ^ 0x5c5c5c5c,\n            p13 ^ 0x5c5c5c5c,\n            p14 ^ 0x5c5c5c5c,\n            p15 ^ 0x5c5c5c5c\n        );\n        O0 = H0;\n        O1 = H1;\n        O2 = H2;\n        O3 = H3;\n        O4 = H4;\n        O5 = H5;\n        O6 = H6;\n        O7 = H7;\n\n        // ipad\n        reset();\n        _core(\n            p0 ^ 0x36363636,\n            p1 ^ 0x36363636,\n            p2 ^ 0x36363636,\n            p3 ^ 0x36363636,\n            p4 ^ 0x36363636,\n            p5 ^ 0x36363636,\n            p6 ^ 0x36363636,\n            p7 ^ 0x36363636,\n            p8 ^ 0x36363636,\n            p9 ^ 0x36363636,\n            p10 ^ 0x36363636,\n            p11 ^ 0x36363636,\n            p12 ^ 0x36363636,\n            p13 ^ 0x36363636,\n            p14 ^ 0x36363636,\n            p15 ^ 0x36363636\n        );\n        I0 = H0;\n        I1 = H1;\n        I2 = H2;\n        I3 = H3;\n        I4 = H4;\n        I5 = H5;\n        I6 = H6;\n        I7 = H7;\n\n        TOTAL = 64;\n    }\n\n    // offset — multiple of 64\n    // output — multiple of 32\n    function hmac_finish ( offset, length, output ) {\n        offset = offset|0;\n        length = length|0;\n        output = output|0;\n\n        var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,\n            hashed = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        hashed = finish( offset, length, -1 )|0;\n        t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\n\n        _hmac_opad();\n        _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return hashed|0;\n    }\n\n    // salt is assumed to be already processed\n    // offset — multiple of 64\n    // output — multiple of 32\n    function pbkdf2_generate_block ( offset, length, block, count, output ) {\n        offset = offset|0;\n        length = length|0;\n        block = block|0;\n        count = count|0;\n        output = output|0;\n\n        var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0, h5 = 0, h6 = 0, h7 = 0,\n            t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0;\n\n        if ( offset & 63 )\n            return -1;\n\n        if ( ~output )\n            if ( output & 31 )\n                return -1;\n\n        // pad block number into heap\n        // FIXME probable OOB write\n        HEAP[(offset+length)|0]   = block>>>24;\n        HEAP[(offset+length+1)|0] = block>>>16&255;\n        HEAP[(offset+length+2)|0] = block>>>8&255;\n        HEAP[(offset+length+3)|0] = block&255;\n\n        // finish first iteration\n        hmac_finish( offset, (length+4)|0, -1 )|0;\n        h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4, h5 = t5 = H5, h6 = t6 = H6, h7 = t7 = H7;\n        count = (count-1)|0;\n\n        // perform the rest iterations\n        while ( (count|0) > 0 ) {\n            hmac_reset();\n            _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\n\n            _hmac_opad();\n            _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );\n            t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;\n\n            h0 = h0 ^ H0;\n            h1 = h1 ^ H1;\n            h2 = h2 ^ H2;\n            h3 = h3 ^ H3;\n            h4 = h4 ^ H4;\n            h5 = h5 ^ H5;\n            h6 = h6 ^ H6;\n            h7 = h7 ^ H7;\n\n            count = (count-1)|0;\n        }\n\n        H0 = h0;\n        H1 = h1;\n        H2 = h2;\n        H3 = h3;\n        H4 = h4;\n        H5 = h5;\n        H6 = h6;\n        H7 = h7;\n\n        if ( ~output )\n            _state_to_heap(output);\n\n        return 0;\n    }\n\n    return {\n        // SHA256\n        reset: reset,\n        init: init,\n        process: process,\n        finish: finish,\n\n        // HMAC-SHA256\n        hmac_reset: hmac_reset,\n        hmac_init: hmac_init,\n        hmac_finish: hmac_finish,\n\n        // PBKDF2-HMAC-SHA256\n        pbkdf2_generate_block: pbkdf2_generate_block\n    }\n}\n","var _sha256_block_size = 64,\n    _sha256_hash_size = 32;\n\nfunction sha256_constructor ( options ) {\n    options = options || {};\n\n    this.heap = _heap_init( Uint8Array, options );\n    this.asm = options.asm || sha256_asm( global, null, this.heap.buffer );\n\n    this.BLOCK_SIZE = _sha256_block_size;\n    this.HASH_SIZE = _sha256_hash_size;\n\n    this.reset();\n}\n\nsha256_constructor.BLOCK_SIZE = _sha256_block_size;\nsha256_constructor.HASH_SIZE = _sha256_hash_size;\nvar sha256_prototype = sha256_constructor.prototype;\nsha256_prototype.reset =   hash_reset;\nsha256_prototype.process = hash_process;\nsha256_prototype.finish =  hash_finish;\n\nvar sha256_instance = null;\n\nfunction get_sha256_instance () {\n    if ( sha256_instance === null ) sha256_instance = new sha256_constructor( { heapSize: 0x100000 } );\n    return sha256_instance;\n}\n","/**\n * SHA256 exports\n */\n\nfunction sha256_bytes ( data ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    return get_sha256_instance().reset().process(data).finish().result;\n}\n\nfunction sha256_hex ( data ) {\n    var result = sha256_bytes(data);\n    return bytes_to_hex(result);\n}\n\nfunction sha256_base64 ( data ) {\n    var result = sha256_bytes(data);\n    return bytes_to_base64(result);\n}\n\nsha256_constructor.bytes = sha256_bytes;\nsha256_constructor.hex = sha256_hex;\nsha256_constructor.base64 = sha256_base64;\n\nexports.SHA256 = sha256_constructor;\n","function hmac_constructor ( options ) {\n    options = options || {};\n\n    if ( !options.hash )\n        throw new SyntaxError(\"option 'hash' is required\");\n\n    if ( !options.hash.HASH_SIZE )\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\n\n    this.hash = options.hash;\n    this.BLOCK_SIZE = this.hash.BLOCK_SIZE;\n    this.HMAC_SIZE = this.hash.HASH_SIZE;\n\n    this.key = null;\n    this.verify = null;\n    this.result = null;\n\n    if ( options.password !== undefined || options.verify !== undefined )\n        this.reset(options);\n\n    return this;\n}\n\nfunction _hmac_key ( hash, password ) {\n    if ( is_buffer(password) )\n        password = new Uint8Array(password);\n\n    if ( is_string(password) )\n        password = string_to_bytes(password);\n\n    if ( !is_bytes(password) )\n        throw new TypeError(\"password isn't of expected type\");\n\n    var key = new Uint8Array( hash.BLOCK_SIZE );\n\n    if ( password.length > hash.BLOCK_SIZE ) {\n        key.set( hash.reset().process(password).finish().result );\n    }\n    else {\n        key.set(password);\n    }\n\n    return key;\n}\n\nfunction _hmac_init_verify ( verify ) {\n    if ( is_buffer(verify) || is_bytes(verify) ) {\n        verify = new Uint8Array(verify);\n    }\n    else if ( is_string(verify) ) {\n        verify = string_to_bytes(verify);\n    }\n    else {\n        throw new TypeError(\"verify tag isn't of expected type\");\n    }\n\n    if ( verify.length !== this.HMAC_SIZE )\n        throw new IllegalArgumentError(\"illegal verification tag size\");\n\n    this.verify = verify;\n}\n\nfunction hmac_reset ( options ) {\n    options = options || {};\n    var password = options.password;\n\n    if ( this.key === null && !is_string(password) && !password )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    this.result = null;\n    this.hash.reset();\n\n    if ( password || is_string(password) )\n        this.key = _hmac_key( this.hash, password );\n\n    var ipad = new Uint8Array(this.key);\n    for ( var i = 0; i < ipad.length; ++i )\n        ipad[i] ^= 0x36;\n\n    this.hash.process(ipad);\n\n    var verify = options.verify;\n    if ( verify !== undefined ) {\n        _hmac_init_verify.call( this, verify );\n    }\n    else {\n        this.verify = null;\n    }\n\n    return this;\n}\n\nfunction hmac_process ( data ) {\n    if ( this.key === null )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    this.hash.process(data);\n\n    return this;\n}\n\nfunction hmac_finish () {\n    if ( this.key === null )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    var inner_result = this.hash.finish().result;\n\n    var opad = new Uint8Array(this.key);\n    for ( var i = 0; i < opad.length; ++i )\n        opad[i] ^= 0x5c;\n\n    var verify = this.verify;\n    var result = this.hash.reset().process(opad).process(inner_result).finish().result;\n\n    if ( verify ) {\n        if ( verify.length === result.length ) {\n            var diff = 0;\n            for ( var i = 0; i < verify.length; i++ ) {\n                diff |= ( verify[i] ^ result[i] );\n            }\n            this.result = !diff;\n        } else {\n            this.result = false;\n        }\n    }\n    else {\n        this.result = result;\n    }\n\n    return this;\n}\n\nvar hmac_prototype = hmac_constructor.prototype;\nhmac_prototype.reset =   hmac_reset;\nhmac_prototype.process = hmac_process;\nhmac_prototype.finish =  hmac_finish;\n","function hmac_sha1_constructor ( options ) {\n    options = options || {};\n\n    if ( !( options.hash instanceof sha1_constructor ) )\n        options.hash = get_sha1_instance();\n\n    hmac_constructor.call( this, options );\n\n    return this;\n}\n\nfunction hmac_sha1_reset ( options ) {\n    options = options || {};\n\n    this.result = null;\n    this.hash.reset();\n\n    var password = options.password;\n    if ( password !== undefined ) {\n        if ( is_string(password) )\n            password = string_to_bytes(password);\n\n        var key = this.key = _hmac_key( this.hash, password );\n        this.hash.reset().asm.hmac_init(\n                (key[0]<<24)|(key[1]<<16)|(key[2]<<8)|(key[3]),\n                (key[4]<<24)|(key[5]<<16)|(key[6]<<8)|(key[7]),\n                (key[8]<<24)|(key[9]<<16)|(key[10]<<8)|(key[11]),\n                (key[12]<<24)|(key[13]<<16)|(key[14]<<8)|(key[15]),\n                (key[16]<<24)|(key[17]<<16)|(key[18]<<8)|(key[19]),\n                (key[20]<<24)|(key[21]<<16)|(key[22]<<8)|(key[23]),\n                (key[24]<<24)|(key[25]<<16)|(key[26]<<8)|(key[27]),\n                (key[28]<<24)|(key[29]<<16)|(key[30]<<8)|(key[31]),\n                (key[32]<<24)|(key[33]<<16)|(key[34]<<8)|(key[35]),\n                (key[36]<<24)|(key[37]<<16)|(key[38]<<8)|(key[39]),\n                (key[40]<<24)|(key[41]<<16)|(key[42]<<8)|(key[43]),\n                (key[44]<<24)|(key[45]<<16)|(key[46]<<8)|(key[47]),\n                (key[48]<<24)|(key[49]<<16)|(key[50]<<8)|(key[51]),\n                (key[52]<<24)|(key[53]<<16)|(key[54]<<8)|(key[55]),\n                (key[56]<<24)|(key[57]<<16)|(key[58]<<8)|(key[59]),\n                (key[60]<<24)|(key[61]<<16)|(key[62]<<8)|(key[63])\n        );\n    }\n    else {\n        this.hash.asm.hmac_reset();\n    }\n\n    var verify = options.verify;\n    if ( verify !== undefined ) {\n        _hmac_init_verify.call( this, verify );\n    }\n    else {\n        this.verify = null;\n    }\n\n    return this;\n}\n\nfunction hmac_sha1_finish () {\n    if ( this.key === null )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    var hash = this.hash,\n        asm = this.hash.asm,\n        heap = this.hash.heap;\n\n    asm.hmac_finish( hash.pos, hash.len, 0 );\n\n    var verify = this.verify;\n    var result = new Uint8Array(_sha1_hash_size);\n    result.set( heap.subarray( 0, _sha1_hash_size ) );\n\n    if ( verify ) {\n        if ( verify.length === result.length ) {\n            var diff = 0;\n            for ( var i = 0; i < verify.length; i++ ) {\n                diff |= ( verify[i] ^ result[i] );\n            }\n            this.result = !diff;\n        } else {\n            this.result = false;\n        }\n    }\n    else {\n        this.result = result;\n    }\n\n    return this;\n}\n\nhmac_sha1_constructor.BLOCK_SIZE = sha1_constructor.BLOCK_SIZE;\nhmac_sha1_constructor.HMAC_SIZE = sha1_constructor.HASH_SIZE;\n\nvar hmac_sha1_prototype = hmac_sha1_constructor.prototype;\nhmac_sha1_prototype.reset = hmac_sha1_reset;\nhmac_sha1_prototype.process = hmac_process;\nhmac_sha1_prototype.finish = hmac_sha1_finish;\n\nvar hmac_sha1_instance = null;\n\nfunction get_hmac_sha1_instance () {\n    if ( hmac_sha1_instance === null ) hmac_sha1_instance = new hmac_sha1_constructor();\n    return hmac_sha1_instance;\n}\n","function hmac_sha256_constructor ( options ) {\n    options = options || {};\n\n    if ( !( options.hash instanceof sha256_constructor ) )\n        options.hash = get_sha256_instance();\n\n    hmac_constructor.call( this, options );\n\n    return this;\n}\n\nfunction hmac_sha256_reset ( options ) {\n    options = options || {};\n\n    this.result = null;\n    this.hash.reset();\n\n    var password = options.password;\n    if ( password !== undefined ) {\n        if ( is_string(password) )\n            password = string_to_bytes(password);\n\n        var key = this.key = _hmac_key( this.hash, password );\n        this.hash.reset().asm.hmac_init(\n            (key[0]<<24)|(key[1]<<16)|(key[2]<<8)|(key[3]),\n            (key[4]<<24)|(key[5]<<16)|(key[6]<<8)|(key[7]),\n            (key[8]<<24)|(key[9]<<16)|(key[10]<<8)|(key[11]),\n            (key[12]<<24)|(key[13]<<16)|(key[14]<<8)|(key[15]),\n            (key[16]<<24)|(key[17]<<16)|(key[18]<<8)|(key[19]),\n            (key[20]<<24)|(key[21]<<16)|(key[22]<<8)|(key[23]),\n            (key[24]<<24)|(key[25]<<16)|(key[26]<<8)|(key[27]),\n            (key[28]<<24)|(key[29]<<16)|(key[30]<<8)|(key[31]),\n            (key[32]<<24)|(key[33]<<16)|(key[34]<<8)|(key[35]),\n            (key[36]<<24)|(key[37]<<16)|(key[38]<<8)|(key[39]),\n            (key[40]<<24)|(key[41]<<16)|(key[42]<<8)|(key[43]),\n            (key[44]<<24)|(key[45]<<16)|(key[46]<<8)|(key[47]),\n            (key[48]<<24)|(key[49]<<16)|(key[50]<<8)|(key[51]),\n            (key[52]<<24)|(key[53]<<16)|(key[54]<<8)|(key[55]),\n            (key[56]<<24)|(key[57]<<16)|(key[58]<<8)|(key[59]),\n            (key[60]<<24)|(key[61]<<16)|(key[62]<<8)|(key[63])\n        );\n    }\n    else {\n        this.hash.asm.hmac_reset();\n    }\n\n    var verify = options.verify;\n    if ( verify !== undefined ) {\n        _hmac_init_verify.call( this, verify );\n    }\n    else {\n        this.verify = null;\n    }\n\n    return this;\n}\n\nfunction hmac_sha256_finish () {\n    if ( this.key === null )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    var hash = this.hash,\n        asm = this.hash.asm,\n        heap = this.hash.heap;\n\n    asm.hmac_finish( hash.pos, hash.len, 0 );\n\n    var verify = this.verify;\n    var result = new Uint8Array(_sha256_hash_size);\n    result.set( heap.subarray( 0, _sha256_hash_size ) );\n\n    if ( verify ) {\n        if ( verify.length === result.length ) {\n            var diff = 0;\n            for ( var i = 0; i < verify.length; i++ ) {\n                diff |= ( verify[i] ^ result[i] );\n            }\n            this.result = !diff;\n        } else {\n            this.result = false;\n        }\n    }\n    else {\n        this.result = result;\n    }\n\n    return this;\n}\n\nhmac_sha256_constructor.BLOCK_SIZE = sha256_constructor.BLOCK_SIZE;\nhmac_sha256_constructor.HMAC_SIZE = sha256_constructor.HASH_SIZE;\n\nvar hmac_sha256_prototype = hmac_sha256_constructor.prototype;\nhmac_sha256_prototype.reset = hmac_sha256_reset;\nhmac_sha256_prototype.process = hmac_process;\nhmac_sha256_prototype.finish = hmac_sha256_finish;\n\nvar hmac_sha256_instance = null;\n\nfunction get_hmac_sha256_instance () {\n    if ( hmac_sha256_instance === null ) hmac_sha256_instance = new hmac_sha256_constructor();\n    return hmac_sha256_instance;\n}\n","/**\n * HMAC-SHA1 exports\n */\n\nfunction hmac_sha1_bytes ( data, password ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\n    return get_hmac_sha1_instance().reset( { password: password } ).process(data).finish().result;\n}\n\nfunction hmac_sha1_hex ( data, password ) {\n    var result = hmac_sha1_bytes( data, password );\n    return bytes_to_hex(result);\n}\n\nfunction hmac_sha1_base64 ( data, password ) {\n    var result = hmac_sha1_bytes( data, password );\n    return bytes_to_base64(result);\n}\n\nexports.HMAC = hmac_constructor;\n\nhmac_sha1_constructor.bytes = hmac_sha1_bytes;\nhmac_sha1_constructor.hex = hmac_sha1_hex;\nhmac_sha1_constructor.base64 = hmac_sha1_base64;\n\nexports.HMAC_SHA1 = hmac_sha1_constructor;\n","/**\n * HMAC-SHA256 exports\n */\n\nfunction hmac_sha256_bytes ( data, password ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\n    return get_hmac_sha256_instance().reset( { password: password } ).process(data).finish().result;\n}\n\nfunction hmac_sha256_hex ( data, password ) {\n    var result = hmac_sha256_bytes( data, password );\n    return bytes_to_hex(result);\n}\n\nfunction hmac_sha256_base64 ( data, password ) {\n    var result = hmac_sha256_bytes( data, password );\n    return bytes_to_base64(result);\n}\n\nhmac_sha256_constructor.bytes = hmac_sha256_bytes;\nhmac_sha256_constructor.hex = hmac_sha256_hex;\nhmac_sha256_constructor.base64 = hmac_sha256_base64;\n\nexports.HMAC_SHA256 = hmac_sha256_constructor;\n","function pbkdf2_constructor ( options ) {\n    options = options || {};\n\n    if ( !options.hmac )\n        throw new SyntaxError(\"option 'hmac' is required\");\n\n    if ( !options.hmac.HMAC_SIZE )\n        throw new SyntaxError(\"option 'hmac' supplied doesn't seem to be a valid HMAC function\");\n\n    this.hmac = options.hmac;\n    this.count = options.count || 4096;\n    this.length = options.length || this.hmac.HMAC_SIZE;\n\n    this.result = null;\n\n    var password = options.password;\n    if ( password || is_string(password) )\n        this.reset(options);\n\n    return this;\n}\n\nfunction pbkdf2_reset ( options ) {\n    this.result = null;\n\n    this.hmac.reset(options);\n\n    return this;\n}\n\nfunction pbkdf2_generate ( salt, count, length ) {\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    if ( !salt && !is_string(salt) )\n        throw new IllegalArgumentError(\"bad 'salt' value\");\n\n    count = count || this.count;\n    length = length || this.length;\n\n    this.result = new Uint8Array(length);\n\n    var blocks = Math.ceil( length / this.hmac.HMAC_SIZE );\n\n    for ( var i = 1; i <= blocks; ++i ) {\n        var j = ( i - 1 ) * this.hmac.HMAC_SIZE;\n        var l = ( i < blocks ? 0 : length % this.hmac.HMAC_SIZE ) || this.hmac.HMAC_SIZE;\n        var tmp = new Uint8Array( this.hmac.reset().process(salt).process( new Uint8Array([ i>>>24&0xff, i>>>16&0xff, i>>>8&0xff, i&0xff ]) ).finish().result );\n        this.result.set( tmp.subarray( 0, l ), j );\n        for ( var k = 1; k < count; ++k ) {\n            tmp = new Uint8Array( this.hmac.reset().process(tmp).finish().result );\n            for ( var r = 0; r < l; ++r ) this.result[j+r] ^= tmp[r];\n        }\n    }\n\n    return this;\n}\n\n// methods\nvar pbkdf2_prototype = pbkdf2_constructor.prototype;\npbkdf2_prototype.reset =   pbkdf2_reset;\npbkdf2_prototype.generate = pbkdf2_generate;\n","function pbkdf2_hmac_sha1_constructor ( options ) {\n    options = options || {};\n\n    if ( !( options.hmac instanceof hmac_sha1_constructor ) )\n        options.hmac = get_hmac_sha1_instance();\n\n    pbkdf2_constructor.call( this, options );\n\n    return this;\n}\n\nfunction pbkdf2_hmac_sha1_generate ( salt, count, length ) {\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    if ( !salt && !is_string(salt) )\n        throw new IllegalArgumentError(\"bad 'salt' value\");\n\n    count = count || this.count;\n    length = length || this.length;\n\n    this.result = new Uint8Array(length);\n\n    var blocks = Math.ceil( length / this.hmac.HMAC_SIZE );\n\n    for ( var i = 1; i <= blocks; ++i ) {\n        var j = ( i - 1 ) * this.hmac.HMAC_SIZE;\n        var l = ( i < blocks ? 0 : length % this.hmac.HMAC_SIZE ) || this.hmac.HMAC_SIZE;\n\n        this.hmac.reset().process(salt);\n        this.hmac.hash.asm.pbkdf2_generate_block( this.hmac.hash.pos, this.hmac.hash.len, i, count, 0 );\n\n        this.result.set( this.hmac.hash.heap.subarray( 0, l ), j );\n    }\n\n    return this;\n}\n\nvar pbkdf2_hmac_sha1_prototype = pbkdf2_hmac_sha1_constructor.prototype;\npbkdf2_hmac_sha1_prototype.reset =   pbkdf2_reset;\npbkdf2_hmac_sha1_prototype.generate = pbkdf2_hmac_sha1_generate;\n\nvar pbkdf2_hmac_sha1_instance = null;\n\nfunction get_pbkdf2_hmac_sha1_instance () {\n    if ( pbkdf2_hmac_sha1_instance === null ) pbkdf2_hmac_sha1_instance = new pbkdf2_hmac_sha1_constructor();\n    return pbkdf2_hmac_sha1_instance;\n}\n","function pbkdf2_hmac_sha256_constructor ( options ) {\n    options = options || {};\n\n    if ( !( options.hmac instanceof hmac_sha256_constructor ) )\n        options.hmac = get_hmac_sha256_instance();\n\n    pbkdf2_constructor.call( this, options );\n\n    return this;\n}\n\nfunction pbkdf2_hmac_sha256_generate ( salt, count, length ) {\n    if ( this.result !== null )\n        throw new IllegalStateError(\"state must be reset before processing new data\");\n\n    if ( !salt && !is_string(salt) )\n        throw new IllegalArgumentError(\"bad 'salt' value\");\n\n    count = count || this.count;\n    length = length || this.length;\n\n    this.result = new Uint8Array(length);\n\n    var blocks = Math.ceil( length / this.hmac.HMAC_SIZE );\n\n    for ( var i = 1; i <= blocks; ++i ) {\n        var j = ( i - 1 ) * this.hmac.HMAC_SIZE;\n        var l = ( i < blocks ? 0 : length % this.hmac.HMAC_SIZE ) || this.hmac.HMAC_SIZE;\n\n        this.hmac.reset().process(salt);\n        this.hmac.hash.asm.pbkdf2_generate_block( this.hmac.hash.pos, this.hmac.hash.len, i, count, 0 );\n\n        this.result.set( this.hmac.hash.heap.subarray( 0, l ), j );\n    }\n\n    return this;\n}\n\nvar pbkdf2_hmac_sha256_prototype = pbkdf2_hmac_sha256_constructor.prototype;\npbkdf2_hmac_sha256_prototype.reset =   pbkdf2_reset;\npbkdf2_hmac_sha256_prototype.generate = pbkdf2_hmac_sha256_generate;\n\nvar pbkdf2_hmac_sha256_instance = null;\n\nfunction get_pbkdf2_hmac_sha256_instance () {\n    if ( pbkdf2_hmac_sha256_instance === null ) pbkdf2_hmac_sha256_instance = new pbkdf2_hmac_sha256_constructor();\n    return pbkdf2_hmac_sha256_instance;\n}\n","/**\n * PBKDF2-HMAC-SHA1 exports\n */\n\nfunction pbkdf2_hmac_sha1_bytes ( password, salt, iterations, dklen ) {\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\n    if ( salt === undefined ) throw new SyntaxError(\"salt required\");\n    return get_pbkdf2_hmac_sha1_instance().reset( { password: password } ).generate( salt, iterations, dklen ).result;\n}\n\nfunction pbkdf2_hmac_sha1_hex ( password, salt, iterations, dklen ) {\n    var result = pbkdf2_hmac_sha1_bytes( password, salt, iterations, dklen );\n    return bytes_to_hex(result);\n}\n\nfunction pbkdf2_hmac_sha1_base64 ( password, salt, iterations, dklen ) {\n    var result = pbkdf2_hmac_sha1_bytes( password, salt, iterations, dklen );\n    return bytes_to_base64(result);\n}\n\nexports.PBKDF2 =\nexports.PBKDF2_HMAC_SHA1 = {\n    bytes: pbkdf2_hmac_sha1_bytes,\n    hex: pbkdf2_hmac_sha1_hex,\n    base64: pbkdf2_hmac_sha1_base64\n};\n","/**\n * PBKDF2-HMAC-SHA256 exports\n */\n\nfunction pbkdf2_hmac_sha256_bytes ( password, salt, iterations, dklen ) {\n    if ( password === undefined ) throw new SyntaxError(\"password required\");\n    if ( salt === undefined ) throw new SyntaxError(\"salt required\");\n    return get_pbkdf2_hmac_sha256_instance().reset( { password: password } ).generate( salt, iterations, dklen ).result;\n}\n\nfunction pbkdf2_hmac_sha256_hex ( password, salt, iterations, dklen ) {\n    var result = pbkdf2_hmac_sha256_bytes( password, salt, iterations, dklen );\n    return bytes_to_hex(result);\n}\n\nfunction pbkdf2_hmac_sha256_base64 ( password, salt, iterations, dklen ) {\n    var result = pbkdf2_hmac_sha256_bytes( password, salt, iterations, dklen );\n    return bytes_to_base64(result);\n}\n\nexports.PBKDF2_HMAC_SHA256 = {\n    bytes: pbkdf2_hmac_sha256_bytes,\n    hex: pbkdf2_hmac_sha256_hex,\n    base64: pbkdf2_hmac_sha256_base64\n};\n","var _global_console = global.console,\n    _global_date_now = global.Date.now,\n    _global_math_random = global.Math.random,\n    _global_performance = global.performance,\n    _global_crypto = global.crypto || global.msCrypto,\n    _global_crypto_getRandomValues;\n\nif ( _global_crypto !== undefined )\n    _global_crypto_getRandomValues = _global_crypto.getRandomValues;\n\nvar _isaac_rand = ISAAC.rand,\n    _isaac_seed = ISAAC.seed,\n    _isaac_counter = 0,\n    _isaac_weak_seeded = false,\n    _isaac_seeded = false;\n\nvar _random_estimated_entropy = 0,\n    _random_required_entropy = 256,\n    _random_allow_weak = false,\n    _random_skip_system_rng_warning = false,\n    _random_warn_callstacks = {};\n\nvar _hires_now;\nif ( _global_performance !== undefined ) {\n    _hires_now = function () { return 1000 * _global_performance.now() | 0 };\n}\nelse {\n    var _hires_epoch = 1000 * _global_date_now() | 0;\n    _hires_now = function () { return 1000 * _global_date_now() - _hires_epoch | 0 };\n}\n\n/**\n * weak_seed\n *\n * Seeds RNG with native `crypto.getRandomValues` output or with high-resolution\n * time and single `Math.random()` value, and various other sources.\n *\n * We estimate this may give at least ~50 bits of unpredictableness,\n * but this has not been analysed thoroughly or precisely.\n */\nfunction Random_weak_seed () {\n    if ( _global_crypto !== undefined ) {\n        buffer = new Uint8Array(32);\n        _global_crypto_getRandomValues.call( _global_crypto, buffer );\n\n        _isaac_seed(buffer);\n    }\n    else {\n        // Some clarification about brute-force attack cost:\n        // - entire bitcoin network operates at ~10^16 hash guesses per second;\n        // - each PBKDF2 iteration requires the same number of hashing operations as bitcoin nonce guess;\n        // - attacker having such a hashing power is able to break worst-case 50 bits of the randomness in ~3 hours;\n        // Sounds sad though attacker having such a hashing power more likely would prefer to mine bitcoins.\n        var buffer = new FloatArray(3),\n            i, t;\n\n        buffer[0] = _global_math_random();\n        buffer[1] = _global_date_now();\n        buffer[2] = _hires_now();\n\n        buffer = new Uint8Array(buffer.buffer);\n\n        var pbkdf2 = get_pbkdf2_hmac_sha256_instance();\n        for ( i = 0; i < 100; i++ ) {\n            buffer = pbkdf2.reset( { password: buffer } ).generate( global.location.href, 1000, 32 ).result;\n            t = _hires_now();\n            buffer[0] ^= t >>> 24, buffer[1] ^= t >>> 16, buffer[2] ^= t >>> 8, buffer[3] ^= t;\n        }\n\n        _isaac_seed(buffer);\n    }\n\n    _isaac_counter = 0;\n\n    _isaac_weak_seeded = true;\n}\n\n/**\n * seed\n *\n * Seeds PRNG with supplied random values if these values have enough entropy.\n *\n * A false return value means the RNG is currently insecure; however a true\n * return value does not mean it is necessarily secure (depending on how you\n * collected the seed) though asmCrypto will be forced to assume this.\n *\n * The input buffer will be zeroed to discourage reuse. You should not copy it\n * or use it anywhere else before passing it into this function.\n *\n * **DISCLAIMER!** Seeding with a poor values is an easiest way shoot your legs, so\n * do not seed until you're know what entropy is and how to obtail high-quality random values,\n * **DO NOT SEED WITH CONSTANT VALUE! YOU'LL GET NO RANDOMNESS FROM CONSTANT!**\n */\nfunction Random_seed ( seed ) {\n    if ( !is_buffer(seed) && !is_typed_array(seed) )\n        throw new TypeError(\"bad seed type\");\n\n    var bpos = seed.byteOffest || 0,\n        blen = seed.byteLength || seed.length,\n        buff = new Uint8Array( ( seed.buffer || seed ), bpos, blen );\n\n    _isaac_seed(buff);\n\n    _isaac_counter = 0;\n\n    // don't let the user use these bytes again\n    var nonzero = 0;\n    for ( var i = 0; i < buff.length; i++ ) {\n        nonzero |= buff[i];\n        buff[i] = 0;\n    }\n\n    if ( nonzero !== 0 ) {\n        // TODO we could make a better estimate, but half-length is a prudent\n        // simple measure that seems unlikely to over-estimate\n        _random_estimated_entropy += 4 * blen;\n    }\n\n    _isaac_seeded = ( _random_estimated_entropy  >= _random_required_entropy );\n\n    return _isaac_seeded;\n}\n\n/**\n * getValues\n *\n * Populates the buffer with cryptographically secure random values. These are\n * calculated using `crypto.getRandomValues` if it is available, as well as our\n * own ISAAC PRNG implementation.\n *\n * If the former is not available (older browsers such as IE10 [1]), then the\n * latter *must* be seeded using `Random.seed`, unless `asmCrypto.random.allowWeak` is true.\n *\n * *We assume the system RNG is strong*; if you cannot afford this risk, then\n * you should also seed ISAAC using `Random.seed`. This is advisable for very\n * important situations, such as generation of long-term secrets. See also [2].\n *\n * [1] https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n * [2] https://en.wikipedia.org/wiki/Dual_EC_DRBG\n *\n * In all cases, we opportunistically seed using various arbitrary sources\n * such as high-resolution time and one single value from the insecure\n * Math.random(); however this is not reliable as a strong security measure.\n */\nfunction Random_getValues ( buffer ) {\n    // opportunistically seed ISAAC with a weak seed; this hopefully makes an\n    // attack harder in the case where the system RNG is weak *and* we haven't\n    // seeded ISAAC. but don't make any guarantees to the user about this.\n    if ( !_isaac_weak_seeded )\n        Random_weak_seed();\n\n    // if we have no strong sources then the RNG is weak, handle it\n    if ( !_isaac_seeded && _global_crypto === undefined ) {\n        if ( !_random_allow_weak )\n            throw new SecurityError(\"No strong PRNGs available. Use asmCrypto.random.seed().\");\n\n        if ( _global_console !== undefined )\n            _global_console.error(\"No strong PRNGs available; your security is greatly lowered. Use asmCrypto.random.seed().\");\n    }\n\n    // separate warning about assuming system RNG strong\n    if ( !_random_skip_system_rng_warning && !_isaac_seeded && _global_crypto !== undefined && _global_console !== undefined ) {\n        // Hacky way to get call stack\n        var s = new Error().stack;\n        _random_warn_callstacks[s] |= 0;\n        if ( !_random_warn_callstacks[s]++ )\n            _global_console.warn(\"asmCrypto PRNG not seeded; your security relies on your system PRNG. If this is not acceptable, use asmCrypto.random.seed().\");\n    }\n\n    // proceed to get random values\n    if ( !is_buffer(buffer) && !is_typed_array(buffer) )\n        throw new TypeError(\"unexpected buffer type\");\n\n    var bpos = buffer.byteOffset || 0,\n        blen = buffer.byteLength || buffer.length,\n        bytes = new Uint8Array( ( buffer.buffer || buffer ), bpos, blen ),\n        i, r;\n\n    // apply system rng\n    if ( _global_crypto !== undefined )\n        _global_crypto_getRandomValues.call( _global_crypto, bytes );\n\n    // apply isaac rng\n    for ( i = 0; i < blen; i++ ) {\n        if ( (i & 3) === 0 ) {\n            if ( _isaac_counter >= 0x10000000000 ) Random_weak_seed();\n            r = _isaac_rand();\n            _isaac_counter++;\n        }\n        bytes[i] ^= r;\n        r >>>= 8;\n    }\n\n    return buffer;\n}\n\n/**\n * getNumber\n *\n * A drop-in `Math.random` replacement.\n * Intended for prevention of random material leakage out of the user's host.\n */\nfunction Random_getNumber () {\n    if ( !_isaac_weak_seeded || _isaac_counter >= 0x10000000000 )\n        Random_weak_seed();\n\n    var n = ( 0x100000 * _isaac_rand() + ( _isaac_rand() >>> 12 ) ) / 0x10000000000000;\n    _isaac_counter += 2;\n\n    return n;\n}\n","var bigint_asm;\n\nif ( global.Math.imul === undefined ) {\n    function _half_imul ( a, b ) {\n        return a * b | 0;\n    }\n    bigint_asm = function ( stdlib, foreign, buffer ) {\n        global.Math.imul = _half_imul;\n        var m = _bigint_asm( stdlib, foreign, buffer );\n        delete global.Math.imul;\n        return m;\n    };\n}\nelse {\n    bigint_asm = _bigint_asm;\n}\n\n/**\n * Integers are represented as little endian array of 32-bit limbs.\n * Limbs number is a power of 2 and a multiple of 8 (256 bits).\n * Negative values use two's complement representation.\n */\nfunction _bigint_asm ( stdlib, foreign, buffer ) {\n    \"use asm\";\n\n    var SP = 0;\n\n    var HEAP32 = new stdlib.Uint32Array(buffer);\n\n    var imul = stdlib.Math.imul;\n\n    /**\n     * Simple stack memory allocator\n     *\n     * Methods:\n     *  sreset\n     *  salloc\n     *  sfree\n     */\n\n    function sreset ( p ) {\n        p = p|0;\n        SP = p = (p + 31) & -32;\n        return p|0;\n    }\n\n    function salloc ( l ) {\n        l = l|0;\n        var p = 0; p = SP;\n        SP = p + ((l + 31) & -32)|0;\n        return p|0;\n    }\n\n    function sfree ( l ) {\n        l = l|0;\n        SP = SP - ((l + 31) & -32)|0;\n    }\n\n    /**\n     * Utility functions:\n     *  cp\n     *  z\n     */\n\n    function cp ( l, A, B ) {\n        l = l|0;\n        A = A|0;\n        B = B|0;\n\n        var i = 0;\n\n        if ( (A|0) > (B|0) ) {\n            for ( ; (i|0) < (l|0); i = (i+4)|0 ) {\n                HEAP32[(B+i)>>2] = HEAP32[(A+i)>>2];\n            }\n        }\n        else {\n            for ( i = (l-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\n                HEAP32[(B+i)>>2] = HEAP32[(A+i)>>2];\n            }\n        }\n    }\n\n    function z ( l, z, A ) {\n        l = l|0;\n        z = z|0;\n        A = A|0;\n\n        var i = 0;\n\n        for ( ; (i|0) < (l|0); i = (i+4)|0 ) {\n            HEAP32[(A+i)>>2] = z;\n        }\n    }\n\n    /**\n     * Negate the argument\n     *\n     * Perform two's complement transformation:\n     *\n     *  -A = ~A + 1\n     *\n     * @param A offset of the argment being negated, 32-byte aligned\n     * @param lA length of the argument, multiple of 32\n     *\n     * @param R offset where to place the result to, 32-byte aligned\n     * @param lR length to truncate the result to, multiple of 32\n     */\n    function neg ( A, lA, R, lR ) {\n        A  =  A|0;\n        lA = lA|0;\n        R  =  R|0;\n        lR = lR|0;\n\n        var a = 0, c = 0, t = 0, r = 0, i = 0;\n\n        if ( (lR|0) <= 0 )\n            lR = lA;\n\n        if ( (lR|0) < (lA|0) )\n            lA = lR;\n\n        c = 1;\n        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\n            a = ~HEAP32[(A+i)>>2];\n            t = (a & 0xffff) + c|0;\n            r = (a >>> 16) + (t >>> 16)|0;\n            HEAP32[(R+i)>>2] = (r << 16) | (t & 0xffff);\n            c = r >>> 16;\n        }\n\n        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {\n            HEAP32[(R+i)>>2] = (c-1)|0;\n        }\n\n        return c|0;\n    }\n\n    function cmp ( A, lA, B, lB ) {\n        A  =  A|0;\n        lA = lA|0;\n        B  =  B|0;\n        lB = lB|0;\n\n        var a = 0, b = 0, i = 0;\n\n        if ( (lA|0) > (lB|0) ) {\n            for ( i = (lA-4)|0; (i|0) >= (lB|0); i = (i-4)|0 ) {\n                if ( HEAP32[(A+i)>>2]|0 ) return 1;\n            }\n        }\n        else {\n            for ( i = (lB-4)|0; (i|0) >= (lA|0); i = (i-4)|0 ) {\n                if ( HEAP32[(B+i)>>2]|0 ) return -1;\n            }\n        }\n\n        for ( ; (i|0) >= 0; i = (i-4)|0 ) {\n            a = HEAP32[(A+i)>>2]|0, b = HEAP32[(B+i)>>2]|0;\n            if ( (a>>>0) < (b>>>0) ) return -1;\n            if ( (a>>>0) > (b>>>0) ) return 1;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Test the argument\n     *\n     * Same as `cmp` with zero.\n     */\n    function tst ( A, lA ) {\n        A  =  A|0;\n        lA = lA|0;\n\n        var i = 0;\n\n        for ( i = (lA-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\n            if ( HEAP32[(A+i)>>2]|0 ) return (i+4)|0;\n        }\n\n        return 0;\n    }\n\n    /**\n     * Conventional addition\n     *\n     * @param A offset of the first argument, 32-byte aligned\n     * @param lA length of the first argument, multiple of 32\n     *\n     * @param B offset of the second argument, 32-bit aligned\n     * @param lB length of the second argument, multiple of 32\n     *\n     * @param R offset where to place the result to, 32-byte aligned\n     * @param lR length to truncate the result to, multiple of 32\n     */\n    function add ( A, lA, B, lB, R, lR ) {\n        A  =  A|0;\n        lA = lA|0;\n        B  =  B|0;\n        lB = lB|0;\n        R  =  R|0;\n        lR = lR|0;\n\n        var a = 0, b = 0, c = 0, t = 0, r = 0, i = 0;\n\n        if ( (lA|0) < (lB|0) ) {\n            t = A, A = B, B = t;\n            t = lA, lA = lB, lB = t;\n        }\n\n        if ( (lR|0) <= 0 )\n            lR = lA+4|0;\n\n        if ( (lR|0) < (lB|0) )\n            lA = lB = lR;\n\n        for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {\n            a = HEAP32[(A+i)>>2]|0;\n            b = HEAP32[(B+i)>>2]|0;\n            t = ( (a & 0xffff) + (b & 0xffff)|0 ) + c|0;\n            r = ( (a >>> 16) + (b >>> 16)|0 ) + (t >>> 16)|0;\n            HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n            c = r >>> 16;\n        }\n\n        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\n            a = HEAP32[(A+i)>>2]|0;\n            t = (a & 0xffff) + c|0;\n            r = (a >>> 16) + (t >>> 16)|0;\n            HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n            c = r >>> 16;\n        }\n\n        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {\n            HEAP32[(R+i)>>2] = c|0;\n            c = 0;\n        }\n\n        return c|0;\n    }\n\n   /**\n     * Conventional subtraction\n     *\n     * @param A offset of the first argument, 32-byte aligned\n     * @param lA length of the first argument, multiple of 32\n     *\n     * @param B offset of the second argument, 32-bit aligned\n     * @param lB length of the second argument, multiple of 32\n     *\n     * @param R offset where to place the result to, 32-byte aligned\n     * @param lR length to truncate the result to, multiple of 32\n     */\n    function sub ( A, lA, B, lB, R, lR ) {\n        A  =  A|0;\n        lA = lA|0;\n        B  =  B|0;\n        lB = lB|0;\n        R  =  R|0;\n        lR = lR|0;\n\n        var a = 0, b = 0, c = 0, t = 0, r = 0, i = 0;\n\n        if ( (lR|0) <= 0 )\n            lR = (lA|0) > (lB|0) ? lA+4|0 : lB+4|0;\n\n        if ( (lR|0) < (lA|0) )\n            lA = lR;\n\n        if ( (lR|0) < (lB|0) )\n            lB = lR;\n\n        if ( (lA|0) < (lB|0) ) {\n            for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\n                a = HEAP32[(A+i)>>2]|0;\n                b = HEAP32[(B+i)>>2]|0;\n                t = ( (a & 0xffff) - (b & 0xffff)|0 ) + c|0;\n                r = ( (a >>> 16) - (b >>> 16)|0 ) + (t >> 16)|0;\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n                c = r >> 16;\n            }\n\n            for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {\n                b = HEAP32[(B+i)>>2]|0;\n                t = c - (b & 0xffff)|0;\n                r = (t >> 16) - (b >>> 16)|0;\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n                c = r >> 16;\n            }\n        }\n        else {\n            for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {\n                a = HEAP32[(A+i)>>2]|0;\n                b = HEAP32[(B+i)>>2]|0;\n                t = ( (a & 0xffff) - (b & 0xffff)|0 ) + c|0;\n                r = ( (a >>> 16) - (b >>> 16)|0 ) + (t >> 16)|0;\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n                c = r >> 16;\n            }\n\n            for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\n                a = HEAP32[(A+i)>>2]|0;\n                t = (a & 0xffff) + c|0;\n                r = (a >>> 16) + (t >> 16)|0;\n                HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);\n                c = r >> 16;\n            }\n        }\n\n        for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {\n            HEAP32[(R+i)>>2] = c|0;\n        }\n\n        return c|0;\n    }\n\n    /**\n     * Conventional multiplication\n     *\n     * TODO implement Karatsuba algorithm for large multiplicands\n     *\n     * @param A offset of the first argument, 32-byte aligned\n     * @param lA length of the first argument, multiple of 32\n     *\n     * @param B offset of the second argument, 32-byte aligned\n     * @param lB length of the second argument, multiple of 32\n     *\n     * @param R offset where to place the result to, 32-byte aligned\n     * @param lR length to truncate the result to, multiple of 32\n     */\n    function mul ( A, lA, B, lB, R, lR ) {\n        A  =  A|0;\n        lA = lA|0;\n        B  =  B|0;\n        lB = lB|0;\n        R  =  R|0;\n        lR = lR|0;\n\n        var al0 = 0, al1 = 0, al2 = 0, al3 = 0, al4 = 0, al5 = 0, al6 = 0, al7 = 0, ah0 = 0, ah1 = 0, ah2 = 0, ah3 = 0, ah4 = 0, ah5 = 0, ah6 = 0, ah7 = 0,\n            bl0 = 0, bl1 = 0, bl2 = 0, bl3 = 0, bl4 = 0, bl5 = 0, bl6 = 0, bl7 = 0, bh0 = 0, bh1 = 0, bh2 = 0, bh3 = 0, bh4 = 0, bh5 = 0, bh6 = 0, bh7 = 0,\n            r0 = 0, r1 = 0, r2 = 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0, r8 = 0, r9 = 0, r10 = 0, r11 = 0, r12 = 0, r13 = 0, r14 = 0, r15 = 0,\n            u = 0, v = 0, w = 0, m = 0,\n            i = 0, Ai = 0, j = 0, Bj = 0, Rk = 0;\n\n        if ( (lA|0) > (lB|0) ) {\n            u = A, v = lA;\n            A = B, lA = lB;\n            B = u, lB = v;\n        }\n\n        m = (lA+lB)|0;\n        if ( ( (lR|0) > (m|0) ) | ( (lR|0) <= 0 ) )\n            lR = m;\n\n        if ( (lR|0) < (lA|0) )\n            lA = lR;\n\n        if ( (lR|0) < (lB|0) )\n            lB = lR;\n\n        for ( ; (i|0) < (lA|0); i = (i+32)|0 ) {\n            Ai = (A+i)|0;\n\n            ah0 = HEAP32[(Ai|0)>>2]|0,\n            ah1 = HEAP32[(Ai|4)>>2]|0,\n            ah2 = HEAP32[(Ai|8)>>2]|0,\n            ah3 = HEAP32[(Ai|12)>>2]|0,\n            ah4 = HEAP32[(Ai|16)>>2]|0,\n            ah5 = HEAP32[(Ai|20)>>2]|0,\n            ah6 = HEAP32[(Ai|24)>>2]|0,\n            ah7 = HEAP32[(Ai|28)>>2]|0,\n            al0 = ah0 & 0xffff,\n            al1 = ah1 & 0xffff,\n            al2 = ah2 & 0xffff,\n            al3 = ah3 & 0xffff,\n            al4 = ah4 & 0xffff,\n            al5 = ah5 & 0xffff,\n            al6 = ah6 & 0xffff,\n            al7 = ah7 & 0xffff,\n            ah0 = ah0 >>> 16,\n            ah1 = ah1 >>> 16,\n            ah2 = ah2 >>> 16,\n            ah3 = ah3 >>> 16,\n            ah4 = ah4 >>> 16,\n            ah5 = ah5 >>> 16,\n            ah6 = ah6 >>> 16,\n            ah7 = ah7 >>> 16;\n\n            r8 = r9 = r10 = r11 = r12 = r13 = r14 = r15 = 0;\n\n            for ( j = 0; (j|0) < (lB|0); j = (j+32)|0 ) {\n                Bj = (B+j)|0;\n                Rk = (R+(i+j|0))|0;\n\n                bh0 = HEAP32[(Bj|0)>>2]|0,\n                bh1 = HEAP32[(Bj|4)>>2]|0,\n                bh2 = HEAP32[(Bj|8)>>2]|0,\n                bh3 = HEAP32[(Bj|12)>>2]|0,\n                bh4 = HEAP32[(Bj|16)>>2]|0,\n                bh5 = HEAP32[(Bj|20)>>2]|0,\n                bh6 = HEAP32[(Bj|24)>>2]|0,\n                bh7 = HEAP32[(Bj|28)>>2]|0,\n                bl0 = bh0 & 0xffff,\n                bl1 = bh1 & 0xffff,\n                bl2 = bh2 & 0xffff,\n                bl3 = bh3 & 0xffff,\n                bl4 = bh4 & 0xffff,\n                bl5 = bh5 & 0xffff,\n                bl6 = bh6 & 0xffff,\n                bl7 = bh7 & 0xffff,\n                bh0 = bh0 >>> 16,\n                bh1 = bh1 >>> 16,\n                bh2 = bh2 >>> 16,\n                bh3 = bh3 >>> 16,\n                bh4 = bh4 >>> 16,\n                bh5 = bh5 >>> 16,\n                bh6 = bh6 >>> 16,\n                bh7 = bh7 >>> 16;\n\n                r0 = HEAP32[(Rk|0)>>2]|0,\n                r1 = HEAP32[(Rk|4)>>2]|0,\n                r2 = HEAP32[(Rk|8)>>2]|0,\n                r3 = HEAP32[(Rk|12)>>2]|0,\n                r4 = HEAP32[(Rk|16)>>2]|0,\n                r5 = HEAP32[(Rk|20)>>2]|0,\n                r6 = HEAP32[(Rk|24)>>2]|0,\n                r7 = HEAP32[(Rk|28)>>2]|0;\n\n                u = ((imul(al0, bl0)|0) + (r8 & 0xffff)|0) + (r0 & 0xffff)|0;\n                v = ((imul(ah0, bl0)|0) + (r8 >>> 16)|0) + (r0 >>> 16)|0;\n                w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r0 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl1)|0) + (m & 0xffff)|0) + (r1 & 0xffff)|0;\n                v = ((imul(ah0, bl1)|0) + (m >>> 16)|0) + (r1 >>> 16)|0;\n                w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r1 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl2)|0) + (m & 0xffff)|0) + (r2 & 0xffff)|0;\n                v = ((imul(ah0, bl2)|0) + (m >>> 16)|0) + (r2 >>> 16)|0;\n                w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r2 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl3)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;\n                v = ((imul(ah0, bl3)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;\n                w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r3 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl4)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\n                v = ((imul(ah0, bl4)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\n                w = ((imul(al0, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r4 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl5)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah0, bl5)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al0, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl6)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah0, bl6)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al0, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al0, bl7)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah0, bl7)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al0, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                r8 = m;\n\n                u = ((imul(al1, bl0)|0) + (r9 & 0xffff)|0) + (r1 & 0xffff)|0;\n                v = ((imul(ah1, bl0)|0) + (r9 >>> 16)|0) + (r1 >>> 16)|0;\n                w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r1 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl1)|0) + (m & 0xffff)|0) + (r2 & 0xffff)|0;\n                v = ((imul(ah1, bl1)|0) + (m >>> 16)|0) + (r2 >>> 16)|0;\n                w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r2 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl2)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;\n                v = ((imul(ah1, bl2)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;\n                w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r3 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl3)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\n                v = ((imul(ah1, bl3)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\n                w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r4 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl4)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah1, bl4)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al1, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl5)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah1, bl5)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al1, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl6)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah1, bl6)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al1, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al1, bl7)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah1, bl7)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al1, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah1, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                r9 = m;\n\n                u = ((imul(al2, bl0)|0) + (r10 & 0xffff)|0) + (r2 & 0xffff)|0;\n                v = ((imul(ah2, bl0)|0) + (r10 >>> 16)|0) + (r2 >>> 16)|0;\n                w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r2 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl1)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;\n                v = ((imul(ah2, bl1)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;\n                w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r3 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl2)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\n                v = ((imul(ah2, bl2)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\n                w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r4 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl3)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah2, bl3)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl4)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah2, bl4)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al2, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl5)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah2, bl5)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al2, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl6)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah2, bl6)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al2, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al2, bl7)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah2, bl7)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al2, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah2, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                r10 = m;\n\n                u = ((imul(al3, bl0)|0) + (r11 & 0xffff)|0) + (r3 & 0xffff)|0;\n                v = ((imul(ah3, bl0)|0) + (r11 >>> 16)|0) + (r3 >>> 16)|0;\n                w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r3 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl1)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;\n                v = ((imul(ah3, bl1)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;\n                w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r4 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl2)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah3, bl2)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl3)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah3, bl3)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl4)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah3, bl4)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al3, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl5)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah3, bl5)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al3, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl6)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah3, bl6)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al3, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al3, bl7)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\n                v = ((imul(ah3, bl7)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\n                w = ((imul(al3, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah3, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r10 = (w << 16) | (u & 0xffff);\n\n                r11 = m;\n\n                u = ((imul(al4, bl0)|0) + (r12 & 0xffff)|0) + (r4 & 0xffff)|0;\n                v = ((imul(ah4, bl0)|0) + (r12 >>> 16)|0) + (r4 >>> 16)|0;\n                w = ((imul(al4, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r4 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl1)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah4, bl1)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al4, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl2)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah4, bl2)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al4, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl3)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah4, bl3)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al4, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl4)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah4, bl4)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al4, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl5)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah4, bl5)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al4, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl6)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\n                v = ((imul(ah4, bl6)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\n                w = ((imul(al4, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r10 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al4, bl7)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\n                v = ((imul(ah4, bl7)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\n                w = ((imul(al4, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah4, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r11 = (w << 16) | (u & 0xffff);\n\n                r12 = m;\n\n                u = ((imul(al5, bl0)|0) + (r13 & 0xffff)|0) + (r5 & 0xffff)|0;\n                v = ((imul(ah5, bl0)|0) + (r13 >>> 16)|0) + (r5 >>> 16)|0;\n                w = ((imul(al5, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r5 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl1)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah5, bl1)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al5, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl2)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah5, bl2)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al5, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl3)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah5, bl3)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al5, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl4)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah5, bl4)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al5, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl5)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\n                v = ((imul(ah5, bl5)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\n                w = ((imul(al5, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r10 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl6)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\n                v = ((imul(ah5, bl6)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\n                w = ((imul(al5, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r11 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al5, bl7)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;\n                v = ((imul(ah5, bl7)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;\n                w = ((imul(al5, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah5, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r12 = (w << 16) | (u & 0xffff);\n\n                r13 = m;\n\n                u = ((imul(al6, bl0)|0) + (r14 & 0xffff)|0) + (r6 & 0xffff)|0;\n                v = ((imul(ah6, bl0)|0) + (r14 >>> 16)|0) + (r6 >>> 16)|0;\n                w = ((imul(al6, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r6 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl1)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah6, bl1)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al6, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl2)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah6, bl2)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al6, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl3)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah6, bl3)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al6, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl4)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\n                v = ((imul(ah6, bl4)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\n                w = ((imul(al6, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r10 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl5)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\n                v = ((imul(ah6, bl5)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\n                w = ((imul(al6, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r11 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl6)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;\n                v = ((imul(ah6, bl6)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;\n                w = ((imul(al6, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r12 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al6, bl7)|0) + (m & 0xffff)|0) + (r13 & 0xffff)|0;\n                v = ((imul(ah6, bl7)|0) + (m >>> 16)|0) + (r13 >>> 16)|0;\n                w = ((imul(al6, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah6, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r13 = (w << 16) | (u & 0xffff);\n\n                r14 = m;\n\n                u = ((imul(al7, bl0)|0) + (r15 & 0xffff)|0) + (r7 & 0xffff)|0;\n                v = ((imul(ah7, bl0)|0) + (r15 >>> 16)|0) + (r7 >>> 16)|0;\n                w = ((imul(al7, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r7 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl1)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;\n                v = ((imul(ah7, bl1)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;\n                w = ((imul(al7, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r8 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl2)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;\n                v = ((imul(ah7, bl2)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;\n                w = ((imul(al7, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r9 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl3)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;\n                v = ((imul(ah7, bl3)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;\n                w = ((imul(al7, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r10 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl4)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;\n                v = ((imul(ah7, bl4)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;\n                w = ((imul(al7, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r11 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl5)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;\n                v = ((imul(ah7, bl5)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;\n                w = ((imul(al7, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r12 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl6)|0) + (m & 0xffff)|0) + (r13 & 0xffff)|0;\n                v = ((imul(ah7, bl6)|0) + (m >>> 16)|0) + (r13 >>> 16)|0;\n                w = ((imul(al7, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r13 = (w << 16) | (u & 0xffff);\n\n                u = ((imul(al7, bl7)|0) + (m & 0xffff)|0) + (r14 & 0xffff)|0;\n                v = ((imul(ah7, bl7)|0) + (m >>> 16)|0) + (r14 >>> 16)|0;\n                w = ((imul(al7, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah7, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r14 = (w << 16) | (u & 0xffff);\n\n                r15 = m;\n\n                HEAP32[(Rk|0)>>2] = r0,\n                HEAP32[(Rk|4)>>2] = r1,\n                HEAP32[(Rk|8)>>2] = r2,\n                HEAP32[(Rk|12)>>2] = r3,\n                HEAP32[(Rk|16)>>2] = r4,\n                HEAP32[(Rk|20)>>2] = r5,\n                HEAP32[(Rk|24)>>2] = r6,\n                HEAP32[(Rk|28)>>2] = r7;\n            }\n\n            Rk = (R+(i+j|0))|0;\n            HEAP32[(Rk|0)>>2] = r8,\n            HEAP32[(Rk|4)>>2] = r9,\n            HEAP32[(Rk|8)>>2] = r10,\n            HEAP32[(Rk|12)>>2] = r11,\n            HEAP32[(Rk|16)>>2] = r12,\n            HEAP32[(Rk|20)>>2] = r13,\n            HEAP32[(Rk|24)>>2] = r14,\n            HEAP32[(Rk|28)>>2] = r15;\n        }\n/*\n        for ( i = lA & -32; (i|0) < (lA|0); i = (i+4)|0 ) {\n            Ai = (A+i)|0;\n\n            ah0 = HEAP32[Ai>>2]|0,\n            al0 = ah0 & 0xffff,\n            ah0 = ah0 >>> 16;\n\n            r1 = 0;\n\n            for ( j = 0; (j|0) < (lB|0); j = (j+4)|0 ) {\n                Bj = (B+j)|0;\n                Rk = (R+(i+j|0))|0;\n\n                bh0 = HEAP32[Bj>>2]|0,\n                bl0 = bh0 & 0xffff,\n                bh0 = bh0 >>> 16;\n\n                r0 = HEAP32[Rk>>2]|0;\n\n                u = ((imul(al0, bl0)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;\n                v = ((imul(ah0, bl0)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;\n                w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                r0 = (w << 16) | (u & 0xffff);\n\n                r1 = m;\n\n                HEAP32[Rk>>2] = r0;\n            }\n\n            Rk = (R+(i+j|0))|0;\n            HEAP32[Rk>>2] = r1;\n        }\n*/\n    }\n\n    /**\n     * Fast squaring\n     *\n     * Exploits the fact:\n     *\n     *  X² = ( X0 + X1*B )² = X0² + 2*X0*X1*B + X1²*B²,\n     *\n     * where B is a power of 2, so:\n     *\n     *  2*X0*X1*B = (X0*X1 << 1)*B\n     *\n     * @param A offset of the argument being squared, 32-byte aligned\n     * @param lA length of the argument, multiple of 32\n     *\n     * @param R offset where to place the result to, 32-byte aligned\n     */\n    function sqr ( A, lA, R ) {\n        A  =  A|0;\n        lA = lA|0;\n        R  =  R|0;\n\n        var al0 = 0, al1 = 0, al2 = 0, al3 = 0, al4 = 0, al5 = 0, al6 = 0, al7 = 0, ah0 = 0, ah1 = 0, ah2 = 0, ah3 = 0, ah4 = 0, ah5 = 0, ah6 = 0, ah7 = 0,\n            bl0 = 0, bl1 = 0, bl2 = 0, bl3 = 0, bl4 = 0, bl5 = 0, bl6 = 0, bl7 = 0, bh0 = 0, bh1 = 0, bh2 = 0, bh3 = 0, bh4 = 0, bh5 = 0, bh6 = 0, bh7 = 0,\n            r0 = 0, r1 = 0, r2 = 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0, r8 = 0, r9 = 0, r10 = 0, r11 = 0, r12 = 0, r13 = 0, r14 = 0, r15 = 0,\n            u = 0, v = 0, w = 0, c = 0, h = 0, m = 0, r = 0,\n            d = 0, dd = 0, p = 0, i = 0, j = 0, k = 0, Ai = 0, Aj = 0, Rk = 0;\n\n        // prepare for iterations\n        for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {\n            Rk = R+(i<<1)|0;\n            ah0 = HEAP32[(A+i)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16;\n            u = imul(al0,al0)|0;\n            v = (imul(al0,ah0)|0) + (u >>> 17)|0;\n            w = (imul(ah0,ah0)|0) + (v >>> 15)|0;\n            HEAP32[(Rk)>>2] = (v << 17) | (u & 0x1ffff);\n            HEAP32[(Rk|4)>>2] = w;\n        }\n\n        // unrolled 1st iteration\n        for ( p = 0; (p|0) < (lA|0); p = (p+8)|0 ) {\n            Ai = A+p|0, Rk = R+(p<<1)|0;\n\n            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16;\n\n            bh0 = HEAP32[(Ai|4)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16;\n\n            u = imul(al0,bl0)|0;\n            v = (imul(al0,bh0)|0) + (u >>> 16)|0;\n            w = (imul(ah0,bl0)|0) + (v & 0xffff)|0;\n            m = ((imul(ah0,bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n\n            r = HEAP32[(Rk|4)>>2]|0;\n            u = (r & 0xffff) + ((u & 0xffff) << 1)|0;\n            w = ((r >>> 16) + ((w & 0xffff) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|4)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|8)>>2]|0;\n            u = ((r & 0xffff) + ((m & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((m >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|8)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            if ( c ) {\n                r = HEAP32[(Rk|12)>>2]|0;\n                u = (r & 0xffff) + c|0;\n                w = (r >>> 16) + (u >>> 16)|0;\n                HEAP32[(Rk|12)>>2] = (w << 16) | (u & 0xffff);\n            }\n        }\n\n        // unrolled 2nd iteration\n        for ( p = 0; (p|0) < (lA|0); p = (p+16)|0 ) {\n            Ai = A+p|0, Rk = R+(p<<1)|0;\n\n            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,\n            ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16;\n\n            bh0 = HEAP32[(Ai|8)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,\n            bh1 = HEAP32[(Ai|12)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16;\n\n            u = imul(al0, bl0)|0;\n            v = imul(ah0, bl0)|0;\n            w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r0 = (w << 16) | (u & 0xffff);\n\n            u = (imul(al0, bl1)|0) + (m & 0xffff)|0;\n            v = (imul(ah0, bl1)|0) + (m >>> 16)|0;\n            w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r1 = (w << 16) | (u & 0xffff);\n\n            r2 = m;\n\n            u = (imul(al1, bl0)|0) + (r1 & 0xffff)|0;\n            v = (imul(ah1, bl0)|0) + (r1 >>> 16)|0;\n            w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r1 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r2 = (w << 16) | (u & 0xffff);\n\n            r3 = m;\n\n            r = HEAP32[(Rk|8)>>2]|0;\n            u = (r & 0xffff) + ((r0 & 0xffff) << 1)|0;\n            w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|8)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|12)>>2]|0;\n            u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0)  + c|0;\n            w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|12)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|16)>>2]|0;\n            u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|16)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|20)>>2]|0;\n            u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|20)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            for ( k = 24; !!c & ( (k|0) < 32 ); k = (k+4)|0 ) {\n                r = HEAP32[(Rk|k)>>2]|0;\n                u = (r & 0xffff) + c|0;\n                w = (r >>> 16) + (u >>> 16)|0;\n                HEAP32[(Rk|k)>>2] = (w << 16) | (u & 0xffff);\n                c = w >>> 16;\n            }\n        }\n\n        // unrolled 3rd iteration\n        for ( p = 0; (p|0) < (lA|0); p = (p+32)|0 ) {\n            Ai = A+p|0, Rk = R+(p<<1)|0;\n\n            ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,\n            ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16,\n            ah2 = HEAP32[(Ai|8)>>2]|0, al2 = ah2 & 0xffff, ah2 = ah2 >>> 16,\n            ah3 = HEAP32[(Ai|12)>>2]|0, al3 = ah3 & 0xffff, ah3 = ah3 >>> 16;\n\n            bh0 = HEAP32[(Ai|16)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,\n            bh1 = HEAP32[(Ai|20)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16,\n            bh2 = HEAP32[(Ai|24)>>2]|0, bl2 = bh2 & 0xffff, bh2 = bh2 >>> 16,\n            bh3 = HEAP32[(Ai|28)>>2]|0, bl3 = bh3 & 0xffff, bh3 = bh3 >>> 16;\n\n            u = imul(al0, bl0)|0;\n            v = imul(ah0, bl0)|0;\n            w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r0 = (w << 16) | (u & 0xffff);\n\n            u = (imul(al0, bl1)|0) + (m & 0xffff)|0;\n            v = (imul(ah0, bl1)|0) + (m >>> 16)|0;\n            w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r1 = (w << 16) | (u & 0xffff);\n\n            u = (imul(al0, bl2)|0) + (m & 0xffff)|0;\n            v = (imul(ah0, bl2)|0) + (m >>> 16)|0;\n            w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r2 = (w << 16) | (u & 0xffff);\n\n            u = (imul(al0, bl3)|0) + (m & 0xffff)|0;\n            v = (imul(ah0, bl3)|0) + (m >>> 16)|0;\n            w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r3 = (w << 16) | (u & 0xffff);\n\n            r4 = m;\n\n            u = (imul(al1, bl0)|0) + (r1 & 0xffff)|0;\n            v = (imul(ah1, bl0)|0) + (r1 >>> 16)|0;\n            w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r1 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r2 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al1, bl2)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah1, bl2)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r3 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al1, bl3)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah1, bl3)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r4 = (w << 16) | (u & 0xffff);\n\n            r5 = m;\n\n            u = (imul(al2, bl0)|0) + (r2 & 0xffff)|0;\n            v = (imul(ah2, bl0)|0) + (r2 >>> 16)|0;\n            w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r2 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al2, bl1)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah2, bl1)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r3 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al2, bl2)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah2, bl2)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r4 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al2, bl3)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah2, bl3)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r5 = (w << 16) | (u & 0xffff);\n\n            r6 = m;\n\n            u = (imul(al3, bl0)|0) + (r3 & 0xffff)|0;\n            v = (imul(ah3, bl0)|0) + (r3 >>> 16)|0;\n            w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r3 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al3, bl1)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah3, bl1)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r4 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al3, bl2)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah3, bl2)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r5 = (w << 16) | (u & 0xffff);\n\n            u = ((imul(al3, bl3)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n            v = ((imul(ah3, bl3)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n            w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n            m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n            r6 = (w << 16) | (u & 0xffff);\n\n            r7 = m;\n\n            r = HEAP32[(Rk|16)>>2]|0;\n            u = (r & 0xffff) + ((r0 & 0xffff) << 1)|0;\n            w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|16)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|20)>>2]|0;\n            u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0)  + c|0;\n            w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|20)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|24)>>2]|0;\n            u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|24)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk|28)>>2]|0;\n            u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk|28)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk+32)>>2]|0;\n            u = ((r & 0xffff) + ((r4 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r4 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk+32)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk+36)>>2]|0;\n            u = ((r & 0xffff) + ((r5 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r5 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk+36)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk+40)>>2]|0;\n            u = ((r & 0xffff) + ((r6 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r6 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk+40)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            r = HEAP32[(Rk+44)>>2]|0;\n            u = ((r & 0xffff) + ((r7 & 0xffff) << 1)|0) + c|0;\n            w = ((r >>> 16) + ((r7 >>> 16) << 1)|0) + (u >>> 16)|0;\n            HEAP32[(Rk+44)>>2] = (w << 16) | (u & 0xffff);\n            c = w >>> 16;\n\n            for ( k = 48; !!c & ( (k|0) < 64 ); k = (k+4)|0 ) {\n                r = HEAP32[(Rk+k)>>2]|0;\n                u = (r & 0xffff) + c|0;\n                w = (r >>> 16) + (u >>> 16)|0;\n                HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                c = w >>> 16;\n            }\n        }\n\n        // perform iterations\n        for ( d = 32; (d|0) < (lA|0); d = d << 1 ) { // depth loop\n            dd = d << 1;\n\n            for ( p = 0; (p|0) < (lA|0); p = (p+dd)|0 ) { // part loop\n                Rk = R+(p<<1)|0;\n\n                h = 0;\n                for ( i = 0; (i|0) < (d|0); i = (i+32)|0 ) { // multiply-and-add loop\n                    Ai = (A+p|0)+i|0;\n\n                    ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,\n                    ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16,\n                    ah2 = HEAP32[(Ai|8)>>2]|0, al2 = ah2 & 0xffff, ah2 = ah2 >>> 16,\n                    ah3 = HEAP32[(Ai|12)>>2]|0, al3 = ah3 & 0xffff, ah3 = ah3 >>> 16,\n                    ah4 = HEAP32[(Ai|16)>>2]|0, al4 = ah4 & 0xffff, ah4 = ah4 >>> 16,\n                    ah5 = HEAP32[(Ai|20)>>2]|0, al5 = ah5 & 0xffff, ah5 = ah5 >>> 16,\n                    ah6 = HEAP32[(Ai|24)>>2]|0, al6 = ah6 & 0xffff, ah6 = ah6 >>> 16,\n                    ah7 = HEAP32[(Ai|28)>>2]|0, al7 = ah7 & 0xffff, ah7 = ah7 >>> 16;\n\n                    r8 = r9 = r10 = r11 = r12 = r13 = r14 = r15 = c = 0;\n\n                    for ( j = 0; (j|0) < (d|0); j = (j+32)|0 ) {\n                        Aj = ((A+p|0)+d|0)+j|0;\n\n                        bh0 = HEAP32[(Aj)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,\n                        bh1 = HEAP32[(Aj|4)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16,\n                        bh2 = HEAP32[(Aj|8)>>2]|0, bl2 = bh2 & 0xffff, bh2 = bh2 >>> 16,\n                        bh3 = HEAP32[(Aj|12)>>2]|0, bl3 = bh3 & 0xffff, bh3 = bh3 >>> 16,\n                        bh4 = HEAP32[(Aj|16)>>2]|0, bl4 = bh4 & 0xffff, bh4 = bh4 >>> 16,\n                        bh5 = HEAP32[(Aj|20)>>2]|0, bl5 = bh5 & 0xffff, bh5 = bh5 >>> 16,\n                        bh6 = HEAP32[(Aj|24)>>2]|0, bl6 = bh6 & 0xffff, bh6 = bh6 >>> 16,\n                        bh7 = HEAP32[(Aj|28)>>2]|0, bl7 = bh7 & 0xffff, bh7 = bh7 >>> 16;\n\n                        r0 = r1 = r2 = r3 = r4 = r5 = r6 = r7 = 0;\n\n                        u = ((imul(al0, bl0)|0) + (r0 & 0xffff)|0) + (r8 & 0xffff)|0;\n                        v = ((imul(ah0, bl0)|0) + (r0 >>> 16)|0) + (r8 >>> 16)|0;\n                        w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r0 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl1)|0) + (r1 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl1)|0) + (r1 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r1 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl2)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl2)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r2 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl3)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl3)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r3 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl4)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl4)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r4 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl5)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl5)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl6)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl6)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al0, bl7)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah0, bl7)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al0, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah0, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        r8 = m;\n\n                        u = ((imul(al1, bl0)|0) + (r1 & 0xffff)|0) + (r9 & 0xffff)|0;\n                        v = ((imul(ah1, bl0)|0) + (r1 >>> 16)|0) + (r9 >>> 16)|0;\n                        w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r1 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r2 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl2)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl2)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r3 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl3)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl3)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r4 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl4)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl4)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl5)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl5)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl6)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl6)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al1, bl7)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah1, bl7)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al1, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah1, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        r9 = m;\n\n                        u = ((imul(al2, bl0)|0) + (r2 & 0xffff)|0) + (r10 & 0xffff)|0;\n                        v = ((imul(ah2, bl0)|0) + (r2 >>> 16)|0) + (r10 >>> 16)|0;\n                        w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r2 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl1)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl1)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r3 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl2)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl2)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r4 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl3)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl3)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl4)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl4)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl5)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl5)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl6)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl6)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al2, bl7)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah2, bl7)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al2, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah2, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        r10 = m;\n\n                        u = ((imul(al3, bl0)|0) + (r3 & 0xffff)|0) + (r11 & 0xffff)|0;\n                        v = ((imul(ah3, bl0)|0) + (r3 >>> 16)|0) + (r11 >>> 16)|0;\n                        w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r3 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl1)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl1)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r4 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl2)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl2)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl3)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl3)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl4)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl4)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl5)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl5)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl6)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl6)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al3, bl7)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah3, bl7)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al3, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah3, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r10 = (w << 16) | (u & 0xffff);\n\n                        r11 = m;\n\n                        u = ((imul(al4, bl0)|0) + (r4 & 0xffff)|0) + (r12 & 0xffff)|0;\n                        v = ((imul(ah4, bl0)|0) + (r4 >>> 16)|0) + (r12 >>> 16)|0;\n                        w = ((imul(al4, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r4 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl1)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl1)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl2)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl2)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl3)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl3)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl4)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl4)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl5)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl5)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl6)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl6)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r10 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al4, bl7)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah4, bl7)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al4, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah4, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r11 = (w << 16) | (u & 0xffff);\n\n                        r12 = m;\n\n                        u = ((imul(al5, bl0)|0) + (r5 & 0xffff)|0) + (r13 & 0xffff)|0;\n                        v = ((imul(ah5, bl0)|0) + (r5 >>> 16)|0) + (r13 >>> 16)|0;\n                        w = ((imul(al5, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r5 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl1)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl1)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl2)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl2)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl3)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl3)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl4)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl4)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl5)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl5)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r10 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl6)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl6)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r11 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al5, bl7)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah5, bl7)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al5, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah5, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r12 = (w << 16) | (u & 0xffff);\n\n                        r13 = m;\n\n                        u = ((imul(al6, bl0)|0) + (r6 & 0xffff)|0) + (r14 & 0xffff)|0;\n                        v = ((imul(ah6, bl0)|0) + (r6 >>> 16)|0) + (r14 >>> 16)|0;\n                        w = ((imul(al6, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r6 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl1)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl1)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl2)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl2)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl3)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl3)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl4)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl4)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r10 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl5)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl5)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r11 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl6)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl6)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r12 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al6, bl7)|0) + (r13 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah6, bl7)|0) + (r13 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al6, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah6, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r13 = (w << 16) | (u & 0xffff);\n\n                        r14 = m;\n\n                        u = ((imul(al7, bl0)|0) + (r7 & 0xffff)|0) + (r15 & 0xffff)|0;\n                        v = ((imul(ah7, bl0)|0) + (r7 >>> 16)|0) + (r15 >>> 16)|0;\n                        w = ((imul(al7, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r7 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl1)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl1)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r8 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl2)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl2)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r9 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl3)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl3)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r10 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl4)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl4)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r11 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl5)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl5)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r12 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl6)|0) + (r13 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl6)|0) + (r13 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r13 = (w << 16) | (u & 0xffff);\n\n                        u = ((imul(al7, bl7)|0) + (r14 & 0xffff)|0) + (m & 0xffff)|0;\n                        v = ((imul(ah7, bl7)|0) + (r14 >>> 16)|0) + (m >>> 16)|0;\n                        w = ((imul(al7, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;\n                        m = ((imul(ah7, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;\n                        r14 = (w << 16) | (u & 0xffff);\n\n                        r15 = m;\n\n                        k = d+(i+j|0)|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r0 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r4 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r4 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r5 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r5 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r6 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r6 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n\n                        k = k+4|0;\n                        r = HEAP32[(Rk+k)>>2]|0;\n                        u = ((r & 0xffff) + ((r7 & 0xffff) << 1)|0) + c|0;\n                        w = ((r >>> 16) + ((r7 >>> 16) << 1)|0) + (u >>> 16)|0;\n                        HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                        c = w >>> 16;\n                    }\n\n                    k = d+(i+j|0)|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = (((r & 0xffff) + ((r8 & 0xffff) << 1)|0) + c|0) + h|0;\n                    w = ((r >>> 16) + ((r8 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r9 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r9 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r10 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r10 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r11 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r11 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r12 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r12 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r13 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r13 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r14 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r14 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    c = w >>> 16;\n\n                    k = k+4|0;\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = ((r & 0xffff) + ((r15 & 0xffff) << 1)|0) + c|0;\n                    w = ((r >>> 16) + ((r15 >>> 16) << 1)|0) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    h = w >>> 16;\n                }\n\n                for ( k = k+4|0; !!h & ( (k|0) < (dd<<1) ); k = (k+4)|0 ) { // carry propagation loop\n                    r = HEAP32[(Rk+k)>>2]|0;\n                    u = (r & 0xffff) + h|0;\n                    w = (r >>> 16) + (u >>> 16)|0;\n                    HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);\n                    h = w >>> 16;\n                }\n            }\n        }\n    }\n\n    /**\n     * Conventional division\n     *\n     * @param A offset of the numerator, 32-byte aligned\n     * @param lA length of the numerator, multiple of 32\n     *\n     * @param B offset of the divisor, 32-byte aligned\n     * @param lB length of the divisor, multiple of 32\n     *\n     * @param R offset where to place the remainder to, 32-byte aligned\n     *\n     * @param Q offser where to place the quotient to, 32-byte aligned\n     */\n\n    function div ( N, lN, D, lD, R, Q ) {\n        N  =  N|0;\n        lN = lN|0\n        D  =  D|0;\n        lD = lD|0\n        R  =  R|0;\n        Q  =  Q|0;\n\n        var n = 0, d = 0, e = 0,\n            u1 = 0, u0 = 0,\n            v0 = 0, vh = 0, vl = 0,\n            qh = 0, ql = 0, rh = 0, rl = 0,\n            t1 = 0, t2 = 0, m = 0, c = 0,\n            i = 0, j = 0, k = 0;\n\n        // copy `N` to `R`\n        cp( lN, N, R );\n\n        // number of significant limbs in `N` (multiplied by 4)\n        for ( i = (lN-1) & -4; (i|0) >= 0; i = (i-4)|0 ) {\n            n = HEAP32[(N+i)>>2]|0;\n            if ( n ) {\n                lN = i;\n                break;\n            }\n        }\n\n        // number of significant limbs in `D` (multiplied by 4)\n        for ( i = (lD-1) & -4; (i|0) >= 0; i = (i-4)|0 ) {\n            d = HEAP32[(D+i)>>2]|0;\n            if ( d ) {\n                lD = i;\n                break;\n            }\n        }\n\n        // `D` is zero? WTF?!\n\n        // calculate `e` — the power of 2 of the normalization factor\n        while ( (d & 0x80000000) == 0 ) {\n            d = d << 1;\n            e = e + 1|0;\n        }\n\n        // shift `R` for `e` bits left\n        u0 = HEAP32[(N+lN)>>2]|0;\n        if ( e ) u1 = u0>>>(32-e|0);\n        for ( i = (lN-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\n            n = HEAP32[(N+i)>>2]|0;\n            HEAP32[(R+i+4)>>2] = (u0 << e) | ( e ? n >>> (32-e|0) : 0 );\n            u0 = n;\n        }\n        HEAP32[R>>2] = u0 << e;\n\n        // normalize `D` in place\n        if ( e ) {\n            v0 = HEAP32[(D+lD)>>2]|0;\n            for ( i = (lD-4)|0; (i|0) >= 0; i = (i-4)|0 ) {\n                d = HEAP32[(D+i)>>2]|0;\n                HEAP32[(D+i+4)>>2] = (v0 << e) | ( d >>> (32-e|0) );\n                v0 = d;\n            }\n            HEAP32[D>>2] = v0 << e;\n        }\n\n        // divisor parts won't change\n        v0 = HEAP32[(D+lD)>>2]|0;\n        vh = v0 >>> 16, vl = v0 & 0xffff;\n\n        // perform division\n        for ( i = lN; (i|0) >= (lD|0); i = (i-4)|0 ) {\n            j = (i-lD)|0;\n\n            // estimate high part of the quotient\n            u0 = HEAP32[(R+i)>>2]|0;\n            qh = ( (u1>>>0) / (vh>>>0) )|0, rh = ( (u1>>>0) % (vh>>>0) )|0, t1 = imul(qh, vl)|0;\n            while ( ( (qh|0) == 0x10000 ) | ( (t1>>>0) > (((rh << 16)|(u0 >>> 16))>>>0) ) ) {\n                qh = (qh-1)|0, rh = (rh+vh)|0, t1 = (t1-vl)|0;\n                if ( (rh|0) >= 0x10000 ) break;\n            }\n\n            // bulk multiply-and-subtract\n            // m - multiplication carry, c - subtraction carry\n            m = 0, c = 0;\n            for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\n                d = HEAP32[(D+k)>>2]|0;\n                t1 = (imul(qh, d & 0xffff)|0) + (m >>> 16)|0;\n                t2 = (imul(qh, d >>> 16)|0) + (t1 >>> 16)|0;\n                d = (m & 0xffff) | (t1 << 16);\n                m = t2;\n                n = HEAP32[(R+j+k)>>2]|0;\n                t1 = ((n & 0xffff) - (d & 0xffff)|0) + c|0;\n                t2 = ((n >>> 16) - (d >>> 16)|0) + (t1 >> 16)|0;\n                HEAP32[(R+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);\n                c = t2 >> 16;\n            }\n            t1 = ((u1 & 0xffff) - (m & 0xffff)|0) + c|0;\n            t2 = ((u1 >>> 16) - (m >>> 16)|0) + (t1 >> 16)|0;\n            HEAP32[(R+j+k)>>2] = u1 = (t2 << 16) | (t1 & 0xffff);\n            c = t2 >> 16;\n\n            // add `D` back if got carry-out\n            if ( c ) {\n                qh = (qh-1)|0, rh = (rh-vh)|0;\n                c = 0;\n                for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\n                    d = HEAP32[(D+k)>>2]|0;\n                    n = HEAP32[(R+j+k)>>2]|0;\n                    t1 = ((n & 0xffff) + (d & 0xffff)|0) + c|0;\n                    t2 = ((n >>> 16) + (d >>> 16)|0) + (t1 >>> 16)|0;\n                    HEAP32[(R+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);\n                    c = t2 >>> 16;\n                }\n                HEAP32[(R+j+k)>>2] = u1 = (u1+c)|0;\n            }\n\n            // estimate low part of the quotient\n            u0 = HEAP32[(R+i)>>2]|0;\n            n = (u1 << 16) | (u0 >>> 16);\n            ql = ( (n>>>0) / (vh>>>0) )|0, rl = ( (n>>>0) % (vh>>>0) )|0, t1 = imul(ql, vl)|0;\n            while ( ( (ql|0) == 0x10000 ) | ( (t1>>>0) > (((rl << 16)|(u0 & 0xffff))>>>0) ) ) {\n                ql = (ql-1)|0, rl = (rl+vh)|0, t1 = (t1-vl)|0;\n                if ( (rl|0) >= 0x10000 ) break;\n            }\n\n            // bulk multiply-and-subtract\n            // m - multiplication carry, c - subtraction carry\n            m = 0, c = 0;\n            for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\n                d = HEAP32[(D+k)>>2]|0;\n                t1 = (imul(ql, d & 0xffff)|0) + (m & 0xffff)|0;\n                t2 = ((imul(ql, d >>> 16)|0) + (t1 >>> 16)|0) + (m >>> 16)|0;\n                d = (t1 & 0xffff) | (t2 << 16);\n                m = t2 >>> 16;\n                n = HEAP32[(R+j+k)>>2]|0;\n                t1 = ((n & 0xffff) - (d & 0xffff)|0) + c|0;\n                t2 = ((n >>> 16) - (d >>> 16)|0) + (t1 >> 16)|0;\n                c = t2 >> 16;\n                HEAP32[(R+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);\n            }\n            t1 = ((u1 & 0xffff) - (m & 0xffff)|0) + c|0;\n            t2 = ((u1 >>> 16) - (m >>> 16)|0) + (t1 >> 16)|0;\n            HEAP32[(R+j+k)>>2] = u1 = (t2 << 16) | (t1 & 0xffff);\n            c = t2 >> 16;\n\n            // add `D` back if got carry-out\n            if ( c ) {\n                ql = (ql-1)|0, rl = (rl+vh)|0;\n                c = 0;\n                for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {\n                    d = HEAP32[(D+k)>>2]|0;\n                    n = HEAP32[(R+j+k)>>2]|0;\n                    t1 = ((n & 0xffff) + (d & 0xffff)|0) + c|0;\n                    t2 = ((n >>> 16) + (d >>> 16)|0) + (t1 >>> 16)|0;\n                    c = t2 >>> 16;\n                    HEAP32[(R+j+k)>>2] = (t1 & 0xffff) | (t2 << 16);\n                }\n                HEAP32[(R+j+k)>>2] = (u1+c)|0;\n            }\n\n            // got quotient limb\n            HEAP32[(Q+j)>>2] = (qh << 16) | ql;\n\n            u1 = HEAP32[(R+i)>>2]|0;\n        }\n\n        if ( e ) {\n            // TODO denormalize `D` in place\n\n            // denormalize `R` in place\n            u0 = HEAP32[R>>2]|0;\n            for ( i = 4; (i|0) <= (lD|0); i = (i+4)|0 ) {\n                n = HEAP32[(R+i)>>2]|0;\n                HEAP32[(R+i-4)>>2] = ( n << (32-e|0) ) | (u0 >>> e);\n                u0 = n;\n            }\n            HEAP32[(R+lD)>>2] = u0 >>> e;\n        }\n    }\n\n    /**\n     * Montgomery modular reduction\n     *\n     * Definition:\n     *\n     *  MREDC(A) = A × X (mod N),\n     *  M × X = N × Y + 1,\n     *\n     * where M = 2^(32*m) such that N < M and A < N×M\n     *\n     * Numbers `X` and `Y` can be calculated using Extended Euclidean Algorithm.\n     */\n    function mredc ( A, lA, N, lN, y, R ) {\n        A  =  A|0;\n        lA = lA|0;\n        N  =  N|0;\n        lN = lN|0;\n        y  =  y|0;\n        R  =  R|0;\n\n        var T = 0,\n            c = 0, uh = 0, ul = 0, vl = 0, vh = 0, w0 = 0, w1 = 0, w2 = 0, r0 = 0, r1 = 0,\n            i = 0, j = 0, k = 0;\n\n        T = salloc(lN<<1)|0;\n        z(lN<<1, 0, T);\n\n        cp( lA, A, T );\n\n        // HAC 14.32\n        for ( i = 0; (i|0) < (lN|0); i = (i+4)|0 ) {\n            uh = HEAP32[(T+i)>>2]|0, ul = uh & 0xffff, uh = uh >>> 16;\n            vh = y >>> 16, vl = y & 0xffff;\n            w0 = imul(ul,vl)|0, w1 = ( (imul(ul,vh)|0) + (imul(uh,vl)|0) | 0 ) + (w0 >>> 16) | 0;\n            ul = w0 & 0xffff, uh = w1 & 0xffff;\n            r1 = 0;\n            for ( j = 0; (j|0) < (lN|0); j = (j+4)|0 ) {\n                k = (i+j)|0;\n                vh = HEAP32[(N+j)>>2]|0, vl = vh & 0xffff, vh = vh >>> 16;\n                r0 = HEAP32[(T+k)>>2]|0;\n                w0 = ((imul(ul, vl)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;\n                w1 = ((imul(ul, vh)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;\n                w2 = ((imul(uh, vl)|0) + (w1 & 0xffff)|0) + (w0 >>> 16)|0;\n                r1 = ((imul(uh, vh)|0) + (w2 >>> 16)|0) + (w1 >>> 16)|0;\n                r0 = (w2 << 16) | (w0 & 0xffff);\n                HEAP32[(T+k)>>2] = r0;\n            }\n            k = (i+j)|0;\n            r0 = HEAP32[(T+k)>>2]|0;\n            w0 = ((r0 & 0xffff) + (r1 & 0xffff)|0) + c|0;\n            w1 = ((r0 >>> 16) + (r1 >>> 16)|0) + (w0 >>> 16)|0;\n            HEAP32[(T+k)>>2] = (w1 << 16) | (w0 & 0xffff);\n            c = w1 >>> 16;\n        }\n\n        cp( lN, (T+lN)|0, R );\n\n        sfree(lN<<1);\n\n        if ( c | ( (cmp( N, lN, R, lN )|0) <= 0 ) ) {\n            sub( R, lN, N, lN, R, lN )|0;\n        }\n    }\n\n    return {\n        sreset: sreset,\n        salloc: salloc,\n        sfree:  sfree,\n        z: z,\n        tst: tst,\n        neg: neg,\n        cmp: cmp,\n        add: add,\n        sub: sub,\n        mul: mul,\n        sqr: sqr,\n        div: div,\n        mredc: mredc\n    };\n}\n","function is_big_number ( a ) {\n    return ( a instanceof BigNumber );\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\nvar _bigint_heap = new Uint32Array(0x100000),\n    _bigint_asm = bigint_asm( global, null, _bigint_heap.buffer );\n\n///////////////////////////////////////////////////////////////////////////////\n\nvar _BigNumber_ZERO_limbs = new Uint32Array(0);\n\nfunction BigNumber ( num ) {\n    var limbs = _BigNumber_ZERO_limbs,\n        bitlen = 0,\n        sign = 0;\n\n    if ( is_string(num) )\n        num = string_to_bytes(num);\n\n    if ( is_buffer(num) )\n        num = new Uint8Array(num);\n\n    if ( num === undefined ) {\n        // do nothing\n    }\n    else if ( is_number(num) ) {\n        var absnum = Math.abs(num);\n        if ( absnum > 0xffffffff ) {\n            limbs = new Uint32Array(2);\n            limbs[0] = absnum|0;\n            limbs[1] = (absnum/0x100000000)|0;\n            bitlen = 52;\n        }\n        else if ( absnum > 0 ) {\n            limbs = new Uint32Array(1);\n            limbs[0] = absnum;\n            bitlen = 32;\n        }\n        else {\n            limbs = _BigNumber_ZERO_limbs;\n            bitlen = 0;\n        }\n        sign = num < 0 ? -1 : 1;\n    }\n    else if ( is_bytes(num) ) {\n        bitlen = num.length * 8;\n        if ( !bitlen )\n            return BigNumber_ZERO;\n\n        limbs = new Uint32Array( (bitlen + 31) >> 5 );\n        for ( var i = num.length-4; i >= 0 ; i -= 4 ) {\n            limbs[(num.length-4-i)>>2] = (num[i] << 24) | (num[i+1] << 16) | (num[i+2] << 8) | num[i+3];\n        }\n        if ( i === -3 ) {\n            limbs[limbs.length-1] = num[0];\n        }\n        else if ( i === -2 ) {\n            limbs[limbs.length-1] = (num[0] << 8) | num[1];\n        }\n        else if ( i === -1 ) {\n            limbs[limbs.length-1] = (num[0] << 16) | (num[1] << 8) | num[2];\n        }\n\n        sign = 1;\n    }\n    else if ( typeof num === 'object' && num !== null ) {\n        limbs = new Uint32Array( num.limbs );\n        bitlen = num.bitLength;\n        sign = num.sign;\n    }\n    else {\n        throw new TypeError(\"number is of unexpected type\");\n    }\n\n    this.limbs = limbs;\n    this.bitLength = bitlen;\n    this.sign = sign;\n}\n\nfunction BigNumber_toString ( radix ) {\n    radix = radix || 16;\n\n    var limbs = this.limbs,\n        bitlen = this.bitLength,\n        str = '';\n\n    if ( radix === 16 ) {\n        // FIXME clamp last limb to (bitlen % 32)\n        for ( var i = (bitlen+31>>5)-1; i >= 0; i-- ) {\n            var h = limbs[i].toString(16);\n            str += '00000000'.substr(h.length);\n            str += h;\n        }\n\n        str = str.replace( /^0+/, '' );\n\n        if ( !str.length )\n            str = '0';\n    }\n    else {\n        throw new IllegalArgumentError(\"bad radix\");\n    }\n\n    if ( this.sign < 0 )\n        str = '-' + str;\n\n    return str;\n}\n\nfunction BigNumber_toBytes () {\n    var bitlen = this.bitLength,\n        limbs = this.limbs;\n\n    if ( bitlen === 0 )\n        return new Uint8Array(0);\n\n    var bytelen = ( bitlen + 7 ) >> 3,\n        bytes = new Uint8Array(bytelen);\n    for ( var i = 0; i < bytelen; i++ ) {\n        var j = bytelen - i - 1;\n        bytes[i] = limbs[j>>2] >> ( (j & 3) << 3 );\n    }\n\n    return bytes;\n}\n\n// Downgrade to Number\nfunction BigNumber_valueOf () {\n    var limbs = this.limbs,\n        bits = this.bitLength,\n        sign = this.sign;\n\n    if ( !sign )\n        return 0;\n\n    if ( bits <= 32 )\n        return sign * (limbs[0]>>>0);\n\n    if ( bits <= 52 )\n        return sign * ( 0x100000000 * (limbs[1]>>>0) + (limbs[0]>>>0) );\n\n    // normalization\n    var i, l, e = 0;\n    for ( i = limbs.length-1; i >= 0; i-- ) {\n        if ( (l = limbs[i]) === 0 ) continue;\n        while ( ( (l << e) & 0x80000000 ) === 0 ) e++;\n        break;\n    }\n\n    if ( i === 0 )\n        return sign * (limbs[0]>>>0);\n\n    return sign * ( 0x100000 * (( (limbs[i] << e) | ( e ? limbs[i-1] >>> (32-e) : 0 ) )>>>0)\n                             + (( (limbs[i-1] << e) | ( e && i > 1 ? limbs[i-2] >>> (32-e) : 0 ) )>>>12)\n                  ) * Math.pow( 2, 32*i-e-52 );\n}\n\nfunction BigNumber_clamp ( b ) {\n    var limbs = this.limbs,\n        bitlen = this.bitLength;\n\n    // FIXME check b is number and in a valid range\n\n    if ( b >= bitlen )\n        return this;\n\n    var clamped = new BigNumber,\n        n = (b + 31) >> 5,\n        k = b % 32;\n\n    clamped.limbs = new Uint32Array( limbs.subarray(0,n) );\n    clamped.bitLength = b;\n    clamped.sign = this.sign;\n\n    if ( k ) clamped.limbs[n-1] &= (-1 >>> (32-k));\n\n    return clamped;\n}\n\nfunction BigNumber_slice ( f, b ) {\n    if ( !is_number(f) )\n        throw new TypeError(\"TODO\");\n\n    if ( b !== undefined && !is_number(b) )\n        throw new TypeError(\"TODO\");\n\n    var limbs = this.limbs,\n        bitlen = this.bitLength;\n\n    if ( f < 0 )\n        throw new RangeError(\"TODO\");\n\n    if ( f >= bitlen )\n        return BigNumber_ZERO;\n\n    if ( b === undefined || b > bitlen - f )\n        b = bitlen - f;\n\n    var sliced = new BigNumber, slimbs,\n        n = f >> 5, m = (f + b + 31) >> 5, l = (b + 31) >> 5,\n        t = f % 32, k = b % 32;\n\n    slimbs = new Uint32Array(l);\n    if ( t ) {\n        for ( var i = 0; i < m-n-1; i++ ) {\n            slimbs[i] = (limbs[n+i]>>>t) | ( limbs[n+i+1]<<(32-t) );\n        }\n        slimbs[i] = limbs[n+i]>>>t;\n    }\n    else {\n        slimbs.set( limbs.subarray(n, m) );\n    }\n\n    if ( k ) {\n        slimbs[l-1] &= (-1 >>> (32-k));\n    }\n\n    sliced.limbs = slimbs\n    sliced.bitLength = b;\n    sliced.sign = this.sign;\n\n    return sliced;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\nfunction BigNumber_negate () {\n    var negative = new BigNumber;\n\n    negative.limbs = this.limbs;\n    negative.bitLength = this.bitLength;\n    negative.sign = -1 * this.sign;\n\n    return negative;\n}\n\nfunction BigNumber_compare ( that ) {\n    if ( !is_big_number(that) )\n        that = new BigNumber(that);\n\n    var alimbs = this.limbs, alimbcnt = alimbs.length,\n        blimbs = that.limbs, blimbcnt = blimbs.length,\n        z = 0;\n\n    if ( this.sign < that.sign )\n        return -1;\n\n    if ( this.sign > that.sign )\n        return 1;\n\n    _bigint_heap.set( alimbs, 0 );\n    _bigint_heap.set( blimbs, alimbcnt );\n    z = _bigint_asm.cmp( 0, alimbcnt<<2, alimbcnt<<2, blimbcnt<<2 );\n\n    return z * this.sign;\n}\n\nfunction BigNumber_add ( that ) {\n    if ( !is_big_number(that) )\n        that = new BigNumber(that);\n\n    if ( !this.sign )\n        return that;\n\n    if ( !that.sign )\n        return this;\n\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, asign = this.sign,\n        bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length, bsign = that.sign,\n        rbitlen, rlimbcnt, rsign, rof, result = new BigNumber;\n\n    rbitlen = ( abitlen > bbitlen ? abitlen : bbitlen ) + ( asign * bsign > 0 ? 1 : 0 );\n    rlimbcnt = ( rbitlen + 31 ) >> 5;\n\n    _bigint_asm.sreset();\n\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\n        pB = _bigint_asm.salloc( blimbcnt<<2 ),\n        pR = _bigint_asm.salloc( rlimbcnt<<2 );\n\n    _bigint_asm.z( pR-pA+(rlimbcnt<<2), 0, pA );\n\n    _bigint_heap.set( alimbs, pA>>2 );\n    _bigint_heap.set( blimbs, pB>>2 );\n\n    if ( asign * bsign > 0 ) {\n        _bigint_asm.add( pA, alimbcnt<<2, pB, blimbcnt<<2, pR, rlimbcnt<<2 );\n        rsign = asign;\n    }\n    else if ( asign > bsign ) {\n        rof = _bigint_asm.sub( pA, alimbcnt<<2, pB, blimbcnt<<2, pR, rlimbcnt<<2 );\n        rsign = rof ? bsign : asign;\n    }\n    else {\n        rof = _bigint_asm.sub( pB, blimbcnt<<2, pA, alimbcnt<<2, pR, rlimbcnt<<2 );\n        rsign = rof ? asign : bsign;\n    }\n\n    if ( rof )\n        _bigint_asm.neg( pR, rlimbcnt<<2, pR, rlimbcnt<<2 );\n\n    if ( _bigint_asm.tst( pR, rlimbcnt<<2 ) === 0 )\n        return BigNumber_ZERO;\n\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+rlimbcnt ) );\n    result.bitLength = rbitlen;\n    result.sign = rsign;\n\n    return result;\n}\n\nfunction BigNumber_subtract ( that ) {\n    if ( !is_big_number(that) )\n        that = new BigNumber(that);\n\n    return this.add( that.negate() );\n}\n\nfunction BigNumber_multiply ( that ) {\n    if ( !is_big_number(that) )\n        that = new BigNumber(that);\n\n    if ( !this.sign || !that.sign )\n        return BigNumber_ZERO;\n\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length,\n        bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length,\n        rbitlen, rlimbcnt, result = new BigNumber;\n\n    rbitlen = abitlen + bbitlen;\n    rlimbcnt = ( rbitlen + 31 ) >> 5;\n\n    _bigint_asm.sreset();\n\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\n        pB = _bigint_asm.salloc( blimbcnt<<2 ),\n        pR = _bigint_asm.salloc( rlimbcnt<<2 );\n\n    _bigint_asm.z( pR-pA+(rlimbcnt<<2), 0, pA );\n\n    _bigint_heap.set( alimbs, pA>>2 );\n    _bigint_heap.set( blimbs, pB>>2 );\n\n    _bigint_asm.mul( pA, alimbcnt<<2, pB, blimbcnt<<2, pR, rlimbcnt<<2 );\n\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+rlimbcnt ) );\n    result.sign = this.sign * that.sign;\n    result.bitLength = rbitlen;\n\n    return result;\n}\n\nfunction BigNumber_square () {\n    if ( !this.sign )\n        return BigNumber_ZERO;\n\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length,\n        rbitlen, rlimbcnt, result = new BigNumber;\n\n    rbitlen = abitlen << 1;\n    rlimbcnt = ( rbitlen + 31 ) >> 5;\n\n    _bigint_asm.sreset();\n\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\n        pR = _bigint_asm.salloc( rlimbcnt<<2 );\n\n    _bigint_asm.z( pR-pA+(rlimbcnt<<2), 0, pA );\n\n    _bigint_heap.set( alimbs, pA>>2 );\n\n    _bigint_asm.sqr( pA, alimbcnt<<2, pR );\n\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+rlimbcnt ) );\n    result.bitLength = rbitlen;\n    result.sign = 1;\n\n    return result;\n}\n\nfunction BigNumber_divide ( that ) {\n    if ( !is_big_number(that) )\n        that = new BigNumber(that);\n\n    var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length,\n        bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length,\n        qlimbcnt, rlimbcnt, quotient = BigNumber_ZERO, remainder = BigNumber_ZERO;\n\n    _bigint_asm.sreset();\n\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\n        pB = _bigint_asm.salloc( blimbcnt<<2 ),\n        pR = _bigint_asm.salloc( blimbcnt<<2 ),\n        pQ = _bigint_asm.salloc( alimbcnt<<2 );\n\n    _bigint_asm.z( pQ-pA+(alimbcnt<<2), 0, pA );\n\n    _bigint_heap.set( alimbs, pA>>2 );\n    _bigint_heap.set( blimbs, pB>>2 );\n\n    _bigint_asm.div( pA, alimbcnt<<2, pB, blimbcnt<<2, pR, pQ );\n\n    qlimbcnt = _bigint_asm.tst( pQ, alimbcnt<<2 )>>2;\n    if ( qlimbcnt ) {\n        quotient = new BigNumber;\n        quotient.limbs = new Uint32Array( _bigint_heap.subarray( pQ>>2, (pQ>>2)+qlimbcnt ) );\n        quotient.bitLength = abitlen < (qlimbcnt<<5) ? abitlen : (qlimbcnt<<5);\n        quotient.sign = this.sign * that.sign;\n    }\n\n    rlimbcnt = _bigint_asm.tst( pR, blimbcnt<<2 )>>2;\n    if ( rlimbcnt ) {\n        remainder = new BigNumber;\n        remainder.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+rlimbcnt ) );;\n        remainder.bitLength = bbitlen < (rlimbcnt<<5) ? bbitlen : (rlimbcnt<<5);\n        remainder.sign = this.sign;\n    }\n\n    return {\n        quotient: quotient,\n        remainder: remainder\n    };\n}\n\n///////////////////////////////////////////////////////////////////////////////\n\nvar BigNumberPrototype = BigNumber.prototype = new Number;\nBigNumberPrototype.toString = BigNumber_toString;\nBigNumberPrototype.toBytes = BigNumber_toBytes;\nBigNumberPrototype.valueOf = BigNumber_valueOf;\nBigNumberPrototype.clamp = BigNumber_clamp;\nBigNumberPrototype.slice = BigNumber_slice;\n\n///////////////////////////////////////////////////////////////////////////////\n\nBigNumberPrototype.negate = BigNumber_negate;\nBigNumberPrototype.compare = BigNumber_compare;\nBigNumberPrototype.add = BigNumber_add;\nBigNumberPrototype.subtract = BigNumber_subtract;\nBigNumberPrototype.multiply = BigNumber_multiply;\nBigNumberPrototype.square = BigNumber_square;\nBigNumberPrototype.divide = BigNumber_divide;\n\n///////////////////////////////////////////////////////////////////////////////\n\nvar BigNumber_ZERO = new BigNumber(0),\n    BigNumber_ONE  = new BigNumber(1);\n\nObject.freeze(BigNumber_ZERO);\nObject.freeze(BigNumber_ONE);\n","function Number_extGCD ( a, b ) {\n    var sa = ( a < 0 ) ? -1 : 1,\n        sb = ( b < 0 ) ? -1 : 1,\n        xi = 1, xj = 0,\n        yi = 0, yj = 1,\n        r, q, t, a_cmp_b;\n\n    a *= sa;\n    b *= sb;\n\n    a_cmp_b = ( a < b );\n    if ( a_cmp_b ) {\n        t = a; a = b, b = t;\n        t = sa; sa = sb; sb = t;\n    }\n\n    q = Math.floor( a / b ), r = a - q*b;\n    while ( r ) {\n        t = xi - q*xj, xi = xj, xj = t;\n        t = yi - q*yj, yi = yj, yj = t;\n        a = b, b = r;\n\n        q = Math.floor( a / b ), r = a - q*b;\n    }\n\n    xj *= sa;\n    yj *= sb;\n\n    if ( a_cmp_b ) {\n        t = xj; xj = yj, yj = t;\n    }\n\n    return {\n        gcd: b,\n        x: xj,\n        y: yj\n    };\n}\n\nfunction BigNumber_extGCD ( a, b ) {\n    if ( !is_big_number(a) )\n        a = new BigNumber(a);\n\n    if ( !is_big_number(b) )\n        b = new BigNumber(b);\n\n    var sa = a.sign, sb = b.sign;\n\n    if ( sa < 0 )\n        a = a.negate();\n\n    if ( sb < 0 )\n        b = b.negate();\n\n    var a_cmp_b = a.compare(b);\n    if ( a_cmp_b < 0 ) {\n        var t = a; a = b, b = t;\n        t = sa; sa = sb; sb = t;\n    }\n\n    var xi = BigNumber_ONE, xj = BigNumber_ZERO, lx = b.bitLength,\n        yi = BigNumber_ZERO, yj = BigNumber_ONE, ly = a.bitLength,\n        z, r, q;\n\n    z = a.divide(b);\n    while ( (r = z.remainder) !== BigNumber_ZERO ) {\n        q = z.quotient;\n\n        z = xi.subtract( q.multiply(xj).clamp(lx) ).clamp(lx), xi = xj, xj = z;\n        z = yi.subtract( q.multiply(yj).clamp(ly) ).clamp(ly), yi = yj, yj = z;\n\n        a = b, b = r;\n\n        z = a.divide(b);\n    }\n\n    if ( sa < 0 )\n        xj = xj.negate();\n\n    if ( sb < 0 )\n        yj = yj.negate();\n\n    if ( a_cmp_b < 0 ) {\n        var t = xj; xj = yj, yj = t;\n    }\n\n    return {\n        gcd: b,\n        x: xj,\n        y: yj\n    };\n}\n","/**\n * Modulus\n */\nfunction Modulus () {\n    BigNumber.apply( this, arguments );\n\n    if ( this.valueOf() < 1 )\n        throw new RangeError();\n\n    if ( this.bitLength <= 32 )\n        return;\n\n    var comodulus;\n\n    if ( this.limbs[0] & 1 ) {\n        var bitlen = ( (this.bitLength+31) & -32 ) + 1, limbs = new Uint32Array( (bitlen+31) >> 5 );\n        limbs[limbs.length-1] = 1;\n        comodulus = new BigNumber();\n        comodulus.sign = 1;\n        comodulus.bitLength = bitlen;\n        comodulus.limbs = limbs;\n\n        var k = Number_extGCD( 0x100000000, this.limbs[0] ).y;\n        this.coefficient = k < 0 ? -k : 0x100000000-k;\n    }\n    else {\n        /**\n         * TODO even modulus reduction\n         * Modulus represented as `N = 2^U * V`, where `V` is odd and thus `GCD(2^U, V) = 1`.\n         * Calculation `A = TR' mod V` is made as for odd modulo using Montgomery method.\n         * Calculation `B = TR' mod 2^U` is easy as modulus is a power of 2.\n         * Using Chinese Remainder Theorem and Garner's Algorithm restore `TR' mod N` from `A` and `B`.\n         */\n        return;\n    }\n\n    this.comodulus = comodulus;\n    this.comodulusRemainder = comodulus.divide(this).remainder;\n    this.comodulusRemainderSquare = comodulus.square().divide(this).remainder;\n}\n\n/**\n * Modular reduction\n */\nfunction Modulus_reduce ( a ) {\n    if ( !is_big_number(a) )\n        a = new BigNumber(a);\n\n    if ( a.bitLength <= 32 && this.bitLength <= 32 )\n        return new BigNumber( a.valueOf() % this.valueOf() );\n\n    if ( a.compare(this) < 0 )\n        return a;\n\n    return a.divide(this).remainder;\n}\n\n/**\n * Modular inverse\n */\nfunction Modulus_inverse ( a ) {\n    a = this.reduce(a);\n\n    var r = BigNumber_extGCD( this, a );\n    if ( r.gcd.valueOf() !== 1 ) return null;\n\n    r = r.y;\n    if ( r.sign < 0 ) r = r.add(this).clamp(this.bitLength);\n\n    return r;\n}\n\n/**\n * Modular exponentiation\n */\nfunction Modulus_power ( g, e ) {\n    if ( !is_big_number(g) )\n        g = new BigNumber(g);\n\n    if ( !is_big_number(e) )\n        e = new BigNumber(e);\n\n    // count exponent set bits\n    var c = 0;\n    for ( var i = 0; i < e.limbs.length; i++ ) {\n        var t = e.limbs[i];\n        while ( t ) {\n            if ( t & 1 ) c++;\n            t >>>= 1;\n        }\n    }\n\n    // window size parameter\n    var k = 8;\n    if ( e.bitLength <= 4536 ) k = 7;\n    if ( e.bitLength <= 1736 ) k = 6;\n    if ( e.bitLength <= 630 ) k = 5;\n    if ( e.bitLength <= 210 ) k = 4;\n    if ( e.bitLength <= 60 ) k = 3;\n    if ( e.bitLength <= 12 ) k = 2;\n    if ( c <= (1 << (k-1)) ) k = 1;\n\n    // montgomerize base\n    g = _Montgomery_reduce( this.reduce(g).multiply(this.comodulusRemainderSquare), this );\n\n    // precompute odd powers\n    var g2 = _Montgomery_reduce( g.square(), this ),\n        gn = new Array( 1 << (k-1) );\n    gn[0] = g;\n    gn[1] = _Montgomery_reduce( g.multiply(g2), this );\n    for ( var i = 2; i < (1 << (k-1)); i++ ) {\n        gn[i] = _Montgomery_reduce( gn[i-1].multiply(g2), this );\n    }\n\n    // perform exponentiation\n    var u = this.comodulusRemainder,\n        r = u;\n    for ( var i = e.limbs.length-1; i >= 0; i-- ) {\n        var t = e.limbs[i];\n        for ( var j = 32; j > 0; ) {\n            if ( t & 0x80000000 ) {\n                var n = t >>> (32-k), l = k;\n                while ( (n & 1) === 0 ) { n >>>= 1; l--; }\n                var m = gn[n>>>1];\n                while ( n ) { n >>>= 1; if ( r !== u ) r = _Montgomery_reduce( r.square(), this ); }\n                r = ( r !== u ) ? _Montgomery_reduce( r.multiply(m), this ) : m;\n                t <<= l, j -= l;\n            }\n            else {\n                if ( r !== u ) r = _Montgomery_reduce( r.square(), this );\n                t <<= 1, j--;\n            }\n        }\n    }\n\n    // de-montgomerize result\n    r = _Montgomery_reduce( r, this );\n\n    return r;\n}\n\nfunction _Montgomery_reduce ( a, n ) {\n    var alimbs = a.limbs, alimbcnt = alimbs.length,\n        nlimbs = n.limbs, nlimbcnt = nlimbs.length,\n        y = n.coefficient;\n\n    _bigint_asm.sreset();\n\n    var pA = _bigint_asm.salloc( alimbcnt<<2 ),\n        pN = _bigint_asm.salloc( nlimbcnt<<2 ),\n        pR = _bigint_asm.salloc( nlimbcnt<<2 );\n\n    _bigint_asm.z( pR-pA+(nlimbcnt<<2), 0, pA );\n\n    _bigint_heap.set( alimbs, pA>>2 );\n    _bigint_heap.set( nlimbs, pN>>2 );\n\n    _bigint_asm.mredc( pA, alimbcnt<<2, pN, nlimbcnt<<2, y, pR );\n\n    var result = new BigNumber();\n    result.limbs = new Uint32Array( _bigint_heap.subarray( pR>>2, (pR>>2)+nlimbcnt ) );\n    result.bitLength = n.bitLength;\n    result.sign = 1;\n\n    return result;\n}\n\nvar ModulusPrototype = Modulus.prototype = new BigNumber;\nModulusPrototype.reduce = Modulus_reduce;\nModulusPrototype.inverse = Modulus_inverse;\nModulusPrototype.power = Modulus_power;\n","// Tests if the number supplied is a Miller-Rabin strong probable prime\nfunction _BigNumber_isMillerRabinProbablePrime ( rounds ) {\n    var t = new BigNumber(this),\n        s = 0;\n    t.limbs[0] -= 1;\n    while ( t.limbs[s>>5] === 0 ) s += 32;\n    while ( ( ( t.limbs[s>>5] >> (s & 31) ) & 1 ) === 0 ) s++;\n    t = t.slice(s);\n\n    var m = new Modulus(this),\n        m1 = this.subtract(BigNumber_ONE),\n        a = new BigNumber(this),\n        l = this.limbs.length-1;\n    while ( a.limbs[l] === 0 ) l--;\n\n    while ( --rounds >= 0 ) {\n        Random_getValues(a.limbs);\n        if ( a.limbs[0] < 2 ) a.limbs[0] += 2;\n        while ( a.compare(m1) >= 0 ) a.limbs[l] >>>= 1;\n\n        var x = m.power( a, t );\n        if ( x.compare(BigNumber_ONE) === 0 ) continue;\n        if ( x.compare(m1) === 0 ) continue;\n\n        var c = s;\n        while ( --c > 0 ) {\n            x = x.square().divide(m).remainder;\n            if ( x.compare(BigNumber_ONE) === 0 ) return false;\n            if ( x.compare(m1) === 0 ) break;\n        }\n\n        if ( c === 0 ) return false;\n    }\n\n    return true;\n}\n\nfunction BigNumber_isProbablePrime ( paranoia ) {\n    paranoia = paranoia || 80;\n\n    var limbs = this.limbs,\n        i = 0;\n\n    // Oddity test\n    // (50% false positive probability)\n    if ( ( limbs[0] & 1 ) === 0 ) return false;\n    if ( paranoia <= 1 ) return true;\n\n    // Magic divisors (3, 5, 17) test\n    // (~25% false positive probability)\n    var s3 = 0, s5 = 0, s17 = 0;\n    for ( i = 0; i < limbs.length; i++ ) {\n        var l3 = limbs[i];\n        while ( l3 ) {\n            s3 += (l3 & 3);\n            l3 >>>= 2;\n        }\n\n        var l5 = limbs[i];\n        while ( l5 ) {\n            s5 += (l5 & 3);\n            l5 >>>= 2;\n            s5 -= (l5 & 3);\n            l5 >>>= 2;\n        }\n\n        var l17 = limbs[i];\n        while ( l17 ) {\n            s17 += (l17 & 15);\n            l17 >>>= 4;\n            s17 -= (l17 & 15);\n            l17 >>>= 4;\n        }\n    }\n    if ( !(s3 % 3) || !(s5 % 5) || !(s17 % 17) ) return false;\n    if ( paranoia <= 2 ) return true;\n\n    // Miller-Rabin test\n    // (≤ 4^(-k) false positive probability)\n    return _BigNumber_isMillerRabinProbablePrime.call( this, paranoia >>> 1 );\n}\n\n// Small primes for trail division\nvar _primes = [ 2, 3 /* and so on, computed lazily */ ];\n\n// Returns an array populated with first n primes.\nfunction _small_primes ( n ) {\n    if ( _primes.length >= n )\n        return _primes.slice( 0, n );\n\n    for ( var p = _primes[_primes.length-1] + 2; _primes.length < n; p += 2 ) {\n        for ( var i = 0, d = _primes[i]; d*d <= p; d = _primes[++i] ) {\n            if ( p % d == 0 ) break;\n        }\n        if ( d*d > p ) _primes.push(p);\n    }\n\n    return _primes;\n}\n\n// Returns strong pseudoprime of a specified bit length\nfunction BigNumber_randomProbablePrime ( bitlen, filter ) {\n    var limbcnt = (bitlen + 31) >> 5,\n        prime = new BigNumber({ sign: 1, bitLength: bitlen, limbs: limbcnt }),\n        limbs = prime.limbs;\n\n    // Number of small divisors to try that minimizes the total cost of the trial division\n    // along with the first round of Miller-Rabin test for a certain bit length.\n    var k = 10000;\n    if ( bitlen <= 512 ) k = 2200;\n    if ( bitlen <= 256 ) k = 600;\n\n    var divisors = _small_primes(k),\n        remainders = new Uint32Array(k);\n\n    // Number of Miller-Rabin iterations for an error rate  of less than 2^-80\n    // Damgaard, Landrock, Pomerance: Average case error estimates for the strong probable prime test.\n    var s = (bitlen * global.Math.LN2) | 0,\n        r = 27;\n    if ( bitlen >= 250 ) r = 12;\n    if ( bitlen >= 450 ) r = 6;\n    if ( bitlen >= 850 ) r = 3;\n    if ( bitlen >= 1300 ) r = 2;\n\n    while ( true ) {\n        // populate `prime` with random bits, clamp to the appropriate bit length\n        Random_getValues(limbs);\n        limbs[0] |= 1;\n        limbs[limbcnt-1] |= 1 << ((bitlen - 1) & 31);\n        if ( bitlen & 31 ) limbs[limbcnt-1] &= pow2_ceil((bitlen + 1) & 31) - 1;\n\n        // remainders from division to small primes\n        remainders[0] = 1;\n        for ( var i = 1; i < k; i++ ) {\n            remainders[i] = prime.divide( divisors[i] ).remainder.valueOf();\n        }\n\n        // try no more than `s` subsequent candidates\n        seek:\n        for ( var j = 0; j < s; j += 2, limbs[0] += 2 ) {\n            // check for small factors\n            for ( var i = 1; i < k; i++ ) {\n                if ( ( remainders[i] + j ) % divisors[i] === 0 ) continue seek;\n            }\n\n            // additional check just before the heavy lifting\n            if ( typeof filter === 'function' && !filter(prime) ) continue;\n\n            // proceed to Miller-Rabin test\n            if ( _BigNumber_isMillerRabinProbablePrime.call( prime, r ) ) return prime;\n        }\n    }\n}\n\nBigNumberPrototype.isProbablePrime = BigNumber_isProbablePrime;\n\nBigNumber.randomProbablePrime = BigNumber_randomProbablePrime;\n","function RSA ( options ) {\n    options = options || {};\n\n    this.key = null;\n    this.result = null;\n\n    this.reset(options);\n}\n\nfunction RSA_reset ( options ) {\n    options = options || {};\n\n    this.result = null;\n\n    var key = options.key\n    if ( key !== undefined ) {\n        if ( key instanceof Array ) {\n            var l = key.length;\n            if ( l !== 2 && l !== 3 && l !== 8 )\n                throw new SyntaxError(\"unexpected key type\");\n\n            var k = [];\n            k[0] = new Modulus( key[0] );\n            k[1] = new BigNumber( key[1] );\n            if ( l > 2 ) {\n                k[2] = new BigNumber( key[2] );\n            }\n            if ( l > 3 ) {\n                k[3] = new Modulus( key[3] );\n                k[4] = new Modulus( key[4] );\n                k[5] = new BigNumber( key[5] );\n                k[6] = new BigNumber( key[6] );\n                k[7] = new BigNumber( key[7] );\n            }\n\n            this.key = k;\n        }\n        else {\n            throw new TypeError(\"unexpected key type\");\n        }\n    }\n\n    return this;\n}\n\nfunction RSA_encrypt ( data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( is_string(data) )\n        data = string_to_bytes(data);\n\n    if ( is_buffer(data) )\n        data = new Uint8Array(data);\n\n    var msg;\n    if ( is_bytes(data) ) {\n        msg = new BigNumber(data);\n    }\n    else if ( is_big_number(data) ) {\n        msg = data;\n    }\n    else {\n        throw new TypeError(\"unexpected data type\");\n    }\n\n    if ( this.key[0].compare(msg) <= 0 )\n        throw new RangeError(\"data too large\");\n\n    var m = this.key[0],\n        e = this.key[1];\n\n    var result = m.power( msg, e ).toBytes();\n\n    var bytelen = m.bitLength + 7 >> 3;\n    if ( result.length < bytelen ) {\n        var r = new Uint8Array(bytelen);\n        r.set( result, bytelen - result.length );\n        result = r;\n    }\n\n    this.result = result;\n\n    return this;\n}\n\nfunction RSA_decrypt ( data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    if ( this.key.length < 3 )\n        throw new IllegalStateError(\"key isn't suitable for decription\");\n\n    if ( is_string(data) )\n        data = string_to_bytes(data);\n\n    if ( is_buffer(data) )\n        data = new Uint8Array(data);\n\n    var msg;\n    if ( is_bytes(data) ) {\n        msg = new BigNumber(data);\n    }\n    else if ( is_big_number(data) ) {\n        msg = data;\n    }\n    else {\n        throw new TypeError(\"unexpected data type\");\n    }\n\n    if ( this.key[0].compare(msg) <= 0 )\n        throw new RangeError(\"data too large\");\n\n    var result;\n    if ( this.key.length > 3 ) {\n        var m = this.key[0],\n            p = this.key[3],\n            q = this.key[4],\n            dp = this.key[5],\n            dq = this.key[6],\n            u = this.key[7];\n\n        var x = p.power( msg, dp ),\n            y = q.power( msg, dq );\n\n        var t = x.subtract(y);\n        while ( t.sign < 0 ) t = t.add(p);\n\n        var h = p.reduce( u.multiply(t) );\n\n        result = h.multiply(q).add(y).clamp(m.bitLength).toBytes();\n    }\n    else {\n        var m = this.key[0],\n            d = this.key[2];\n\n        result = m.power( msg, d ).toBytes();\n    }\n\n    var bytelen = m.bitLength + 7 >> 3;\n    if ( result.length < bytelen ) {\n        var r = new Uint8Array(bytelen);\n        r.set( result, bytelen - result.length );\n        result = r;\n    }\n\n    this.result = result;\n\n    return this;\n}\n\nvar RSA_prototype = RSA.prototype;\nRSA_prototype.reset = RSA_reset;\nRSA_prototype.encrypt = RSA_encrypt;\nRSA_prototype.decrypt = RSA_decrypt;\n","/**\n * Generate RSA key pair\n *\n * @param bitlen desired modulus length, default is 2048\n * @param e public exponent, default is 65537\n */\nfunction RSA_generateKey ( bitlen, e ) {\n    bitlen = bitlen || 2048;\n    e      = e      || 65537;\n\n    if ( bitlen < 512 )\n        throw new IllegalArgumentError(\"bit length is too small\");\n\n    if ( is_string(e) )\n        e = string_to_bytes(e);\n\n    if ( is_buffer(e) )\n        e = new Uint8Array(e);\n\n    if ( is_bytes(e) || is_number(e) || is_big_number(e) ) {\n        e = new BigNumber(e);\n    }\n    else {\n        throw new TypeError(\"unexpected exponent type\");\n    }\n\n    if ( ( e.limbs[0] & 1 ) === 0 )\n        throw new IllegalArgumentError(\"exponent must be an odd number\");\n\n    var m, e, d, p, q, p1, q1, dp, dq, u;\n\n    p = BigNumber_randomProbablePrime(\n        bitlen >> 1,\n        function ( p ) {\n            p1 = new BigNumber(p); p1.limbs[0] -= 1;\n            return BigNumber_extGCD( p1, e ).gcd.valueOf() == 1;\n        }\n    );\n\n    q = BigNumber_randomProbablePrime(\n        bitlen - (bitlen >> 1),\n        function ( q ) {\n            m = new Modulus( p.multiply(q) );\n            if ( !( m.limbs[ ( (bitlen + 31) >> 5 ) - 1 ] >>> ( (bitlen - 1) & 31) ) ) return false;\n            q1 = new BigNumber(q); q1.limbs[0] -= 1;\n            return BigNumber_extGCD( q1, e ).gcd.valueOf() == 1;\n        }\n    );\n\n    d = new Modulus( p1.multiply(q1) ).inverse(e);\n\n    dp = d.divide(p1).remainder,\n    dq = d.divide(q1).remainder;\n\n    p = new Modulus(p),\n    q = new Modulus(q);\n\n    var u = p.inverse(q);\n\n    return [ m, e, d, p, q, dp, dq, u ];\n}\n\nRSA.generateKey = RSA_generateKey;\n","function RSA_OAEP ( options ) {\n    options = options || {};\n\n    if ( !options.hash )\n        throw new SyntaxError(\"option 'hash' is required\");\n\n    if ( !options.hash.HASH_SIZE )\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\n\n    this.hash = options.hash;\n\n    this.label = null;\n\n    this.reset(options);\n}\n\nfunction RSA_OAEP_reset ( options ) {\n    options = options || {};\n\n    var label = options.label;\n    if ( label !== undefined ) {\n        if ( is_buffer(label) || is_bytes(label) ) {\n            label = new Uint8Array(label);\n        }\n        else if ( is_string(label) ) {\n            label = string_to_bytes(label);\n        }\n        else {\n            throw new TypeError(\"unexpected label type\");\n        }\n\n        this.label = ( label.length > 0 ) ? label : null;\n    }\n    else {\n        this.label = null;\n    }\n\n    RSA_reset.call( this, options );\n}\n\nfunction RSA_OAEP_encrypt ( data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    var key_size = Math.ceil( this.key[0].bitLength / 8 ),\n        hash_size = this.hash.HASH_SIZE,\n        data_length = data.byteLength || data.length || 0,\n        ps_length = key_size - data_length - 2*hash_size - 2;\n\n    if ( data_length > key_size - 2*this.hash.HASH_SIZE - 2 )\n        throw new IllegalArgumentError(\"data too large\");\n\n    var message = new Uint8Array(key_size),\n        seed = message.subarray( 1, hash_size + 1 ),\n        data_block = message.subarray( hash_size + 1 );\n\n    if ( is_bytes(data) ) {\n        data_block.set( data, hash_size + ps_length + 1 );\n    }\n    else if ( is_buffer(data) ) {\n        data_block.set( new Uint8Array(data), hash_size + ps_length + 1 );\n    }\n    else if ( is_string(data) ) {\n        data_block.set( string_to_bytes(data), hash_size + ps_length + 1 );\n    }\n    else {\n        throw new TypeError(\"unexpected data type\");\n    }\n\n    data_block.set( this.hash.reset().process( this.label || '' ).finish().result, 0 );\n    data_block[ hash_size + ps_length ] = 1;\n\n    Random_getValues(seed);\n\n    var data_block_mask = RSA_MGF1_generate.call( this, seed, data_block.length );\n    for ( var i = 0; i < data_block.length; i++ )\n        data_block[i] ^= data_block_mask[i];\n\n    var seed_mask = RSA_MGF1_generate.call( this, data_block, seed.length );\n    for ( var i = 0; i < seed.length; i++ )\n        seed[i] ^= seed_mask[i];\n\n    RSA_encrypt.call( this, message );\n\n    return this;\n}\n\nfunction RSA_OAEP_decrypt ( data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    var key_size = Math.ceil( this.key[0].bitLength / 8 ),\n        hash_size = this.hash.HASH_SIZE,\n        data_length = data.byteLength || data.length || 0;\n\n    if ( data_length !== key_size )\n        throw new IllegalArgumentError(\"bad data\");\n\n    RSA_decrypt.call( this, data );\n\n    var z = this.result[0],\n        seed = this.result.subarray( 1, hash_size + 1 ),\n        data_block = this.result.subarray( hash_size + 1 );\n\n    if ( z !== 0 )\n        throw new SecurityError(\"decryption failed\");\n\n    var seed_mask = RSA_MGF1_generate.call( this, data_block, seed.length );\n    for ( var i = 0; i < seed.length; i++ )\n        seed[i] ^= seed_mask[i];\n\n    var data_block_mask = RSA_MGF1_generate.call( this, seed, data_block.length );\n    for ( var i = 0; i < data_block.length; i++ )\n        data_block[i] ^= data_block_mask[i];\n\n    var lhash = this.hash.reset().process( this.label || '' ).finish().result;\n    for ( var i = 0; i < hash_size; i++ ) {\n        if ( lhash[i] !== data_block[i] )\n            throw new SecurityError(\"decryption failed\");\n    }\n\n    var ps_end = hash_size;\n    for ( ; ps_end < data_block.length; ps_end++ ) {\n        var psz = data_block[ps_end];\n        if ( psz === 1 )\n            break;\n        if ( psz !== 0 )\n            throw new SecurityError(\"decryption failed\");\n    }\n    if ( ps_end === data_block.length )\n        throw new SecurityError(\"decryption failed\");\n\n    this.result = data_block.subarray( ps_end + 1 );\n\n    return this;\n}\n\nfunction RSA_MGF1_generate( seed, length ) {\n    seed = seed || '';\n    length = length || 0;\n\n    var hash_size = this.hash.HASH_SIZE;\n//    if ( length > (hash_size * 0x100000000) )\n//        throw new IllegalArgumentError(\"mask length too large\");\n\n    var mask = new Uint8Array(length),\n        counter = new Uint8Array(4),\n        chunks = Math.ceil( length / hash_size );\n    for ( var i = 0; i < chunks; i++ ) {\n        counter[0] = i >>> 24,\n        counter[1] = (i >>> 16) & 255,\n        counter[2] = (i >>> 8) & 255,\n        counter[3] = i & 255;\n\n        var submask = mask.subarray( i * hash_size );\n\n        var chunk = this.hash.reset().process(seed).process(counter).finish().result;\n        if ( chunk.length > submask.length ) chunk = chunk.subarray( 0, submask.length );\n\n        submask.set(chunk);\n    }\n\n    return mask;\n}\n\nfunction RSA_PSS ( options ) {\n    options = options || {};\n\n    if ( !options.hash )\n        throw new SyntaxError(\"option 'hash' is required\");\n\n    if ( !options.hash.HASH_SIZE )\n        throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");\n\n    this.hash = options.hash;\n\n    this.saltLength = 4;\n\n    this.reset(options);\n}\n\nfunction RSA_PSS_reset ( options ) {\n    options = options || {};\n\n    RSA_reset.call( this, options );\n\n    var slen = options.saltLength;\n    if ( slen !== undefined ) {\n        if ( !is_number(slen) || slen < 0 )\n            throw new TypeError(\"saltLength should be a non-negative number\");\n\n        if ( this.key !== null && Math.ceil( ( this.key[0].bitLength - 1 ) / 8 ) < this.hash.HASH_SIZE + slen + 2 )\n            throw new SyntaxError(\"saltLength is too large\");\n\n        this.saltLength = slen;\n    }\n    else {\n        this.saltLength = 4;\n    }\n}\n\nfunction RSA_PSS_sign ( data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    var key_bits = this.key[0].bitLength,\n        hash_size = this.hash.HASH_SIZE,\n        message_length = Math.ceil( ( key_bits - 1 ) / 8 ),\n        salt_length = this.saltLength,\n        ps_length = message_length - salt_length - hash_size - 2;\n\n    var message = new Uint8Array(message_length),\n        h_block = message.subarray( message_length - hash_size - 1, message_length - 1 ),\n        d_block = message.subarray( 0, message_length - hash_size - 1 ),\n        d_salt = d_block.subarray( ps_length + 1 );\n\n    var m_block = new Uint8Array( 8 + hash_size + salt_length ),\n        m_hash = m_block.subarray( 8, 8 + hash_size ),\n        m_salt = m_block.subarray( 8 + hash_size );\n\n    m_hash.set( this.hash.reset().process(data).finish().result );\n\n    if ( salt_length > 0 )\n        Random_getValues(m_salt);\n\n    d_block[ps_length] = 1;\n    d_salt.set(m_salt);\n\n    h_block.set( this.hash.reset().process(m_block).finish().result );\n\n    var d_block_mask = RSA_MGF1_generate.call( this, h_block, d_block.length );\n    for ( var i = 0; i < d_block.length; i++ )\n        d_block[i] ^= d_block_mask[i];\n\n    message[message_length-1] = 0xbc;\n\n    var zbits = 8*message_length - key_bits + 1;\n    if ( zbits % 8 ) message[0] &= (0xff >>> zbits);\n\n    RSA_decrypt.call( this, message );\n\n    return this;\n}\n\nfunction RSA_PSS_verify ( signature, data ) {\n    if ( !this.key )\n        throw new IllegalStateError(\"no key is associated with the instance\");\n\n    var key_bits = this.key[0].bitLength,\n        hash_size = this.hash.HASH_SIZE,\n        message_length = Math.ceil( ( key_bits - 1 ) / 8 ),\n        salt_length = this.saltLength,\n        ps_length = message_length - salt_length - hash_size - 2;\n\n    RSA_encrypt.call( this, signature );\n\n    var message = this.result;\n    if ( message[message_length-1] !== 0xbc )\n        throw new SecurityError(\"bad signature\");\n\n    var h_block = message.subarray( message_length - hash_size - 1, message_length - 1 ),\n        d_block = message.subarray( 0, message_length - hash_size - 1 ),\n        d_salt = d_block.subarray( ps_length + 1 );\n\n    var zbits = 8*message_length - key_bits + 1;\n    if ( (zbits % 8) && (message[0] >>> (8-zbits)) )\n        throw new SecurityError(\"bad signature\");\n\n    var d_block_mask = RSA_MGF1_generate.call( this, h_block, d_block.length );\n    for ( var i = 0; i < d_block.length; i++ )\n        d_block[i] ^= d_block_mask[i];\n\n    if ( zbits % 8 ) message[0] &= (0xff >>> zbits);\n\n    for ( var i = 0; i < ps_length; i++ ) {\n        if ( d_block[i] !== 0 )\n            throw new SecurityError(\"bad signature\");\n    }\n    if ( d_block[ps_length] !== 1 )\n        throw new SecurityError(\"bad signature\");\n\n    var m_block = new Uint8Array( 8 + hash_size + salt_length ),\n        m_hash = m_block.subarray( 8, 8 + hash_size ),\n        m_salt = m_block.subarray( 8 + hash_size );\n\n    m_hash.set( this.hash.reset().process(data).finish().result );\n    m_salt.set( d_salt );\n\n    var h_block_verify = this.hash.reset().process(m_block).finish().result;\n    for ( var i = 0; i < hash_size; i++ ) {\n        if ( h_block[i] !== h_block_verify[i] )\n            throw new SecurityError(\"bad signature\");\n    }\n\n    return this;\n}\n\nvar RSA_OAEP_prototype = RSA_OAEP.prototype;\nRSA_OAEP_prototype.reset = RSA_OAEP_reset;\nRSA_OAEP_prototype.encrypt = RSA_OAEP_encrypt;\nRSA_OAEP_prototype.decrypt = RSA_OAEP_decrypt;\n\nvar RSA_PSS_prototype = RSA_PSS.prototype;\nRSA_PSS_prototype.reset = RSA_PSS_reset;\nRSA_PSS_prototype.sign = RSA_PSS_sign;\nRSA_PSS_prototype.verify = RSA_PSS_verify;\n","/**\n * RSA keygen exports\n */\nfunction rsa_generate_key ( bitlen, e ) {\n    if ( bitlen === undefined ) throw new SyntaxError(\"bitlen required\");\n    if ( e === undefined ) throw new SyntaxError(\"e required\");\n    var key = RSA_generateKey( bitlen, e );\n    for ( var i = 0; i < key.length; i++ ) {\n        if ( is_big_number(key[i]) )\n            key[i] = key[i].toBytes();\n    }\n    return key;\n}\n\nexports.RSA = {\n    generateKey: rsa_generate_key\n};\n","/**\n * RSA-OAEP-SHA1 exports\n */\n\nfunction rsa_oaep_sha1_encrypt_bytes ( data, key, label ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    return (new RSA_OAEP({ hash: get_sha1_instance(), key: key, label: label })).encrypt(data).result;\n}\n\nfunction rsa_oaep_sha1_decrypt_bytes ( data, key, label ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    return (new RSA_OAEP({ hash: get_sha1_instance(), key: key, label: label })).decrypt(data).result;\n}\n\nexports.RSA_OAEP = RSA_OAEP;\n\nexports.RSA_OAEP_SHA1 = {\n    encrypt: rsa_oaep_sha1_encrypt_bytes,\n    decrypt: rsa_oaep_sha1_decrypt_bytes\n};\n","/**\n * RSA-OAEP-SHA256 exports\n */\n\nfunction rsa_oaep_sha256_encrypt_bytes ( data, key, label ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    return (new RSA_OAEP({ hash: get_sha256_instance(), key: key, label: label })).encrypt(data).result;\n}\n\nfunction rsa_oaep_sha256_decrypt_bytes ( data, key, label ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    return (new RSA_OAEP({ hash: get_sha256_instance(), key: key, label: label })).decrypt(data).result;\n}\n\nexports.RSA_OAEP = RSA_OAEP;\n\nexports.RSA_OAEP_SHA256 = {\n    encrypt: rsa_oaep_sha256_encrypt_bytes,\n    decrypt: rsa_oaep_sha256_decrypt_bytes\n};\n","/**\n * RSA-PSS-SHA1 exports\n */\n\nfunction rsa_pss_sha1_sign_bytes ( data, key, slen ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    return (new RSA_PSS({ hash: get_sha1_instance(), key: key, saltLength: slen })).sign(data).result;\n}\n\nfunction rsa_pss_sha1_verify_bytes ( signature, data, key, slen ) {\n    if ( signature === undefined ) throw new SyntaxError(\"signature required\");\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    try {\n        (new RSA_PSS({ hash: get_sha1_instance(), key: key, saltLength: slen })).verify(signature, data);\n        return true;\n    }\n    catch ( e ) {\n        if ( !( e instanceof SecurityError ) )\n            throw e;\n    }\n    return false;\n}\n\nexports.RSA_PSS = RSA_PSS;\n\nexports.RSA_PSS_SHA1 = {\n    sign: rsa_pss_sha1_sign_bytes,\n    verify: rsa_pss_sha1_verify_bytes\n};\n","/**\n * RSA-PSS-SHA256 exports\n */\n\nfunction rsa_pss_sha256_sign_bytes ( data, key, slen ) {\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    return (new RSA_PSS({ hash: get_sha256_instance(), key: key, saltLength: slen })).sign(data).result;\n}\n\nfunction rsa_pss_sha256_verify_bytes ( signature, data, key, slen ) {\n    if ( signature === undefined ) throw new SyntaxError(\"signature required\");\n    if ( data === undefined ) throw new SyntaxError(\"data required\");\n    if ( key === undefined ) throw new SyntaxError(\"key required\");\n    try {\n        (new RSA_PSS({ hash: get_sha256_instance(), key: key, saltLength: slen })).verify(signature, data);\n        return true;\n    }\n    catch ( e ) {\n        if ( !( e instanceof SecurityError ) )\n            throw e;\n    }\n    return false;\n}\n\nexports.RSA_PSS = RSA_PSS;\n\nexports.RSA_PSS_SHA256 = {\n    sign: rsa_pss_sha256_sign_bytes,\n    verify: rsa_pss_sha256_verify_bytes\n};\n","/**\n * Util exports\n */\n\nexports.string_to_bytes = string_to_bytes;\nexports.hex_to_bytes = hex_to_bytes;\nexports.base64_to_bytes = base64_to_bytes;\nexports.bytes_to_string = bytes_to_string;\nexports.bytes_to_hex = bytes_to_hex;\nexports.bytes_to_base64 = bytes_to_base64;\n","/**\n * Error definitions\n */\n\nglobal.IllegalStateError = IllegalStateError;\nglobal.IllegalArgumentError = IllegalArgumentError;\nglobal.SecurityError = SecurityError;\n","/**\n * Asm.js module w/ low-level core functions\n *\n * Heap layout:\n * 0x0000   encryption key schedule\n * 0x0400   decryption key schedule\n * 0x0800   sbox\n * 0x0c00   inv sbox\n * 0x1000   encryption tables\n * 0x2000   decryption tables\n * 0x3000   reserved (GCM multiplication table)\n * 0x4000   data\n *\n * @protected\n */\nvar AES_asm = function () {\n    \"use strict\";\n\n    /**\n     * Galois Field stuff init flag\n     * @private\n     */\n    var ginit_done = false;\n\n    /**\n     * Galois Field exponentiation and logarithm tables for 3 (the generator)\n     * @private\n     */\n    var gexp3, glog3;\n\n    /**\n     * Init Galois Field tables\n     * @private\n     */\n    function ginit () {\n        gexp3 = [],\n        glog3 = [];\n\n        var a = 1, c, d;\n        for ( c = 0; c < 255; c++ ) {\n            gexp3[c] = a;\n\n            // Multiply by three\n            d = a & 0x80, a <<= 1, a &= 255;\n            if ( d === 0x80 ) a ^= 0x1b;\n            a ^= gexp3[c];\n\n            // Set the log table value\n            glog3[gexp3[c]] = c;\n        }\n        gexp3[255] = gexp3[0];\n        glog3[0] = 0;\n\n        ginit_done = true;\n    }\n\n    /**\n     * Galois Field multiplication\n     * @private\n     * @param {Number} a\n     * @param {Number} b\n     * @return {Number}\n     */\n    function gmul ( a, b ) {\n        var c = gexp3[ ( glog3[a] + glog3[b] ) % 255 ];\n        if ( a === 0 || b === 0 ) c = 0;\n        return c;\n    }\n\n    /**\n     * Galois Field reciprocal\n     * @private\n     * @param {Number} a\n     * @return {Number}\n     */\n    function ginv ( a ) {\n        var i = gexp3[ 255 - glog3[a] ];\n        if ( a === 0 ) i = 0;\n        return i;\n    }\n\n    /**\n     * AES stuff init flag\n     */\n    var aes_init_done = false;\n\n    /**\n     * Encryption, Decryption, S-Box and KeyTransform tables\n     * @private\n     */\n    var aes_sbox, aes_sinv, aes_enc, aes_dec;\n\n    /**\n     * Init AES tables\n     * @private\n     */\n    function aes_init () {\n        if ( !ginit_done ) ginit();\n\n        // Calculates AES S-Box value\n        function _s ( a ) {\n            var c, s, x;\n            s = x = ginv(a);\n            for ( c = 0; c < 4; c++ ) {\n                s = ( (s << 1) | (s >>> 7) ) & 255;\n                x ^= s;\n            }\n            x ^= 99;\n            return x;\n        }\n\n        // Tables\n        aes_sbox = [],\n        aes_sinv = [],\n        aes_enc = [ [], [], [], [] ],\n        aes_dec = [ [], [], [], [] ];\n\n        for ( var i = 0; i < 256; i++ ) {\n            var s = _s(i);\n\n            // S-Box and its inverse\n            aes_sbox[i]  = s;\n            aes_sinv[s]  = i;\n\n            // Ecryption and Decryption tables\n            aes_enc[0][i] = ( gmul( 2, s ) << 24 )  | ( s << 16 )            | ( s << 8 )             | gmul( 3, s );\n            aes_dec[0][s] = ( gmul( 14, i ) << 24 ) | ( gmul( 9, i ) << 16 ) | ( gmul( 13, i ) << 8 ) | gmul( 11, i );\n            // Rotate tables\n            for ( var t = 1; t < 4; t++ ) {\n                aes_enc[t][i] = ( aes_enc[t-1][i] >>> 8 ) | ( aes_enc[t-1][i] << 24 );\n                aes_dec[t][s] = ( aes_dec[t-1][s] >>> 8 ) | ( aes_dec[t-1][s] << 24 );\n            }\n        }\n    }\n\n    // Asm.js AES module wrapper\n    var wrapper = function ( stdlib, foreign, buffer ) {\n        // Init AES stuff for the first time\n        if ( !aes_init_done ) aes_init();\n\n        // Fill up AES tables\n        var heap = new Uint32Array(buffer);\n        heap.set( aes_sbox, 0x0800>>2 );\n        heap.set( aes_sinv, 0x0c00>>2 );\n        for ( var i = 0; i < 4; i++ ) {\n            heap.set( aes_enc[i], ( 0x1000 + 0x400 * i )>>2 );\n            heap.set( aes_dec[i], ( 0x2000 + 0x400 * i )>>2 );\n        }\n\n        /**\n         * Calculate AES key schedules\n         * @public\n         * @param {Number} ks — key size, 4/6/8 (for 128/192/256-bit key correspondingly).\n         * @param {Number} k0..k7 — key components.\n         */\n        function set_key ( ks, k0, k1, k2, k3, k4, k5, k6, k7 ) {\n            var ekeys = heap.subarray( 0x000, 60 ),\n                dkeys = heap.subarray( 0x100, 0x100+60 );\n\n            // Encryption key schedule\n            ekeys.set( [ k0, k1, k2, k3, k4, k5, k6, k7 ] );\n            for ( var i = ks, rcon = 1; i < 4*ks+28; i++ ) {\n                var k = ekeys[i-1];\n                if ( ( i % ks === 0 ) || ( ks === 8 && i % ks === 4 ) ) {\n                    k = aes_sbox[k>>>24]<<24 ^ aes_sbox[k>>>16&255]<<16 ^ aes_sbox[k>>>8&255]<<8 ^ aes_sbox[k&255];\n                }\n                if ( i % ks === 0 ) {\n                    k = (k << 8) ^ (k >>> 24) ^ (rcon << 24);\n                    rcon = (rcon << 1) ^ ( (rcon & 0x80) ? 0x1b : 0 );\n                }\n                ekeys[i] = ekeys[i-ks] ^ k;\n            }\n\n            // Decryption key schedule\n            for ( var j = 0; j < i; j += 4 ) {\n                for ( var jj = 0; jj < 4; jj++ ) {\n                    var k = ekeys[i-(4+j)+(4-jj)%4];\n                    if ( j < 4 || j >= i-4 ) {\n                        dkeys[j+jj] = k;\n                    } else {\n                        dkeys[j+jj] = aes_dec[0][aes_sbox[k>>>24]]\n                                    ^ aes_dec[1][aes_sbox[k>>>16&255]]\n                                    ^ aes_dec[2][aes_sbox[k>>>8&255]]\n                                    ^ aes_dec[3][aes_sbox[k&255]];\n                    }\n                }\n            }\n\n            // Set rounds number\n            asm.set_rounds( ks + 5 );\n        }\n\n        var asm = function ( stdlib, foreign, buffer ) {\n            \"use asm\";\n\n            var S0 = 0, S1 = 0, S2 = 0, S3 = 0,\n                I0 = 0, I1 = 0, I2 = 0, I3 = 0,\n                N0 = 0, N1 = 0, N2 = 0, N3 = 0,\n                M0 = 0, M1 = 0, M2 = 0, M3 = 0,\n                H0 = 0, H1 = 0, H2 = 0, H3 = 0,\n                R = 0;\n\n            var HEAP = new stdlib.Uint32Array(buffer),\n                DATA = new stdlib.Uint8Array(buffer);\n\n            /**\n             * AES core\n             * @private\n             * @param {int} k — precomputed key schedule offset\n             * @param {int} s — precomputed sbox table offset\n             * @param {int} t — precomputed round table offset\n             * @param {int} r — number of inner rounds to perform\n             * @param {int} x0..x3 — 128-bit input block\n             */\n            function _core ( k, s, t, r, x0, x1, x2, x3 ) {\n                k = k|0;\n                s = s|0;\n                t = t|0;\n                r = r|0;\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                var t1 = 0, t2 = 0, t3 = 0,\n                    y0 = 0, y1 = 0, y2 = 0, y3 = 0,\n                    i = 0;\n\n                t1 = t|0x400, t2 = t|0x800, t3 = t|0xc00;\n\n                // round 0\n                x0 = x0 ^ HEAP[(k|0)>>2],\n                x1 = x1 ^ HEAP[(k|4)>>2],\n                x2 = x2 ^ HEAP[(k|8)>>2],\n                x3 = x3 ^ HEAP[(k|12)>>2];\n\n                // round 1..r\n                for ( i = 16; (i|0) <= (r<<4); i = (i+16)|0 ) {\n                    y0 = HEAP[(t|x0>>22&1020)>>2] ^ HEAP[(t1|x1>>14&1020)>>2] ^ HEAP[(t2|x2>>6&1020)>>2] ^ HEAP[(t3|x3<<2&1020)>>2] ^ HEAP[(k|i|0)>>2],\n                    y1 = HEAP[(t|x1>>22&1020)>>2] ^ HEAP[(t1|x2>>14&1020)>>2] ^ HEAP[(t2|x3>>6&1020)>>2] ^ HEAP[(t3|x0<<2&1020)>>2] ^ HEAP[(k|i|4)>>2],\n                    y2 = HEAP[(t|x2>>22&1020)>>2] ^ HEAP[(t1|x3>>14&1020)>>2] ^ HEAP[(t2|x0>>6&1020)>>2] ^ HEAP[(t3|x1<<2&1020)>>2] ^ HEAP[(k|i|8)>>2],\n                    y3 = HEAP[(t|x3>>22&1020)>>2] ^ HEAP[(t1|x0>>14&1020)>>2] ^ HEAP[(t2|x1>>6&1020)>>2] ^ HEAP[(t3|x2<<2&1020)>>2] ^ HEAP[(k|i|12)>>2];\n                    x0 = y0, x1 = y1, x2 = y2, x3 = y3;\n                }\n\n                // final round\n                S0 = HEAP[(s|x0>>22&1020)>>2]<<24 ^ HEAP[(s|x1>>14&1020)>>2]<<16 ^ HEAP[(s|x2>>6&1020)>>2]<<8 ^ HEAP[(s|x3<<2&1020)>>2] ^ HEAP[(k|i|0)>>2],\n                S1 = HEAP[(s|x1>>22&1020)>>2]<<24 ^ HEAP[(s|x2>>14&1020)>>2]<<16 ^ HEAP[(s|x3>>6&1020)>>2]<<8 ^ HEAP[(s|x0<<2&1020)>>2] ^ HEAP[(k|i|4)>>2],\n                S2 = HEAP[(s|x2>>22&1020)>>2]<<24 ^ HEAP[(s|x3>>14&1020)>>2]<<16 ^ HEAP[(s|x0>>6&1020)>>2]<<8 ^ HEAP[(s|x1<<2&1020)>>2] ^ HEAP[(k|i|8)>>2],\n                S3 = HEAP[(s|x3>>22&1020)>>2]<<24 ^ HEAP[(s|x0>>14&1020)>>2]<<16 ^ HEAP[(s|x1>>6&1020)>>2]<<8 ^ HEAP[(s|x2<<2&1020)>>2] ^ HEAP[(k|i|12)>>2];\n            }\n\n            /**\n             * ECB mode encryption\n             * @private\n             */\n            function _ecb_enc ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    x0,\n                    x1,\n                    x2,\n                    x3\n                );\n            }\n\n            /**\n             * ECB mode decryption\n             * @private\n             */\n            function _ecb_dec ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                var t = 0;\n\n                _core(\n                    0x0400, 0x0c00, 0x2000,\n                    R,\n                    x0,\n                    x3,\n                    x2,\n                    x1\n                );\n\n                t = S1, S1 = S3, S3 = t;\n            }\n\n\n            /**\n             * CBC mode encryption\n             * @private\n             */\n            function _cbc_enc ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    I0 ^ x0,\n                    I1 ^ x1,\n                    I2 ^ x2,\n                    I3 ^ x3\n                );\n\n                I0 = S0,\n                I1 = S1,\n                I2 = S2,\n                I3 = S3;\n            }\n\n            /**\n             * CBC mode decryption\n             * @private\n             */\n            function _cbc_dec ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                var t = 0;\n\n                _core(\n                    0x0400, 0x0c00, 0x2000,\n                    R,\n                    x0,\n                    x3,\n                    x2,\n                    x1\n                );\n\n                t = S1, S1 = S3, S3 = t;\n\n                S0 = S0 ^ I0,\n                S1 = S1 ^ I1,\n                S2 = S2 ^ I2,\n                S3 = S3 ^ I3;\n\n                I0 = x0,\n                I1 = x1,\n                I2 = x2,\n                I3 = x3;\n            }\n\n            /**\n             * CFB mode encryption\n             * @private\n             */\n            function _cfb_enc ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    I0,\n                    I1,\n                    I2,\n                    I3\n                );\n\n                I0 = S0 = S0 ^ x0,\n                I1 = S1 = S1 ^ x1,\n                I2 = S2 = S2 ^ x2,\n                I3 = S3 = S3 ^ x3;\n            }\n\n\n            /**\n             * CFB mode decryption\n             * @private\n             */\n            function _cfb_dec ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    I0,\n                    I1,\n                    I2,\n                    I3\n                );\n\n                S0 = S0 ^ x0,\n                S1 = S1 ^ x1,\n                S2 = S2 ^ x2,\n                S3 = S3 ^ x3;\n\n                I0 = x0,\n                I1 = x1,\n                I2 = x2,\n                I3 = x3;\n            }\n\n            /**\n             * OFB mode encryption / decryption\n             * @private\n             */\n            function _ofb ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    I0,\n                    I1,\n                    I2,\n                    I3\n                );\n\n                I0 = S0,\n                I1 = S1,\n                I2 = S2,\n                I3 = S3;\n\n                S0 = S0 ^ x0,\n                S1 = S1 ^ x1,\n                S2 = S2 ^ x2,\n                S3 = S3 ^ x3;\n            }\n\n            /**\n             * CTR mode encryption / decryption\n             * @private\n             */\n            function _ctr ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                _core(\n                    0x0000, 0x0800, 0x1000,\n                    R,\n                    N0,\n                    N1,\n                    N2,\n                    N3\n                );\n\n                N3 = ( ~M3 & N3 ) | M3 & ( N3 + 1 ),\n                N2 = ( ~M2 & N2 ) | M2 & ( N2 + ( (N3|0) == 0 ) ),\n                N1 = ( ~M1 & N1 ) | M1 & ( N1 + ( (N2|0) == 0 ) ),\n                N0 = ( ~M0 & N0 ) | M0 & ( N0 + ( (N1|0) == 0 ) );\n\n                S0 = S0 ^ x0,\n                S1 = S1 ^ x1,\n                S2 = S2 ^ x2,\n                S3 = S3 ^ x3;\n            }\n\n            /**\n             * GCM mode MAC calculation\n             * @private\n             */\n            function _gcm_mac ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                var y0 = 0, y1 = 0, y2 = 0, y3 = 0,\n                    z0 = 0, z1 = 0, z2 = 0, z3 = 0,\n                    i = 0, c = 0;\n\n                x0 = x0 ^ I0,\n                x1 = x1 ^ I1,\n                x2 = x2 ^ I2,\n                x3 = x3 ^ I3;\n\n                y0 = H0|0,\n                y1 = H1|0,\n                y2 = H2|0,\n                y3 = H3|0;\n\n                for ( ; (i|0) < 128; i = (i + 1)|0 ) {\n                    if ( y0 >>> 31 ) {\n                        z0 = z0 ^ x0,\n                        z1 = z1 ^ x1,\n                        z2 = z2 ^ x2,\n                        z3 = z3 ^ x3;\n                    }\n\n                    y0 = (y0 << 1) | (y1 >>> 31),\n                    y1 = (y1 << 1) | (y2 >>> 31),\n                    y2 = (y2 << 1) | (y3 >>> 31),\n                    y3 = (y3 << 1);\n\n                    c = x3 & 1;\n\n                    x3 = (x3 >>> 1) | (x2 << 31),\n                    x2 = (x2 >>> 1) | (x1 << 31),\n                    x1 = (x1 >>> 1) | (x0 << 31),\n                    x0 = (x0 >>> 1);\n\n                    if ( c ) x0 = x0 ^ 0xe1000000;\n                }\n\n                I0 = z0,\n                I1 = z1,\n                I2 = z2,\n                I3 = z3;\n            }\n\n            /**\n             * Set the internal rounds number\n             * @public\n             */\n            function set_rounds ( r ) {\n                r = r|0;\n                R = r;\n            }\n\n            /**\n             * Populate the internal state of the module\n             * @public\n             */\n            function set_state ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                S0 = x0,\n                S1 = x1,\n                S2 = x2,\n                S3 = x3;\n            }\n\n            /**\n             * Populate the internal iv of the module\n             * @public\n             */\n            function set_iv ( x0, x1, x2, x3 ) {\n                x0 = x0|0;\n                x1 = x1|0;\n                x2 = x2|0;\n                x3 = x3|0;\n\n                I0 = x0,\n                I1 = x1,\n                I2 = x2,\n                I3 = x3;\n            }\n\n            /**\n             * Set nonce for CTR-family modes\n             * @public\n             */\n            function set_nonce ( n0, n1, n2, n3 ) {\n                n0 = n0|0;\n                n1 = n1|0;\n                n2 = n2|0;\n                n3 = n3|0;\n\n                N0 = n0,\n                N1 = n1,\n                N2 = n2,\n                N3 = n3;\n            }\n\n            /**\n             * Set counter mask for CTR-family modes\n             * @public\n             */\n            function set_mask ( m0, m1, m2, m3 ) {\n                m0 = m0|0;\n                m1 = m1|0;\n                m2 = m2|0;\n                m3 = m3|0;\n\n                M0 = m0,\n                M1 = m1,\n                M2 = m2,\n                M3 = m3;\n            }\n\n            /**\n             * Set counter for CTR-family modes\n             * @public\n             */\n            function set_counter ( c0, c1, c2, c3 ) {\n                c0 = c0|0;\n                c1 = c1|0;\n                c2 = c2|0;\n                c3 = c3|0;\n\n                N3 = ( ~M3 & N3 ) | M3 & c3,\n                N2 = ( ~M2 & N2 ) | M2 & c2,\n                N1 = ( ~M1 & N1 ) | M1 & c1,\n                N0 = ( ~M0 & N0 ) | M0 & c0;\n            }\n\n            /**\n             * Store the internal state into the heap\n             * @public\n             * @param {int} pos — offset where to put the data\n             */\n            function get_state ( pos ) {\n                pos = pos|0;\n\n                if ( pos & 15 ) return -1;\n\n                DATA[pos|0] = S0>>>24,\n                DATA[pos|1] = S0>>>16&255,\n                DATA[pos|2] = S0>>>8&255,\n                DATA[pos|3] = S0&255,\n                DATA[pos|4] = S1>>>24,\n                DATA[pos|5] = S1>>>16&255,\n                DATA[pos|6] = S1>>>8&255,\n                DATA[pos|7] = S1&255,\n                DATA[pos|8] = S2>>>24,\n                DATA[pos|9] = S2>>>16&255,\n                DATA[pos|10] = S2>>>8&255,\n                DATA[pos|11] = S2&255,\n                DATA[pos|12] = S3>>>24,\n                DATA[pos|13] = S3>>>16&255,\n                DATA[pos|14] = S3>>>8&255,\n                DATA[pos|15] = S3&255;\n\n                return 16;\n            }\n\n            /**\n             * Store the internal iv into the heap\n             * @public\n             * @param {int} pos — offset where to put the data\n             */\n            function get_iv ( pos ) {\n                pos = pos|0;\n\n                if ( pos & 15 ) return -1;\n\n                DATA[pos|0] = I0>>>24,\n                DATA[pos|1] = I0>>>16&255,\n                DATA[pos|2] = I0>>>8&255,\n                DATA[pos|3] = I0&255,\n                DATA[pos|4] = I1>>>24,\n                DATA[pos|5] = I1>>>16&255,\n                DATA[pos|6] = I1>>>8&255,\n                DATA[pos|7] = I1&255,\n                DATA[pos|8] = I2>>>24,\n                DATA[pos|9] = I2>>>16&255,\n                DATA[pos|10] = I2>>>8&255,\n                DATA[pos|11] = I2&255,\n                DATA[pos|12] = I3>>>24,\n                DATA[pos|13] = I3>>>16&255,\n                DATA[pos|14] = I3>>>8&255,\n                DATA[pos|15] = I3&255;\n\n                return 16;\n            }\n\n            /**\n             * GCM initialization\n             * @public\n             */\n            function gcm_init ( ) {\n                _ecb_enc( 0, 0, 0, 0 );\n                H0 = S0,\n                H1 = S1,\n                H2 = S2,\n                H3 = S3;\n            }\n\n            /**\n             * Perform ciphering operation on the supplied data\n             * @public\n             * @param {int} mode — block cipher mode (see mode constants)\n             * @param {int} pos — offset of the data being processed\n             * @param {int} len — length of the data being processed\n             * @return {int} actual amount of the data processed\n             */\n            function cipher ( mode, pos, len ) {\n                mode = mode|0;\n                pos = pos|0;\n                len = len|0;\n\n                var ret = 0;\n\n                if ( pos & 15 ) return -1;\n\n                while ( (len|0) >= 16 ) {\n                    _cipher_modes[mode&7](\n                        DATA[pos|0]<<24 | DATA[pos|1]<<16 | DATA[pos|2]<<8 | DATA[pos|3],\n                        DATA[pos|4]<<24 | DATA[pos|5]<<16 | DATA[pos|6]<<8 | DATA[pos|7],\n                        DATA[pos|8]<<24 | DATA[pos|9]<<16 | DATA[pos|10]<<8 | DATA[pos|11],\n                        DATA[pos|12]<<24 | DATA[pos|13]<<16 | DATA[pos|14]<<8 | DATA[pos|15]\n                    );\n\n                    DATA[pos|0] = S0>>>24,\n                    DATA[pos|1] = S0>>>16&255,\n                    DATA[pos|2] = S0>>>8&255,\n                    DATA[pos|3] = S0&255,\n                    DATA[pos|4] = S1>>>24,\n                    DATA[pos|5] = S1>>>16&255,\n                    DATA[pos|6] = S1>>>8&255,\n                    DATA[pos|7] = S1&255,\n                    DATA[pos|8] = S2>>>24,\n                    DATA[pos|9] = S2>>>16&255,\n                    DATA[pos|10] = S2>>>8&255,\n                    DATA[pos|11] = S2&255,\n                    DATA[pos|12] = S3>>>24,\n                    DATA[pos|13] = S3>>>16&255,\n                    DATA[pos|14] = S3>>>8&255,\n                    DATA[pos|15] = S3&255;\n\n                    ret = (ret + 16)|0,\n                    pos = (pos + 16)|0,\n                    len = (len - 16)|0;\n                }\n\n                return ret|0;\n            }\n\n            /**\n             * Calculates MAC of the supplied data\n             * @public\n             * @param {int} mode — block cipher mode (see mode constants)\n             * @param {int} pos — offset of the data being processed\n             * @param {int} len — length of the data being processed\n             * @return {int} actual amount of the data processed\n             */\n            function mac ( mode, pos, len ) {\n                mode = mode|0;\n                pos = pos|0;\n                len = len|0;\n\n                var ret = 0;\n\n                if ( pos & 15 ) return -1;\n\n                while ( (len|0) >= 16 ) {\n                    _mac_modes[mode&1](\n                        DATA[pos|0]<<24 | DATA[pos|1]<<16 | DATA[pos|2]<<8 | DATA[pos|3],\n                        DATA[pos|4]<<24 | DATA[pos|5]<<16 | DATA[pos|6]<<8 | DATA[pos|7],\n                        DATA[pos|8]<<24 | DATA[pos|9]<<16 | DATA[pos|10]<<8 | DATA[pos|11],\n                        DATA[pos|12]<<24 | DATA[pos|13]<<16 | DATA[pos|14]<<8 | DATA[pos|15]\n                    );\n\n                    ret = (ret + 16)|0,\n                    pos = (pos + 16)|0,\n                    len = (len - 16)|0;\n                }\n\n                return ret|0;\n            }\n\n            /**\n             * AES cipher modes table (virual methods)\n             * @private\n             */\n            var _cipher_modes = [ _ecb_enc, _ecb_dec, _cbc_enc, _cbc_dec, _cfb_enc, _cfb_dec, _ofb, _ctr ];\n\n            /**\n             * AES MAC modes table (virual methods)\n             * @private\n             */\n            var _mac_modes = [ _cbc_enc, _gcm_mac ];\n\n            /**\n             * Asm.js module exports\n             */\n            return {\n                set_rounds: set_rounds,\n                set_state:  set_state,\n                set_iv:     set_iv,\n                set_nonce:  set_nonce,\n                set_mask:   set_mask,\n                set_counter:set_counter,\n                get_state:  get_state,\n                get_iv:     get_iv,\n                gcm_init:   gcm_init,\n                cipher:     cipher,\n                mac:        mac\n            };\n        }( stdlib, foreign, buffer );\n\n        asm.set_key = set_key;\n\n        return asm;\n    };\n\n    /**\n     * AES enciphering mode constants\n     * @public\n     */\n    wrapper.ENC = {\n        ECB: 0,\n        CBC: 2,\n        CFB: 4,\n        OFB: 6,\n        CTR: 7\n    },\n\n    /**\n     * AES deciphering mode constants\n     * @public\n     */\n    wrapper.DEC = {\n        ECB: 1,\n        CBC: 3,\n        CFB: 5,\n        OFB: 6,\n        CTR: 7\n    },\n\n    /**\n     * AES MAC mode constants\n     * @public\n     */\n    wrapper.MAC = {\n        CBC: 0,\n        GCM: 1\n    };\n\n    /**\n     * Heap data offset\n     */\n    wrapper.HEAP_DATA = 0x4000;\n\n    // Prevent further modifications\n    Object.freeze(wrapper);\n\n    return wrapper;\n}();\n","// shared asm.js module and heap\nvar _AES_heap_instance = new Uint8Array(0x100000),\n    _AES_asm_instance  = AES_asm( global, null, _AES_heap_instance.buffer );\n","/* ----------------------------------------------------------------------\n * Copyright (c) 2014 Artem S Vybornov\n *\n * Copyright (c) 2012 Yves-Marie K. Rinquin\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n * ----------------------------------------------------------------------\n *\n * ISAAC is a cryptographically secure pseudo-random number generator\n * (or CSPRNG for short) designed by Robert J. Jenkins Jr. in 1996 and\n * based on RC4. It is designed for speed and security.\n *\n * ISAAC's informations & analysis:\n *   http://burtleburtle.net/bob/rand/isaac.html\n * ISAAC's implementation details:\n *   http://burtleburtle.net/bob/rand/isaacafa.html\n *\n * ISAAC succesfully passed TestU01\n */\n\nvar ISAAC = ( function () {\n    var m = new Uint32Array(256), // internal memory\n        r = new Uint32Array(256), // result array\n        acc = 0,              // accumulator\n        brs = 0,              // last result\n        cnt = 0,              // counter\n        gnt = 0;              // generation counter\n\n    /* private: randinit function, same as ISAAC reference implementation */\n    function randinit() {\n        var a, b, c, d, e, f, g, h;\n\n        /* private mixing function */\n        function mix () {\n            a ^= b <<  11; d = (d + a)|0; b = (b + c)|0;\n            b ^= c >>>  2; e = (e + b)|0; c = (c + d)|0;\n            c ^= d <<   8; f = (f + c)|0; d = (d + e)|0;\n            d ^= e >>> 16; g = (g + d)|0; e = (e + f)|0;\n            e ^= f <<  10; h = (h + e)|0; f = (f + g)|0;\n            f ^= g >>>  4; a = (a + f)|0; g = (g + h)|0;\n            g ^= h <<   8; b = (b + g)|0; h = (h + a)|0;\n            h ^= a >>>  9; c = (c + h)|0; a = (a + b)|0;\n        }\n\n        acc = brs = cnt = 0;\n\n        // the golden ratio\n        a = b = c = d = e = f = g = h = 0x9e3779b9;\n\n        // scramble it\n        for ( var i = 0; i < 4; i++ )\n            mix();\n\n        // mix it and combine with the internal state\n        for ( var i = 0; i < 256; i += 8 ) {\n            a = (a + r[i|0])|0; b = (b + r[i|1])|0;\n            c = (c + r[i|2])|0; d = (d + r[i|3])|0;\n            e = (e + r[i|4])|0; f = (f + r[i|5])|0;\n            g = (g + r[i|6])|0; h = (h + r[i|7])|0;\n            mix();\n            m.set([a, b, c, d, e, f, g, h], i);\n        }\n\n        // mix it again\n        for ( var i = 0; i < 256; i += 8 ) {\n            a = (a + m[i|0])|0; b = (b + m[i|1])|0;\n            c = (c + m[i|2])|0; d = (d + m[i|3])|0;\n            e = (e + m[i|4])|0; f = (f + m[i|5])|0;\n            g = (g + m[i|6])|0; h = (h + m[i|7])|0;\n            mix();\n            m.set([a, b, c, d, e, f, g, h], i);\n        }\n\n        // fill in the first set of results\n        prng(1), gnt = 256;\n    }\n\n    /* public: seeding function */\n    function seed ( s ) {\n        var i, j, k, n, l;\n\n        if ( !is_typed_array(s) ) {\n            if ( is_number(s) ) {\n                n = new FloatArray(1), n[0] = s;\n                s = new Uint8Array(n.buffer);\n            }\n            else if ( is_string(s) ) {\n                s = string_to_bytes(s);\n            }\n            else if ( is_buffer(s) ) {\n                s = new Uint8Array(s);\n            }\n            else {\n                throw new TypeError(\"bad seed type\");\n            }\n        }\n        else {\n            s = new Uint8Array(s.buffer);\n        }\n\n        // preprocess the seed\n        l = s.length;\n        for ( j = 0; j < l; j += 1024 )\n        {\n            // xor each chunk of 1024 bytes with r, for randinit() to mix in\n            for ( k = j, i = 0; ( i < 1024 ) && ( k < l ); k = j | (++i) ) {\n                r[i >> 2] ^= ( s[k] << ( (i & 3) << 3 ) );\n            }\n            randinit();\n        }\n    }\n\n    /* public: isaac generator, n = number of run */\n    function prng ( n ) {\n        n = n || 1;\n\n        var i, x, y;\n\n        while ( n-- ) {\n            cnt = (cnt + 1)|0;\n            brs = (brs + cnt)|0;\n\n            for ( i = 0; i < 256; i += 4 ) {\n                acc ^= acc << 13;\n                acc = m[(i + 128) & 0xff] + acc | 0; x = m[i|0];\n                m[i|0] = y = m[(x>>>2) & 0xff] + ( acc + brs | 0 ) | 0;\n                r[i|0] = brs = m[(y>>>10) & 0xff] + x | 0;\n\n                acc ^= acc >>> 6;\n                acc = m[(i + 129) & 0xff] + acc | 0; x = m[i|1];\n                m[i|1] = y = m[(x >>> 2) & 0xff] + ( acc + brs | 0 ) | 0;\n                r[i|1] = brs = m[(y >>> 10) & 0xff] + x | 0;\n\n                acc ^= acc << 2;\n                acc = m[(i + 130) & 0xff] + acc | 0; x = m[i|2];\n                m[i|2] = y = m[(x >>> 2) & 0xff] + ( acc + brs | 0 ) | 0;\n                r[i|2] = brs = m[(y >>> 10) & 0xff] + x | 0;\n\n                acc ^= acc >>> 16;\n                acc = m[(i + 131) & 0xff] + acc | 0; x = m[i|3];\n                m[i|3] = y = m[(x >>> 2) & 0xff] + (acc + brs | 0 ) | 0;\n                r[i|3] = brs = m[(y >>> 10) & 0xff] + x | 0;\n            }\n        }\n    }\n\n    /* public: return a random number */\n    function rand() {\n        if ( !gnt-- )\n            prng(1), gnt = 255;\n\n        return r[gnt];\n    }\n\n    /* return class object */\n    return {\n        'seed':  seed,\n        'prng':  prng,\n        'rand':  rand\n    };\n})();\n","exports.random = Random_getNumber;\n\nexports.random.seed = Random_seed;\n\nObject.defineProperty( Random_getNumber, 'allowWeak', {\n    get: function () { return _random_allow_weak; },\n    set: function ( a ) { _random_allow_weak = a; }\n});\n\nObject.defineProperty( Random_getNumber, 'skipSystemRNGWarning', {\n    get: function () { return _random_skip_system_rng_warning; },\n    set: function ( w ) { _random_skip_system_rng_warning = w; }\n});\n\nexports.getRandomValues = Random_getValues;\n\nexports.getRandomValues.seed = Random_seed;\n\nObject.defineProperty( Random_getValues, 'allowWeak', {\n    get: function () { return _random_allow_weak; },\n    set: function ( a ) { _random_allow_weak = a; }\n});\n\nObject.defineProperty( Random_getValues, 'skipSystemRNGWarning', {\n    get: function () { return _random_skip_system_rng_warning; },\n    set: function ( w ) { _random_skip_system_rng_warning = w; }\n});\n","global.Math.random = Random_getNumber;\n\nif ( global.crypto === undefined ) global.crypto = {};\nglobal.crypto.getRandomValues = Random_getValues;\n","BigNumber.ZERO = BigNumber_ZERO;\nBigNumber.ONE  = BigNumber_ONE;\n\nBigNumber.extGCD = BigNumber_extGCD;\n\nexports.BigNumber = BigNumber;\nexports.Modulus = Modulus;\n"]}