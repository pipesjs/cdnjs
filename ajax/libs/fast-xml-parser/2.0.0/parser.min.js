function buildAttributesArr(e,t,r){if(e=e||e.trim(),!t&&e.length>3){for(var n=getAllMatches(e,attrsRegx),i={},o=0;o<n.length;o++)i[r+n[o][1]]=n[o][2];return i}}function convertToJson(e){var t={};if(e.val||""===e.val)return e.val;for(var r=0;r<e.child.length;r++){var n=e.child[r].tagname,i=convertToJson(e.child[r]);if(t[n]){if(!Array.isArray(t[n])){var o=t[n];t[n]=[],t[n].push(o)}t[n].push(i)}else t[n]=i}return t}var getAllMatches=function(e,t){for(var r=[],n=t.exec(e);n;){for(var i=[],o=0;o<n.length;o++)i.push(n[o]);r.push(i),n=t.exec(e)}return r},xmlNode=function(e,t,r){this.tagname=e,this.parent=t,this.child=[],this.val=r,this.addChild=function(e){this.child.push(e)}},tagsRegx=new RegExp("<(\\/?[a-zA-Z0-9_:]+)([^>\\/]*)(\\/?)>([^<]+)?","g"),defaultOptions={attrPrefix:"@_",textNodeName:"#text",ignoreNonTextNodeAttr:!0,ignoreTextNodeAttr:!0,ignoreNameSpace:!0,ignoreRootElement:!1},buildOptions=function(e){e||(e={});for(var t=["attrPrefix","ignoreNonTextNodeAttr","ignoreTextNodeAttr","ignoreNameSpace","ignoreRootElement","textNodeName"],r=0;r<t.length;r++)void 0===e[t[r]]&&(e[t[r]]=defaultOptions[t[r]]);return e},xml2json=function(e,t){t=buildOptions(t),e=e.replace(/>(\s+)/g,">");for(var r=getAllMatches(e,tagsRegx),n=new xmlNode(r[0][1]),i=n,o=!1,a=1;a<r.length-1;a++){var l=r[a][1],d=r[a+1][1],o="/"===r[a][3];if(o){var s=new xmlNode(l,i),x=buildAttributesArr(r[a][2],t.ignoreTextNodeAttr,t.attrPrefix);s.val=x||"",i.addChild(s)}else if("/"+l===d||o){var u=r[a][4];u=u?isNaN(u)?""+u:u.indexOf(".")!==-1?Number.parseFloat(u):Number.parseInt(u):"";var s=new xmlNode(l,i),x=buildAttributesArr(r[a][2],t.ignoreTextNodeAttr,t.attrPrefix);x?(x[t.textNodeName]=u,s.val=x):s.val=u||"",i.addChild(s),a++}else{if(0===l.indexOf("/")){i=i.parent;continue}var f=new xmlNode(l,i),x=buildAttributesArr(r[a][2],t.ignoreNonTextNodeAttr,t.attrPrefix);if(x)for(var g in x)x.hasOwnProperty(g)&&f.addChild(new xmlNode(g,f,x[g]));i.addChild(f),i=f}}var h=new xmlNode("_xml");return n.param=h,h.addChild(n),convertToJson(h)},attrsRegx=new RegExp("(\\S+)=.([^'\"]+)","g");"undefined"==typeof exports&&(exports=this),exports.parse=xml2json;
//# sourceMappingURL=parser.min.js.map