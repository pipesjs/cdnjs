/*! angular-fontselect v0.0.6 */
!function(a,b){"use strict";function c(a,b){return function(){return a.apply(b,arguments)}}function d(a){return a.toLowerCase().replace(/[^a-z]+/g,"-")}function e(a,b){var c=this;return c.config=b,c.$http=a,c._init(),c}var f=a.module("jdFontselect",[]),g="Websafe Fonts",h="Google Fonts",i=[g,h],j=[{name:"Arial",key:"arial",category:"sansserif",stack:'Arial, "Helvetica Neue", Helvetica, sans-serif'},{name:"Courier New",key:"couriernew",category:"other",stack:'"Courier New", Courier, "Lucida Sans Typewriter", "Lucida Typewriter", monospace'},{name:"Verdana",key:"verdana",category:"sansserif",stack:"Verdana, Geneva, sans-serif"},{name:"Times New Roman",key:"timesnewroman",category:"serif",stack:'TimesNewRoman, "Times New Roman", Times, Baskerville, Georgia, serif'},{name:"Brush Script",key:"brushscript",category:"handwriting",stack:'"Brush Script MT", cursive'}];f.constant("jdFontselectConfig",{googleApiKey:!1}),f.filter("startFrom",function(){return function(b,c){return a.isArray(b)?b.slice(c):b}});var k=["name","key","stack"];e.prototype={_init:function(){var a=this;a._fonts=a._fonts||{},a._map={},a._addDefaultFonts(),a._getGoogleFonts()},getAllFonts:function(){return this._fonts},add:function(b,c){var d=this;if(a.isString(c)||(c=g),!d.isValidFontObject(b))throw"Invalid font object.";a.isArray(d._fonts[c])||(d._fonts[c]=[]),a.isObject(d._map[c])||(d._map[c]={});var e=d._fonts[c].push(b)-1;d._map[c][b.key]=e},getFontByKey:function(a,b){var c=this;try{return c._fonts[b][c._map[b][a]]}catch(d){return!1}},isValidFontObject:function(b){if(!a.isObject(b))return!1;var c=!0;return a.forEach(k,function(d){a.isUndefined(b[d])&&(c=!1)}),c},getCategories:function(){return[{name:"Serif",key:"serif"},{name:"Sans-serif",key:"sansserif"},{name:"Handwriting",key:"handwriting"},{name:"Other",key:"other"}]},_getGoogleFonts:function(){var b=this;b.config.googleApiKey&&b.$http({method:"GET",url:"https://www.googleapis.com/webfonts/v1/webfonts",params:{key:b.config.googleApiKey}}).success(function(c){a.forEach(c.items,function(a){b.add({name:a.family,key:d(a.family),stack:'"'+a.family+'" sans-serif'},h)})})},_addDefaultFonts:function(){var b=this;a.forEach(j,function(a){b.add(a)})}},f.factory("jdFontselect.fonts",["$http","jdFontselectConfig",function(a,b){return new e(a,b)}]);var l=1,m=function(a,b){var c=this;c.fontsService=b,c.$scope=a,c.name="FontselectController",c._construct()};m.prototype={_construct:function(){var a=this,d=a.$scope;d.fonts=a.fontsService.getAllFonts(),d.id=l++,d.providers=i,d.active=!1,d.categories=a.fontsService.getCategories(),d.current={provider:g,category:b,font:b,search:b},d.setCategoryFilter=c(a.setCategoryFilter,a),d.toggle=c(a.toggle,a)},toggle:function(){var a=this.$scope;a.active=!a.active},setCategoryFilter:function(a){var c=this.$scope.current;c.category=c.category===a?b:a},_resetIDs:function(){l=1}},m.$inject=["$scope","jdFontselect.fonts"],f.directive("jdFontselect",[function(){return{scope:{},restrict:"E",templateUrl:"fontselect.html",replace:!0,controller:m}}]),f.directive("jdFontlist",["jdFontselect.fonts",function(c){return{scope:{id:"=fsid",fonts:"=",current:"=",providerName:"@provider"},restrict:"E",templateUrl:"fontlist.html",replace:!0,controller:["$scope","$filter",function(e,f){function g(){return k=e.page.count,a.isArray(e.fonts)?void(h()&&(e.page.count=Math.ceil(j.length/e.page.size))):0}function h(){return a.isArray(e.fonts)?(j=f("filter")(e.fonts,e.current.search),j=f("filter")(j,{category:e.current.category},!0),!0):(j=0,!1)}function i(){if(k!==e.page.count){var a=c.getFontByKey(e.current.font,e.providerName),b=j.indexOf(a);a&&b>=0?e.page.current=Math.ceil((b+1)/e.page.size)-1:e.page.current>e.page.count&&(e.page.current=e.page.count-1)}}var j,k=0;e.page={size:30,count:0,current:0},e.providerKey=d(e.providerName),e.setCurrentPage=function(a){e.page.current=a},e.getPages=function(){g();var a=new Array(e.page.count);return i(),a.length<=1?[]:a},e.isActive=function(){return e.current.provider===e.providerName},e.toggle=function(){e.current.provider=e.isActive()?b:e.providerName}}]}}]),a.module("jdFontselect").run(["$templateCache",function(a){a.put("fontlist.html",'<div class="jd-fontselect-provider jd-fontselect-provider-{{providerKey}}" ng-class="{active: isActive()}"><h3 ng-click=toggle()>{{providerName}}</h3><div ng-if=isActive()><ul><li ng-repeat="font in fonts | filter:current.search | filter:{category: current.category}:true | startFrom: page.current * page.size | limitTo: page.size "><input type=radio ng-model=current.font value={{font.key}} name=fs-{{id}}-font id=fs-{{id}}-font-{{font.key}}><label for=fs-{{id}}-font-{{font.key}} style="font-family: {{font.stack}}">{{font.name}}</label></li></ul><button ng-repeat="i in getPages() track by $index" ng-class="{active: page.current == $index}" ng-click=setCurrentPage($index)>{{$index + 1}}</button></div></div>'),a.put("fontselect.html",'<div class=fs-main id=fontselect-{{id}}><button ng-click=toggle() class=jd-fontselect-toggle>Select Font</button><input type=hidden value={{current.font}}><div class=fs-window ng-show=active><input name=fs-{{id}}-search ng-model=current.search><div><button ng-repeat="category in categories" ng-class="{active: category.key == current.category}" ng-click=setCategoryFilter(category.key) ng-model=current.category>{{category.name}}</button></div><jd-fontlist fsid=id current=current fonts=fonts[provider] provider={{provider}} ng-repeat="provider in providers"></div></div>')}])}(angular);